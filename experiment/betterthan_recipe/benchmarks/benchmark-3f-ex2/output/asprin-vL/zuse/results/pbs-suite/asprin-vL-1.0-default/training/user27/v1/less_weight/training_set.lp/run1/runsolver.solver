asprin_vL version 1.0
Reading from stdin
-:1310:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1320:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1335:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1416:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1677:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1690:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1867:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1996:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2068:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2072:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2072:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2078:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2177:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2203:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2323:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2357:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2379:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1227:1-16: info: no atoms over signature occur in program:
  output/3

-:1219:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1220:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(83,eq,46) output(46,eq,49) output(49,eq,52) output(52,eq,33) output(80,eq,84) output(22,eq,53) output(47,eq,46) output(46,eq,55) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(60,eq,52) output(52,eq,68) output(74,eq,47) output(49,eq,68) output(60,eq,68) output(66,eq,52) output(83,eq,60) output(71,eq,66) output(55,eq,66) output(46,eq,83) output(83,eq,55) output(47,eq,55) output(74,eq,46) output(84,eq,53) output(49,eq,33) output(60,eq,33) output(46,eq,52) output(83,eq,49) output(47,eq,49) output(71,eq,46) output(55,eq,46) output(53,eq,83) output(22,eq,71) output(80,eq,22) output(84,eq,71) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(53,eq,46) output(22,eq,46) output(74,eq,49) output(71,eq,49) output(55,eq,49) output(53,eq,49) output(83,eq,52) output(47,eq,52) output(74,eq,52) output(71,eq,52) output(55,eq,52) output(66,eq,33) output(83,eq,33) output(46,eq,33) output(47,eq,33) output(80,eq,53) output(74,eq,55) output(71,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(74,eq,83) output(46,eq,66) output(47,eq,66) output(53,eq,66) output(22,eq,66) output(71,eq,60) output(55,eq,60) output(46,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(47,eq,68) output(74,eq,68) output(71,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(80,eq,60) output(47,eq,60) output(74,eq,60) output(84,eq,66) output(80,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(80,eq,55) output(74,eq,33) output(71,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(53,eq,52) output(22,eq,52) output(84,eq,52) output(80,eq,52) output(22,eq,49) output(84,eq,49) output(80,eq,49) output(84,eq,46) output(80,eq,46) output(80,eq,83) output(80,eq,33) output(80,eq,68)
Optimization: 113 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),2) preference(1,less(weight)) output(74,better,47) output(47,worse,46) output(47,worse,55) output(47,worse,49) output(47,worse,52) output(47,worse,33) output(47,worse,83) output(47,worse,66) output(47,worse,68) output(47,worse,60) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(83,eq,46) output(46,eq,49) output(49,eq,52) output(52,eq,33) output(80,eq,84) output(22,eq,53) output(46,eq,55) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(60,eq,52) output(52,eq,68) output(49,eq,68) output(60,eq,68) output(66,eq,52) output(83,eq,60) output(71,eq,66) output(55,eq,66) output(46,eq,83) output(83,eq,55) output(74,eq,46) output(84,eq,53) output(49,eq,33) output(60,eq,33) output(46,eq,52) output(83,eq,49) output(71,eq,46) output(55,eq,46) output(53,eq,83) output(22,eq,71) output(80,eq,22) output(84,eq,71) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(53,eq,46) output(22,eq,46) output(74,eq,49) output(71,eq,49) output(55,eq,49) output(53,eq,49) output(83,eq,52) output(74,eq,52) output(71,eq,52) output(55,eq,52) output(66,eq,33) output(83,eq,33) output(46,eq,33) output(80,eq,53) output(74,eq,55) output(71,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(74,eq,83) output(46,eq,66) output(53,eq,66) output(22,eq,66) output(71,eq,60) output(55,eq,60) output(46,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(74,eq,68) output(71,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(80,eq,60) output(74,eq,60) output(84,eq,66) output(80,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(80,eq,55) output(74,eq,33) output(71,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(53,eq,52) output(22,eq,52) output(84,eq,52) output(80,eq,52) output(22,eq,49) output(84,eq,49) output(80,eq,49) output(84,eq,46) output(80,eq,46) output(80,eq,83) output(80,eq,33) output(80,eq,68)
Optimization: 112 14
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasCategory(1))),8) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(22,worse,71) output(84,worse,71) output(80,worse,71) output(53,worse,71) output(84,eq,22) output(83,eq,46) output(46,eq,49) output(49,eq,52) output(52,eq,33) output(80,eq,84) output(22,eq,53) output(47,eq,46) output(46,eq,55) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(60,eq,52) output(52,eq,68) output(74,eq,47) output(49,eq,68) output(60,eq,68) output(66,eq,52) output(83,eq,60) output(55,eq,66) output(46,eq,83) output(83,eq,55) output(47,eq,55) output(74,eq,46) output(84,eq,53) output(49,eq,33) output(60,eq,33) output(46,eq,52) output(83,eq,49) output(47,eq,49) output(55,eq,46) output(53,eq,83) output(80,eq,22) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(53,eq,46) output(22,eq,46) output(74,eq,49) output(55,eq,49) output(53,eq,49) output(83,eq,52) output(47,eq,52) output(74,eq,52) output(55,eq,52) output(66,eq,33) output(83,eq,33) output(46,eq,33) output(47,eq,33) output(80,eq,53) output(74,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(74,eq,83) output(46,eq,66) output(47,eq,66) output(53,eq,66) output(22,eq,66) output(55,eq,60) output(46,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(47,eq,68) output(74,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(80,eq,60) output(47,eq,60) output(74,eq,60) output(84,eq,66) output(80,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(80,eq,55) output(74,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(53,eq,52) output(22,eq,52) output(84,eq,52) output(80,eq,52) output(22,eq,49) output(84,eq,49) output(80,eq,49) output(84,eq,46) output(80,eq,46) output(80,eq,83) output(80,eq,33) output(80,eq,68)
Optimization: 104 6
Progression : [  4;104] (Error: 25)
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),4) preference(1,(1,3),1,for(atom(hasCategory(4))),4) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasIngredient(9))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(46,better,60) output(80,better,84) output(80,better,22) output(80,better,60) output(53,better,60) output(55,better,60) output(66,better,60) output(83,better,60) output(47,better,60) output(71,better,60) output(22,worse,53) output(22,worse,71) output(22,worse,83) output(22,worse,46) output(22,worse,66) output(22,worse,68) output(22,worse,55) output(22,worse,33) output(22,worse,52) output(22,worse,49) output(60,worse,52) output(60,worse,68) output(60,worse,33) output(84,worse,53) output(84,worse,71) output(84,worse,83) output(84,worse,68) output(84,worse,66) output(84,worse,55) output(84,worse,33) output(84,worse,52) output(84,worse,49) output(84,worse,46) output(74,worse,47) output(74,worse,46) output(74,worse,49) output(74,worse,52) output(74,worse,55) output(74,worse,83) output(74,worse,68) output(74,worse,66) output(74,worse,33) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(83,eq,46) output(46,eq,49) output(49,eq,52) output(52,eq,33) output(47,eq,46) output(46,eq,55) output(55,eq,83) output(83,eq,66) output(52,eq,68) output(49,eq,68) output(66,eq,52) output(71,eq,66) output(55,eq,66) output(46,eq,83) output(83,eq,55) output(47,eq,55) output(49,eq,33) output(46,eq,52) output(83,eq,49) output(47,eq,49) output(71,eq,46) output(55,eq,46) output(53,eq,83) output(80,eq,71) output(46,eq,46) output(53,eq,46) output(71,eq,49) output(55,eq,49) output(53,eq,49) output(83,eq,52) output(47,eq,52) output(71,eq,52) output(55,eq,52) output(66,eq,33) output(83,eq,33) output(46,eq,33) output(47,eq,33) output(80,eq,53) output(71,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(46,eq,66) output(47,eq,66) output(53,eq,66) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(47,eq,68) output(71,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,60) output(84,eq,60) output(74,eq,60) output(80,eq,66) output(80,eq,55) output(71,eq,33) output(55,eq,33) output(53,eq,33) output(53,eq,52) output(80,eq,52) output(80,eq,49) output(80,eq,46) output(80,eq,83) output(80,eq,33) output(80,eq,68)
Optimization: 103 14
Answer: 5
preference(1,(1,6),1,for(atom(hasIngredient(8))),8) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,55) output(46,better,83) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(80,better,84) output(80,better,22) output(80,better,71) output(80,better,53) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,83) output(80,better,33) output(80,better,68) output(49,better,68) output(49,better,33) output(52,better,33) output(52,better,68) output(22,worse,46) output(22,worse,52) output(22,worse,49) output(60,worse,52) output(84,worse,52) output(84,worse,49) output(84,worse,46) output(53,worse,46) output(53,worse,49) output(53,worse,52) output(55,worse,46) output(55,worse,49) output(55,worse,52) output(66,worse,52) output(83,worse,46) output(83,worse,49) output(83,worse,52) output(47,worse,46) output(47,worse,49) output(47,worse,52) output(71,worse,46) output(71,worse,49) output(71,worse,52) output(74,worse,46) output(74,worse,49) output(74,worse,52) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(46,eq,49) output(49,eq,52) output(22,eq,53) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(74,eq,47) output(60,eq,68) output(83,eq,60) output(71,eq,66) output(55,eq,66) output(83,eq,55) output(47,eq,55) output(84,eq,53) output(60,eq,33) output(46,eq,52) output(53,eq,83) output(22,eq,71) output(84,eq,71) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(66,eq,33) output(83,eq,33) output(47,eq,33) output(74,eq,55) output(71,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(74,eq,83) output(47,eq,66) output(53,eq,66) output(22,eq,66) output(71,eq,60) output(55,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(47,eq,68) output(74,eq,68) output(71,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(47,eq,60) output(74,eq,60) output(84,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(74,eq,33) output(71,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(80,eq,52) output(80,eq,49) output(80,eq,46)
Optimization: 93 4
Answer: 6
preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,55) output(46,better,83) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,83) output(80,better,33) output(80,better,68) output(49,better,68) output(49,better,33) output(52,better,33) output(52,better,68) output(71,better,83) output(71,better,66) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(22,worse,71) output(22,worse,46) output(22,worse,52) output(22,worse,49) output(60,worse,52) output(84,worse,71) output(84,worse,52) output(84,worse,49) output(84,worse,46) output(53,worse,71) output(53,worse,46) output(53,worse,49) output(53,worse,52) output(55,worse,46) output(55,worse,49) output(55,worse,52) output(66,worse,52) output(83,worse,46) output(83,worse,49) output(83,worse,52) output(47,worse,46) output(47,worse,49) output(47,worse,52) output(74,worse,46) output(74,worse,49) output(74,worse,52) output(84,eq,22) output(46,eq,49) output(49,eq,52) output(22,eq,53) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(74,eq,47) output(60,eq,68) output(83,eq,60) output(55,eq,66) output(83,eq,55) output(47,eq,55) output(84,eq,53) output(60,eq,33) output(46,eq,52) output(71,eq,46) output(53,eq,83) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(71,eq,49) output(71,eq,52) output(66,eq,33) output(83,eq,33) output(47,eq,33) output(74,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(74,eq,83) output(47,eq,66) output(53,eq,66) output(22,eq,66) output(55,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(47,eq,68) output(74,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(47,eq,60) output(74,eq,60) output(84,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(74,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(80,eq,52) output(80,eq,49) output(80,eq,46)
Optimization: 88 4
Answer: 7
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,55) output(46,better,83) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,83) output(80,better,33) output(80,better,68) output(49,better,52) output(49,better,68) output(49,better,33) output(71,better,83) output(71,better,66) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(22,worse,71) output(22,worse,46) output(22,worse,49) output(84,worse,71) output(84,worse,49) output(84,worse,46) output(53,worse,71) output(53,worse,46) output(53,worse,49) output(55,worse,46) output(55,worse,49) output(83,worse,46) output(83,worse,49) output(47,worse,46) output(47,worse,49) output(74,worse,46) output(74,worse,49) output(84,eq,22) output(46,eq,49) output(52,eq,33) output(22,eq,53) output(55,eq,83) output(83,eq,66) output(66,eq,60) output(60,eq,52) output(52,eq,68) output(74,eq,47) output(60,eq,68) output(66,eq,52) output(83,eq,60) output(55,eq,66) output(83,eq,55) output(47,eq,55) output(84,eq,53) output(60,eq,33) output(71,eq,46) output(53,eq,83) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(46,eq,46) output(71,eq,49) output(83,eq,52) output(47,eq,52) output(74,eq,52) output(55,eq,52) output(66,eq,33) output(83,eq,33) output(47,eq,33) output(74,eq,55) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(47,eq,83) output(74,eq,83) output(47,eq,66) output(53,eq,66) output(22,eq,66) output(55,eq,60) output(53,eq,60) output(66,eq,68) output(83,eq,68) output(47,eq,68) output(74,eq,68) output(55,eq,68) output(53,eq,68) output(22,eq,68) output(84,eq,68) output(22,eq,60) output(84,eq,60) output(47,eq,60) output(74,eq,60) output(84,eq,66) output(74,eq,66) output(22,eq,55) output(84,eq,55) output(74,eq,33) output(55,eq,33) output(53,eq,33) output(22,eq,33) output(84,eq,33) output(53,eq,52) output(22,eq,52) output(84,eq,52) output(80,eq,49) output(80,eq,46)
Optimization: 86 4
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasCategory(3))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),8) preference(1,(1,6),1,for(atom(hasPrep(1))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasCategory(4))),3) preference(1,(1,9),1,for(atom(hasIngredient(9))),2) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,11),1,for(atom(hasCost(3))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),4) preference(1,(1,13),1,for(atom(hasCost(4))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),3) preference(1,less(weight)) output(22,better,66) output(22,better,68) output(22,better,33) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,83) output(46,better,33) output(46,better,66) output(46,better,68) output(60,better,68) output(60,better,33) output(84,better,22) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,68) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,49) output(84,better,46) output(80,better,22) output(80,better,71) output(80,better,66) output(80,better,55) output(80,better,49) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,71) output(53,better,83) output(53,better,49) output(53,better,55) output(53,better,66) output(53,better,68) output(53,better,33) output(55,better,66) output(55,better,49) output(55,better,68) output(55,better,33) output(66,better,33) output(66,better,68) output(83,better,66) output(83,better,55) output(83,better,49) output(83,better,33) output(83,better,68) output(47,better,49) output(47,better,33) output(49,better,33) output(52,better,33) output(52,better,68) output(71,better,66) output(71,better,49) output(71,better,68) output(71,better,33) output(74,better,47) output(74,better,46) output(74,better,49) output(74,better,55) output(74,better,83) output(74,better,68) output(74,better,66) output(74,better,33) output(22,worse,53) output(22,worse,71) output(22,worse,83) output(22,worse,46) output(22,worse,60) output(22,worse,55) output(22,worse,52) output(46,worse,52) output(46,worse,60) output(80,worse,84) output(80,worse,53) output(80,worse,60) output(80,worse,52) output(80,worse,46) output(53,worse,46) output(53,worse,60) output(53,worse,52) output(55,worse,83) output(55,worse,46) output(55,worse,52) output(55,worse,60) output(66,worse,60) output(66,worse,52) output(83,worse,46) output(83,worse,60) output(83,worse,52) output(47,worse,46) output(47,worse,55) output(47,worse,52) output(47,worse,83) output(47,worse,66) output(47,worse,68) output(47,worse,60) output(49,worse,52) output(49,worse,68) output(71,worse,83) output(71,worse,46) output(71,worse,52) output(71,worse,60) output(60,eq,52) output(46,eq,46) output(74,eq,52) output(71,eq,55) output(55,eq,55) output(83,eq,83) output(84,eq,60) output(74,eq,60) output(84,eq,52)
Optimization: 48 14
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),4) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasCategory(3))),1) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasIngredient(9))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),1) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(22,better,53) output(22,better,83) output(22,better,46) output(22,better,66) output(22,better,68) output(22,better,60) output(22,better,55) output(22,better,33) output(22,better,52) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,83) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(84,better,53) output(84,better,83) output(84,better,68) output(84,better,60) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,52) output(84,better,49) output(84,better,46) output(80,better,53) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,49) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,49) output(53,better,60) output(53,better,68) output(53,better,33) output(53,better,52) output(55,better,49) output(55,better,52) output(55,better,60) output(55,better,68) output(55,better,33) output(66,better,60) output(66,better,52) output(66,better,33) output(66,better,68) output(83,better,60) output(83,better,49) output(83,better,52) output(83,better,33) output(83,better,68) output(49,better,52) output(49,better,68) output(49,better,33) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(74,better,47) output(74,better,46) output(74,better,49) output(74,better,52) output(74,better,55) output(74,better,83) output(74,better,68) output(74,better,60) output(74,better,66) output(74,better,33) output(60,worse,52) output(60,worse,68) output(60,worse,33) output(80,worse,84) output(80,worse,22) output(80,worse,71) output(53,worse,71) output(53,worse,46) output(55,worse,46) output(83,worse,46) output(47,worse,46) output(47,worse,55) output(47,worse,49) output(47,worse,52) output(47,worse,33) output(47,worse,83) output(47,worse,66) output(47,worse,68) output(84,eq,22) output(52,eq,33) output(55,eq,83) output(83,eq,66) output(52,eq,68) output(55,eq,66) output(83,eq,55) output(53,eq,83) output(22,eq,71) output(84,eq,71) output(46,eq,46) output(55,eq,55) output(53,eq,55) output(83,eq,83) output(53,eq,66) output(47,eq,60) output(80,eq,46)
Optimization: 35 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(22,better,83) output(22,better,66) output(22,better,68) output(22,better,60) output(22,better,55) output(22,better,33) output(22,better,52) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,83) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(60,better,52) output(60,better,68) output(84,better,22) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,68) output(84,better,60) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,52) output(84,better,49) output(84,better,46) output(80,better,22) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,49) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,83) output(53,better,46) output(53,better,49) output(53,better,55) output(53,better,66) output(53,better,60) output(53,better,68) output(53,better,33) output(53,better,52) output(55,better,83) output(55,better,49) output(55,better,52) output(55,better,68) output(66,better,52) output(66,better,68) output(83,better,49) output(83,better,68) output(47,better,46) output(47,better,55) output(47,better,49) output(47,better,52) output(47,better,33) output(47,better,83) output(47,better,66) output(47,better,68) output(47,better,60) output(52,better,68) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(74,better,49) output(74,better,52) output(74,better,83) output(74,better,68) output(22,worse,53) output(22,worse,71) output(80,worse,84) output(55,worse,46) output(83,worse,46) output(83,worse,66) output(83,worse,60) output(83,worse,55) output(83,worse,33) output(49,worse,52) output(49,worse,68) output(49,worse,33) output(52,worse,33) output(74,worse,47) output(74,worse,46) output(53,eq,71) output(66,eq,60) output(55,eq,66) output(60,eq,33) output(80,eq,71) output(46,eq,46) output(22,eq,46) output(83,eq,52) output(66,eq,33) output(80,eq,53) output(74,eq,55) output(55,eq,55) output(83,eq,83) output(55,eq,60) output(74,eq,60) output(74,eq,66) output(74,eq,33) output(55,eq,33)
Optimization: 33 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),6) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(22,better,83) output(22,better,66) output(22,better,68) output(22,better,60) output(22,better,55) output(22,better,33) output(22,better,52) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,83) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(60,better,52) output(60,better,68) output(60,better,33) output(84,better,22) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,68) output(84,better,60) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,52) output(84,better,49) output(84,better,46) output(80,better,22) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,49) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,83) output(53,better,46) output(53,better,49) output(53,better,55) output(53,better,66) output(53,better,60) output(53,better,68) output(53,better,33) output(53,better,52) output(55,better,83) output(55,better,66) output(55,better,49) output(55,better,52) output(55,better,68) output(55,better,33) output(66,better,52) output(66,better,68) output(83,better,49) output(83,better,68) output(47,better,49) output(47,better,52) output(47,better,33) output(47,better,83) output(47,better,66) output(47,better,68) output(52,better,68) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(74,better,47) output(74,better,49) output(74,better,52) output(74,better,83) output(74,better,68) output(74,better,66) output(74,better,33) output(22,worse,53) output(22,worse,71) output(80,worse,84) output(55,worse,46) output(66,worse,60) output(83,worse,46) output(83,worse,66) output(83,worse,60) output(83,worse,55) output(83,worse,33) output(47,worse,46) output(47,worse,55) output(47,worse,60) output(49,worse,52) output(49,worse,33) output(52,worse,33) output(74,worse,46) output(53,eq,71) output(49,eq,68) output(80,eq,71) output(46,eq,46) output(22,eq,46) output(83,eq,52) output(66,eq,33) output(80,eq,53) output(74,eq,55) output(55,eq,55) output(83,eq,83) output(55,eq,60) output(74,eq,60)
Optimization: 30 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(22,better,83) output(22,better,66) output(22,better,68) output(22,better,60) output(22,better,55) output(22,better,33) output(22,better,52) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,83) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(60,better,52) output(60,better,68) output(60,better,33) output(84,better,22) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,68) output(84,better,60) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,52) output(84,better,49) output(84,better,46) output(80,better,22) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,49) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,83) output(53,better,46) output(53,better,49) output(53,better,55) output(53,better,66) output(53,better,60) output(53,better,68) output(53,better,33) output(53,better,52) output(55,better,83) output(55,better,66) output(55,better,49) output(55,better,52) output(55,better,68) output(55,better,33) output(83,better,66) output(83,better,49) output(83,better,33) output(83,better,68) output(47,better,49) output(47,better,52) output(47,better,33) output(47,better,83) output(47,better,66) output(47,better,68) output(52,better,33) output(52,better,68) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(74,better,47) output(74,better,49) output(74,better,52) output(74,better,83) output(74,better,68) output(74,better,66) output(74,better,33) output(22,worse,53) output(22,worse,71) output(80,worse,84) output(55,worse,46) output(66,worse,60) output(66,worse,52) output(83,worse,46) output(83,worse,60) output(83,worse,55) output(47,worse,46) output(47,worse,55) output(47,worse,60) output(49,worse,52) output(49,worse,68) output(49,worse,33) output(74,worse,46) output(53,eq,71) output(80,eq,71) output(46,eq,46) output(22,eq,46) output(83,eq,52) output(66,eq,33) output(80,eq,53) output(74,eq,55) output(55,eq,55) output(83,eq,83) output(55,eq,60) output(66,eq,68) output(74,eq,60)
Optimization: 29 13
Answer: 13
preference(1,(1,1),1,for(atom(hasIngredient(12))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasCategory(4))),6) preference(1,(1,5),1,for(atom(hasCost(4))),8) preference(1,(1,6),1,for(atom(hasIngredient(3))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasCost(1))),4) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasCost(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),5) preference(1,less(weight)) output(22,better,53) output(22,better,71) output(22,better,83) output(22,better,46) output(22,better,66) output(22,better,68) output(22,better,60) output(22,better,55) output(22,better,33) output(22,better,52) output(22,better,49) output(46,better,49) output(46,better,55) output(46,better,52) output(46,better,33) output(46,better,66) output(46,better,60) output(46,better,68) output(60,better,52) output(60,better,68) output(60,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,68) output(84,better,60) output(84,better,66) output(84,better,55) output(84,better,33) output(84,better,52) output(84,better,49) output(84,better,46) output(80,better,84) output(80,better,22) output(80,better,71) output(80,better,53) output(80,better,60) output(80,better,66) output(80,better,55) output(80,better,52) output(80,better,49) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,68) output(53,better,71) output(53,better,83) output(53,better,46) output(53,better,49) output(53,better,55) output(53,better,66) output(53,better,60) output(53,better,68) output(53,better,33) output(53,better,52) output(55,better,66) output(55,better,49) output(55,better,52) output(55,better,60) output(55,better,68) output(55,better,33) output(66,better,60) output(66,better,52) output(66,better,33) output(66,better,68) output(83,better,66) output(83,better,60) output(83,better,55) output(83,better,49) output(83,better,52) output(83,better,33) output(83,better,68) output(47,better,46) output(47,better,55) output(47,better,49) output(47,better,52) output(47,better,33) output(47,better,83) output(47,better,66) output(47,better,68) output(47,better,60) output(49,better,52) output(49,better,68) output(49,better,33) output(52,better,33) output(52,better,68) output(71,better,83) output(71,better,66) output(71,better,46) output(71,better,49) output(71,better,52) output(71,better,55) output(71,better,60) output(71,better,68) output(71,better,33) output(74,better,47) output(74,better,46) output(74,better,49) output(74,better,52) output(74,better,55) output(74,better,83) output(74,better,68) output(74,better,60) output(74,better,66) output(74,better,33) output(55,worse,83) output(55,worse,46) output(84,eq,22) output(83,eq,46) output(46,eq,83) output(46,eq,46) output(55,eq,55) output(83,eq,83)
Optimization: 8 14
Progression : [5;8] (Error: 0.6)
Progression : [6;8] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.059 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 13+
  Optimum    : unknown
Optimization : 8 14
Bounds       : [6;8] [0;14]
Calls        : 1
Time         : 298.360s (Solving: 294.02s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1180.128s
Threads      : 4        (Winner: 4)

Choices      : 8381192  (Domain: 142824)
Conflicts    : 5255808  (Analyzed: 5255805)
Restarts     : 5806     (Average: 905.24 Last: 162583)
Model-Level  : 98.9    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 5319941  (Deleted: 4987653)
  Binary     : 257      (Ratio:   0.00%)
  Ternary    : 773      (Ratio:   0.01%)
  Conflict   : 5255805  (Average Length:  310.4 Ratio:  98.79%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 64136    (Average Length:   50.2 Ratio:   1.21%) 
  Distributed: 21466    (Ratio:   0.41% Average LBD: 3.77) 
  Integrated : 64398    (Ratio: 300.00% Unit: 81 Average Jumps: 22.27)
Backjumps    : 5255805  (Average:  1.52 Max: 579 Sum: 8010566)
  Executed   : 5255801  (Average:  1.52 Max: 579 Sum: 8010266 Ratio: 100.00%)
  Bounded    : 4        (Average: 75.00 Max:  99 Sum:    300 Ratio:   0.00%)

Rules        : 1163810 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21684   
Bodies       : 19769   
  Sum        : 223     
  Count      : 14      
Equivalences : 16379    (Atom=Atom: 1137 Body=Body: 469 Other: 14773)
Tight        : Yes
Variables    : 17373    (Eliminated:    0 Frozen: 8049)
Constraints  : 1178559  (Binary:  98.9% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(0)) 
}.
