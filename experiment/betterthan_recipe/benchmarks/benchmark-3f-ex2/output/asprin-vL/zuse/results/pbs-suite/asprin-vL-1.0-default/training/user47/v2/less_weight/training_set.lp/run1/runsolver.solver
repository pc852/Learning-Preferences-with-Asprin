asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(22,eq,28) output(100,eq,19) output(19,eq,73) output(73,eq,86) output(68,eq,50) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(68,eq,46) output(98,eq,46) output(19,eq,86) output(65,eq,86) output(100,eq,73) output(100,eq,86) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(100,eq,54)
Optimization: 25 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),1) preference(1,(1,7),1,for(atom(hasIngredient(10))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasCategory(2))),7) preference(1,(1,11),1,for(atom(hasIngredient(4))),8) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(3))),6) preference(1,less(weight)) output(22,better,28) output(50,better,46) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(25,better,67) output(52,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),8) preference(1,(1,5),1,for(atom(hasIngredient(10))),1) preference(1,(1,6),1,for(atom(hasCategory(4))),8) preference(1,(1,8),1,for(atom(hasIngredient(9))),1) preference(1,(1,11),1,for(atom(hasCategory(2))),7) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasCategory(1))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(22,better,28) output(50,better,46) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(25,better,67) output(52,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54)
Optimization: 0 9
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasCategory(1))),6) preference(1,(1,4),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasCategory(2))),5) preference(1,(1,12),1,for(atom(hasDifficulty(3))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),1) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(22,better,28) output(50,better,46) output(19,better,73) output(19,better,52) output(19,better,86) output(19,better,54) output(98,better,50) output(98,better,46) output(100,better,19) output(100,better,63) output(100,better,73) output(100,better,86) output(100,better,52) output(100,better,54) output(25,better,67) output(52,better,54) output(65,better,73) output(65,better,52) output(65,better,86) output(65,better,54) output(68,better,50) output(68,better,46) output(73,better,86) output(73,better,52) output(73,better,54)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.055 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 4+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 298.268s (Solving: 295.74s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1185.279s
Threads      : 4        (Winner: 4)

Choices      : 5498676  (Domain: 256200)
Conflicts    : 3307673  (Analyzed: 3307671)
Restarts     : 3265     (Average: 1013.07 Last: 161476)
Model-Level  : 83.5    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 3312009  (Deleted: 3091298)
  Binary     : 544      (Ratio:   0.02%)
  Ternary    : 693      (Ratio:   0.02%)
  Conflict   : 3307671  (Average Length:  573.4 Ratio:  99.87%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4338     (Average Length:   56.2 Ratio:   0.13%) 
  Distributed: 1446     (Ratio:   0.04% Average LBD: 3.39) 
  Integrated : 4338     (Ratio: 300.00% Unit: 1 Average Jumps: 5.00)
Backjumps    : 3307671  (Average:  1.49 Max: 871 Sum: 4941176)
  Executed   : 3307670  (Average:  1.49 Max: 871 Sum: 4941153 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 334323  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13060   
Bodies       : 18804   
  Sum        : 50      
  Count      : 14      
Equivalences : 6725     (Atom=Atom: 263 Body=Body: 114 Other: 6348)
Tight        : Yes
Variables    : 17027    (Eliminated:    0 Frozen: 7703)
Constraints  : 357086   (Binary:  96.4% Ternary:   2.6% Other:   1.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCategory(2)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCost(2)) 
}.
