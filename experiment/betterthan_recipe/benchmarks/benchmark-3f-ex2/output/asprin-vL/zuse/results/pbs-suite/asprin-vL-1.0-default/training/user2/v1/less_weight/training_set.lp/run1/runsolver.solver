asprin_vL version 1.0
Reading from stdin
-:1272:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1297:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1378:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1639:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1652:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1829:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1958:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2030:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2034:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2034:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2040:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2139:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2165:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2285:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2319:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2341:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1189:1-16: info: no atoms over signature occur in program:
  output/3

-:1181:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1182:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,50) output(50,eq,18) output(18,eq,23) output(47,eq,24) output(49,eq,70) output(70,eq,29) output(64,eq,47) output(24,eq,49) output(13,eq,10) output(10,eq,14) output(14,eq,48) output(48,eq,70) output(70,eq,18) output(18,eq,51) output(51,eq,65) output(18,eq,65) output(50,eq,51) output(70,eq,51) output(49,eq,18) output(48,eq,18) output(14,eq,70) output(10,eq,48) output(13,eq,14) output(47,eq,49) output(49,eq,29) output(48,eq,29) output(24,eq,70) output(64,eq,24) output(50,eq,23) output(70,eq,23) output(10,eq,18) output(13,eq,50) output(13,eq,18) output(49,eq,23) output(48,eq,23) output(14,eq,23) output(24,eq,23) output(10,eq,23) output(13,eq,23) output(47,eq,70) output(64,eq,70) output(14,eq,29) output(10,eq,29) output(24,eq,29) output(47,eq,29) output(64,eq,49) output(13,eq,48) output(10,eq,70) output(13,eq,70) output(14,eq,18) output(24,eq,18) output(47,eq,18) output(49,eq,51) output(48,eq,51) output(14,eq,51) output(24,eq,51) output(10,eq,51) output(13,eq,51) output(50,eq,65) output(70,eq,65) output(49,eq,65) output(48,eq,65) output(10,eq,65) output(13,eq,65) output(14,eq,65) output(24,eq,65) output(47,eq,65) output(64,eq,65) output(47,eq,51) output(64,eq,51) output(64,eq,18) output(64,eq,29) output(13,eq,29) output(47,eq,23) output(64,eq,23)
Optimization: 75 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(10,better,14) output(64,better,24) output(47,better,24) output(13,worse,10) output(13,worse,50) output(13,worse,18) output(13,worse,23) output(13,worse,48) output(13,worse,70) output(13,worse,51) output(13,worse,65) output(13,worse,29) output(14,worse,48) output(14,worse,70) output(14,worse,23) output(14,worse,29) output(14,worse,18) output(14,worse,51) output(14,worse,65) output(24,worse,49) output(24,worse,70) output(24,worse,23) output(24,worse,29) output(24,worse,18) output(24,worse,51) output(24,worse,65) output(10,eq,50) output(50,eq,18) output(18,eq,23) output(49,eq,70) output(70,eq,29) output(64,eq,47) output(48,eq,70) output(70,eq,18) output(18,eq,51) output(51,eq,65) output(18,eq,65) output(50,eq,51) output(70,eq,51) output(49,eq,18) output(48,eq,18) output(10,eq,48) output(13,eq,14) output(47,eq,49) output(49,eq,29) output(48,eq,29) output(50,eq,23) output(70,eq,23) output(10,eq,18) output(49,eq,23) output(48,eq,23) output(10,eq,23) output(47,eq,70) output(64,eq,70) output(10,eq,29) output(47,eq,29) output(64,eq,49) output(10,eq,70) output(47,eq,18) output(49,eq,51) output(48,eq,51) output(10,eq,51) output(50,eq,65) output(70,eq,65) output(49,eq,65) output(48,eq,65) output(10,eq,65) output(47,eq,65) output(64,eq,65) output(47,eq,51) output(64,eq,51) output(64,eq,18) output(64,eq,29) output(47,eq,23) output(64,eq,23)
Optimization: 72 14
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasIngredient(7))),1) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasCategory(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(3))),5) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasCategory(4))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasCost(4))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,14) output(10,better,18) output(10,better,70) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,18) output(13,better,70) output(13,better,29) output(14,better,70) output(14,better,18) output(64,better,70) output(64,better,49) output(64,better,18) output(64,better,29) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,48) output(10,worse,23) output(10,worse,29) output(10,worse,51) output(10,worse,65) output(18,worse,23) output(18,worse,51) output(18,worse,65) output(13,worse,50) output(13,worse,23) output(13,worse,48) output(13,worse,51) output(13,worse,65) output(14,worse,48) output(14,worse,23) output(14,worse,29) output(14,worse,51) output(14,worse,65) output(64,worse,47) output(64,worse,24) output(64,worse,65) output(64,worse,51) output(64,worse,23) output(70,worse,29) output(70,worse,51) output(70,worse,23) output(70,worse,65) output(47,worse,24) output(48,worse,23) output(48,worse,51) output(48,worse,65) output(49,worse,29) output(49,worse,23) output(49,worse,51) output(49,worse,65) output(49,eq,70) output(70,eq,18) output(50,eq,51) output(49,eq,18)
Optimization: 40 14
Answer: 4
preference(1,(1,6),1,for(atom(hasDifficulty(4))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(47,worse,24) output(10,eq,50) output(18,eq,23) output(49,eq,70) output(70,eq,29) output(10,eq,14) output(14,eq,48) output(70,eq,18) output(18,eq,51) output(51,eq,65) output(18,eq,65) output(70,eq,51) output(49,eq,18) output(10,eq,48) output(47,eq,49) output(49,eq,29) output(64,eq,24) output(70,eq,23) output(13,eq,18) output(49,eq,23) output(13,eq,23) output(47,eq,70) output(47,eq,29) output(13,eq,70) output(47,eq,18) output(49,eq,51) output(13,eq,51) output(70,eq,65) output(49,eq,65) output(13,eq,65) output(47,eq,65) output(47,eq,51) output(13,eq,29) output(47,eq,23)
Optimization: 38 2
Answer: 5
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasIngredient(7))),1) preference(1,(1,6),1,for(atom(hasCost(2))),8) preference(1,(1,7),1,for(atom(hasIngredient(12))),7) preference(1,(1,8),1,for(atom(hasCategory(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(3))),5) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasCategory(4))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasCost(4))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,18) output(10,better,70) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,70) output(64,better,49) output(64,better,18) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,23) output(10,worse,29) output(10,worse,51) output(10,worse,65) output(18,worse,23) output(18,worse,51) output(18,worse,65) output(13,worse,14) output(64,worse,47) output(64,worse,24) output(64,worse,65) output(64,worse,51) output(64,worse,29) output(64,worse,23) output(70,worse,29) output(70,worse,51) output(70,worse,23) output(70,worse,65) output(47,worse,24) output(48,worse,29) output(48,worse,23) output(48,worse,51) output(48,worse,65) output(49,worse,29) output(49,worse,23) output(49,worse,51) output(49,worse,65) output(49,eq,70) output(70,eq,18) output(50,eq,51) output(49,eq,18) output(13,eq,50) output(13,eq,51) output(13,eq,29)
Optimization: 37 13
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(7))),4) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasPrepTime(3))),3) preference(1,(1,5),1,for(atom(hasIngredient(3))),4) preference(1,(1,6),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasCategory(3))),6) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasCost(3))),4) preference(1,(1,10),1,for(atom(hasCategory(4))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasCategory(1))),5) preference(1,(1,13),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,70) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,65) output(64,better,47) output(64,better,70) output(64,better,65) output(64,better,29) output(64,better,23) output(47,better,70) output(47,better,29) output(48,better,70) output(48,better,29) output(49,better,70) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,18) output(50,worse,18) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,18) output(13,worse,23) output(13,worse,48) output(13,worse,51) output(13,worse,65) output(14,worse,18) output(64,worse,24) output(64,worse,49) output(64,worse,18) output(70,worse,18) output(70,worse,51) output(70,worse,23) output(70,worse,65) output(47,worse,24) output(47,worse,49) output(47,worse,18) output(47,worse,51) output(48,worse,18) output(48,worse,51) output(49,worse,18) output(70,eq,29) output(50,eq,51) output(48,eq,23) output(14,eq,51) output(48,eq,65) output(47,eq,65) output(64,eq,51) output(47,eq,23)
Optimization: 33 13
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(4))),2) preference(1,(1,2),1,for(atom(hasCost(4))),7) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasPrep(7))),4) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),1) preference(1,(1,12),1,for(atom(hasCategory(4))),7) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(10,better,50) output(10,better,48) output(10,better,29) output(10,better,70) output(10,better,51) output(18,better,23) output(18,better,51) output(18,better,65) output(13,better,50) output(13,better,51) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,29) output(70,better,51) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,29) output(48,better,51) output(49,better,70) output(49,better,29) output(49,better,51) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,14) output(10,worse,18) output(10,worse,23) output(10,worse,65) output(50,worse,18) output(50,worse,23) output(50,worse,65) output(51,worse,65) output(13,worse,10) output(13,worse,14) output(13,worse,18) output(13,worse,23) output(13,worse,48) output(13,worse,65) output(64,worse,47) output(64,worse,24) output(64,worse,18) output(70,worse,18) output(70,worse,23) output(70,worse,65) output(47,worse,24) output(48,worse,18) output(48,worse,23) output(48,worse,65) output(49,worse,18) output(49,worse,23) output(49,worse,65) output(70,eq,29) output(50,eq,51) output(13,eq,70) output(13,eq,29) output(64,eq,23)
Optimization: 32 14
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),2) preference(1,(1,3),1,for(atom(hasIngredient(3))),1) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasDifficulty(3))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,7),1,for(atom(hasCost(3))),7) preference(1,(1,8),1,for(atom(hasIngredient(9))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),4) preference(1,(1,10),1,for(atom(hasIngredient(7))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),3) preference(1,(1,12),1,for(atom(hasDifficulty(4))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,48) output(10,better,23) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,23) output(70,better,23) output(70,better,65) output(47,better,49) output(47,better,65) output(47,better,23) output(48,better,65) output(49,better,23) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,18) output(10,worse,29) output(14,worse,29) output(64,worse,29) output(70,worse,29) output(70,worse,18) output(47,worse,24) output(47,worse,29) output(47,worse,18) output(48,worse,70) output(48,worse,18) output(48,worse,29) output(48,worse,23) output(48,worse,51) output(49,worse,70) output(49,worse,18) output(49,worse,29) output(49,worse,51) output(24,worse,29) output(70,eq,51) output(47,eq,70) output(10,eq,70) output(10,eq,51) output(47,eq,51) output(13,eq,29)
Optimization: 27 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(1))),6) preference(1,(1,2),1,for(atom(hasIngredient(3))),2) preference(1,(1,3),1,for(atom(hasIngredient(12))),7) preference(1,(1,4),1,for(atom(hasCost(3))),3) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(4))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),3) preference(1,(1,10),1,for(atom(hasPrep(7))),3) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(4))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),6) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(10,better,70) output(18,better,51) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(47,better,70) output(47,better,51) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,18) output(10,worse,23) output(10,worse,29) output(10,worse,65) output(18,worse,23) output(51,worse,65) output(13,worse,14) output(13,worse,48) output(64,worse,24) output(64,worse,49) output(70,worse,29) output(70,worse,18) output(70,worse,51) output(70,worse,23) output(70,worse,65) output(47,worse,24) output(47,worse,49) output(47,worse,29) output(47,worse,23) output(18,eq,65) output(47,eq,18) output(10,eq,51) output(47,eq,65)
Optimization: 26 14
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(12))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasPrep(2))),8) preference(1,(1,4),1,for(atom(hasCost(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(3))),3) preference(1,(1,6),1,for(atom(hasIngredient(7))),4) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasIngredient(9))),3) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasCategory(4))),1) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasDifficulty(4))),6) preference(1,(1,13),1,for(atom(hasCategory(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(10,better,65) output(18,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,18) output(49,better,23) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,23) output(10,worse,29) output(10,worse,70) output(10,worse,51) output(18,worse,23) output(18,worse,51) output(50,worse,51) output(13,worse,14) output(64,worse,24) output(70,worse,29) output(70,worse,51) output(47,worse,24) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,70) output(49,worse,29) output(49,worse,51) output(47,eq,49) output(10,eq,18)
Optimization: 25 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCategory(1))),3) preference(1,(1,3),1,for(atom(hasIngredient(9))),5) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasIngredient(3))),6) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasIngredient(12))),7) preference(1,(1,10),1,for(atom(hasIngredient(7))),7) preference(1,(1,11),1,for(atom(hasCategory(4))),3) preference(1,(1,12),1,for(atom(hasDifficulty(4))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(18,better,23) output(18,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(47,better,65) output(47,better,23) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,23) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,29) output(10,worse,70) output(10,worse,51) output(18,worse,51) output(50,worse,51) output(70,worse,29) output(70,worse,51) output(47,worse,24) output(47,worse,49) output(47,worse,70) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,29) output(49,worse,51) output(48,eq,70) output(10,eq,18) output(47,eq,18)
Optimization: 22 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),3) preference(1,(1,3),1,for(atom(hasIngredient(3))),3) preference(1,(1,4),1,for(atom(hasIngredient(12))),5) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,8),1,for(atom(hasCost(3))),2) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(4))),6) preference(1,(1,13),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,23) output(70,better,65) output(47,better,70) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,29) output(18,worse,23) output(18,worse,51) output(14,worse,29) output(64,worse,24) output(64,worse,49) output(64,worse,29) output(70,worse,29) output(70,worse,51) output(70,worse,23) output(47,worse,24) output(47,worse,49) output(47,worse,29) output(48,worse,29) output(48,worse,51) output(49,worse,29) output(24,worse,29) output(70,eq,18) output(13,eq,29)
Optimization: 21 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),4) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(9))),2) preference(1,(1,6),1,for(atom(hasIngredient(7))),3) preference(1,(1,7),1,for(atom(hasIngredient(12))),1) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(4))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),2) preference(1,(1,11),1,for(atom(hasCost(4))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasCost(3))),2) preference(1,(1,14),1,for(atom(hasCategory(1))),5) preference(1,less(weight)) output(10,better,23) output(10,better,65) output(18,better,23) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,23) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(47,better,24) output(47,better,70) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,48) output(10,worse,29) output(10,worse,70) output(10,worse,51) output(18,worse,51) output(13,worse,14) output(64,worse,49) output(64,worse,29) output(70,worse,29) output(47,worse,49) output(47,worse,29) output(48,worse,70) output(48,worse,29) output(24,worse,49) output(24,worse,29) output(10,eq,18) output(48,eq,51) output(13,eq,29)
Optimization: 20 14
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(12))),6) preference(1,(1,2),1,for(atom(hasCategory(1))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),7) preference(1,(1,6),1,for(atom(hasCategory(4))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),3) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasIngredient(9))),5) preference(1,(1,12),1,for(atom(hasIngredient(7))),5) preference(1,(1,13),1,for(atom(hasDifficulty(4))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,70) output(10,better,65) output(18,better,23) output(18,better,65) output(50,better,18) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,18) output(70,better,23) output(70,better,65) output(47,better,70) output(47,better,18) output(47,better,65) output(47,better,23) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,65) output(10,worse,29) output(10,worse,51) output(18,worse,51) output(50,worse,51) output(13,worse,51) output(14,worse,29) output(14,worse,51) output(70,worse,29) output(70,worse,51) output(47,worse,24) output(47,worse,49) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,51) output(24,worse,51) output(48,eq,70) output(13,eq,29)
Optimization: 19 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasIngredient(3))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasIngredient(12))),8) preference(1,(1,6),1,for(atom(hasDifficulty(4))),8) preference(1,(1,7),1,for(atom(hasPrepTime(3))),7) preference(1,(1,8),1,for(atom(hasCategory(1))),3) preference(1,(1,9),1,for(atom(hasIngredient(7))),4) preference(1,(1,10),1,for(atom(hasDifficulty(3))),4) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasCost(3))),6) preference(1,less(weight)) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,70) output(10,better,65) output(18,better,23) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,23) output(70,better,65) output(47,better,65) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,23) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,50) output(10,worse,14) output(10,worse,29) output(18,worse,51) output(14,worse,29) output(70,worse,29) output(70,worse,51) output(47,worse,24) output(47,worse,49) output(47,worse,29) output(47,worse,51) output(48,worse,29) output(48,worse,51) output(49,worse,29) output(24,worse,29) output(70,eq,18) output(47,eq,70) output(47,eq,18) output(10,eq,51)
Optimization: 19 13
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(1))),3) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(4))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),4) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasCost(4))),7) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasCost(3))),7) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,51) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,29) output(49,better,23) output(49,better,51) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,14) output(10,worse,48) output(51,worse,65) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(64,worse,47) output(64,worse,24) output(70,worse,18) output(70,worse,65) output(49,worse,18) output(49,worse,65) output(10,eq,50) output(70,eq,29) output(14,eq,48) output(18,eq,65) output(70,eq,23)
Optimization: 18 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasCost(3))),7) preference(1,(1,4),1,for(atom(hasDifficulty(3))),2) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasCost(4))),7) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasCategory(3))),7) preference(1,(1,11),1,for(atom(hasDifficulty(4))),6) preference(1,(1,12),1,for(atom(hasIngredient(9))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasCategory(4))),1) preference(1,less(weight)) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(13,better,18) output(13,better,23) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,51) output(70,better,23) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,14) output(10,worse,48) output(51,worse,65) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,48) output(64,worse,47) output(64,worse,24) output(64,worse,49) output(70,worse,18) output(70,worse,65) output(10,eq,50) output(47,eq,24) output(70,eq,29) output(24,eq,49) output(47,eq,49)
Optimization: 17 14
Answer: 18
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasIngredient(9))),8) preference(1,(1,3),1,for(atom(hasIngredient(12))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasCategory(1))),7) preference(1,(1,6),1,for(atom(hasCost(3))),6) preference(1,(1,7),1,for(atom(hasIngredient(7))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasDifficulty(3))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),6) preference(1,(1,12),1,for(atom(hasCost(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasDifficulty(4))),5) preference(1,less(weight)) output(10,better,50) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,23) output(13,better,51) output(13,better,65) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,51) output(70,better,23) output(70,better,65) output(47,better,29) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65) output(10,worse,14) output(13,worse,10) output(13,worse,14) output(13,worse,50) output(13,worse,18) output(13,worse,48) output(13,worse,70) output(47,worse,24) output(47,worse,49) output(24,worse,49) output(70,eq,18) output(10,eq,48) output(47,eq,70) output(64,eq,49) output(47,eq,18) output(13,eq,29)
Optimization: 16 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),5) preference(1,(1,5),1,for(atom(hasDifficulty(4))),1) preference(1,(1,6),1,for(atom(hasIngredient(3))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasCategory(4))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),8) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(4))),6) preference(1,(1,2),1,for(atom(hasCost(4))),1) preference(1,(1,3),1,for(atom(hasPrep(7))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),1) preference(1,(1,5),1,for(atom(hasIngredient(9))),7) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasCost(3))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasCost(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasCategory(4))),1) preference(1,less(weight)) output(10,better,50) output(10,better,14) output(10,better,48) output(10,better,18) output(10,better,23) output(10,better,29) output(10,better,70) output(10,better,51) output(10,better,65) output(18,better,23) output(18,better,51) output(18,better,65) output(50,better,18) output(50,better,51) output(50,better,23) output(50,better,65) output(51,better,65) output(13,better,10) output(13,better,14) output(13,better,50) output(13,better,18) output(13,better,23) output(13,better,48) output(13,better,70) output(13,better,51) output(13,better,65) output(13,better,29) output(14,better,48) output(14,better,70) output(14,better,23) output(14,better,29) output(14,better,18) output(14,better,51) output(14,better,65) output(64,better,47) output(64,better,24) output(64,better,70) output(64,better,49) output(64,better,65) output(64,better,51) output(64,better,18) output(64,better,29) output(64,better,23) output(70,better,29) output(70,better,18) output(70,better,51) output(70,better,23) output(70,better,65) output(47,better,24) output(47,better,49) output(47,better,70) output(47,better,29) output(47,better,18) output(47,better,65) output(47,better,51) output(47,better,23) output(48,better,70) output(48,better,18) output(48,better,29) output(48,better,23) output(48,better,51) output(48,better,65) output(49,better,70) output(49,better,18) output(49,better,29) output(49,better,23) output(49,better,51) output(49,better,65) output(24,better,49) output(24,better,70) output(24,better,23) output(24,better,29) output(24,better,18) output(24,better,51) output(24,better,65)
Optimization: 0 13
Progression : 0 [ 3;13] (Error: 3.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.056 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 298.057s (Solving: 294.52s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1178.986s
Threads      : 4        (Winner: 4)

Choices      : 7380315  (Domain: 148247)
Conflicts    : 3379710  (Analyzed: 3379707)
Restarts     : 3824     (Average: 883.81 Last: 292003)
Model-Level  : 193.7   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 3392882  (Deleted: 3172806)
  Binary     : 163      (Ratio:   0.00%)
  Ternary    : 1025     (Ratio:   0.03%)
  Conflict   : 3379707  (Average Length:  487.4 Ratio:  99.61%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 13175    (Average Length:   73.2 Ratio:   0.39%) 
  Distributed: 4428     (Ratio:   0.13% Average LBD: 3.62) 
  Integrated : 13284    (Ratio: 300.00% Unit: 30 Average Jumps: 29.47)
Backjumps    : 3379707  (Average:  1.87 Max: 824 Sum: 6329086)
  Executed   : 3379706  (Average:  1.87 Max: 824 Sum: 6329039 Ratio: 100.00%)
  Bounded    : 1        (Average: 47.00 Max:  47 Sum:     47 Ratio:   0.00%)

Rules        : 806381  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 17952   
Bodies       : 19354   
  Sum        : 150     
  Count      : 14      
Equivalences : 8475     (Atom=Atom: 763 Body=Body: 314 Other: 7398)
Tight        : Yes
Variables    : 17219    (Eliminated:    0 Frozen: 7895)
Constraints  : 824586   (Binary:  98.4% Ternary:   1.1% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(4)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(7)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(4)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(4)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasCategory(1)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCategory(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(4)) ; 
  1 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCategory(4)) 
}.
