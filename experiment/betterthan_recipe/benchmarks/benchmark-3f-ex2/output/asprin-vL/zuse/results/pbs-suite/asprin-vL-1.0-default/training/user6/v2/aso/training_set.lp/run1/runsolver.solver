asprin_vL version 1.0
Reading from stdin
-:1256:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1281:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1362:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1636:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1813:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2014:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2018:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2018:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2024:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2123:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2149:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2269:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2325:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1173:1-16: info: no atoms over signature occur in program:
  output/3

-:1165:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1167:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1168:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1198:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(51,better,78) output(72,better,23) output(76,better,42) output(32,better,37) output(76,better,41) output(18,better,42) output(90,better,78) output(76,better,90) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,78) output(4,better,78) output(42,worse,90) output(90,worse,51) output(42,worse,41) output(37,worse,72) output(37,worse,92) output(32,worse,72) output(4,worse,76) output(42,worse,51) output(18,worse,51) output(4,worse,51) output(31,eq,79) output(37,eq,23) output(4,eq,90) output(42,eq,78)
Optimization: 24 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(51,better,78) output(31,better,79) output(72,better,23) output(76,better,42) output(32,better,37) output(76,better,41) output(18,better,42) output(90,better,78) output(76,better,90) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,78) output(4,better,78) output(42,worse,90) output(90,worse,51) output(42,worse,41) output(37,worse,72) output(37,worse,92) output(32,worse,72) output(4,worse,76) output(42,worse,51) output(18,worse,51) output(4,worse,51) output(37,eq,23) output(4,eq,90) output(42,eq,78)
Optimization: 23 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(51,better,78) output(72,better,23) output(76,better,42) output(32,better,37) output(76,better,41) output(18,better,42) output(37,better,23) output(90,better,78) output(76,better,90) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,78) output(4,better,78) output(42,worse,90) output(90,worse,51) output(42,worse,41) output(37,worse,72) output(37,worse,92) output(32,worse,72) output(4,worse,76) output(42,worse,51) output(18,worse,51) output(4,worse,51) output(31,eq,79) output(4,eq,90)
Optimization: 22 6
Answer: 4
preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,aso) output(42,better,90) output(31,better,79) output(4,better,18) output(18,better,76) output(42,better,41) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(4,better,76) output(42,better,51) output(18,better,90) output(4,better,90) output(18,better,41) output(4,better,41) output(32,better,92) output(4,better,51) output(18,worse,7) output(90,worse,51) output(51,worse,78) output(72,worse,23) output(76,worse,42) output(18,worse,42) output(90,worse,78) output(76,worse,51) output(76,worse,78) output(18,worse,78) output(32,eq,37) output(76,eq,41) output(37,eq,23) output(76,eq,90) output(4,eq,7) output(18,eq,51) output(42,eq,78) output(32,eq,23) output(4,eq,42) output(4,eq,78)
Optimization: 20 3
Answer: 5
preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,aso) output(42,better,90) output(31,better,79) output(18,better,76) output(42,better,41) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(4,better,76) output(42,better,51) output(76,better,90) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(18,better,41) output(4,better,41) output(32,better,92) output(4,better,51) output(51,worse,78) output(72,worse,23) output(76,worse,42) output(90,worse,78) output(76,worse,78) output(18,eq,7) output(90,eq,51) output(4,eq,18) output(32,eq,37) output(76,eq,41) output(18,eq,42) output(37,eq,23) output(4,eq,7) output(42,eq,78) output(32,eq,23) output(4,eq,42) output(18,eq,78) output(4,eq,78)
Optimization: 18 3
Answer: 6
preference(1,(1,2),0,for(atom(hasDifficulty(3))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasPrep(5))),()) preference(1,aso) output(18,better,7) output(42,better,90) output(31,better,79) output(18,better,76) output(42,better,41) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(4,better,76) output(42,better,51) output(76,better,90) output(4,better,7) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(18,better,41) output(4,better,41) output(32,better,92) output(4,better,51) output(51,worse,78) output(72,worse,23) output(76,worse,42) output(90,worse,78) output(76,worse,78) output(90,eq,51) output(4,eq,18) output(32,eq,37) output(76,eq,41) output(18,eq,42) output(37,eq,23) output(42,eq,78) output(32,eq,23) output(4,eq,42) output(18,eq,78) output(4,eq,78)
Optimization: 16 3
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasCategory(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(90,better,51) output(31,better,79) output(72,better,23) output(4,better,18) output(76,better,42) output(42,better,41) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(37,better,23) output(42,better,51) output(76,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(32,better,92) output(4,better,51) output(18,worse,76) output(18,worse,42) output(4,worse,76) output(4,worse,42) output(32,eq,37)
Optimization: 15 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(51,better,78) output(31,better,79) output(76,better,42) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(37,better,23) output(76,better,90) output(18,better,90) output(4,better,90) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(90,worse,51) output(42,worse,51) output(18,eq,7) output(4,eq,18) output(18,eq,76) output(42,eq,41) output(4,eq,76) output(4,eq,7) output(76,eq,51) output(18,eq,51) output(4,eq,51)
Optimization: 14 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(2))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(4,better,18) output(42,better,41) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(4,better,76) output(37,better,23) output(76,better,90) output(4,better,7) output(4,better,90) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(18,worse,7) output(90,worse,51) output(18,worse,76) output(32,worse,37) output(18,worse,42) output(18,worse,51) output(76,eq,42) output(42,eq,51) output(76,eq,51)
Optimization: 13 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasPrepTime(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(4,better,18) output(76,better,42) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(37,better,23) output(76,better,90) output(4,better,7) output(4,better,90) output(76,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(18,worse,7) output(90,worse,51) output(18,worse,76) output(18,worse,42) output(18,worse,51) output(18,worse,41) output(42,eq,41) output(42,eq,51)
Optimization: 12 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(4,better,18) output(76,better,42) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(37,better,23) output(76,better,90) output(4,better,7) output(4,better,90) output(76,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(18,worse,7) output(90,worse,51) output(18,worse,76) output(18,worse,42) output(18,worse,51) output(42,eq,51)
Optimization: 11 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(76,better,42) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(37,better,23) output(42,better,51) output(76,better,90) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(18,worse,7) output(4,worse,7) output(4,eq,18) output(42,eq,41)
Optimization: 10 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(76,better,42) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(37,better,23) output(42,better,51) output(76,better,90) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18) output(42,eq,41)
Optimization: 9 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(76,better,42) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(37,better,23) output(42,better,51) output(76,better,90) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18)
Optimization: 8 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(42,better,90) output(51,better,78) output(31,better,79) output(18,better,76) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(4,better,76) output(37,better,23) output(42,better,51) output(76,better,90) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18) output(76,eq,42)
Optimization: 7 6
Progression : [1;7] (Error: 6)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasCost(3))),()) preference(1,(1,1),3,for(atom(hasPrep(6))),()) preference(1,(1,5),3,for(atom(hasIngredient(6))),()) preference(1,(1,6),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(18,better,7) output(42,better,90) output(90,better,51) output(51,better,78) output(31,better,79) output(72,better,23) output(18,better,76) output(76,better,42) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(4,better,76) output(37,better,23) output(90,better,78) output(42,better,51) output(76,better,90) output(4,better,7) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,1),3,for(atom(hasCategory(4))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(18,better,7) output(42,better,90) output(90,better,51) output(51,better,78) output(31,better,79) output(72,better,23) output(18,better,76) output(76,better,42) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(4,better,76) output(37,better,23) output(90,better,78) output(42,better,51) output(76,better,90) output(4,better,7) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18)
Optimization: 1 5
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(18,better,7) output(42,better,90) output(90,better,51) output(51,better,78) output(31,better,79) output(72,better,23) output(18,better,76) output(76,better,42) output(42,better,41) output(32,better,37) output(37,better,72) output(72,better,92) output(37,better,92) output(32,better,72) output(76,better,41) output(18,better,42) output(4,better,76) output(37,better,23) output(90,better,78) output(42,better,51) output(76,better,90) output(4,better,7) output(18,better,90) output(4,better,90) output(76,better,51) output(18,better,51) output(42,better,78) output(76,better,78) output(32,better,23) output(4,better,42) output(18,better,41) output(4,better,41) output(32,better,92) output(18,better,78) output(4,better,78) output(4,better,51) output(4,eq,18)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 18
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 19.973s (Solving: 11.94s 1st Model: 0.46s Unsat: 6.53s)
CPU Time     : 55.562s
Threads      : 4        (Winner: 1)

Choices      : 214776   (Domain: 2965)
Conflicts    : 43079    (Analyzed: 43073)
Restarts     : 69       (Average: 624.25 Last: 4245)
Model-Level  : 652.4   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 70712    (Deleted: 15717)
  Binary     : 2710     (Ratio:   3.83%)
  Ternary    : 8050     (Ratio:  11.38%)
  Conflict   : 43072    (Average Length:  167.0 Ratio:  60.91%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 27640    (Average Length:   61.5 Ratio:  39.09%) 
  Distributed: 9243     (Ratio:  21.46% Average LBD: 3.09) 
  Integrated : 27726    (Ratio: 299.97% Unit: 168 Average Jumps: 65.73)
Backjumps    : 43073    (Average:  4.35 Max: 977 Sum: 187297)
  Executed   : 43049    (Average:  4.34 Max: 977 Sum: 186798 Ratio:  99.73%)
  Bounded    : 24       (Average: 20.79 Max:  36 Sum:    499 Ratio:   0.27%)

Rules        : 3571131 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 593822  
Bodies       : 731620  
  Count      : 1356    
Equivalences : 1804611  (Atom=Atom: 531391 Body=Body: 578924 Other: 694296)
Tight        : Yes
Variables    : 100367   (Eliminated:    0 Frozen: 35099)
Constraints  : 3134096  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(2)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasPrep(5))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(1))  >> not atom(hasDifficulty(4))  || atom(hasDifficulty(3)) ; 
  atom(hasPrep(1)) >> atom(hasCategory(1)) >> not atom(hasIngredient(12))  || not atom(hasPrep(1))  ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(3))  >> not atom(hasCost(5))  || atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(1))  >> not atom(hasDifficulty(4))  || atom(hasDifficulty(3)) ; 
  atom(hasPrep(1)) >> atom(hasPrep(5)) >> not atom(hasCost(5))  || not atom(hasIngredient(12))  ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(3))  >> not atom(hasCost(5))  || atom(hasIngredient(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(1))  >> not atom(hasDifficulty(4))  || atom(hasDifficulty(3)) ; 
  atom(hasPrep(7)) >> atom(hasPrep(5)) >> not atom(hasPrep(1))  || not atom(hasIngredient(12))  ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(3))  >> not atom(hasCost(5))  || atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasPrep(0))  >> atom(hasPrep(6)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(5)) >> atom(hasCategory(4)) >> not atom(hasCost(3))  || not atom(hasPrep(7))  ; 
  atom(hasPrep(5)) >> atom(hasIngredient(6)) >> not atom(hasPrep(1))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(4)) >> not atom(hasPrep(2))  >> atom(hasCost(2)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(10)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasCategory(4)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasCategory(5)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasCost(5)) >> atom(hasPrep(7)) >> atom(hasPrep(3)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(8)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(12))  >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasCategory(4)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(1)) >> not atom(hasIngredient(12))  >> atom(hasPrepTime(3)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(1)) >> not atom(hasIngredient(12))  >> not atom(hasPrepTime(2))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> atom(hasCategory(5)) >> not atom(hasIngredient(11))  || not atom(hasIngredient(10))  ; 
  atom(hasCategory(4)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(1)) >> atom(hasCategory(5)) >> not atom(hasIngredient(11))  || not atom(hasIngredient(10))  ; 
  atom(hasCategory(4)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(1)) >> atom(hasCategory(5)) >> not atom(hasIngredient(11))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(3)) >> atom(hasCategory(3)) || not atom(hasPrep(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(7)) >> atom(hasPrep(2)) || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(8)) >> not atom(hasIngredient(11))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(3)) >> atom(hasPrepTime(2)) || not atom(hasPrep(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasCost(3)) >> atom(hasPrep(6)) || not atom(hasIngredient(7))  ; 
  atom(hasCategory(5)) >> not atom(hasIngredient(12))  >> not atom(hasDifficulty(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasCost(3)) >> atom(hasPrepTime(2)) >> not atom(hasPrep(5))  || not atom(hasPrep(0))  ; 
  atom(hasIngredient(12)) >> atom(hasCost(3)) >> atom(hasIngredient(6)) || not atom(hasCost(3))  ; 
  atom(hasDifficulty(1)) >> atom(hasDifficulty(2)) >> not atom(hasDifficulty(2))  ; 
  atom(hasCost(1)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> atom(hasCategory(4)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(5)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(4)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasCost(1))  ; 
  atom(hasPrep(1)) >> atom(hasPrepTime(2)) >> not atom(hasPrep(0))  || not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(4))  ; 
  atom(hasPrep(1)) >> not atom(hasDifficulty(2))  >> atom(hasCategory(3)) || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(6)) >> not atom(hasIngredient(12))  >> atom(hasDifficulty(3)) || not atom(hasCost(1))  ; 
  atom(hasPrep(1)) >> not atom(hasIngredient(12))  >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  
}.
