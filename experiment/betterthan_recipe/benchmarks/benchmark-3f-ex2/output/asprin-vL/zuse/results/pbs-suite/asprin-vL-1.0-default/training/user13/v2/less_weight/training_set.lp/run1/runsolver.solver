asprin_vL version 1.0
Reading from stdin
-:1236:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1246:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1261:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1342:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1603:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1616:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1793:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1922:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1994:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1998:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1998:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2004:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2103:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2129:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2249:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2283:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2305:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1153:1-16: info: no atoms over signature occur in program:
  output/3

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(26,eq,28) output(28,eq,98) output(52,eq,41) output(96,eq,8) output(8,eq,20) output(20,eq,46) output(7,eq,2) output(2,eq,3) output(3,eq,74) output(74,eq,86) output(86,eq,28) output(28,eq,76) output(79,eq,20) output(26,eq,76) output(86,eq,76) output(74,eq,28) output(3,eq,86) output(2,eq,74) output(7,eq,3) output(8,eq,46) output(79,eq,46) output(96,eq,20) output(26,eq,98) output(86,eq,98) output(74,eq,98) output(3,eq,98) output(96,eq,46) output(7,eq,74) output(2,eq,86) output(7,eq,86) output(3,eq,28) output(2,eq,28) output(74,eq,76) output(3,eq,76) output(2,eq,76) output(7,eq,76) output(7,eq,28) output(2,eq,98) output(7,eq,98)
Optimization: 39 0
Answer: 2
preference(1,(1,1),1,for(atom(hasDifficulty(2))),7) preference(1,(1,2),1,for(atom(hasIngredient(7))),7) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCost(3))),3) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasCategory(4))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(8,better,46) output(2,better,3) output(2,better,28) output(79,better,46) output(20,better,46) output(52,better,41) output(74,better,28) output(86,better,28) output(86,better,98) output(26,worse,28) output(26,worse,76) output(26,worse,98) output(8,worse,20) output(2,worse,86) output(2,worse,76) output(3,worse,74) output(3,worse,86) output(3,worse,98) output(3,worse,28) output(3,worse,76) output(28,worse,98) output(28,worse,76) output(79,worse,20) output(96,worse,8) output(96,worse,20) output(96,worse,46) output(7,worse,2) output(7,worse,3) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(7,worse,28) output(7,worse,98) output(74,worse,86) output(74,worse,76) output(86,eq,76) output(2,eq,74) output(74,eq,98) output(2,eq,98)
Optimization: 30 12
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(26,better,28) output(8,better,46) output(2,better,3) output(2,better,28) output(79,better,46) output(96,better,46) output(7,better,3) output(7,better,28) output(20,better,46) output(74,better,28) output(86,better,28) output(3,worse,74) output(3,worse,86) output(3,worse,98) output(3,worse,76) output(28,worse,98) output(28,worse,76) output(52,eq,41) output(96,eq,8) output(8,eq,20) output(7,eq,2) output(74,eq,86) output(79,eq,20) output(26,eq,76) output(86,eq,76) output(2,eq,74) output(96,eq,20) output(26,eq,98) output(86,eq,98) output(74,eq,98) output(7,eq,74) output(2,eq,86) output(7,eq,86) output(3,eq,28) output(74,eq,76) output(2,eq,76) output(7,eq,76) output(2,eq,98) output(7,eq,98)
Optimization: 28 14
Answer: 4
preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(8,better,46) output(2,better,28) output(2,better,76) output(3,better,28) output(3,better,76) output(79,better,46) output(96,better,46) output(20,better,46) output(74,better,28) output(74,better,76) output(86,better,28) output(86,better,76) output(26,worse,98) output(28,worse,98) output(7,worse,2) output(7,worse,3) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(26,eq,28) output(52,eq,41) output(96,eq,8) output(8,eq,20) output(2,eq,3) output(3,eq,74) output(74,eq,86) output(28,eq,76) output(79,eq,20) output(26,eq,76) output(3,eq,86) output(2,eq,74) output(96,eq,20) output(86,eq,98) output(74,eq,98) output(3,eq,98) output(2,eq,86) output(7,eq,76) output(7,eq,28) output(2,eq,98)
Optimization: 27 3
Answer: 5
preference(1,(1,2),1,for(atom(hasCategory(5))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(8,better,46) output(2,better,28) output(2,better,76) output(2,better,98) output(3,better,98) output(3,better,28) output(3,better,76) output(79,better,46) output(96,better,46) output(7,better,76) output(7,better,28) output(7,better,98) output(20,better,46) output(74,better,28) output(74,better,98) output(74,better,76) output(86,better,28) output(86,better,76) output(86,better,98) output(26,eq,28) output(28,eq,98) output(52,eq,41) output(96,eq,8) output(8,eq,20) output(7,eq,2) output(2,eq,3) output(3,eq,74) output(74,eq,86) output(28,eq,76) output(79,eq,20) output(26,eq,76) output(3,eq,86) output(2,eq,74) output(7,eq,3) output(96,eq,20) output(26,eq,98) output(7,eq,74) output(2,eq,86) output(7,eq,86)
Optimization: 20 3
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(12))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasCategory(2))),3) preference(1,(1,11),1,for(atom(hasCategory(5))),7) preference(1,(1,12),1,for(atom(hasCategory(4))),5) preference(1,(1,13),1,for(atom(hasIngredient(7))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(26,better,28) output(26,better,76) output(26,better,98) output(8,better,20) output(8,better,46) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,28) output(2,better,76) output(2,better,98) output(3,better,74) output(3,better,86) output(3,better,98) output(3,better,28) output(3,better,76) output(28,better,98) output(28,better,76) output(79,better,20) output(79,better,46) output(96,better,8) output(96,better,20) output(96,better,46) output(7,better,2) output(7,better,3) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,28) output(7,better,98) output(20,better,46) output(52,better,41) output(74,better,86) output(74,better,28) output(74,better,98) output(74,better,76) output(86,better,28) output(86,better,76) output(86,better,98)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasDifficulty(3))),2) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,9),1,for(atom(hasIngredient(10))),2) preference(1,(1,10),1,for(atom(hasIngredient(4))),8) preference(1,(1,11),1,for(atom(hasCategory(3))),1) preference(1,(1,12),1,for(atom(hasCost(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasCategory(4))),4) preference(1,less(weight)) output(26,better,28) output(26,better,76) output(26,better,98) output(8,better,20) output(8,better,46) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,28) output(2,better,76) output(2,better,98) output(3,better,74) output(3,better,86) output(3,better,98) output(3,better,28) output(3,better,76) output(28,better,98) output(28,better,76) output(79,better,20) output(79,better,46) output(96,better,8) output(96,better,20) output(96,better,46) output(7,better,2) output(7,better,3) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,28) output(7,better,98) output(20,better,46) output(52,better,41) output(74,better,86) output(74,better,28) output(74,better,98) output(74,better,76) output(86,better,28) output(86,better,76) output(86,better,98)
Optimization: 0 12
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),4) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),6) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),2) preference(1,(1,10),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(26,better,28) output(26,better,76) output(26,better,98) output(8,better,20) output(8,better,46) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,28) output(2,better,76) output(2,better,98) output(3,better,74) output(3,better,86) output(3,better,98) output(3,better,28) output(3,better,76) output(28,better,98) output(28,better,76) output(79,better,20) output(79,better,46) output(96,better,8) output(96,better,20) output(96,better,46) output(7,better,2) output(7,better,3) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,28) output(7,better,98) output(20,better,46) output(52,better,41) output(74,better,86) output(74,better,28) output(74,better,98) output(74,better,76) output(86,better,28) output(86,better,76) output(86,better,98)
Optimization: 0 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasCategory(4))),4) preference(1,(1,7),1,for(atom(hasCategory(5))),8) preference(1,(1,8),1,for(atom(hasIngredient(12))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),6) preference(1,(1,11),1,for(atom(hasDifficulty(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(26,better,28) output(26,better,76) output(26,better,98) output(8,better,20) output(8,better,46) output(2,better,3) output(2,better,74) output(2,better,86) output(2,better,28) output(2,better,76) output(2,better,98) output(3,better,74) output(3,better,86) output(3,better,98) output(3,better,28) output(3,better,76) output(28,better,98) output(28,better,76) output(79,better,20) output(79,better,46) output(96,better,8) output(96,better,20) output(96,better,46) output(7,better,2) output(7,better,3) output(7,better,74) output(7,better,86) output(7,better,76) output(7,better,28) output(7,better,98) output(20,better,46) output(52,better,41) output(74,better,86) output(74,better,28) output(74,better,98) output(74,better,76) output(86,better,28) output(86,better,76) output(86,better,98)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.073 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 598.269s (Solving: 595.74s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2385.050s
Threads      : 4        (Winner: 4)

Choices      : 12284591 (Domain: 609524)
Conflicts    : 8170221  (Analyzed: 8170218)
Restarts     : 6663     (Average: 1226.21 Last: 319785)
Model-Level  : 122.2   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 8192864  (Deleted: 7901587)
  Binary     : 733      (Ratio:   0.01%)
  Ternary    : 2140     (Ratio:   0.03%)
  Conflict   : 8170218  (Average Length:  422.1 Ratio:  99.72%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 22646    (Average Length:   49.2 Ratio:   0.28%) 
  Distributed: 7571     (Ratio:   0.09% Average LBD: 3.62) 
  Integrated : 22713    (Ratio: 300.00% Unit: 20 Average Jumps: 7.20)
Backjumps    : 8170218  (Average:  1.43 Max: 575 Sum: 11674824)
  Executed   : 8170217  (Average:  1.43 Max: 575 Sum: 11674787 Ratio: 100.00%)
  Bounded    : 1        (Average: 37.00 Max:  37 Sum:     37 Ratio:   0.00%)

Rules        : 466329  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14432   
Bodies       : 18958   
  Sum        : 78      
  Count      : 14      
Equivalences : 7215     (Atom=Atom: 403 Body=Body: 170 Other: 6642)
Tight        : Yes
Variables    : 17083    (Eliminated:    0 Frozen: 7759)
Constraints  : 487818   (Binary:  97.3% Ternary:   1.9% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCategory(2)) ; 
  7 :: atom(hasCategory(5)) ; 
  5 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(5)) 
}.
