asprin_vL version 1.0
Reading from stdin
-:1326:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1336:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1351:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1432:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1693:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1706:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1883:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2012:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2084:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2088:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2088:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2094:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2193:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2219:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2339:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2373:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2395:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1243:1-16: info: no atoms over signature occur in program:
  output/3

-:1235:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1236:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,32) output(32,eq,98) output(48,eq,31) output(31,eq,46) output(60,eq,23) output(23,eq,79) output(79,eq,41) output(98,eq,48) output(46,eq,60) output(2,eq,3) output(3,eq,20) output(7,eq,74) output(86,eq,76) output(76,eq,48) output(48,eq,79) output(79,eq,28) output(20,eq,7) output(74,eq,86) output(7,eq,86) output(3,eq,7) output(23,eq,28) output(48,eq,28) output(98,eq,79) output(76,eq,79) output(86,eq,48) output(74,eq,76) output(20,eq,74) output(2,eq,20) output(31,eq,60) output(32,eq,48) output(23,eq,41) output(48,eq,41) output(60,eq,79) output(46,eq,23) output(48,eq,46) output(98,eq,31) output(76,eq,31) output(7,eq,98) output(20,eq,32) output(3,eq,32) output(2,eq,32) output(20,eq,98) output(3,eq,98) output(86,eq,31) output(74,eq,31) output(32,eq,31) output(7,eq,31) output(98,eq,46) output(76,eq,46) output(86,eq,46) output(32,eq,46) output(31,eq,23) output(48,eq,23) output(46,eq,79) output(31,eq,79) output(98,eq,41) output(76,eq,41) output(86,eq,41) output(32,eq,41) output(60,eq,41) output(46,eq,41) output(7,eq,48) output(20,eq,48) output(48,eq,60) output(98,eq,60) output(76,eq,60) output(3,eq,74) output(2,eq,74) output(7,eq,76) output(20,eq,76) output(74,eq,48) output(86,eq,79) output(74,eq,79) output(32,eq,79) output(7,eq,79) output(98,eq,28) output(76,eq,28) output(86,eq,28) output(32,eq,28) output(60,eq,28) output(46,eq,28) output(2,eq,7) output(20,eq,86) output(3,eq,86) output(2,eq,86) output(31,eq,28) output(7,eq,28) output(20,eq,28) output(3,eq,28) output(2,eq,28) output(74,eq,28) output(20,eq,79) output(3,eq,79) output(2,eq,79) output(3,eq,48) output(2,eq,48) output(3,eq,76) output(2,eq,76) output(86,eq,60) output(74,eq,60) output(7,eq,60) output(20,eq,60) output(32,eq,60) output(3,eq,60) output(31,eq,41) output(7,eq,41) output(20,eq,41) output(3,eq,41) output(2,eq,41) output(74,eq,41) output(98,eq,23) output(76,eq,23) output(86,eq,23) output(32,eq,23) output(7,eq,23) output(20,eq,23) output(74,eq,23) output(7,eq,46) output(20,eq,46) output(3,eq,46) output(2,eq,46) output(74,eq,46) output(20,eq,31) output(3,eq,31) output(2,eq,31) output(2,eq,98) output(3,eq,23) output(2,eq,23) output(2,eq,60)
Optimization: 129 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),7) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasCategory(4))),7) preference(1,(1,6),1,for(atom(hasIngredient(6))),3) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),6) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(60,better,79) output(60,better,41) output(60,better,28) output(2,better,3) output(2,better,7) output(2,better,86) output(2,better,76) output(2,better,31) output(2,better,98) output(98,better,31) output(7,better,86) output(7,better,31) output(7,better,76) output(20,better,7) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,76) output(20,better,86) output(20,better,28) output(20,better,79) output(20,better,41) output(20,better,46) output(20,better,31) output(23,better,79) output(23,better,28) output(23,better,41) output(32,better,98) output(32,better,31) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,46) output(74,better,86) output(74,better,76) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(74,better,23) output(74,better,46) output(46,worse,60) output(46,worse,23) output(2,worse,20) output(2,worse,74) output(2,worse,48) output(2,worse,23) output(2,worse,60) output(3,worse,20) output(3,worse,7) output(3,worse,32) output(3,worse,98) output(3,worse,74) output(3,worse,28) output(3,worse,79) output(3,worse,48) output(3,worse,60) output(3,worse,41) output(3,worse,46) output(3,worse,31) output(3,worse,23) output(31,worse,46) output(31,worse,60) output(31,worse,23) output(31,worse,79) output(31,worse,28) output(31,worse,41) output(98,worse,48) output(98,worse,79) output(98,worse,46) output(98,worse,41) output(98,worse,60) output(98,worse,28) output(98,worse,23) output(7,worse,32) output(7,worse,74) output(7,worse,48) output(7,worse,79) output(7,worse,28) output(7,worse,60) output(7,worse,41) output(7,worse,23) output(7,worse,46) output(20,worse,74) output(32,worse,48) output(32,worse,60) output(32,worse,23) output(48,worse,23) output(48,worse,60) output(86,worse,48) output(86,worse,31) output(86,worse,46) output(86,worse,41) output(86,worse,79) output(86,worse,28) output(86,worse,60) output(86,worse,23) output(76,worse,48) output(76,worse,79) output(76,worse,31) output(76,worse,46) output(76,worse,41) output(76,worse,60) output(76,worse,28) output(76,worse,23) output(60,eq,23) output(79,eq,41) output(86,eq,76) output(79,eq,28) output(7,eq,98) output(2,eq,32) output(32,eq,46) output(46,eq,79) output(32,eq,41) output(46,eq,41) output(32,eq,79) output(32,eq,28) output(46,eq,28) output(3,eq,86) output(2,eq,28) output(2,eq,79) output(3,eq,76) output(20,eq,60) output(2,eq,41) output(20,eq,23) output(2,eq,46)
Optimization: 85 14
Answer: 3
preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasPrep(4))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(2,better,3) output(2,better,28) output(2,better,48) output(2,better,46) output(2,better,23) output(2,better,60) output(31,better,46) output(31,better,60) output(31,better,23) output(31,better,28) output(79,better,28) output(98,better,48) output(98,better,46) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,48) output(7,better,28) output(7,better,60) output(7,better,23) output(7,better,46) output(20,better,48) output(20,better,28) output(20,better,60) output(20,better,23) output(20,better,46) output(32,better,48) output(32,better,46) output(32,better,28) output(32,better,60) output(32,better,23) output(74,better,48) output(74,better,28) output(74,better,60) output(74,better,23) output(74,better,46) output(86,better,48) output(86,better,46) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,46) output(76,better,60) output(76,better,28) output(76,better,23) output(46,worse,79) output(46,worse,41) output(60,worse,79) output(60,worse,41) output(3,worse,20) output(3,worse,7) output(3,worse,32) output(3,worse,98) output(3,worse,74) output(3,worse,86) output(3,worse,79) output(3,worse,76) output(3,worse,41) output(3,worse,31) output(23,worse,79) output(23,worse,41) output(48,worse,31) output(48,worse,79) output(48,worse,41) output(7,eq,32) output(32,eq,98) output(60,eq,23) output(79,eq,41) output(46,eq,60) output(7,eq,74) output(86,eq,76) output(20,eq,7) output(74,eq,86) output(7,eq,86) output(23,eq,28) output(48,eq,28) output(98,eq,79) output(76,eq,79) output(74,eq,76) output(20,eq,74) output(2,eq,20) output(46,eq,23) output(48,eq,46) output(98,eq,31) output(76,eq,31) output(7,eq,98) output(20,eq,32) output(2,eq,32) output(20,eq,98) output(86,eq,31) output(74,eq,31) output(32,eq,31) output(7,eq,31) output(48,eq,23) output(31,eq,79) output(98,eq,41) output(76,eq,41) output(86,eq,41) output(32,eq,41) output(48,eq,60) output(2,eq,74) output(7,eq,76) output(20,eq,76) output(86,eq,79) output(74,eq,79) output(32,eq,79) output(7,eq,79) output(60,eq,28) output(46,eq,28) output(2,eq,7) output(20,eq,86) output(2,eq,86) output(3,eq,28) output(20,eq,79) output(2,eq,79) output(3,eq,48) output(2,eq,76) output(3,eq,60) output(31,eq,41) output(7,eq,41) output(20,eq,41) output(2,eq,41) output(74,eq,41) output(3,eq,46) output(20,eq,31) output(2,eq,31) output(2,eq,98) output(3,eq,23)
Optimization: 83 3
Progression : [ 1;83] (Error: 82)
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasDifficulty(3))),8) preference(1,(1,14),1,for(atom(hasCategory(1))),8) preference(1,less(weight)) output(2,better,74) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,46) output(2,better,31) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,60) output(3,better,46) output(3,better,31) output(3,better,23) output(98,better,79) output(98,better,31) output(98,better,46) output(98,better,60) output(98,better,28) output(98,better,23) output(20,better,7) output(20,better,74) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,23) output(20,better,46) output(20,better,31) output(32,better,31) output(32,better,46) output(32,better,79) output(32,better,28) output(32,better,60) output(32,better,23) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,46) output(48,better,23) output(48,better,60) output(86,better,31) output(86,better,46) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,79) output(76,better,31) output(76,better,46) output(76,better,60) output(76,better,28) output(76,better,23) output(46,worse,41) output(60,worse,41) output(31,worse,41) output(79,worse,41) output(7,worse,32) output(7,worse,86) output(7,worse,98) output(7,worse,48) output(7,worse,76) output(7,worse,41) output(23,worse,41) output(74,worse,86) output(74,worse,76) output(74,worse,48) output(74,worse,41) output(32,eq,98) output(31,eq,46) output(60,eq,23) output(23,eq,79) output(98,eq,48) output(46,eq,60) output(2,eq,3) output(3,eq,20) output(7,eq,74) output(86,eq,76) output(76,eq,48) output(79,eq,28) output(23,eq,28) output(86,eq,48) output(2,eq,20) output(31,eq,60) output(32,eq,48) output(48,eq,41) output(60,eq,79) output(46,eq,23) output(20,eq,32) output(3,eq,32) output(2,eq,32) output(20,eq,98) output(3,eq,98) output(74,eq,31) output(7,eq,31) output(31,eq,23) output(46,eq,79) output(31,eq,79) output(98,eq,41) output(76,eq,41) output(86,eq,41) output(32,eq,41) output(20,eq,48) output(20,eq,76) output(74,eq,79) output(7,eq,79) output(60,eq,28) output(46,eq,28) output(20,eq,86) output(3,eq,86) output(2,eq,86) output(31,eq,28) output(7,eq,28) output(74,eq,28) output(3,eq,48) output(2,eq,48) output(3,eq,76) output(2,eq,76) output(74,eq,60) output(7,eq,60) output(20,eq,41) output(3,eq,41) output(2,eq,41) output(7,eq,23) output(74,eq,23) output(7,eq,46) output(74,eq,46) output(2,eq,98)
Optimization: 75 4
Answer: 5
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,3),1,for(atom(hasCategory(4))),7) preference(1,(1,4),1,for(atom(hasPrep(0))),7) preference(1,(1,5),1,for(atom(hasIngredient(3))),4) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(9))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),8) preference(1,less(weight)) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,86) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,46) output(2,better,31) output(2,better,23) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,74) output(3,better,86) output(3,better,79) output(3,better,48) output(3,better,76) output(3,better,60) output(3,better,46) output(3,better,31) output(3,better,23) output(31,better,46) output(31,better,60) output(31,better,23) output(98,better,48) output(98,better,79) output(98,better,31) output(98,better,46) output(98,better,60) output(98,better,23) output(7,better,48) output(7,better,46) output(20,better,7) output(20,better,74) output(20,better,48) output(20,better,76) output(20,better,86) output(20,better,60) output(20,better,23) output(20,better,46) output(32,better,48) output(32,better,46) output(32,better,60) output(32,better,23) output(48,better,46) output(74,better,48) output(74,better,46) output(86,better,48) output(86,better,46) output(86,better,60) output(76,better,48) output(76,better,46) output(76,better,60) output(46,worse,60) output(46,worse,23) output(46,worse,79) output(46,worse,41) output(46,worse,28) output(60,worse,23) output(60,worse,79) output(60,worse,41) output(60,worse,28) output(2,worse,28) output(3,worse,98) output(3,worse,28) output(3,worse,41) output(31,worse,28) output(31,worse,41) output(79,worse,41) output(79,worse,28) output(98,worse,28) output(7,worse,32) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(7,worse,31) output(7,worse,76) output(7,worse,79) output(7,worse,28) output(7,worse,60) output(7,worse,41) output(7,worse,23) output(20,worse,98) output(20,worse,28) output(20,worse,41) output(23,worse,79) output(23,worse,28) output(23,worse,41) output(32,worse,98) output(32,worse,41) output(32,worse,28) output(48,worse,31) output(48,worse,79) output(48,worse,28) output(48,worse,41) output(48,worse,23) output(48,worse,60) output(74,worse,86) output(74,worse,76) output(74,worse,31) output(74,worse,79) output(74,worse,28) output(74,worse,41) output(74,worse,23) output(86,worse,31) output(86,worse,41) output(86,worse,79) output(86,worse,28) output(76,worse,79) output(76,worse,31) output(76,worse,41) output(76,worse,28) output(86,eq,76) output(20,eq,32) output(32,eq,31) output(31,eq,79) output(98,eq,41) output(32,eq,79) output(20,eq,79) output(74,eq,60) output(2,eq,41) output(76,eq,23) output(86,eq,23) output(20,eq,31) output(2,eq,98)
Optimization: 72 13
Progression : [ 2;72] (Error: 35)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasIngredient(3))),8) preference(1,(1,3),1,for(atom(hasCategory(4))),6) preference(1,(1,4),1,for(atom(hasCost(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasCategory(1))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),8) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasIngredient(12))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),8) preference(1,less(weight)) output(60,better,23) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,86) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,41) output(2,better,46) output(2,better,31) output(2,better,23) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,74) output(3,better,86) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,41) output(3,better,46) output(3,better,31) output(3,better,23) output(31,better,46) output(31,better,60) output(31,better,23) output(79,better,41) output(98,better,48) output(98,better,79) output(98,better,31) output(98,better,46) output(98,better,41) output(98,better,60) output(98,better,23) output(7,better,32) output(7,better,46) output(20,better,46) output(32,better,46) output(48,better,46) output(74,better,48) output(74,better,23) output(74,better,46) output(86,better,48) output(86,better,31) output(86,better,46) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,46) output(76,better,41) output(76,better,60) output(76,better,23) output(46,worse,60) output(46,worse,23) output(46,worse,79) output(46,worse,41) output(46,worse,28) output(60,worse,79) output(60,worse,41) output(60,worse,28) output(2,worse,28) output(3,worse,98) output(3,worse,28) output(3,worse,76) output(31,worse,79) output(31,worse,28) output(31,worse,41) output(79,worse,28) output(98,worse,28) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(7,worse,31) output(7,worse,48) output(7,worse,76) output(7,worse,79) output(7,worse,28) output(7,worse,60) output(7,worse,41) output(7,worse,23) output(20,worse,7) output(20,worse,74) output(20,worse,98) output(20,worse,48) output(20,worse,76) output(20,worse,86) output(20,worse,28) output(20,worse,79) output(20,worse,60) output(20,worse,41) output(20,worse,23) output(20,worse,31) output(23,worse,79) output(23,worse,28) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,41) output(32,worse,79) output(32,worse,28) output(32,worse,60) output(32,worse,23) output(48,worse,31) output(48,worse,79) output(48,worse,28) output(48,worse,41) output(48,worse,60) output(74,worse,86) output(74,worse,76) output(74,worse,31) output(74,worse,79) output(74,worse,28) output(74,worse,41) output(86,worse,76) output(86,worse,41) output(86,worse,79) output(86,worse,28) output(76,worse,28) output(20,eq,32) output(48,eq,23) output(74,eq,60) output(2,eq,98)
Optimization: 71 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),4) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(3))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),7) preference(1,(1,11),1,for(atom(hasIngredient(12))),8) preference(1,(1,12),1,for(atom(hasIngredient(7))),3) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasCost(3))),4) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,28) output(60,better,23) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,86) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,46) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,48) output(3,better,76) output(3,better,60) output(3,better,46) output(3,better,23) output(31,better,46) output(31,better,60) output(31,better,23) output(31,better,28) output(79,better,28) output(98,better,48) output(98,better,60) output(98,better,23) output(7,better,48) output(7,better,23) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,60) output(20,better,23) output(32,better,48) output(32,better,60) output(32,better,23) output(74,better,48) output(74,better,23) output(86,better,48) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,60) output(76,better,28) output(76,better,23) output(46,worse,79) output(46,worse,41) output(60,worse,79) output(60,worse,41) output(60,worse,28) output(3,worse,41) output(31,worse,41) output(79,worse,41) output(98,worse,79) output(98,worse,31) output(98,worse,46) output(98,worse,41) output(7,worse,32) output(7,worse,86) output(7,worse,98) output(7,worse,31) output(7,worse,76) output(7,worse,79) output(7,worse,28) output(7,worse,41) output(7,worse,46) output(20,worse,79) output(20,worse,41) output(20,worse,46) output(20,worse,31) output(23,worse,79) output(23,worse,28) output(23,worse,41) output(32,worse,31) output(32,worse,46) output(32,worse,41) output(32,worse,79) output(48,worse,31) output(48,worse,79) output(48,worse,28) output(48,worse,41) output(48,worse,46) output(48,worse,60) output(74,worse,86) output(74,worse,76) output(74,worse,31) output(74,worse,79) output(74,worse,28) output(74,worse,41) output(74,worse,46) output(86,worse,31) output(86,worse,46) output(86,worse,41) output(86,worse,79) output(76,worse,79) output(76,worse,31) output(76,worse,46) output(76,worse,41) output(32,eq,98) output(7,eq,74) output(86,eq,76) output(48,eq,23) output(31,eq,79) output(20,eq,76) output(98,eq,28) output(32,eq,28) output(20,eq,86) output(3,eq,79) output(74,eq,60) output(7,eq,60) output(2,eq,41) output(3,eq,31)
Optimization: 67 14
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(12))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasCategory(4))),7) preference(1,(1,5),1,for(atom(hasCost(3))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(46,better,23) output(46,better,41) output(46,better,28) output(60,better,23) output(60,better,41) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,86) output(2,better,28) output(2,better,48) output(2,better,41) output(2,better,46) output(2,better,31) output(2,better,98) output(2,better,23) output(3,better,20) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,48) output(3,better,41) output(3,better,46) output(3,better,23) output(31,better,46) output(31,better,23) output(31,better,28) output(31,better,41) output(79,better,41) output(79,better,28) output(98,better,48) output(98,better,41) output(98,better,28) output(98,better,23) output(7,better,32) output(7,better,74) output(7,better,86) output(7,better,98) output(7,better,31) output(7,better,48) output(7,better,28) output(7,better,41) output(7,better,23) output(7,better,46) output(20,better,32) output(20,better,48) output(20,better,28) output(20,better,23) output(74,better,48) output(74,better,28) output(74,better,41) output(74,better,23) output(86,better,48) output(86,better,46) output(86,better,41) output(86,better,28) output(86,better,23) output(76,better,48) output(76,better,31) output(76,better,46) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(46,worse,60) output(46,worse,79) output(60,worse,79) output(2,worse,79) output(2,worse,76) output(3,worse,7) output(3,worse,79) output(3,worse,76) output(3,worse,60) output(31,worse,60) output(31,worse,79) output(98,worse,79) output(98,worse,31) output(98,worse,60) output(7,worse,76) output(7,worse,79) output(7,worse,60) output(20,worse,7) output(20,worse,74) output(20,worse,98) output(20,worse,76) output(20,worse,86) output(20,worse,79) output(20,worse,60) output(20,worse,46) output(20,worse,31) output(23,worse,79) output(23,worse,41) output(32,worse,98) output(32,worse,31) output(32,worse,46) output(32,worse,41) output(32,worse,79) output(32,worse,28) output(32,worse,60) output(32,worse,23) output(48,worse,31) output(48,worse,79) output(48,worse,28) output(48,worse,41) output(48,worse,46) output(48,worse,23) output(48,worse,60) output(74,worse,86) output(74,worse,76) output(74,worse,31) output(74,worse,79) output(74,worse,60) output(86,worse,76) output(86,worse,79) output(86,worse,60) output(76,worse,79) output(23,eq,28) output(32,eq,48) output(86,eq,31) output(98,eq,46) output(3,eq,86) output(20,eq,41) output(74,eq,46) output(3,eq,31) output(2,eq,60)
Optimization: 61 13
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasIngredient(12))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,23) output(60,better,41) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,7) output(2,better,86) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,41) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,32) output(3,better,86) output(3,better,28) output(3,better,76) output(3,better,41) output(3,better,23) output(31,better,23) output(31,better,28) output(31,better,41) output(79,better,41) output(79,better,28) output(98,better,79) output(98,better,31) output(98,better,41) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,32) output(7,better,28) output(20,better,7) output(20,better,32) output(20,better,76) output(20,better,86) output(20,better,28) output(20,better,41) output(20,better,23) output(23,better,28) output(32,better,28) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,23) output(48,better,60) output(74,better,86) output(74,better,76) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(74,better,23) output(86,better,41) output(86,better,28) output(86,better,23) output(76,better,41) output(76,better,28) output(76,better,23) output(2,worse,74) output(2,worse,46) output(3,worse,20) output(3,worse,98) output(3,worse,74) output(3,worse,79) output(3,worse,48) output(3,worse,60) output(3,worse,46) output(3,worse,31) output(31,worse,46) output(98,worse,46) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(7,worse,31) output(7,worse,48) output(7,worse,76) output(7,worse,79) output(7,worse,60) output(7,worse,41) output(7,worse,23) output(7,worse,46) output(20,worse,74) output(20,worse,98) output(20,worse,48) output(20,worse,46) output(23,worse,79) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,41) output(32,worse,79) output(32,worse,60) output(32,worse,23) output(48,worse,46) output(74,worse,46) output(86,worse,48) output(86,worse,31) output(86,worse,46) output(86,worse,79) output(86,worse,60) output(76,worse,48) output(76,worse,79) output(76,worse,31) output(76,worse,46) output(76,worse,60) output(98,eq,48) output(86,eq,76) output(31,eq,60) output(60,eq,79) output(31,eq,79) output(20,eq,79) output(20,eq,60) output(20,eq,31)
Optimization: 57 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasDifficulty(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasCost(3))),5) preference(1,(1,11),1,for(atom(hasIngredient(12))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,32) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,60) output(3,better,31) output(3,better,23) output(31,better,28) output(79,better,28) output(98,better,79) output(98,better,31) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,28) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,23) output(20,better,31) output(23,better,79) output(23,better,28) output(32,better,31) output(32,better,79) output(32,better,28) output(32,better,60) output(32,better,23) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,23) output(48,better,60) output(74,better,31) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,23) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(60,worse,23) output(60,worse,41) output(2,worse,86) output(2,worse,76) output(2,worse,46) output(3,worse,20) output(3,worse,98) output(3,worse,86) output(3,worse,48) output(3,worse,76) output(3,worse,41) output(3,worse,46) output(31,worse,46) output(31,worse,23) output(31,worse,41) output(79,worse,41) output(98,worse,46) output(98,worse,41) output(7,worse,32) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(7,worse,48) output(7,worse,76) output(7,worse,41) output(7,worse,23) output(7,worse,46) output(20,worse,98) output(20,worse,48) output(20,worse,76) output(20,worse,86) output(20,worse,41) output(20,worse,46) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,46) output(32,worse,41) output(48,worse,41) output(48,worse,46) output(74,worse,86) output(74,worse,76) output(74,worse,48) output(74,worse,41) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(98,eq,48) output(86,eq,76) output(31,eq,60) output(60,eq,79) output(7,eq,31) output(31,eq,79) output(7,eq,79) output(7,eq,60) output(2,eq,41)
Optimization: 56 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasDifficulty(3))),3) preference(1,(1,11),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,23) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,31) output(3,better,23) output(31,better,23) output(31,better,28) output(79,better,28) output(98,better,28) output(7,better,32) output(7,better,98) output(7,better,28) output(7,better,23) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,23) output(20,better,31) output(23,better,28) output(32,better,28) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,23) output(48,better,60) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,23) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(60,worse,41) output(2,worse,86) output(2,worse,76) output(2,worse,41) output(2,worse,46) output(3,worse,86) output(3,worse,76) output(3,worse,41) output(3,worse,46) output(31,worse,46) output(31,worse,41) output(79,worse,41) output(98,worse,48) output(98,worse,79) output(98,worse,31) output(98,worse,46) output(98,worse,41) output(98,worse,60) output(7,worse,74) output(7,worse,86) output(7,worse,48) output(7,worse,76) output(7,worse,41) output(7,worse,46) output(20,worse,76) output(20,worse,86) output(20,worse,41) output(20,worse,46) output(23,worse,79) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,41) output(32,worse,79) output(32,worse,60) output(32,worse,23) output(48,worse,41) output(48,worse,46) output(74,worse,86) output(74,worse,76) output(74,worse,41) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(86,eq,76) output(31,eq,60) output(60,eq,79) output(7,eq,31) output(31,eq,79) output(7,eq,79) output(7,eq,60) output(98,eq,23)
Optimization: 54 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasDifficulty(3))),3) preference(1,(1,11),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,31) output(3,better,23) output(31,better,28) output(79,better,28) output(98,better,79) output(98,better,31) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,32) output(7,better,98) output(7,better,31) output(7,better,48) output(7,better,79) output(7,better,28) output(7,better,60) output(7,better,23) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,23) output(20,better,31) output(23,better,28) output(32,better,28) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,23) output(48,better,60) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,23) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(60,worse,41) output(2,worse,86) output(2,worse,76) output(2,worse,46) output(3,worse,20) output(3,worse,74) output(3,worse,86) output(3,worse,76) output(3,worse,41) output(3,worse,46) output(31,worse,46) output(31,worse,41) output(79,worse,41) output(98,worse,46) output(98,worse,41) output(7,worse,74) output(7,worse,86) output(7,worse,76) output(7,worse,41) output(7,worse,46) output(20,worse,76) output(20,worse,86) output(20,worse,41) output(20,worse,46) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,41) output(32,worse,79) output(32,worse,60) output(32,worse,23) output(48,worse,41) output(48,worse,46) output(74,worse,86) output(74,worse,76) output(74,worse,41) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(60,eq,23) output(23,eq,79) output(98,eq,48) output(86,eq,76) output(31,eq,60) output(60,eq,79) output(31,eq,23) output(31,eq,79) output(2,eq,41)
Optimization: 50 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasDifficulty(3))),3) preference(1,(1,11),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,28) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,31) output(3,better,23) output(31,better,28) output(79,better,28) output(98,better,79) output(98,better,31) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,32) output(7,better,98) output(7,better,31) output(7,better,48) output(7,better,79) output(7,better,28) output(7,better,60) output(7,better,23) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,23) output(20,better,31) output(23,better,79) output(23,better,28) output(32,better,28) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,23) output(48,better,60) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,23) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(60,worse,23) output(60,worse,41) output(2,worse,86) output(2,worse,76) output(2,worse,46) output(3,worse,20) output(3,worse,86) output(3,worse,76) output(3,worse,41) output(3,worse,46) output(31,worse,46) output(31,worse,23) output(31,worse,41) output(79,worse,41) output(98,worse,46) output(98,worse,41) output(7,worse,86) output(7,worse,76) output(7,worse,41) output(7,worse,46) output(20,worse,76) output(20,worse,86) output(20,worse,41) output(20,worse,46) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,46) output(32,worse,41) output(32,worse,23) output(48,worse,41) output(48,worse,46) output(74,worse,86) output(74,worse,76) output(74,worse,41) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(98,eq,48) output(7,eq,74) output(86,eq,76) output(31,eq,60) output(60,eq,79) output(32,eq,31) output(31,eq,79) output(32,eq,79) output(32,eq,60) output(2,eq,41)
Optimization: 48 13
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(10))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasCost(3))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,79) output(60,better,41) output(60,better,28) output(2,better,32) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,41) output(2,better,31) output(2,better,98) output(2,better,60) output(3,better,20) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,41) output(3,better,31) output(3,better,23) output(31,better,79) output(31,better,28) output(31,better,41) output(98,better,79) output(98,better,31) output(98,better,41) output(98,better,60) output(98,better,28) output(7,better,32) output(7,better,74) output(7,better,98) output(7,better,31) output(7,better,48) output(7,better,79) output(7,better,28) output(7,better,60) output(7,better,41) output(7,better,23) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,41) output(20,better,31) output(23,better,79) output(23,better,28) output(23,better,41) output(32,better,79) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,60) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(60,worse,23) output(2,worse,3) output(2,worse,7) output(2,worse,86) output(2,worse,76) output(2,worse,46) output(3,worse,86) output(3,worse,76) output(3,worse,46) output(31,worse,46) output(31,worse,23) output(79,worse,41) output(79,worse,28) output(98,worse,46) output(98,worse,23) output(7,worse,86) output(7,worse,76) output(7,worse,46) output(20,worse,7) output(20,worse,76) output(20,worse,86) output(20,worse,46) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,60) output(32,worse,23) output(48,worse,46) output(48,worse,23) output(74,worse,86) output(74,worse,76) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(98,eq,48) output(86,eq,76) output(3,eq,7) output(20,eq,74) output(2,eq,20) output(31,eq,60) output(32,eq,41) output(2,eq,74) output(32,eq,28) output(20,eq,23) output(74,eq,23) output(2,eq,23)
Optimization: 47 14
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(10))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasCost(3))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),2) preference(1,(1,9),1,for(atom(hasDifficulty(3))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(46,better,60) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,23) output(60,better,79) output(60,better,41) output(60,better,28) output(2,better,32) output(2,better,7) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,41) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,41) output(3,better,31) output(3,better,23) output(31,better,23) output(31,better,79) output(31,better,28) output(31,better,41) output(98,better,79) output(98,better,31) output(98,better,41) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,79) output(7,better,28) output(20,better,7) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,41) output(20,better,23) output(20,better,31) output(23,better,79) output(23,better,28) output(32,better,79) output(32,better,28) output(32,better,23) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,23) output(48,better,60) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(74,better,23) output(86,better,48) output(86,better,31) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,41) output(76,better,60) output(76,better,28) output(76,better,23) output(2,worse,3) output(2,worse,86) output(2,worse,76) output(2,worse,46) output(3,worse,86) output(3,worse,76) output(3,worse,46) output(31,worse,46) output(79,worse,41) output(98,worse,46) output(7,worse,32) output(7,worse,74) output(7,worse,86) output(7,worse,98) output(7,worse,31) output(7,worse,48) output(7,worse,76) output(7,worse,60) output(7,worse,41) output(7,worse,23) output(7,worse,46) output(20,worse,76) output(20,worse,86) output(20,worse,46) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,60) output(48,worse,46) output(74,worse,86) output(74,worse,76) output(74,worse,46) output(86,worse,46) output(76,worse,46) output(98,eq,48) output(86,eq,76) output(79,eq,28) output(20,eq,74) output(2,eq,20) output(31,eq,60) output(32,eq,41) output(2,eq,74)
Optimization: 44 14
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(12))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasIngredient(10))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),6) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),4) preference(1,(1,11),1,for(atom(hasCategory(4))),8) preference(1,(1,12),1,for(atom(hasCost(1))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasCategory(1))),5) preference(1,less(weight)) output(46,better,60) output(46,better,79) output(2,better,3) output(2,better,20) output(2,better,32) output(2,better,74) output(2,better,7) output(2,better,86) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,41) output(2,better,46) output(2,better,31) output(2,better,98) output(2,better,60) output(3,better,20) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,60) output(3,better,41) output(3,better,46) output(3,better,31) output(31,better,46) output(31,better,60) output(31,better,79) output(31,better,28) output(98,better,79) output(98,better,46) output(98,better,60) output(98,better,28) output(7,better,32) output(7,better,74) output(7,better,98) output(7,better,31) output(7,better,79) output(7,better,28) output(7,better,60) output(7,better,41) output(7,better,46) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,41) output(20,better,46) output(20,better,31) output(23,better,79) output(23,better,28) output(23,better,41) output(32,better,98) output(32,better,31) output(32,better,46) output(32,better,79) output(32,better,28) output(32,better,60) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,46) output(48,better,60) output(74,better,31) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(74,better,46) output(86,better,48) output(86,better,31) output(86,better,46) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,46) output(76,better,41) output(76,better,60) output(76,better,28) output(46,worse,23) output(46,worse,41) output(60,worse,23) output(60,worse,41) output(60,worse,28) output(2,worse,23) output(3,worse,86) output(3,worse,76) output(3,worse,23) output(31,worse,23) output(31,worse,41) output(79,worse,41) output(79,worse,28) output(98,worse,48) output(98,worse,31) output(98,worse,41) output(98,worse,23) output(7,worse,86) output(7,worse,76) output(7,worse,23) output(20,worse,76) output(20,worse,86) output(20,worse,23) output(32,worse,48) output(32,worse,23) output(48,worse,23) output(74,worse,86) output(74,worse,76) output(74,worse,48) output(74,worse,23) output(86,worse,23) output(76,worse,23) output(86,eq,76) output(60,eq,79) output(32,eq,41) output(7,eq,48) output(46,eq,28)
Optimization: 37 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(10))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(9))),1) preference(1,(1,6),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),1) preference(1,(1,8),1,for(atom(hasCategory(5))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),3) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,11),1,for(atom(hasDifficulty(3))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(46,better,23) output(46,better,79) output(46,better,41) output(46,better,28) output(60,better,23) output(60,better,79) output(60,better,41) output(60,better,28) output(2,better,32) output(2,better,74) output(2,better,86) output(2,better,28) output(2,better,79) output(2,better,48) output(2,better,76) output(2,better,41) output(2,better,46) output(2,better,31) output(2,better,98) output(2,better,23) output(2,better,60) output(3,better,7) output(3,better,32) output(3,better,98) output(3,better,74) output(3,better,86) output(3,better,28) output(3,better,79) output(3,better,48) output(3,better,76) output(3,better,60) output(3,better,41) output(3,better,46) output(3,better,31) output(3,better,23) output(31,better,23) output(31,better,79) output(31,better,28) output(31,better,41) output(79,better,28) output(98,better,48) output(98,better,79) output(98,better,31) output(98,better,46) output(98,better,41) output(98,better,60) output(98,better,28) output(98,better,23) output(7,better,32) output(7,better,74) output(7,better,86) output(7,better,98) output(7,better,31) output(7,better,48) output(7,better,76) output(7,better,79) output(7,better,28) output(7,better,60) output(7,better,41) output(7,better,23) output(7,better,46) output(20,better,7) output(20,better,74) output(20,better,32) output(20,better,98) output(20,better,48) output(20,better,76) output(20,better,86) output(20,better,28) output(20,better,79) output(20,better,60) output(20,better,41) output(20,better,23) output(20,better,46) output(20,better,31) output(23,better,28) output(32,better,79) output(32,better,28) output(32,better,23) output(48,better,31) output(48,better,79) output(48,better,28) output(48,better,41) output(48,better,46) output(48,better,23) output(74,better,86) output(74,better,76) output(74,better,31) output(74,better,48) output(74,better,79) output(74,better,28) output(74,better,60) output(74,better,41) output(74,better,23) output(74,better,46) output(86,better,76) output(86,better,48) output(86,better,31) output(86,better,46) output(86,better,41) output(86,better,79) output(86,better,28) output(86,better,60) output(86,better,23) output(76,better,48) output(76,better,79) output(76,better,31) output(76,better,46) output(76,better,41) output(76,better,28) output(76,better,23) output(46,worse,60) output(2,worse,3) output(2,worse,20) output(2,worse,7) output(3,worse,20) output(31,worse,60) output(79,worse,41) output(23,worse,79) output(23,worse,41) output(32,worse,98) output(32,worse,48) output(32,worse,31) output(32,worse,46) output(32,worse,60) output(48,worse,60) output(31,eq,46) output(32,eq,41) output(76,eq,60)
Optimization: 18 14
Progression : [ 3;18] (Error: 5)
Progression : [ 4;18] (Error: 3.5)
Progression : [ 5;18] (Error: 2.6)
Progression : [ 6;18] (Error: 2)
Progression : [ 7;18] (Error: 1.57143)
Progression : [ 8;18] (Error: 1.25)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.060 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 18 14
Bounds       : [8;18] [0;14]
Calls        : 1
Time         : 298.278s (Solving: 293.61s 1st Model: 0.05s Unsat: 0.00s)
CPU Time     : 1178.807s
Threads      : 4        (Winner: 4)

Choices      : 7671594  (Domain: 135598)
Conflicts    : 4931544  (Analyzed: 4931536)
Restarts     : 6175     (Average: 798.63 Last: 190346)
Model-Level  : 94.7    
Problems     : 12       (Average Length: 0.33 Splits: 0)
Lemmas       : 5003778  (Deleted: 4679342)
  Binary     : 205      (Ratio:   0.00%)
  Ternary    : 3008     (Ratio:   0.06%)
  Conflict   : 4931536  (Average Length:  220.2 Ratio:  98.56%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 72242    (Average Length:   33.0 Ratio:   1.44%) 
  Distributed: 24196    (Ratio:   0.49% Average LBD: 3.69) 
  Integrated : 72588    (Ratio: 300.00% Unit: 80 Average Jumps: 19.10)
Backjumps    : 4931536  (Average:  1.48 Max: 1480 Sum: 7314254)
  Executed   : 4931529  (Average:  1.48 Max: 1480 Sum: 7314062 Ratio: 100.00%)
  Bounded    : 7        (Average: 27.43 Max:  71 Sum:    192 Ratio:   0.00%)

Rules        : 1315227 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 23260   
Bodies       : 19948   
  Sum        : 258     
  Count      : 14      
Equivalences : 10365    (Atom=Atom: 1303 Body=Body: 530 Other: 8532)
Tight        : Yes
Variables    : 17451    (Eliminated:    0 Frozen: 8127)
Constraints  : 1328534  (Binary:  99.0% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) 
}.
