asprin_vL version 1.0
Reading from stdin
-:1230:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1240:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1255:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1336:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1597:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1610:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1787:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1916:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1988:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1992:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1992:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1998:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2097:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2123:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2243:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2277:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2299:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1147:1-16: info: no atoms over signature occur in program:
  output/3

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1140:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(73,eq,75) output(62,eq,11) output(11,eq,76) output(76,eq,57) output(57,eq,38) output(10,eq,25) output(25,eq,26) output(73,eq,11) output(32,eq,23) output(23,eq,25) output(25,eq,36) output(36,eq,42) output(22,eq,51) output(25,eq,42) output(10,eq,36) output(23,eq,36) output(32,eq,25) output(10,eq,26) output(23,eq,26) output(76,eq,38) output(11,eq,57) output(62,eq,76) output(73,eq,76) output(62,eq,57) output(73,eq,57) output(11,eq,38) output(62,eq,38) output(73,eq,38) output(32,eq,26) output(32,eq,36) output(10,eq,42) output(23,eq,42) output(32,eq,42)
Optimization: 33 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(22,better,51) output(25,better,26) output(32,better,23) output(32,better,26) output(73,better,75) output(73,better,11) output(73,better,76) output(10,worse,25) output(10,worse,36) output(10,worse,42) output(11,worse,57) output(11,worse,38) output(62,worse,57) output(62,worse,38) output(23,worse,25) output(23,worse,36) output(23,worse,42) output(76,worse,57) output(76,worse,38) output(62,eq,11) output(11,eq,76) output(57,eq,38) output(25,eq,36) output(36,eq,42) output(25,eq,42) output(32,eq,25) output(10,eq,26) output(23,eq,26) output(62,eq,76) output(73,eq,57) output(73,eq,38) output(32,eq,36) output(32,eq,42)
Optimization: 26 14
Answer: 3
preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(10,better,25) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(36,better,42) output(23,better,25) output(23,better,26) output(23,better,42) output(62,worse,11) output(62,worse,38) output(25,worse,36) output(32,worse,23) output(32,worse,36) output(57,worse,38) output(73,worse,75) output(73,worse,11) output(73,worse,38) output(76,worse,38) output(76,eq,57) output(25,eq,26) output(22,eq,51) output(25,eq,42) output(10,eq,36) output(23,eq,36) output(32,eq,25) output(62,eq,76) output(73,eq,76) output(62,eq,57) output(73,eq,57) output(11,eq,38) output(32,eq,26) output(32,eq,42)
Optimization: 24 1
Answer: 4
preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(10,better,36) output(10,better,42) output(11,better,57) output(62,better,57) output(23,better,36) output(23,better,42) output(25,better,36) output(25,better,42) output(73,better,57) output(76,better,57) output(22,worse,51) output(32,worse,23) output(32,worse,25) output(32,worse,26) output(57,worse,38) output(73,eq,75) output(62,eq,11) output(11,eq,76) output(10,eq,25) output(25,eq,26) output(73,eq,11) output(23,eq,25) output(36,eq,42) output(10,eq,26) output(23,eq,26) output(76,eq,38) output(62,eq,76) output(73,eq,76) output(11,eq,38) output(62,eq,38) output(73,eq,38) output(32,eq,36) output(32,eq,42)
Optimization: 23 1
Answer: 5
preference(1,(1,13),1,for(atom(hasIngredient(7))),2) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,38) output(22,worse,51) output(11,worse,57) output(62,worse,57) output(32,worse,23) output(32,worse,25) output(76,worse,57) output(62,eq,11) output(11,eq,76) output(10,eq,25) output(23,eq,25) output(36,eq,42) output(76,eq,38) output(62,eq,76) output(73,eq,57) output(11,eq,38) output(62,eq,38) output(32,eq,26) output(32,eq,36) output(32,eq,42)
Optimization: 19 2
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasCost(3))),5) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasCategory(1))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),2) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(10,better,26) output(10,better,42) output(11,better,57) output(11,better,38) output(36,better,42) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,26) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(10,worse,36) output(11,worse,76) output(62,worse,11) output(62,worse,76) output(62,worse,57) output(62,worse,38) output(23,worse,25) output(32,worse,23) output(32,worse,25) output(32,worse,36) output(22,eq,51)
Optimization: 12 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),6) preference(1,(1,6),1,for(atom(hasIngredient(9))),2) preference(1,(1,7),1,for(atom(hasDifficulty(1))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasIngredient(7))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,12),1,for(atom(hasPrep(0))),8) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasCategory(3))),5) preference(1,less(weight)) output(10,better,42) output(22,better,51) output(11,better,38) output(36,better,42) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,11) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(10,worse,36) output(10,worse,26) output(11,worse,76) output(11,worse,57) output(62,worse,76) output(62,worse,57) output(73,worse,75) output(73,worse,76) output(62,eq,11)
Optimization: 10 14
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(7))),4) preference(1,(1,2),1,for(atom(hasIngredient(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasIngredient(9))),4) preference(1,(1,5),1,for(atom(hasCost(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(2))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasDifficulty(3))),2) preference(1,(1,10),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasIngredient(4))),2) preference(1,less(weight)) output(10,better,36) output(11,better,57) output(11,better,38) output(62,better,11) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(10,worse,26) output(10,worse,42) output(22,worse,51) output(11,worse,76) output(36,worse,42) output(62,worse,76) output(32,worse,23) output(32,worse,25) output(57,eq,38)
Optimization: 10 13
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),3) preference(1,(1,3),1,for(atom(hasIngredient(4))),1) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(36,better,42) output(62,better,76) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(10,worse,25) output(62,worse,11) output(62,worse,38) output(23,worse,25) output(57,worse,38) output(76,worse,57) output(76,worse,38) output(62,eq,57) output(11,eq,38)
Optimization: 9 6
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(36,better,42) output(62,better,57) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(10,worse,25) output(62,worse,11) output(62,worse,38) output(23,worse,25) output(57,worse,38) output(76,worse,38) output(62,eq,76) output(11,eq,38)
Optimization: 8 6
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(5))),6) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasCost(2))),7) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(4))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(36,better,42) output(62,better,76) output(62,better,57) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(76,better,57) output(11,worse,38) output(62,worse,11) output(62,worse,38) output(32,worse,23) output(57,worse,38) output(73,worse,38) output(76,worse,38)
Optimization: 7 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCategory(3))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,5),1,for(atom(hasCost(2))),5) preference(1,(1,6),1,for(atom(hasIngredient(7))),6) preference(1,(1,7),1,for(atom(hasDifficulty(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(6))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),2) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),6) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(11,better,76) output(11,better,57) output(11,better,38) output(62,better,57) output(62,better,38) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(22,worse,51) output(62,worse,11) output(23,worse,25) output(36,eq,42) output(62,eq,76)
Optimization: 6 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasIngredient(7))),2) preference(1,(1,7),1,for(atom(hasIngredient(9))),5) preference(1,(1,8),1,for(atom(hasIngredient(4))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasCategory(3))),3) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasCategory(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(11,worse,76) output(62,worse,76) output(32,worse,23) output(73,worse,75) output(62,eq,11)
Optimization: 6 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(3))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),5) preference(1,(1,9),1,for(atom(hasIngredient(9))),5) preference(1,(1,10),1,for(atom(hasIngredient(3))),4) preference(1,(1,11),1,for(atom(hasCategory(3))),4) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrep(1))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(10,worse,25) output(62,worse,11) output(62,worse,76) output(62,worse,57) output(62,eq,38)
Optimization: 5 14
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasCost(3))),3) preference(1,(1,3),1,for(atom(hasPrep(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),4) preference(1,(1,5),1,for(atom(hasIngredient(9))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasCategory(3))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),3) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(62,better,11) output(62,better,76) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(32,better,25) output(32,better,26) output(32,better,36) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(36,worse,42) output(25,worse,42) output(32,worse,23) output(32,eq,42)
Optimization: 4 14
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,3),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrep(1))),2) preference(1,(1,7),1,for(atom(hasIngredient(4))),7) preference(1,(1,8),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),7) preference(1,(1,10),1,for(atom(hasCategory(4))),1) preference(1,(1,11),1,for(atom(hasCategory(1))),1) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasCategory(5))),5) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(62,worse,11) output(62,worse,76) output(25,eq,26)
Optimization: 3 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasCost(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasIngredient(4))),2) preference(1,(1,11),1,for(atom(hasDifficulty(3))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasIngredient(9))),7) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,76) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(62,worse,11) output(57,eq,38)
Optimization: 2 13
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasCost(3))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasCategory(5))),3) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasIngredient(9))),7) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,76) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38) output(62,eq,11)
Optimization: 1 13
Answer: 19
preference(1,(1,1),1,for(atom(hasIngredient(9))),7) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),2) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrep(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasCategory(3))),6) preference(1,(1,8),1,for(atom(hasIngredient(4))),8) preference(1,(1,9),1,for(atom(hasCategory(5))),4) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasIngredient(6))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasDifficulty(4))),6) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,11) output(62,better,76) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(3))),5) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasIngredient(4))),4) preference(1,(1,8),1,for(atom(hasIngredient(3))),8) preference(1,(1,9),1,for(atom(hasIngredient(6))),1) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),4) preference(1,(1,12),1,for(atom(hasCategory(3))),5) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(10,better,25) output(10,better,36) output(10,better,26) output(10,better,42) output(22,better,51) output(11,better,76) output(11,better,57) output(11,better,38) output(36,better,42) output(62,better,11) output(62,better,76) output(62,better,57) output(62,better,38) output(23,better,25) output(23,better,36) output(23,better,26) output(23,better,42) output(25,better,26) output(25,better,36) output(25,better,42) output(32,better,23) output(32,better,25) output(32,better,26) output(32,better,36) output(32,better,42) output(57,better,38) output(73,better,75) output(73,better,11) output(73,better,76) output(73,better,57) output(73,better,38) output(76,better,57) output(76,better,38)
Optimization: 0 13
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.062 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 298.265s (Solving: 295.53s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1184.558s
Threads      : 4        (Winner: 4)

Choices      : 6087622  (Domain: 92340)
Conflicts    : 4018003  (Analyzed: 4018001)
Restarts     : 4020     (Average: 999.50 Last: 396958)
Model-Level  : 29.9    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 4028627  (Deleted: 3781329)
  Binary     : 956      (Ratio:   0.02%)
  Ternary    : 1571     (Ratio:   0.04%)
  Conflict   : 4018001  (Average Length:  561.9 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 10626    (Average Length:   35.0 Ratio:   0.26%) 
  Distributed: 3550     (Ratio:   0.09% Average LBD: 3.52) 
  Integrated : 10650    (Ratio: 300.00% Unit: 7 Average Jumps: 35.86)
Backjumps    : 4018001  (Average:  1.32 Max: 814 Sum: 5322518)
  Executed   : 4018000  (Average:  1.32 Max: 814 Sum: 5322514 Ratio: 100.00%)
  Bounded    : 1        (Average:  4.00 Max:   4 Sum:      4 Ratio:   0.00%)

Rules        : 410811  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13844   
Bodies       : 18892   
  Sum        : 66      
  Count      : 14      
Equivalences : 7005     (Atom=Atom: 343 Body=Body: 146 Other: 6516)
Tight        : Yes
Variables    : 17059    (Eliminated:    0 Frozen: 7735)
Constraints  : 432846   (Binary:  97.0% Ternary:   2.2% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(5)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCategory(5)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  6 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasIngredient(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasIngredient(9)) 
}.
