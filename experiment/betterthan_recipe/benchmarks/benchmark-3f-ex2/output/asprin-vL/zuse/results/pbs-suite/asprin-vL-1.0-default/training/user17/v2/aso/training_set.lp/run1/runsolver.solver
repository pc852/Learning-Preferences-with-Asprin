asprin_vL version 1.0
Reading from stdin
-:1248:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1273:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1354:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1628:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1805:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2006:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2010:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2010:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2016:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2115:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2141:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2261:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2295:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2317:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1165:1-16: info: no atoms over signature occur in program:
  output/3

-:1157:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1158:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1159:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1160:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1190:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(58,better,62) output(50,better,84) output(18,better,42) output(58,better,89) output(21,better,89) output(10,worse,21) output(21,worse,58) output(62,worse,39) output(67,worse,50) output(42,worse,47) output(10,worse,8) output(8,worse,39) output(10,worse,58) output(21,worse,39) output(10,worse,39) output(10,worse,62) output(8,eq,62) output(18,eq,47) output(58,eq,39)
Optimization: 24 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(58,better,62) output(50,better,84) output(18,better,42) output(18,better,47) output(58,better,89) output(21,better,89) output(21,worse,58) output(62,worse,39) output(67,worse,50) output(42,worse,47) output(8,worse,39) output(21,worse,39) output(8,eq,62) output(58,eq,39)
Optimization: 23 6
Answer: 3
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(50,better,84) output(62,better,89) output(18,better,42) output(18,better,47) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(10,better,58) output(10,better,39) output(10,better,62) output(21,better,89) output(10,better,89) output(61,worse,67) output(61,worse,50) output(21,eq,58) output(58,eq,62) output(62,eq,39) output(67,eq,50) output(66,eq,32) output(21,eq,8) output(8,eq,62) output(42,eq,47) output(21,eq,62) output(58,eq,39) output(8,eq,39) output(21,eq,39)
Optimization: 15 6
Answer: 4
preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(50,better,84) output(62,better,89) output(18,better,42) output(61,better,67) output(58,better,89) output(8,better,89) output(10,better,8) output(67,better,84) output(61,better,50) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(21,worse,58) output(62,worse,39) output(42,worse,47) output(8,worse,39) output(21,worse,39) output(67,eq,50) output(66,eq,32) output(21,eq,8) output(8,eq,62) output(18,eq,47) output(21,eq,62) output(58,eq,39) output(10,eq,58) output(10,eq,39)
Optimization: 14 6
Answer: 5
preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,aso) output(10,better,21) output(62,better,39) output(66,better,32) output(42,better,47) output(61,better,67) output(18,better,47) output(10,better,8) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(10,better,89) output(50,worse,84) output(18,worse,42) output(21,eq,58) output(8,eq,62)
Optimization: 13 6
Answer: 6
preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,aso) output(10,better,21) output(62,better,39) output(67,better,50) output(66,better,32) output(62,better,89) output(42,better,47) output(61,better,67) output(18,better,47) output(8,better,89) output(10,better,8) output(61,better,50) output(8,better,39) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(10,better,89) output(21,worse,58) output(58,worse,62) output(50,worse,84) output(21,worse,8) output(21,worse,62) output(21,worse,39) output(21,worse,89) output(8,eq,62) output(58,eq,89) output(67,eq,84) output(58,eq,39)
Optimization: 12 4
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),3,for(atom(hasPrep(3))),()) preference(1,aso) output(10,better,21) output(62,better,39) output(67,better,50) output(66,better,32) output(62,better,89) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(8,better,89) output(10,better,8) output(61,better,50) output(8,better,39) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(10,better,89) output(21,worse,58) output(58,worse,62) output(50,worse,84) output(21,worse,8) output(21,worse,62) output(21,worse,39) output(21,worse,89) output(8,eq,62) output(58,eq,89) output(67,eq,84) output(58,eq,39)
Optimization: 11 4
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasPrep(5))),()) preference(1,aso) output(10,better,21) output(62,better,39) output(67,better,50) output(66,better,32) output(8,better,62) output(18,better,42) output(61,better,67) output(18,better,47) output(8,better,89) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(10,better,39) output(61,better,84) output(10,better,62) output(10,better,89) output(21,worse,58) output(21,worse,8) output(21,worse,89) output(50,eq,84) output(58,eq,89)
Optimization: 10 4
Answer: 9
preference(1,(1,3),0,for(atom(hasIngredient(5))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,aso) output(58,better,62) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(42,better,47) output(61,better,67) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(18,worse,42) output(10,eq,21) output(21,eq,58) output(62,eq,39) output(18,eq,47) output(10,eq,58)
Optimization: 9 3
Answer: 10
preference(1,(1,3),0,for(atom(hasIngredient(5))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,aso) output(58,better,62) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(18,worse,42) output(10,eq,21) output(21,eq,58) output(62,eq,39) output(10,eq,58)
Optimization: 8 3
Answer: 11
preference(1,(1,3),0,for(atom(hasIngredient(5))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(8,better,62) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(62,worse,39) output(21,eq,58) output(62,eq,89) output(18,eq,42)
Optimization: 5 3
Answer: 12
preference(1,(1,1),0,for(atom(hasCategory(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(21,better,58) output(58,better,62) output(62,better,39) output(67,better,50) output(66,better,32) output(21,better,8) output(8,better,62) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89) output(10,eq,21)
Optimization: 4 5
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasCategory(3))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(8,better,62) output(62,better,89) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasCategory(1))),()) preference(1,(1,4),3,for(atom(hasCategory(3))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(8,better,62) output(62,better,89) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasPrep(5))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,1),3,for(atom(hasCost(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(12))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(8,better,62) output(62,better,89) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89)
Optimization: 0 4
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,(1,1),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(58,better,62) output(62,better,39) output(67,better,50) output(50,better,84) output(66,better,32) output(21,better,8) output(8,better,62) output(62,better,89) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(67,better,84) output(61,better,50) output(58,better,39) output(8,better,39) output(10,better,58) output(21,better,39) output(10,better,39) output(61,better,84) output(10,better,62) output(21,better,89) output(10,better,89)
Optimization: 0 3
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 8.126s (Solving: 2.36s 1st Model: 0.35s Unsat: 0.49s)
CPU Time     : 15.038s
Threads      : 4        (Winner: 3)

Choices      : 108036   (Domain: 392)
Conflicts    : 10160    (Analyzed: 10157)
Restarts     : 29       (Average: 350.24 Last: 739)
Model-Level  : 697.8   
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 21242    (Deleted: 0)
  Binary     : 1674     (Ratio:   7.88%)
  Ternary    : 4690     (Ratio:  22.08%)
  Conflict   : 10157    (Average Length:  110.0 Ratio:  47.82%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 11085    (Average Length:   39.9 Ratio:  52.18%) 
  Distributed: 3743     (Ratio:  36.85% Average LBD: 2.93) 
  Integrated : 11229    (Ratio: 300.00% Unit: 247 Average Jumps: 68.91)
Backjumps    : 10157    (Average:  8.17 Max: 1527 Sum:  82965)
  Executed   : 10147    (Average:  8.15 Max: 1527 Sum:  82762 Ratio:  99.76%)
  Bounded    : 10       (Average: 20.30 Max:  27 Sum:    203 Ratio:   0.24%)

Rules        : 2803657 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 467640  
Bodies       : 584806  
  Count      : 1068    
Equivalences : 1413611  (Atom=Atom: 415971 Body=Body: 449268 Other: 548372)
Tight        : Yes
Variables    : 93517    (Eliminated:    0 Frozen: 28345)
Constraints  : 2507182  (Binary:  96.3% Ternary:   3.4% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(6))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(7))  >> atom(hasIngredient(7)) || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(2)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  || atom(hasCategory(3)) ; 
  not atom(hasCategory(3))  >> atom(hasDifficulty(4)) || atom(hasCategory(2)) ; 
  atom(hasCost(1)) >> not atom(hasIngredient(1))  >> not atom(hasIngredient(2))  || not atom(hasPrep(0))  ; 
  not atom(hasPrep(0))  ; 
  not atom(hasIngredient(4))  >> not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(8))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(0)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(3)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(8))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(0)) >> atom(hasPrepTime(2)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(3)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> not atom(hasPrep(6))  >> not atom(hasIngredient(8))  || not atom(hasPrepTime(2))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(6))  >> atom(hasPrep(5)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(0)) >> atom(hasPrep(2)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(8))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(0)) >> atom(hasCategory(3)) || atom(hasIngredient(5)) ; 
  not atom(hasIngredient(7))  >> atom(hasPrepTime(1)) >> not atom(hasCategory(2))  || not atom(hasPrep(7))  ; 
  atom(hasPrep(1)) >> not atom(hasCategory(3))  >> atom(hasCost(1)) || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(0)) >> atom(hasCategory(3)) || atom(hasIngredient(5)) ; 
  not atom(hasIngredient(7))  >> atom(hasPrepTime(1)) >> not atom(hasCategory(2))  || not atom(hasPrep(7))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(0)) >> atom(hasCategory(3)) || atom(hasIngredient(5)) ; 
  atom(hasIngredient(12)) >> not atom(hasPrepTime(2))  >> atom(hasIngredient(7)) || not atom(hasCategory(4))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> not atom(hasCategory(3))  || atom(hasCategory(3)) ; 
  atom(hasPrep(1)) >> not atom(hasCategory(5))  >> not atom(hasCost(1))  || not atom(hasPrep(0))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(9)) >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(4)) >> not atom(hasPrep(0))  || not atom(hasCategory(1))  ; 
  not atom(hasCost(2))  >> atom(hasPrep(2)) >> atom(hasPrepTime(3)) || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasCost(1)) >> atom(hasCost(3)) || not atom(hasCost(3))  ; 
  atom(hasPrep(5)) >> not atom(hasPrep(6))  >> atom(hasCost(5)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(9)) >> atom(hasCategory(1)) >> atom(hasCategory(3)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(6))  >> atom(hasCategory(3)) || not atom(hasPrepTime(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(5)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(2))  || not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasCost(1)) >> atom(hasCost(3)) || not atom(hasCost(3))  ; 
  atom(hasPrep(5)) >> not atom(hasPrep(6))  >> atom(hasCost(5)) || not atom(hasDifficulty(3))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(1))  >> atom(hasCategory(1)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(6))  >> atom(hasCategory(3)) || not atom(hasPrepTime(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(9)) >> atom(hasCost(1)) || not atom(hasPrep(7))  ; 
  atom(hasCost(1)) >> atom(hasPrep(2)) >> atom(hasIngredient(12)) || atom(hasPrep(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(7)) >> atom(hasCost(1)) || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> not atom(hasDifficulty(1))  >> atom(hasIngredient(10)) || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasIngredient(9)) >> atom(hasCost(1)) || not atom(hasCategory(1))  ; 
  atom(hasCost(3)) >> not atom(hasIngredient(12))  >> atom(hasIngredient(3)) || not atom(hasCategory(4))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(2)) >> atom(hasIngredient(10)) || not atom(hasIngredient(4))  
}.
