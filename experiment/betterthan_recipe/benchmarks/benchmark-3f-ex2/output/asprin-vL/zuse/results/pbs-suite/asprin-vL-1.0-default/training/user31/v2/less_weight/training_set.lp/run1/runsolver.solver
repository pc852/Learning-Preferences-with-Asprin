asprin_vL version 1.0
Reading from stdin
-:1218:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1228:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1243:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1324:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1585:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1598:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1775:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1904:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1976:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1980:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1980:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1986:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2085:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2111:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2231:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2265:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2287:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1135:1-16: info: no atoms over signature occur in program:
  output/3

-:1127:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1128:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(71,eq,76) output(76,eq,8) output(91,eq,51) output(51,eq,67) output(67,eq,57) output(57,eq,99) output(76,eq,53) output(53,eq,60) output(94,eq,98) output(17,eq,99) output(78,eq,30) output(76,eq,60) output(71,eq,53) output(67,eq,99) output(51,eq,57) output(91,eq,67) output(71,eq,8) output(91,eq,57) output(51,eq,99) output(91,eq,99) output(71,eq,60)
Optimization: 21 0
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(11))),6) preference(1,(1,2),1,for(atom(hasIngredient(10))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasIngredient(3))),6) preference(1,(1,5),1,for(atom(hasCategory(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(1))),8) preference(1,(1,7),1,for(atom(hasCategory(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(4))),7) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasIngredient(6))),7) preference(1,(1,14),1,for(atom(hasCategory(5))),6) preference(1,less(weight)) output(51,better,67) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(53,better,60) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99) output(94,better,98) output(57,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(78,better,30) output(17,better,99) output(76,better,8) output(76,better,53) output(76,better,60)
Optimization: 0 14
Answer: 3
preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasIngredient(10))),7) preference(1,(1,11),1,for(atom(hasIngredient(6))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(4))),5) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(51,better,67) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(53,better,60) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99) output(94,better,98) output(57,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(78,better,30) output(17,better,99) output(76,better,8) output(76,better,53) output(76,better,60)
Optimization: 0 8
Progression : 0 [1;8] (Error: 7)
Progression : 0 [2;8] (Error: 3)
Answer: 4
preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasIngredient(3))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(51,better,67) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(53,better,60) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99) output(94,better,98) output(57,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(78,better,30) output(17,better,99) output(76,better,8) output(76,better,53) output(76,better,60)
Optimization: 0 7
Answer: 5
preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasCategory(1))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasIngredient(3))),6) preference(1,less(weight)) output(51,better,67) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(53,better,60) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99) output(94,better,98) output(57,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(78,better,30) output(17,better,99) output(76,better,8) output(76,better,53) output(76,better,60)
Optimization: 0 6
Answer: 6
preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasCost(3))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(51,better,67) output(51,better,57) output(51,better,99) output(67,better,57) output(67,better,99) output(53,better,60) output(91,better,51) output(91,better,67) output(91,better,57) output(91,better,99) output(94,better,98) output(57,better,99) output(71,better,76) output(71,better,53) output(71,better,8) output(71,better,60) output(78,better,30) output(17,better,99) output(76,better,8) output(76,better,53) output(76,better,60)
Optimization: 0 5
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 6+
  Optimum    : unknown
Optimization : 0 5
Calls        : 1
Time         : 298.363s (Solving: 295.94s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1185.866s
Threads      : 4        (Winner: 4)

Choices      : 12944184 (Domain: 99506)
Conflicts    : 4525626  (Analyzed: 4525624)
Restarts     : 5080     (Average: 890.87 Last: 233103)
Model-Level  : 439.0   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 4533903  (Deleted: 4219314)
  Binary     : 240      (Ratio:   0.01%)
  Ternary    : 243      (Ratio:   0.01%)
  Conflict   : 4525624  (Average Length:  537.4 Ratio:  99.82%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8279     (Average Length:  255.2 Ratio:   0.18%) 
  Distributed: 2764     (Ratio:   0.06% Average LBD: 3.79) 
  Integrated : 8292     (Ratio: 300.00% Unit: 1 Average Jumps: 55.00)
Backjumps    : 4525624  (Average:  2.28 Max: 1729 Sum: 10333762)
  Executed   : 4525623  (Average:  2.28 Max: 1729 Sum: 10333758 Ratio: 100.00%)
  Bounded    : 1        (Average:  4.00 Max:   4 Sum:      4 Ratio:   0.00%)

Rules        : 296191  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 12660   
Bodies       : 18760   
  Sum        : 42      
  Count      : 14      
Equivalences : 6585     (Atom=Atom: 223 Body=Body: 98 Other: 6264)
Tight        : Yes
Variables    : 17003    (Eliminated:    0 Frozen: 7679)
Constraints  : 319310   (Binary:  96.0% Ternary:   2.9% Other:   1.1%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(11)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(2)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(6)) ; 
  6 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) 
}.
