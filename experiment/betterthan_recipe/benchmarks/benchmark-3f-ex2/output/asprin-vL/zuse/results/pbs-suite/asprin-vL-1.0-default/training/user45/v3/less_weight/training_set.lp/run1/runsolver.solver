asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,100) output(90,eq,33) output(33,eq,79) output(79,eq,51) output(44,eq,16) output(16,eq,67) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(79,eq,16) output(16,eq,22) output(92,eq,77) output(77,eq,10) output(92,eq,10) output(44,eq,22) output(79,eq,22) output(33,eq,16) output(65,eq,16) output(90,eq,79) output(58,eq,65) output(44,eq,67) output(79,eq,67) output(33,eq,51) output(65,eq,51) output(58,eq,33) output(90,eq,51) output(58,eq,51) output(33,eq,67) output(65,eq,67) output(90,eq,67) output(58,eq,79) output(90,eq,16) output(58,eq,16) output(33,eq,22) output(65,eq,22) output(90,eq,22) output(58,eq,22) output(58,eq,67)
Optimization: 38 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(4))),1) preference(1,less(weight)) output(79,better,67) output(16,better,67) output(33,better,67) output(44,better,67) output(58,better,67) output(65,better,67) output(90,better,67) output(9,eq,100) output(90,eq,33) output(33,eq,79) output(79,eq,51) output(44,eq,16) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(79,eq,16) output(16,eq,22) output(92,eq,77) output(77,eq,10) output(92,eq,10) output(44,eq,22) output(79,eq,22) output(33,eq,16) output(65,eq,16) output(90,eq,79) output(58,eq,65) output(33,eq,51) output(65,eq,51) output(58,eq,33) output(90,eq,51) output(58,eq,51) output(58,eq,79) output(90,eq,16) output(58,eq,16) output(33,eq,22) output(65,eq,22) output(90,eq,22) output(58,eq,22)
Optimization: 31 1
Answer: 3
preference(1,(1,14),1,for(atom(hasPrep(5))),1) preference(1,less(weight)) output(79,better,22) output(79,better,67) output(16,better,67) output(16,better,22) output(33,better,67) output(33,better,22) output(44,better,22) output(44,better,67) output(58,better,22) output(58,better,67) output(65,better,67) output(65,better,22) output(90,better,67) output(90,better,22) output(9,eq,100) output(90,eq,33) output(33,eq,79) output(79,eq,51) output(44,eq,16) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(79,eq,16) output(92,eq,77) output(77,eq,10) output(92,eq,10) output(33,eq,16) output(65,eq,16) output(90,eq,79) output(58,eq,65) output(33,eq,51) output(65,eq,51) output(58,eq,33) output(90,eq,51) output(58,eq,51) output(58,eq,79) output(90,eq,16) output(58,eq,16)
Optimization: 24 1
Answer: 4
preference(1,(1,14),1,for(atom(hasCategory(1))),1) preference(1,less(weight)) output(77,better,10) output(79,better,51) output(79,better,22) output(79,better,67) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,22) output(44,better,67) output(58,better,51) output(58,better,22) output(58,better,67) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,51) output(90,better,67) output(90,better,22) output(9,eq,100) output(90,eq,33) output(33,eq,79) output(44,eq,16) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(79,eq,16) output(92,eq,77) output(33,eq,16) output(65,eq,16) output(90,eq,79) output(58,eq,65) output(58,eq,33) output(58,eq,79) output(90,eq,16) output(58,eq,16)
Optimization: 17 1
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(1))),6) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(4))),2) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(3))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,7),1,for(atom(hasCost(4))),2) preference(1,(1,8),1,for(atom(hasIngredient(8))),1) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasDifficulty(3))),2) preference(1,(1,11),1,for(atom(hasCost(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasIngredient(10))),6) preference(1,less(weight)) output(9,better,100) output(77,better,10) output(79,better,51) output(79,better,16) output(79,better,22) output(79,better,67) output(92,better,77) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,79) output(33,better,16) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,16) output(44,better,22) output(44,better,67) output(58,better,90) output(58,better,65) output(58,better,33) output(58,better,51) output(58,better,79) output(58,better,16) output(58,better,22) output(58,better,67) output(65,better,79) output(65,better,16) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,33) output(90,better,65) output(90,better,79) output(90,better,51) output(90,better,67) output(90,better,16) output(90,better,22)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 6
preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,3),1,for(atom(hasDifficulty(3))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasCost(4))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasPrep(4))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(9,better,100) output(77,better,10) output(79,better,51) output(79,better,16) output(79,better,22) output(79,better,67) output(92,better,77) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,79) output(33,better,16) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,16) output(44,better,22) output(44,better,67) output(58,better,90) output(58,better,65) output(58,better,33) output(58,better,51) output(58,better,79) output(58,better,16) output(58,better,22) output(58,better,67) output(65,better,79) output(65,better,16) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,33) output(90,better,65) output(90,better,79) output(90,better,51) output(90,better,67) output(90,better,16) output(90,better,22)
Optimization: 0 11
Answer: 7
preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasCost(4))),1) preference(1,(1,9),1,for(atom(hasPrep(4))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(8))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(9,better,100) output(77,better,10) output(79,better,51) output(79,better,16) output(79,better,22) output(79,better,67) output(92,better,77) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,79) output(33,better,16) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,16) output(44,better,22) output(44,better,67) output(58,better,90) output(58,better,65) output(58,better,33) output(58,better,51) output(58,better,79) output(58,better,16) output(58,better,22) output(58,better,67) output(65,better,79) output(65,better,16) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,33) output(90,better,65) output(90,better,79) output(90,better,51) output(90,better,67) output(90,better,16) output(90,better,22)
Optimization: 0 10
Answer: 8
preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasCost(3))),3) preference(1,(1,7),1,for(atom(hasCost(4))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasCategory(1))),6) preference(1,(1,13),1,for(atom(hasDifficulty(4))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(9,better,100) output(77,better,10) output(79,better,51) output(79,better,16) output(79,better,22) output(79,better,67) output(92,better,77) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,79) output(33,better,16) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,16) output(44,better,22) output(44,better,67) output(58,better,90) output(58,better,65) output(58,better,33) output(58,better,51) output(58,better,79) output(58,better,16) output(58,better,22) output(58,better,67) output(65,better,79) output(65,better,16) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,33) output(90,better,65) output(90,better,79) output(90,better,51) output(90,better,67) output(90,better,16) output(90,better,22)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasCategory(1))),7) preference(1,(1,10),1,for(atom(hasCost(3))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasDifficulty(4))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(9,better,100) output(77,better,10) output(79,better,51) output(79,better,16) output(79,better,22) output(79,better,67) output(92,better,77) output(92,better,10) output(16,better,67) output(16,better,22) output(33,better,79) output(33,better,16) output(33,better,51) output(33,better,67) output(33,better,22) output(44,better,16) output(44,better,22) output(44,better,67) output(58,better,90) output(58,better,65) output(58,better,33) output(58,better,51) output(58,better,79) output(58,better,16) output(58,better,22) output(58,better,67) output(65,better,79) output(65,better,16) output(65,better,51) output(65,better,67) output(65,better,22) output(90,better,33) output(90,better,65) output(90,better,79) output(90,better,51) output(90,better,67) output(90,better,16) output(90,better,22)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.077 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 9+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 598.459s (Solving: 595.69s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2385.208s
Threads      : 4        (Winner: 4)

Choices      : 12562205 (Domain: 467973)
Conflicts    : 7661150  (Analyzed: 7661147)
Restarts     : 7650     (Average: 1001.46 Last: 630639)
Model-Level  : 47.6    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7673587  (Deleted: 7246381)
  Binary     : 2880     (Ratio:   0.04%)
  Ternary    : 2913     (Ratio:   0.04%)
  Conflict   : 7661147  (Average Length:  561.2 Ratio:  99.84%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12440    (Average Length:   36.7 Ratio:   0.16%) 
  Distributed: 4148     (Ratio:   0.05% Average LBD: 3.17) 
  Integrated : 12444    (Ratio: 300.00% Unit: 7 Average Jumps: 13.29)
Backjumps    : 7661147  (Average:  1.50 Max: 825 Sum: 11518997)
  Executed   : 7661145  (Average:  1.50 Max: 825 Sum: 11518971 Ratio: 100.00%)
  Bounded    : 2        (Average: 13.00 Max:  25 Sum:     26 Ratio:   0.00%)

Rules        : 457020  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14326   
Bodies       : 18947   
  Sum        : 76      
  Count      : 14      
Equivalences : 7180     (Atom=Atom: 393 Body=Body: 166 Other: 6621)
Tight        : Yes
Variables    : 17071    (Eliminated:    0 Frozen: 7747)
Constraints  : 478592   (Binary:  97.3% Ternary:   2.0% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(4)) ; 
  2 :: atom(hasCost(4)) ; 
  1 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrep(4)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasPrepTime(2)) 
}.
