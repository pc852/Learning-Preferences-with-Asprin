asprin_vL version 1.0
Reading from stdin
-:1241:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1266:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1347:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1621:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1798:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1999:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2003:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2009:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2108:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2134:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2254:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2288:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2310:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1158:1-16: info: no atoms over signature occur in program:
  output/3

-:1150:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1151:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1152:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1153:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1183:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(18,better,90) output(18,better,78) output(18,better,52) output(7,worse,46) output(7,worse,51) output(79,worse,51) output(7,worse,60) output(79,worse,46) output(31,worse,46) output(79,worse,60) output(31,worse,60) output(31,worse,51) output(79,eq,7) output(46,eq,60) output(33,eq,32) output(39,eq,4) output(78,eq,52) output(31,eq,79) output(42,eq,23) output(90,eq,78) output(90,eq,52) output(31,eq,7)
Optimization: 19 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(39,better,4) output(78,better,52) output(18,better,90) output(18,better,78) output(18,better,52) output(79,worse,7) output(46,worse,60) output(33,worse,32) output(90,worse,78) output(31,worse,7) output(79,worse,60) output(31,worse,60) output(31,eq,79) output(42,eq,23) output(90,eq,52)
Optimization: 17 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(7,better,46) output(39,better,4) output(78,better,52) output(7,better,51) output(18,better,90) output(7,better,60) output(18,better,52) output(79,worse,7) output(46,worse,60) output(33,worse,32) output(90,worse,78) output(31,worse,7) output(79,worse,60) output(31,worse,60) output(31,eq,79) output(42,eq,23) output(18,eq,78) output(90,eq,52)
Optimization: 15 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(7,better,46) output(78,better,52) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(7,better,60) output(18,better,52) output(79,worse,7) output(46,worse,60) output(33,worse,32) output(90,worse,78) output(31,worse,7) output(79,worse,60) output(31,worse,60) output(31,eq,79) output(90,eq,52)
Optimization: 14 6
Answer: 5
preference(1,(1,1),0,for(atom(hasPrepTime(3))),()) preference(1,(1,2),0,for(atom(hasCost(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(79,better,7) output(46,better,60) output(78,better,52) output(7,better,51) output(18,better,90) output(79,better,51) output(90,better,52) output(7,better,60) output(31,better,7) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(7,worse,46) output(39,worse,4) output(90,worse,78) output(33,eq,32) output(31,eq,79) output(42,eq,23) output(18,eq,78) output(79,eq,46) output(31,eq,46)
Optimization: 9 2
Answer: 6
preference(1,(1,1),0,for(atom(hasPrepTime(3))),()) preference(1,(1,2),0,for(atom(hasCost(2))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(79,better,7) output(46,better,60) output(39,better,4) output(78,better,52) output(7,better,51) output(18,better,90) output(79,better,51) output(90,better,52) output(7,better,60) output(31,better,7) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(7,worse,46) output(90,worse,78) output(33,eq,32) output(31,eq,79) output(42,eq,23) output(18,eq,78) output(79,eq,46) output(31,eq,46)
Optimization: 8 2
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),3,for(atom(hasCost(1))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(33,eq,32) output(39,eq,4) output(78,eq,52) output(31,eq,79) output(90,eq,78) output(90,eq,52)
Optimization: 6 2
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(7,better,51) output(18,better,90) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(90,worse,78) output(31,eq,79) output(42,eq,23) output(18,eq,78) output(90,eq,52)
Optimization: 5 2
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(78,worse,52) output(39,eq,4) output(31,eq,79) output(90,eq,52)
Optimization: 4 2
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,4),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51) output(79,eq,7)
Optimization: 3 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(79,better,51) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51)
Optimization: 2 6
Answer: 12
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,4),2,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),3,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51)
Optimization: 1 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(7))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasPrep(6))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasIngredient(7))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 15
preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(79,better,7) output(7,better,46) output(46,better,60) output(33,better,32) output(39,better,4) output(78,better,52) output(31,better,79) output(7,better,51) output(42,better,23) output(18,better,90) output(90,better,78) output(18,better,78) output(79,better,51) output(90,better,52) output(7,better,60) output(79,better,46) output(31,better,7) output(31,better,46) output(79,better,60) output(31,better,60) output(18,better,52) output(31,better,51)
Optimization: 0 4
Progression : 0 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 15
  Optimum    : yes
Optimization : 0 4
Calls        : 1
Time         : 18.113s (Solving: 12.89s 1st Model: 0.48s Unsat: 11.52s)
CPU Time     : 56.596s
Threads      : 4        (Winner: 1)

Choices      : 190061   (Domain: 477)
Conflicts    : 30014    (Analyzed: 30009)
Restarts     : 61       (Average: 491.95 Last: 2132)
Model-Level  : 717.4   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 54054    (Deleted: 7519)
  Binary     : 1122     (Ratio:   2.08%)
  Ternary    : 8743     (Ratio:  16.17%)
  Conflict   : 30009    (Average Length:  144.7 Ratio:  55.52%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 24045    (Average Length:   74.7 Ratio:  44.48%) 
  Distributed: 8053     (Ratio:  26.84% Average LBD: 3.13) 
  Integrated : 24154    (Ratio: 299.94% Unit: 280 Average Jumps: 48.08)
Backjumps    : 30009    (Average:  5.41 Max: 1383 Sum: 162403)
  Executed   : 29999    (Average:  5.41 Max: 1383 Sum: 162277 Ratio:  99.92%)
  Bounded    : 10       (Average: 12.60 Max:  21 Sum:    126 Ratio:   0.08%)

Rules        : 2145522 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 363440  
Bodies       : 466129  
  Count      : 816     
Equivalences : 1093713  (Atom=Atom: 320545 Body=Body: 343703 Other: 429465)
Tight        : Yes
Variables    : 87611    (Eliminated:    0 Frozen: 22523)
Constraints  : 1958426  (Binary:  95.6% Ternary:   4.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasCategory(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasPrep(3))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(8)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(8)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasCategory(5)) >> atom(hasIngredient(8)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> atom(hasPrep(6)) >> not atom(hasCategory(5))  || atom(hasPrepTime(3)) ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(3))  >> not atom(hasPrepTime(1))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> atom(hasPrep(6)) >> not atom(hasCategory(5))  || atom(hasPrepTime(3)) ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(3))  >> atom(hasPrepTime(2)) || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> atom(hasPrep(6)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(2))  ; 
  atom(hasCategory(3)) >> not atom(hasCategory(1))  >> atom(hasCost(1)) || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> atom(hasPrep(6)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(2))  ; 
  atom(hasCost(4)) >> atom(hasPrep(5)) >> not atom(hasPrepTime(1))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(2))  >> atom(hasPrep(6)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(2))  ; 
  atom(hasCategory(3)) >> not atom(hasIngredient(7))  >> not atom(hasIngredient(9))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasDifficulty(2)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(3))  ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  >> atom(hasPrep(5)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) || not atom(hasCost(4))  ; 
  not atom(hasPrep(6))  >> atom(hasDifficulty(3)) >> atom(hasCost(2)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  not atom(hasPrep(2))  >> atom(hasPrepTime(1)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasDifficulty(2)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(3))  ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  >> atom(hasPrep(5)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) || not atom(hasCost(4))  ; 
  not atom(hasPrep(6))  >> atom(hasDifficulty(3)) >> atom(hasCost(2)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  not atom(hasPrep(2))  >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(7))  || atom(hasIngredient(7)) ; 
  not atom(hasPrepTime(2))  >> not atom(hasPrep(1))  >> atom(hasCost(2)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) || not atom(hasCost(4))  ; 
  not atom(hasPrep(6))  >> atom(hasDifficulty(3)) >> atom(hasCost(2)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(8)) >> atom(hasPrep(7)) >> atom(hasCategory(5)) ; 
  not atom(hasPrep(2))  >> atom(hasDifficulty(3)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(4))  >> atom(hasPrep(1)) >> atom(hasDifficulty(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(1)) >> not atom(hasCategory(3))  || not atom(hasIngredient(10))  ; 
  not atom(hasPrep(2))  >> not atom(hasCategory(1))  >> not atom(hasIngredient(8))  || not atom(hasPrepTime(2))  ; 
  atom(hasIngredient(7)) >> atom(hasPrep(7)) >> not atom(hasPrepTime(2))  || atom(hasPrep(6)) ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(9))  >> not atom(hasIngredient(7))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(4))  >> atom(hasPrep(1)) >> atom(hasDifficulty(2)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasPrep(2)) >> not atom(hasCategory(3))  || not atom(hasCategory(1))  ; 
  not atom(hasPrep(2))  >> not atom(hasCategory(1))  >> not atom(hasIngredient(8))  || not atom(hasPrepTime(2))  ; 
  atom(hasIngredient(7)) >> atom(hasPrep(7)) >> not atom(hasCategory(4))  || atom(hasPrep(6)) ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(10)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrep(2)) >> not atom(hasPrep(2))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasIngredient(12)) >> not atom(hasPrepTime(2))  || not atom(hasCost(4))  ; 
  atom(hasPrep(5)) >> atom(hasDifficulty(3)) >> atom(hasCost(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(10)) >> not atom(hasCategory(3))  
}.
