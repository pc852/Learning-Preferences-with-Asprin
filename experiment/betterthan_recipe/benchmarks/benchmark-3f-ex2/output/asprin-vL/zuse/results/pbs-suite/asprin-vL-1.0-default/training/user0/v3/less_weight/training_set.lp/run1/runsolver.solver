asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(23,eq,18) output(24,eq,50) output(50,eq,29) output(25,eq,64) output(64,eq,24) output(24,eq,23) output(65,eq,52) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(69,eq,72) output(52,eq,67) output(65,eq,69) output(64,eq,23) output(47,eq,24) output(25,eq,24) output(24,eq,29) output(64,eq,50) output(49,eq,18) output(24,eq,18) output(47,eq,10) output(25,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,29) output(25,eq,29) output(47,eq,23) output(25,eq,23) output(65,eq,67) output(52,eq,72) output(65,eq,72)
Optimization: 38 0
Answer: 2
preference(1,(1,14),1,for(atom(hasCost(3))),4) preference(1,less(weight)) output(67,better,72) output(64,better,24) output(64,better,23) output(69,better,72) output(25,better,24) output(25,better,23) output(47,better,24) output(47,better,23) output(52,better,72) output(23,worse,18) output(49,worse,18) output(65,worse,52) output(65,worse,69) output(65,worse,67) output(24,worse,50) output(24,worse,29) output(24,worse,18) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(50,eq,29) output(25,eq,64) output(24,eq,23) output(52,eq,69) output(69,eq,67) output(52,eq,67) output(64,eq,50) output(47,eq,10) output(25,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,29) output(25,eq,29) output(65,eq,72)
Optimization: 29 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(50,better,29) output(25,better,64) output(25,better,29) output(47,better,64) output(47,better,29) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(24,better,29) output(64,worse,10) output(64,worse,24) output(64,worse,23) output(64,worse,50) output(64,worse,18) output(49,eq,23) output(23,eq,18) output(24,eq,50) output(24,eq,23) output(52,eq,69) output(69,eq,67) output(67,eq,72) output(69,eq,72) output(52,eq,67) output(47,eq,24) output(25,eq,24) output(49,eq,18) output(24,eq,18) output(47,eq,10) output(25,eq,10) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(47,eq,23) output(25,eq,23) output(52,eq,72)
Optimization: 28 14
Answer: 4
preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,(1,13),1,for(atom(hasIngredient(3))),4) preference(1,less(weight)) output(67,better,72) output(64,better,24) output(64,better,23) output(64,better,50) output(69,better,72) output(25,better,24) output(25,better,50) output(25,better,23) output(47,better,24) output(47,better,50) output(47,better,23) output(50,worse,29) output(23,worse,18) output(49,worse,18) output(52,worse,69) output(52,worse,67) output(65,worse,69) output(65,worse,67) output(24,worse,29) output(24,worse,18) output(47,eq,64) output(64,eq,10) output(49,eq,23) output(24,eq,50) output(25,eq,64) output(24,eq,23) output(65,eq,52) output(69,eq,67) output(47,eq,10) output(25,eq,10) output(64,eq,18) output(47,eq,18) output(25,eq,18) output(64,eq,29) output(47,eq,29) output(25,eq,29) output(52,eq,72) output(65,eq,72)
Optimization: 27 2
Answer: 5
preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,(1,13),1,for(atom(hasCategory(3))),4) preference(1,less(weight)) output(50,better,29) output(67,better,72) output(25,better,64) output(25,better,24) output(25,better,29) output(25,better,23) output(47,better,64) output(47,better,24) output(47,better,29) output(47,better,23) output(52,better,69) output(52,better,72) output(64,worse,10) output(64,worse,50) output(64,worse,18) output(69,worse,67) output(23,worse,18) output(49,worse,18) output(65,worse,52) output(65,worse,67) output(24,worse,50) output(24,worse,18) output(49,eq,23) output(64,eq,24) output(24,eq,23) output(69,eq,72) output(52,eq,67) output(65,eq,69) output(64,eq,23) output(24,eq,29) output(47,eq,10) output(25,eq,10) output(47,eq,18) output(25,eq,18) output(47,eq,50) output(25,eq,50) output(64,eq,29) output(65,eq,72)
Optimization: 26 2
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(9))),4) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,10),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasDifficulty(4))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),6) preference(1,(1,13),1,for(atom(hasDifficulty(3))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(50,better,29) output(67,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,50) output(64,better,18) output(64,better,29) output(69,better,67) output(69,better,72) output(23,better,18) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,50) output(25,better,29) output(25,better,23) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(52,better,69) output(52,better,67) output(52,better,72) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasDifficulty(3))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasCategory(4))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasCost(3))),3) preference(1,(1,12),1,for(atom(hasIngredient(9))),3) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(50,better,29) output(67,better,72) output(64,better,10) output(64,better,24) output(64,better,23) output(64,better,50) output(64,better,18) output(64,better,29) output(69,better,67) output(69,better,72) output(23,better,18) output(25,better,64) output(25,better,24) output(25,better,10) output(25,better,18) output(25,better,50) output(25,better,29) output(25,better,23) output(47,better,64) output(47,better,24) output(47,better,10) output(47,better,18) output(47,better,50) output(47,better,29) output(47,better,23) output(49,better,23) output(49,better,18) output(52,better,69) output(52,better,67) output(52,better,72) output(65,better,52) output(65,better,69) output(65,better,67) output(65,better,72) output(24,better,50) output(24,better,23) output(24,better,29) output(24,better,18)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 298.187s (Solving: 295.29s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1183.582s
Threads      : 4        (Winner: 4)

Choices      : 9751508  (Domain: 261811)
Conflicts    : 4030379  (Analyzed: 4030377)
Restarts     : 4470     (Average: 901.65 Last: 145218)
Model-Level  : 59.9    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 4034864  (Deleted: 3790063)
  Binary     : 264      (Ratio:   0.01%)
  Ternary    : 560      (Ratio:   0.01%)
  Conflict   : 4030377  (Average Length:  513.1 Ratio:  99.89%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4487     (Average Length:   98.4 Ratio:   0.11%) 
  Distributed: 1497     (Ratio:   0.04% Average LBD: 3.51) 
  Integrated : 4491     (Ratio: 300.00% Unit: 3 Average Jumps: 112.00)
Backjumps    : 4030377  (Average:  1.95 Max: 1464 Sum: 7842656)
  Executed   : 4030376  (Average:  1.95 Max: 1464 Sum: 7842627 Ratio: 100.00%)
  Bounded    : 1        (Average: 29.00 Max:  29 Sum:     29 Ratio:   0.00%)

Rules        : 457020  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14326   
Bodies       : 18947   
  Sum        : 76      
  Count      : 14      
Equivalences : 7180     (Atom=Atom: 393 Body=Body: 166 Other: 6621)
Tight        : Yes
Variables    : 17071    (Eliminated:    0 Frozen: 7747)
Constraints  : 478592   (Binary:  97.3% Ternary:   2.0% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  7 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCategory(3)) 
}.
