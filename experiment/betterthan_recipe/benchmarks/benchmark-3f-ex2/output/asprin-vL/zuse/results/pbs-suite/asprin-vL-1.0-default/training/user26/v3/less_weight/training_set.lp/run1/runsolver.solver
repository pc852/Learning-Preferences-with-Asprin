asprin_vL version 1.0
Reading from stdin
-:1244:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1254:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1269:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1350:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1611:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1624:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1801:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1930:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2002:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2006:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2006:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2012:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2111:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2137:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2257:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2313:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1161:1-16: info: no atoms over signature occur in program:
  output/3

-:1153:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(49,eq,53) output(53,eq,71) output(71,eq,80) output(80,eq,52) output(33,eq,83) output(84,eq,22) output(39,eq,82) output(82,eq,80) output(80,eq,88) output(88,eq,65) output(65,eq,33) output(68,eq,22) output(88,eq,33) output(80,eq,65) output(71,eq,88) output(82,eq,88) output(39,eq,80) output(65,eq,83) output(71,eq,52) output(82,eq,52) output(53,eq,80) output(49,eq,71) output(49,eq,80) output(39,eq,52) output(53,eq,52) output(49,eq,52) output(88,eq,83) output(80,eq,83) output(39,eq,88) output(53,eq,88) output(49,eq,88) output(71,eq,65) output(82,eq,65) output(39,eq,65) output(53,eq,65) output(80,eq,33) output(71,eq,33) output(82,eq,33) output(39,eq,33) output(53,eq,33) output(49,eq,33) output(49,eq,65) output(71,eq,83) output(82,eq,83) output(39,eq,83) output(53,eq,83) output(49,eq,83)
Optimization: 47 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(8))),8) preference(1,less(weight)) output(53,better,71) output(49,better,71) output(71,worse,80) output(71,worse,88) output(71,worse,52) output(71,worse,65) output(71,worse,33) output(71,worse,83) output(49,eq,53) output(80,eq,52) output(33,eq,83) output(84,eq,22) output(39,eq,82) output(82,eq,80) output(80,eq,88) output(88,eq,65) output(65,eq,33) output(68,eq,22) output(88,eq,33) output(80,eq,65) output(82,eq,88) output(39,eq,80) output(65,eq,83) output(82,eq,52) output(53,eq,80) output(49,eq,80) output(39,eq,52) output(53,eq,52) output(49,eq,52) output(88,eq,83) output(80,eq,83) output(39,eq,88) output(53,eq,88) output(49,eq,88) output(82,eq,65) output(39,eq,65) output(53,eq,65) output(80,eq,33) output(82,eq,33) output(39,eq,33) output(53,eq,33) output(49,eq,33) output(49,eq,65) output(82,eq,83) output(39,eq,83) output(53,eq,83) output(49,eq,83)
Optimization: 45 14
Answer: 3
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasIngredient(9))),3) preference(1,(1,10),1,for(atom(hasIngredient(3))),3) preference(1,(1,11),1,for(atom(hasCategory(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,65) output(53,better,65) output(82,better,65) output(49,better,65) output(68,better,22) output(71,better,65) output(80,worse,88) output(39,worse,82) output(39,worse,80) output(39,worse,52) output(39,worse,88) output(39,worse,33) output(39,worse,83) output(53,worse,88) output(82,worse,88) output(49,worse,88) output(65,worse,33) output(65,worse,83) output(71,worse,88) output(49,eq,53) output(53,eq,71) output(71,eq,80) output(80,eq,52) output(33,eq,83) output(84,eq,22) output(82,eq,80) output(71,eq,52) output(82,eq,52) output(53,eq,80) output(49,eq,71) output(49,eq,80) output(53,eq,52) output(49,eq,52) output(80,eq,83) output(39,eq,65) output(80,eq,33) output(71,eq,33) output(82,eq,33) output(53,eq,33) output(49,eq,33) output(71,eq,83) output(82,eq,83) output(53,eq,83) output(49,eq,83)
Optimization: 38 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasIngredient(9))),3) preference(1,(1,10),1,for(atom(hasIngredient(3))),3) preference(1,(1,11),1,for(atom(hasCategory(4))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,65) output(80,better,33) output(53,better,71) output(53,better,52) output(53,better,65) output(53,better,33) output(82,better,52) output(82,better,65) output(82,better,33) output(68,better,22) output(80,worse,88) output(39,worse,82) output(39,worse,80) output(39,worse,88) output(39,worse,83) output(53,worse,88) output(82,worse,88) output(33,worse,83) output(49,worse,53) output(49,worse,80) output(49,worse,88) output(49,worse,83) output(65,worse,83) output(71,worse,80) output(71,worse,88) output(71,worse,83) output(84,eq,22) output(82,eq,80) output(65,eq,33) output(71,eq,52) output(53,eq,80) output(49,eq,71) output(39,eq,52) output(49,eq,52) output(80,eq,83) output(71,eq,65) output(39,eq,65) output(71,eq,33) output(39,eq,33) output(49,eq,33) output(49,eq,65) output(82,eq,83) output(53,eq,83)
Optimization: 33 14
Answer: 5
preference(1,(1,3),1,for(atom(hasIngredient(8))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasCategory(2))),8) preference(1,(1,13),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(84,better,22) output(53,better,71) output(53,better,80) output(53,better,88) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,33) output(82,better,83) output(49,better,71) output(49,better,80) output(49,better,88) output(49,better,33) output(49,better,83) output(65,better,33) output(65,better,83) output(88,worse,65) output(80,worse,52) output(80,worse,65) output(39,worse,82) output(39,worse,52) output(39,worse,65) output(71,worse,52) output(71,worse,65) output(49,eq,53) output(71,eq,80) output(33,eq,83) output(80,eq,88) output(68,eq,22) output(88,eq,33) output(71,eq,88) output(39,eq,80) output(82,eq,52) output(53,eq,52) output(49,eq,52) output(88,eq,83) output(80,eq,83) output(39,eq,88) output(82,eq,65) output(53,eq,65) output(80,eq,33) output(71,eq,33) output(39,eq,33) output(49,eq,65) output(71,eq,83) output(39,eq,83)
Optimization: 30 4
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),8) preference(1,(1,6),1,for(atom(hasCategory(4))),3) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasIngredient(7))),1) preference(1,(1,10),1,for(atom(hasCost(4))),4) preference(1,(1,11),1,for(atom(hasIngredient(9))),3) preference(1,(1,12),1,for(atom(hasIngredient(8))),5) preference(1,(1,13),1,for(atom(hasCategory(2))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),1) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(39,better,80) output(53,better,71) output(53,better,80) output(82,better,80) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,33) output(49,better,83) output(65,better,33) output(65,better,83) output(71,better,80) output(80,worse,52) output(80,worse,88) output(80,worse,65) output(80,worse,83) output(80,worse,33) output(39,worse,88) output(39,worse,65) output(39,worse,33) output(53,worse,88) output(53,worse,65) output(53,worse,33) output(82,worse,88) output(82,worse,65) output(82,worse,33) output(49,worse,88) output(71,worse,88) output(71,worse,52) output(71,worse,65) output(71,worse,33) output(71,worse,83) output(39,eq,82) output(68,eq,22) output(82,eq,52) output(39,eq,52) output(53,eq,52) output(49,eq,65) output(82,eq,83) output(39,eq,83) output(53,eq,83)
Optimization: 29 14
Answer: 7
preference(1,(1,3),1,for(atom(hasIngredient(8))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(84,better,22) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(53,better,71) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,88) output(82,better,65) output(82,better,33) output(82,better,83) output(49,better,71) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(39,worse,82) output(39,worse,80) output(39,worse,52) output(71,worse,80) output(71,worse,52) output(49,eq,53) output(80,eq,52) output(33,eq,83) output(82,eq,80) output(88,eq,65) output(65,eq,33) output(68,eq,22) output(88,eq,33) output(71,eq,88) output(65,eq,83) output(82,eq,52) output(53,eq,80) output(49,eq,80) output(53,eq,52) output(49,eq,52) output(88,eq,83) output(39,eq,88) output(71,eq,65) output(39,eq,65) output(71,eq,33) output(39,eq,33) output(71,eq,83) output(39,eq,83)
Optimization: 28 4
Answer: 8
preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasIngredient(3))),8) preference(1,(1,13),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(84,better,22) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83) output(39,worse,82) output(39,worse,80) output(49,worse,53) output(49,worse,71) output(49,worse,80) output(53,eq,71) output(71,eq,80) output(33,eq,83) output(82,eq,80) output(88,eq,65) output(65,eq,33) output(68,eq,22) output(88,eq,33) output(65,eq,83) output(53,eq,80) output(39,eq,52) output(49,eq,52) output(88,eq,83) output(39,eq,88) output(49,eq,88) output(39,eq,65) output(39,eq,33) output(49,eq,33) output(49,eq,65) output(39,eq,83) output(49,eq,83)
Optimization: 26 4
Answer: 9
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasCategory(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasIngredient(12))),6) preference(1,(1,9),1,for(atom(hasIngredient(9))),6) preference(1,(1,10),1,for(atom(hasCost(4))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasPrep(0))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,83) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,33) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,52) output(71,better,83) output(80,worse,88) output(80,worse,65) output(80,worse,33) output(39,worse,88) output(39,worse,65) output(39,worse,33) output(53,worse,71) output(53,worse,80) output(53,worse,88) output(53,worse,65) output(53,worse,33) output(82,worse,80) output(82,worse,88) output(82,worse,65) output(82,worse,33) output(49,worse,88) output(49,worse,65) output(71,worse,88) output(71,worse,65) output(71,worse,33) output(71,eq,80) output(82,eq,52) output(53,eq,52) output(82,eq,83) output(53,eq,83)
Optimization: 25 14
Answer: 10
preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),8) preference(1,less(weight)) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(49,better,53) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(68,better,22) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83) output(53,worse,71) output(53,worse,80) output(82,worse,80) output(71,eq,80) output(33,eq,83) output(84,eq,22) output(88,eq,65) output(65,eq,33) output(88,eq,33) output(82,eq,88) output(39,eq,80) output(65,eq,83) output(82,eq,52) output(49,eq,71) output(49,eq,80) output(53,eq,52) output(88,eq,83) output(53,eq,88) output(82,eq,65) output(53,eq,65) output(82,eq,33) output(53,eq,33) output(82,eq,83) output(53,eq,83)
Optimization: 24 3
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasCategory(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(8))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasCost(4))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasCategory(2))),1) preference(1,(1,10),1,for(atom(hasCategory(4))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasCost(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(12))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasCategory(4))),4) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasCategory(2))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasCost(2))),5) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasIngredient(8))),6) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 13
Answer: 13
preference(1,(1,2),1,for(atom(hasCost(4))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasIngredient(3))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),7) preference(1,(1,10),1,for(atom(hasCategory(4))),7) preference(1,(1,11),1,for(atom(hasCategory(2))),6) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 12
Answer: 14
preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,6),1,for(atom(hasIngredient(3))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCategory(4))),7) preference(1,(1,11),1,for(atom(hasCategory(2))),6) preference(1,(1,12),1,for(atom(hasCategory(1))),2) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasCategory(2))),7) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 8
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasCategory(2))),7) preference(1,less(weight)) output(84,better,22) output(88,better,65) output(88,better,33) output(88,better,83) output(80,better,52) output(80,better,88) output(80,better,65) output(80,better,83) output(80,better,33) output(39,better,82) output(39,better,80) output(39,better,52) output(39,better,88) output(39,better,65) output(39,better,33) output(39,better,83) output(53,better,71) output(53,better,80) output(53,better,52) output(53,better,88) output(53,better,65) output(53,better,33) output(53,better,83) output(82,better,80) output(82,better,88) output(82,better,52) output(82,better,65) output(82,better,33) output(82,better,83) output(33,better,83) output(49,better,53) output(49,better,71) output(49,better,80) output(49,better,52) output(49,better,88) output(49,better,33) output(49,better,65) output(49,better,83) output(65,better,33) output(65,better,83) output(68,better,22) output(71,better,80) output(71,better,88) output(71,better,52) output(71,better,65) output(71,better,33) output(71,better,83)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.061 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 598.183s (Solving: 595.19s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2383.414s
Threads      : 4        (Winner: 4)

Choices      : 11649584 (Domain: 636628)
Conflicts    : 8096004  (Analyzed: 8096001)
Restarts     : 7087     (Average: 1142.37 Last: 420438)
Model-Level  : 78.7    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 8113057  (Deleted: 7737865)
  Binary     : 780      (Ratio:   0.01%)
  Ternary    : 1781     (Ratio:   0.02%)
  Conflict   : 8096001  (Average Length:  377.6 Ratio:  99.79%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 17056    (Average Length:   54.5 Ratio:   0.21%) 
  Distributed: 5707     (Ratio:   0.07% Average LBD: 3.64) 
  Integrated : 17121    (Ratio: 300.00% Unit: 33 Average Jumps: 13.79)
Backjumps    : 8096001  (Average:  1.34 Max: 877 Sum: 10866640)
  Executed   : 8095999  (Average:  1.34 Max: 877 Sum: 10866607 Ratio: 100.00%)
  Bounded    : 2        (Average: 16.50 Max:  32 Sum:     33 Ratio:   0.00%)

Rules        : 540353  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15200   
Bodies       : 19046   
  Sum        : 94      
  Count      : 14      
Equivalences : 7495     (Atom=Atom: 483 Body=Body: 202 Other: 6810)
Tight        : Yes
Variables    : 17099    (Eliminated:    0 Frozen: 7775)
Constraints  : 561098   (Binary:  97.7% Ternary:   1.7% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCategory(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(2)) ; 
  8 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasCategory(2)) ; 
  1 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(4)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(3)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(4)) ; 
  7 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCategory(2)) ; 
  4 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCategory(2)) 
}.
