asprin_vL version 1.0
Reading from stdin
-:1254:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1279:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1360:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1634:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1811:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2012:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2016:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2016:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2022:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2121:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2147:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2267:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2301:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2323:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1171:1-16: info: no atoms over signature occur in program:
  output/3

-:1163:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1164:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1165:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1166:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1196:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(44,better,51) output(92,better,10) output(79,better,51) output(65,better,51) output(16,better,51) output(67,better,51) output(10,worse,22) output(84,worse,16) output(84,worse,65) output(84,worse,44) output(84,worse,79) output(33,eq,90) output(90,eq,9) output(9,eq,100) output(79,eq,44) output(58,eq,90) output(90,eq,77) output(16,eq,65) output(65,eq,79) output(16,eq,79) output(33,eq,77) output(58,eq,77) output(65,eq,44) output(90,eq,100) output(33,eq,9) output(58,eq,9) output(33,eq,100) output(58,eq,100) output(16,eq,44) output(84,eq,51)
Optimization: 29 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(44,better,51) output(58,better,90) output(65,better,79) output(58,better,77) output(79,better,51) output(65,better,44) output(58,better,9) output(58,better,100) output(65,better,51) output(16,better,51) output(67,better,51) output(84,worse,16) output(16,worse,65) output(84,worse,65) output(84,worse,44) output(84,worse,79) output(33,eq,90) output(90,eq,9) output(9,eq,100) output(79,eq,44) output(90,eq,77) output(16,eq,79) output(33,eq,77) output(90,eq,100) output(33,eq,9) output(33,eq,100) output(16,eq,44) output(84,eq,51)
Optimization: 24 6
Answer: 3
preference(1,(1,1),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,aso) output(90,better,9) output(44,better,51) output(90,better,77) output(33,better,77) output(58,better,77) output(79,better,51) output(90,better,100) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(65,better,51) output(16,better,51) output(84,better,51) output(67,worse,16) output(10,worse,22) output(67,worse,65) output(92,worse,22) output(67,worse,44) output(67,worse,79) output(33,eq,90) output(9,eq,100) output(79,eq,44) output(58,eq,90) output(92,eq,10) output(84,eq,16) output(16,eq,65) output(65,eq,79) output(16,eq,79) output(84,eq,65) output(65,eq,44) output(16,eq,44) output(84,eq,44) output(84,eq,79) output(67,eq,51)
Optimization: 21 2
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),0,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(90,better,77) output(92,better,10) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(33,better,9) output(58,better,9) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,51) output(84,better,51) output(9,worse,100) output(44,worse,51) output(10,worse,22) output(33,eq,90) output(67,eq,16) output(58,eq,90) output(84,eq,16) output(16,eq,65) output(65,eq,79) output(16,eq,79) output(67,eq,65) output(84,eq,65) output(92,eq,22) output(90,eq,100) output(33,eq,100) output(58,eq,100) output(67,eq,79) output(84,eq,79)
Optimization: 18 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(90,better,77) output(92,better,10) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(33,better,9) output(58,better,9) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,51) output(84,better,51) output(9,worse,100) output(44,worse,51) output(33,eq,90) output(67,eq,16) output(58,eq,90) output(10,eq,22) output(84,eq,16) output(16,eq,65) output(65,eq,79) output(16,eq,79) output(67,eq,65) output(84,eq,65) output(90,eq,100) output(33,eq,100) output(58,eq,100) output(67,eq,79) output(84,eq,79)
Optimization: 17 2
Answer: 6
preference(1,(1,1),0,for(atom(hasIngredient(12))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(44,better,51) output(67,better,16) output(90,better,77) output(92,better,10) output(84,better,16) output(16,better,65) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(79,better,51) output(65,better,44) output(33,better,9) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,51) output(84,better,51) output(9,worse,100) output(58,worse,90) output(10,worse,22) output(65,worse,79) output(16,worse,79) output(58,worse,100) output(33,eq,90) output(90,eq,100) output(33,eq,100) output(67,eq,79) output(84,eq,79)
Optimization: 13 5
Answer: 7
preference(1,(1,1),0,for(atom(hasIngredient(12))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(44,better,51) output(67,better,16) output(90,better,77) output(92,better,10) output(84,better,16) output(16,better,65) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(33,better,9) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,51) output(84,better,51) output(9,worse,100) output(58,worse,90) output(10,worse,22) output(65,worse,79) output(16,worse,79) output(58,worse,100) output(33,eq,90) output(90,eq,100) output(33,eq,100) output(67,eq,79) output(84,eq,79)
Optimization: 12 5
Answer: 8
preference(1,(1,1),0,for(atom(hasIngredient(12))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(44,better,51) output(67,better,16) output(90,better,77) output(92,better,10) output(10,better,22) output(84,better,16) output(16,better,65) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(33,better,9) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,51) output(84,better,51) output(9,worse,100) output(58,worse,90) output(65,worse,79) output(16,worse,79) output(58,worse,100) output(33,eq,90) output(90,eq,100) output(33,eq,100) output(67,eq,79) output(84,eq,79)
Optimization: 11 5
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasPrep(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(5))),()) preference(1,aso) output(33,better,90) output(79,better,44) output(67,better,16) output(58,better,90) output(90,better,77) output(10,better,22) output(84,better,16) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(65,better,44) output(90,better,100) output(58,better,9) output(33,better,100) output(58,better,100) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51)
Optimization: 10 6
Answer: 10
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(90,better,9) output(44,better,51) output(67,better,16) output(58,better,90) output(90,better,77) output(10,better,22) output(16,better,65) output(65,better,79) output(16,better,79) output(67,better,65) output(84,better,65) output(92,better,22) output(58,better,77) output(79,better,51) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51)
Optimization: 9 6
Answer: 11
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasDifficulty(2))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,aso) output(33,better,90) output(90,better,9) output(44,better,51) output(67,better,16) output(58,better,90) output(90,better,77) output(10,better,22) output(16,better,65) output(65,better,79) output(16,better,79) output(67,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51) output(79,worse,44) output(84,worse,16) output(84,eq,65)
Optimization: 8 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasCost(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(2))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,aso) output(33,better,90) output(90,better,9) output(44,better,51) output(67,better,16) output(58,better,90) output(90,better,77) output(10,better,22) output(16,better,65) output(65,better,79) output(16,better,79) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51) output(9,worse,100) output(79,worse,44)
Optimization: 7 5
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(33,better,90) output(9,better,100) output(79,better,44) output(44,better,51) output(58,better,90) output(90,better,77) output(92,better,10) output(10,better,22) output(84,better,16) output(16,better,65) output(65,better,79) output(16,better,79) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(84,better,79) output(67,better,51) output(84,better,51)
Optimization: 6 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(atom(hasPrep(4))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),3,for(atom(hasPrepTime(3))),()) preference(1,(1,3),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(90,better,9) output(79,better,44) output(44,better,51) output(67,better,16) output(90,better,77) output(92,better,10) output(84,better,16) output(65,better,79) output(16,better,79) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(90,better,100) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51) output(33,worse,90) output(58,worse,90) output(10,worse,22) output(16,eq,65)
Optimization: 5 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,(1,6),3,for(atom(hasDifficulty(4))),()) preference(1,aso) output(33,better,90) output(90,better,9) output(9,better,100) output(79,better,44) output(44,better,51) output(67,better,16) output(58,better,90) output(90,better,77) output(92,better,10) output(10,better,22) output(84,better,16) output(16,better,65) output(65,better,79) output(16,better,79) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(90,better,100) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,aso) output(33,better,90) output(90,better,9) output(9,better,100) output(79,better,44) output(44,better,51) output(67,better,16) output(58,better,90) output(90,better,77) output(92,better,10) output(10,better,22) output(84,better,16) output(16,better,65) output(65,better,79) output(16,better,79) output(67,better,65) output(84,better,65) output(92,better,22) output(33,better,77) output(58,better,77) output(79,better,51) output(65,better,44) output(90,better,100) output(33,better,9) output(58,better,9) output(33,better,100) output(58,better,100) output(16,better,44) output(67,better,44) output(84,better,44) output(65,better,51) output(16,better,51) output(67,better,79) output(84,better,79) output(67,better,51) output(84,better,51)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
Progression : 0 [4;5] (Error: 0.25)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 0 5
Calls        : 1
Time         : 11.420s (Solving: 4.76s 1st Model: 0.46s Unsat: 0.94s)
CPU Time     : 25.464s
Threads      : 4        (Winner: 0)

Choices      : 234492   (Domain: 1507)
Conflicts    : 31708    (Analyzed: 31703)
Restarts     : 59       (Average: 537.34 Last: 992)
Model-Level  : 406.6   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 53679    (Deleted: 5597)
  Binary     : 1510     (Ratio:   2.81%)
  Ternary    : 7286     (Ratio:  13.57%)
  Conflict   : 31703    (Average Length:  165.0 Ratio:  59.06%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 21976    (Average Length:   56.7 Ratio:  40.94%) 
  Distributed: 7488     (Ratio:  23.62% Average LBD: 3.11) 
  Integrated : 22464    (Ratio: 300.00% Unit: 309 Average Jumps: 91.25)
Backjumps    : 31703    (Average:  5.92 Max: 1375 Sum: 187727)
  Executed   : 31687    (Average:  5.91 Max: 1375 Sum: 187414 Ratio:  99.83%)
  Bounded    : 16       (Average: 19.56 Max:  33 Sum:    313 Ratio:   0.17%)

Rules        : 3377773 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 561582  
Bodies       : 695048  
  Count      : 1284    
Equivalences : 1705245  (Atom=Atom: 501173 Body=Body: 545436 Other: 658636)
Tight        : Yes
Variables    : 99331    (Eliminated:    0 Frozen: 34087)
Constraints  : 2979040  (Binary:  96.7% Ternary:   3.0% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasCost(3))  >> not atom(hasCategory(1))  || not atom(hasCategory(4))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasIngredient(4))  || atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasCost(3))  >> not atom(hasCategory(1))  || not atom(hasDifficulty(2))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasIngredient(4))  || atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasCost(3))  >> not atom(hasCategory(1))  || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasIngredient(4))  || atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(4))  >> not atom(hasDifficulty(2))  || atom(hasIngredient(12)) ; 
  atom(hasIngredient(4)) >> atom(hasDifficulty(2)) >> not atom(hasIngredient(10))  || not atom(hasIngredient(4))  ; 
  not atom(hasPrepTime(3))  >> atom(hasDifficulty(2)) >> not atom(hasIngredient(11))  || atom(hasPrepTime(3)) ; 
  atom(hasCategory(4)) >> atom(hasDifficulty(4)) || not atom(hasPrep(6))  ; 
  not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(4))  >> atom(hasDifficulty(3)) || atom(hasIngredient(12)) ; 
  atom(hasPrepTime(2)) >> atom(hasDifficulty(2)) >> not atom(hasIngredient(1))  || not atom(hasPrepTime(2))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(7)) >> not atom(hasDifficulty(2))  || not atom(hasIngredient(10))  ; 
  atom(hasCategory(4)) >> atom(hasDifficulty(4)) || not atom(hasPrep(6))  ; 
  not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(4))  >> atom(hasDifficulty(3)) || atom(hasIngredient(12)) ; 
  atom(hasPrepTime(2)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(7))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(2))  || not atom(hasIngredient(10))  ; 
  atom(hasCategory(4)) >> atom(hasDifficulty(4)) || not atom(hasPrep(6))  ; 
  not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(1))  >> not atom(hasPrep(2))  >> atom(hasIngredient(5)) || not atom(hasCategory(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(0)) >> not atom(hasIngredient(10))  || not atom(hasDifficulty(2))  ; 
  atom(hasCategory(1)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(10))  || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(10)) >> not atom(hasIngredient(12))  || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(4)) >> atom(hasCost(5)) >> not atom(hasIngredient(8))  || not atom(hasIngredient(10))  ; 
  atom(hasPrep(2)) >> atom(hasPrep(5)) >> not atom(hasDifficulty(2))  || not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> not atom(hasPrep(4))  >> not atom(hasIngredient(1))  || atom(hasCost(4)) ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(4)) >> not atom(hasIngredient(5))  >> not atom(hasIngredient(3))  || not atom(hasPrep(1))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(0)) >> atom(hasIngredient(3)) || not atom(hasIngredient(9))  ; 
  not atom(hasDifficulty(3))  >> not atom(hasPrep(1))  || atom(hasDifficulty(3)) ; 
  not atom(hasPrep(5))  >> not atom(hasIngredient(4))  || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> not atom(hasIngredient(12))  || atom(hasCost(4)) ; 
  atom(hasIngredient(4)) >> not atom(hasIngredient(5))  >> not atom(hasIngredient(3))  || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(2)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasIngredient(4))  ; 
  atom(hasCost(3)) || not atom(hasDifficulty(2))  ; 
  not atom(hasCost(5))  >> not atom(hasPrepTime(1))  || atom(hasDifficulty(3)) ; 
  atom(hasIngredient(4)) >> not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> not atom(hasPrep(2))  >> atom(hasPrepTime(3)) || not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(4)) >> not atom(hasIngredient(5))  >> not atom(hasIngredient(3))  || not atom(hasPrep(1))  ; 
  atom(hasCost(2)) >> not atom(hasIngredient(10))  || atom(hasCategory(3)) ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasIngredient(4))  ; 
  atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasCost(4)) >> atom(hasIngredient(9)) || not atom(hasCategory(4))  ; 
  atom(hasDifficulty(2)) >> atom(hasCategory(3)) >> atom(hasIngredient(3)) || not atom(hasCost(4))  ; 
  atom(hasIngredient(6)) >> atom(hasPrep(6)) >> not atom(hasIngredient(10))  || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(9)) >> atom(hasDifficulty(2)) >> not atom(hasCost(4))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasPrep(3))  ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasCost(4)) >> not atom(hasCategory(3))  || not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(7)) >> atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(6)) >> not atom(hasPrep(2))  >> atom(hasPrepTime(3)) || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(9)) >> atom(hasDifficulty(2)) >> not atom(hasCost(4))  || atom(hasPrep(4)) ; 
  atom(hasCost(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasDifficulty(2))  ; 
  atom(hasPrep(3)) >> atom(hasPrepTime(1)) >> atom(hasIngredient(1)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasPrep(3))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(4))  || not atom(hasCategory(4))  ; 
  atom(hasIngredient(4)) >> not atom(hasIngredient(7))  >> atom(hasPrep(5)) || not atom(hasIngredient(8))  ; 
  atom(hasCost(4)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(4)) || not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(11)) >> not atom(hasCost(4))  >> atom(hasCategory(3)) ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> atom(hasCategory(3)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(7))  >> atom(hasPrep(5)) || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(4)) >> not atom(hasCost(4))  >> atom(hasPrep(0)) ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(1))  >> not atom(hasIngredient(10))  
}.
