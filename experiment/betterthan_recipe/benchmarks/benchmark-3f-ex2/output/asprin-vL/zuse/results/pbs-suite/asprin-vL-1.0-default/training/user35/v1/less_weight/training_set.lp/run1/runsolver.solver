asprin_vL version 1.0
Reading from stdin
-:1315:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1325:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1340:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1421:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1682:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1695:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1872:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2001:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2073:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2077:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2077:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2083:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2182:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2208:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2328:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2362:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2384:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1232:1-16: info: no atoms over signature occur in program:
  output/3

-:1224:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1225:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(86,eq,52) output(25,eq,78) output(78,eq,62) output(62,eq,8) output(75,eq,94) output(94,eq,55) output(52,eq,25) output(8,eq,75) output(55,eq,17) output(60,eq,30) output(30,eq,76) output(78,eq,71) output(98,eq,53) output(53,eq,94) output(94,eq,17) output(17,eq,99) output(76,eq,78) output(71,eq,98) output(78,eq,98) output(30,eq,78) output(55,eq,99) output(94,eq,99) output(75,eq,17) output(53,eq,17) output(98,eq,94) output(71,eq,53) output(25,eq,71) output(76,eq,71) output(60,eq,76) output(62,eq,75) output(86,eq,25) output(75,eq,55) output(53,eq,55) output(8,eq,94) output(78,eq,8) output(25,eq,62) output(76,eq,62) output(52,eq,78) output(86,eq,78) output(30,eq,62) output(60,eq,62) output(52,eq,62) output(86,eq,62) output(25,eq,8) output(76,eq,8) output(30,eq,8) output(52,eq,8) output(62,eq,94) output(78,eq,94) output(98,eq,55) output(71,eq,55) output(8,eq,55) output(62,eq,55) output(78,eq,75) output(25,eq,75) output(76,eq,75) output(30,eq,71) output(60,eq,71) output(52,eq,71) output(86,eq,71) output(78,eq,53) output(25,eq,53) output(76,eq,53) output(71,eq,94) output(98,eq,17) output(71,eq,17) output(8,eq,17) output(62,eq,17) output(75,eq,99) output(53,eq,99) output(98,eq,99) output(8,eq,99) output(60,eq,78) output(25,eq,98) output(76,eq,98) output(30,eq,98) output(52,eq,98) output(86,eq,98) output(60,eq,98) output(62,eq,99) output(78,eq,99) output(25,eq,99) output(76,eq,99) output(30,eq,99) output(52,eq,99) output(71,eq,99) output(78,eq,17) output(25,eq,17) output(76,eq,17) output(30,eq,17) output(60,eq,17) output(52,eq,17) output(86,eq,17) output(25,eq,94) output(76,eq,94) output(30,eq,94) output(60,eq,94) output(52,eq,94) output(86,eq,94) output(30,eq,53) output(60,eq,53) output(52,eq,53) output(86,eq,53) output(30,eq,75) output(60,eq,75) output(52,eq,75) output(86,eq,75) output(78,eq,55) output(25,eq,55) output(76,eq,55) output(30,eq,55) output(60,eq,55) output(52,eq,55) output(86,eq,55) output(86,eq,8) output(60,eq,8) output(60,eq,99) output(86,eq,99)
Optimization: 118 0
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(9))),7) preference(1,(1,2),1,for(atom(hasCategory(3))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCategory(4))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasCost(3))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),8) preference(1,(1,11),1,for(atom(hasIngredient(12))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,(1,14),1,for(atom(hasPrep(1))),8) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,94) output(8,better,55) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,62) output(30,better,98) output(30,better,94) output(30,better,53) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,98) output(52,better,99) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,99) output(75,better,94) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(8,worse,75) output(8,worse,17) output(53,worse,94) output(53,worse,17) output(53,worse,55) output(53,worse,99) output(55,worse,17) output(55,worse,99) output(62,worse,8) output(62,worse,75) output(62,worse,94) output(62,worse,55) output(62,worse,17) output(62,worse,99) output(94,worse,55) output(94,worse,17) output(94,worse,99) output(98,worse,94) output(98,worse,55) output(98,worse,17) output(98,worse,99) output(30,worse,76) output(30,worse,78) output(30,worse,8) output(30,worse,71) output(30,worse,99) output(30,worse,17) output(30,worse,75) output(52,worse,25) output(52,worse,78) output(71,worse,17) output(75,worse,17) output(86,worse,25) output(86,worse,78) output(76,worse,78) output(98,eq,53) output(8,eq,99) output(60,eq,78) output(52,eq,17) output(30,eq,55)
Optimization: 40 13
Answer: 3
preference(1,(1,1),1,for(atom(hasIngredient(9))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasCategory(3))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasIngredient(3))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),8) preference(1,(1,10),1,for(atom(hasCost(3))),4) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),3) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(60,better,30) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,17) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,99) output(98,better,53) output(98,better,94) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,62) output(30,better,8) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,75) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(78,better,62) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,99) output(78,better,17) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,8) output(86,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,99) output(76,better,17) output(76,better,94) output(60,worse,98) output(60,worse,55) output(8,worse,55) output(53,worse,55) output(62,worse,55) output(94,worse,55) output(94,worse,17) output(94,worse,99) output(98,worse,55) output(30,worse,76) output(30,worse,78) output(30,worse,71) output(30,worse,98) output(30,worse,53) output(30,worse,55) output(52,worse,25) output(52,worse,55) output(71,worse,98) output(71,worse,55) output(75,worse,55) output(78,worse,98) output(78,worse,55) output(86,worse,52) output(86,worse,25) output(86,worse,98) output(86,worse,55) output(76,worse,98) output(76,worse,55) output(62,eq,8) output(78,eq,71) output(17,eq,99) output(75,eq,17) output(71,eq,53) output(60,eq,76) output(78,eq,53) output(75,eq,99) output(52,eq,98)
Optimization: 37 14
Answer: 4
preference(1,(1,1),1,for(atom(hasCategory(3))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasIngredient(3))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(60,better,30) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,17) output(53,better,55) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,75) output(62,better,17) output(62,better,99) output(94,better,55) output(94,better,17) output(94,better,99) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(52,better,78) output(52,better,62) output(52,better,71) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,99) output(75,better,17) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(62,worse,8) output(62,worse,94) output(30,worse,76) output(30,worse,78) output(30,worse,62) output(30,worse,8) output(30,worse,71) output(30,worse,98) output(30,worse,99) output(30,worse,17) output(30,worse,94) output(30,worse,53) output(30,worse,75) output(30,worse,55) output(52,worse,25) output(52,worse,8) output(52,worse,98) output(71,worse,98) output(71,worse,53) output(71,worse,55) output(71,worse,94) output(75,worse,94) output(75,worse,55) output(78,worse,98) output(78,worse,8) output(86,worse,25) output(60,eq,76) output(76,eq,8) output(62,eq,55) output(71,eq,17) output(86,eq,8) output(60,eq,8)
Optimization: 32 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(5))),3) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),6) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasIngredient(9))),1) preference(1,(1,12),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,55) output(62,better,55) output(94,better,55) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,76) output(30,better,78) output(30,better,62) output(30,better,8) output(30,better,98) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,75) output(30,better,55) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,62) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,55) output(86,better,99) output(76,better,62) output(76,better,53) output(76,better,17) output(76,better,94) output(76,better,55) output(8,worse,75) output(53,worse,17) output(53,worse,99) output(55,worse,17) output(55,worse,99) output(62,worse,8) output(62,worse,75) output(62,worse,17) output(62,worse,99) output(94,worse,17) output(94,worse,99) output(52,worse,25) output(52,worse,71) output(78,worse,71) output(86,worse,52) output(86,worse,25) output(86,worse,78) output(86,worse,71) output(86,worse,75) output(17,worse,99) output(76,worse,78) output(76,worse,71) output(76,worse,8) output(76,worse,75) output(76,worse,98) output(76,worse,99) output(53,eq,94) output(62,eq,94) output(30,eq,71) output(98,eq,99) output(86,eq,8)
Optimization: 31 14
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(3))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,6),1,for(atom(hasIngredient(9))),7) preference(1,(1,7),1,for(atom(hasCategory(4))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasCost(3))),7) preference(1,(1,11),1,for(atom(hasCost(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasIngredient(12))),5) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,55) output(53,better,99) output(55,better,99) output(62,better,94) output(62,better,99) output(94,better,99) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,62) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,55) output(52,better,62) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,98) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(55,worse,17) output(62,worse,8) output(62,worse,75) output(62,worse,17) output(94,worse,55) output(94,worse,17) output(25,worse,8) output(30,worse,76) output(30,worse,78) output(30,worse,8) output(30,worse,71) output(30,worse,98) output(30,worse,75) output(52,worse,25) output(52,worse,78) output(52,worse,8) output(52,worse,71) output(78,worse,71) output(78,worse,8) output(86,worse,25) output(86,worse,8) output(53,eq,17) output(76,eq,8) output(62,eq,55) output(52,eq,75)
Optimization: 25 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasCost(2))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasCost(3))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasDifficulty(3))),7) preference(1,(1,12),1,for(atom(hasIngredient(7))),1) preference(1,(1,13),1,for(atom(hasIngredient(3))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,17) output(62,better,99) output(94,better,55) output(94,better,17) output(94,better,99) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,99) output(30,better,17) output(30,better,53) output(52,better,62) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(53,worse,94) output(53,worse,17) output(53,worse,55) output(62,worse,8) output(62,worse,75) output(62,worse,94) output(30,worse,76) output(30,worse,78) output(30,worse,8) output(30,worse,71) output(30,worse,98) output(30,worse,94) output(30,worse,75) output(52,worse,25) output(52,worse,78) output(52,worse,8) output(52,worse,71) output(52,worse,98) output(86,worse,25) output(75,eq,94) output(30,eq,62) output(62,eq,55) output(30,eq,55)
Optimization: 23 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),4) preference(1,(1,3),1,for(atom(hasCategory(4))),2) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasDifficulty(3))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),3) preference(1,(1,9),1,for(atom(hasCategory(2))),6) preference(1,(1,10),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasCost(4))),5) preference(1,(1,12),1,for(atom(hasIngredient(12))),4) preference(1,(1,13),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(60,better,30) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,99) output(55,better,99) output(62,better,94) output(62,better,99) output(98,better,94) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,62) output(30,better,98) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,75) output(30,better,55) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(62,worse,8) output(62,worse,75) output(94,worse,55) output(94,worse,17) output(30,worse,76) output(30,worse,78) output(86,worse,52) output(86,worse,25) output(52,eq,25) output(55,eq,17) output(98,eq,53) output(94,eq,99) output(53,eq,17) output(60,eq,76) output(53,eq,55) output(30,eq,8) output(98,eq,55) output(62,eq,55) output(30,eq,71) output(98,eq,17) output(62,eq,17)
Optimization: 21 14
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasIngredient(7))),6) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),4) preference(1,(1,8),1,for(atom(hasIngredient(4))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasIngredient(10))),8) preference(1,(1,14),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,75) output(62,better,99) output(94,better,17) output(94,better,99) output(98,better,53) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,76) output(30,better,62) output(30,better,8) output(30,better,98) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,75) output(30,better,55) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(78,better,62) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,25) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,62) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55) output(53,worse,94) output(53,worse,17) output(53,worse,55) output(62,worse,8) output(62,worse,94) output(62,worse,55) output(62,worse,17) output(30,worse,71) output(52,worse,25) output(75,worse,94) output(75,worse,17) output(75,worse,55) output(75,worse,99) output(78,worse,71) output(76,worse,78) output(76,worse,71) output(94,eq,55) output(30,eq,78) output(98,eq,94) output(76,eq,8) output(98,eq,55)
Optimization: 21 13
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(3))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,4),1,for(atom(hasIngredient(8))),3) preference(1,(1,5),1,for(atom(hasPrep(6))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(4))),6) preference(1,(1,8),1,for(atom(hasPrep(7))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasIngredient(7))),4) preference(1,(1,11),1,for(atom(hasCost(3))),3) preference(1,(1,12),1,for(atom(hasCategory(2))),1) preference(1,(1,13),1,for(atom(hasIngredient(10))),8) preference(1,(1,14),1,for(atom(hasCategory(5))),6) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,17) output(53,better,55) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,8) output(62,better,75) output(62,better,94) output(62,better,55) output(62,better,17) output(62,better,99) output(94,better,55) output(94,better,17) output(94,better,99) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,76) output(30,better,78) output(30,better,62) output(30,better,8) output(30,better,71) output(30,better,98) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,75) output(30,better,55) output(52,better,25) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,25) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Progression : 0 [ 3;14] (Error: 3.66667)
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(3))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(2))),2) preference(1,(1,7),1,for(atom(hasCategory(5))),6) preference(1,(1,8),1,for(atom(hasCost(3))),3) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasIngredient(8))),3) preference(1,(1,12),1,for(atom(hasCategory(2))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),5) preference(1,(1,14),1,for(atom(hasDifficulty(3))),4) preference(1,less(weight)) output(60,better,30) output(60,better,76) output(60,better,62) output(60,better,71) output(60,better,78) output(60,better,98) output(60,better,17) output(60,better,94) output(60,better,53) output(60,better,75) output(60,better,55) output(60,better,8) output(60,better,99) output(8,better,75) output(8,better,94) output(8,better,55) output(8,better,17) output(8,better,99) output(53,better,94) output(53,better,17) output(53,better,55) output(53,better,99) output(55,better,17) output(55,better,99) output(62,better,8) output(62,better,75) output(62,better,94) output(62,better,55) output(62,better,17) output(62,better,99) output(94,better,55) output(94,better,17) output(94,better,99) output(98,better,53) output(98,better,94) output(98,better,55) output(98,better,17) output(98,better,99) output(25,better,78) output(25,better,71) output(25,better,62) output(25,better,8) output(25,better,75) output(25,better,53) output(25,better,98) output(25,better,99) output(25,better,17) output(25,better,94) output(25,better,55) output(30,better,76) output(30,better,78) output(30,better,62) output(30,better,8) output(30,better,71) output(30,better,98) output(30,better,99) output(30,better,17) output(30,better,94) output(30,better,53) output(30,better,75) output(30,better,55) output(52,better,25) output(52,better,78) output(52,better,62) output(52,better,8) output(52,better,71) output(52,better,98) output(52,better,99) output(52,better,17) output(52,better,94) output(52,better,53) output(52,better,75) output(52,better,55) output(71,better,98) output(71,better,53) output(71,better,55) output(71,better,94) output(71,better,17) output(71,better,99) output(75,better,94) output(75,better,17) output(75,better,55) output(75,better,99) output(78,better,62) output(78,better,71) output(78,better,98) output(78,better,8) output(78,better,94) output(78,better,75) output(78,better,53) output(78,better,99) output(78,better,17) output(78,better,55) output(86,better,52) output(86,better,25) output(86,better,78) output(86,better,62) output(86,better,71) output(86,better,98) output(86,better,17) output(86,better,94) output(86,better,53) output(86,better,75) output(86,better,55) output(86,better,8) output(86,better,99) output(17,better,99) output(76,better,78) output(76,better,71) output(76,better,62) output(76,better,8) output(76,better,75) output(76,better,53) output(76,better,98) output(76,better,99) output(76,better,17) output(76,better,94) output(76,better,55)
Optimization: 0 13
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.112 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 597.592s (Solving: 593.77s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2377.867s
Threads      : 4        (Winner: 4)

Choices      : 12186283 (Domain: 272988)
Conflicts    : 9001638  (Analyzed: 9001635)
Restarts     : 8084     (Average: 1113.51 Last: 587820)
Model-Level  : 40.5    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 9068025  (Deleted: 8655389)
  Binary     : 472      (Ratio:   0.01%)
  Ternary    : 3597     (Ratio:   0.04%)
  Conflict   : 9001635  (Average Length:  488.9 Ratio:  99.27%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 66390    (Average Length:   59.5 Ratio:   0.73%) 
  Distributed: 22239    (Ratio:   0.25% Average LBD: 3.70) 
  Integrated : 66717    (Ratio: 300.00% Unit: 138 Average Jumps: 6.82)
Backjumps    : 9001635  (Average:  1.27 Max: 843 Sum: 11472947)
  Executed   : 9001632  (Average:  1.27 Max: 843 Sum: 11472888 Ratio: 100.00%)
  Bounded    : 3        (Average: 19.67 Max:  57 Sum:     59 Ratio:   0.00%)

Rules        : 1212044 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 22182   
Bodies       : 19827   
  Sum        : 236     
  Count      : 14      
Equivalences : 9980     (Atom=Atom: 1193 Body=Body: 486 Other: 8301)
Tight        : Yes
Variables    : 17407    (Eliminated:    0 Frozen: 8083)
Constraints  : 1226352  (Binary:  98.9% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(3)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(2)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCost(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasCategory(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(3)) 
}.
