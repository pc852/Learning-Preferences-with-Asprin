asprin_vL version 1.0
Reading from stdin
-:1245:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1255:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1270:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1351:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1612:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1625:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1802:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1931:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2003:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2007:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2112:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2138:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2258:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2292:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2314:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1162:1-16: info: no atoms over signature occur in program:
  output/3

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1155:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,65) output(65,eq,22) output(22,eq,92) output(92,eq,77) output(77,eq,79) output(10,eq,84) output(75,eq,64) output(100,eq,92) output(92,eq,38) output(38,eq,84) output(84,eq,24) output(24,eq,52) output(84,eq,52) output(10,eq,24) output(38,eq,24) output(92,eq,84) output(22,eq,38) output(100,eq,38) output(92,eq,79) output(22,eq,77) output(100,eq,77) output(65,eq,92) output(58,eq,22) output(58,eq,92) output(65,eq,77) output(58,eq,77) output(22,eq,79) output(100,eq,79) output(65,eq,79) output(65,eq,38) output(58,eq,38) output(22,eq,84) output(100,eq,84) output(65,eq,84) output(92,eq,24) output(22,eq,24) output(100,eq,24) output(10,eq,52) output(38,eq,52) output(92,eq,52) output(22,eq,52) output(100,eq,52) output(65,eq,52) output(58,eq,52) output(65,eq,24) output(58,eq,24) output(58,eq,84) output(58,eq,79)
Optimization: 48 0
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(9))),2) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCategory(3))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasPrepTime(3))),6) preference(1,(1,11),1,for(atom(hasIngredient(7))),7) preference(1,(1,12),1,for(atom(hasPrep(4))),3) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCategory(4))),4) preference(1,less(weight)) output(10,better,24) output(22,better,38) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,24) output(38,better,52) output(92,better,38) output(92,better,24) output(92,better,52) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,52) output(38,worse,84) output(100,worse,92) output(100,worse,38) output(100,worse,77) output(100,worse,79) output(100,worse,84) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(65,worse,22) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,84) output(65,worse,52) output(65,worse,24) output(75,worse,64) output(24,worse,52) output(22,eq,92) output(92,eq,77) output(77,eq,79) output(92,eq,84) output(92,eq,79) output(22,eq,77) output(22,eq,79) output(22,eq,84)
Optimization: 35 14
Answer: 3
preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,84) output(10,better,52) output(38,better,84) output(38,better,52) output(77,better,79) output(58,better,22) output(58,better,92) output(58,better,52) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,79) output(65,better,84) output(65,better,52) output(75,better,64) output(24,better,52) output(22,worse,38) output(22,worse,77) output(22,worse,24) output(84,worse,24) output(92,worse,77) output(92,worse,38) output(92,worse,24) output(100,worse,38) output(100,worse,77) output(100,worse,24) output(58,eq,65) output(22,eq,92) output(100,eq,92) output(84,eq,52) output(10,eq,24) output(38,eq,24) output(92,eq,84) output(92,eq,79) output(65,eq,77) output(58,eq,77) output(22,eq,79) output(100,eq,79) output(65,eq,38) output(58,eq,38) output(22,eq,84) output(100,eq,84) output(92,eq,52) output(22,eq,52) output(100,eq,52) output(65,eq,24) output(58,eq,24)
Optimization: 31 1
Answer: 4
preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(10,better,84) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(58,better,22) output(58,better,77) output(58,better,38) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(22,worse,92) output(22,worse,24) output(22,worse,52) output(84,worse,24) output(84,worse,52) output(38,worse,24) output(38,worse,52) output(58,eq,65) output(77,eq,79) output(75,eq,64) output(100,eq,92) output(38,eq,84) output(24,eq,52) output(10,eq,24) output(22,eq,38) output(22,eq,77) output(65,eq,92) output(58,eq,92) output(22,eq,79) output(22,eq,84) output(92,eq,24) output(100,eq,24) output(10,eq,52) output(92,eq,52) output(100,eq,52) output(65,eq,52) output(58,eq,52) output(65,eq,24) output(58,eq,24)
Optimization: 29 1
Answer: 5
preference(1,(1,1),1,for(atom(hasIngredient(9))),2) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCategory(3))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasCost(4))),3) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCategory(4))),4) preference(1,less(weight)) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(10,worse,84) output(10,worse,24) output(10,worse,52) output(100,worse,92) output(100,worse,38) output(100,worse,77) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(65,worse,22) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,84) output(65,worse,52) output(65,worse,24) output(75,worse,64) output(24,worse,52) output(92,eq,77) output(84,eq,52)
Optimization: 27 14
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(9))),2) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasPrep(7))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCategory(3))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasPrep(6))),2) preference(1,(1,10),1,for(atom(hasCost(4))),3) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasIngredient(10))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCategory(4))),4) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(100,worse,92) output(100,worse,38) output(100,worse,77) output(58,worse,65) output(58,worse,22) output(58,worse,92) output(58,worse,77) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(65,worse,22) output(65,worse,92) output(65,worse,77) output(65,worse,79) output(65,worse,38) output(65,worse,84) output(65,worse,52) output(65,worse,24) output(75,worse,64) output(24,worse,52) output(92,eq,77) output(84,eq,52)
Optimization: 24 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasPrep(7))),4) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasIngredient(10))),3) preference(1,(1,6),1,for(atom(hasCost(5))),6) preference(1,(1,7),1,for(atom(hasCategory(5))),5) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(6))),6) preference(1,(1,11),1,for(atom(hasCategory(4))),4) preference(1,(1,12),1,for(atom(hasDifficulty(4))),6) preference(1,(1,13),1,for(atom(hasCost(3))),2) preference(1,(1,14),1,for(atom(hasIngredient(3))),4) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(24,better,52)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(3))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasIngredient(12))),3) preference(1,(1,6),1,for(atom(hasCategory(5))),8) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),5) preference(1,(1,9),1,for(atom(hasCategory(4))),3) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasCost(4))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(24,better,52)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCost(3))),1) preference(1,(1,4),1,for(atom(hasCategory(5))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCategory(4))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasIngredient(3))),4) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(24,better,52)
Optimization: 0 12
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(7))),3) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCost(3))),1) preference(1,(1,4),1,for(atom(hasCategory(5))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(3))),4) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(10))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(24,better,52)
Optimization: 0 11
Answer: 11
preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasIngredient(3))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasCost(3))),1) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCategory(5))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,84) output(10,better,24) output(10,better,52) output(22,better,92) output(22,better,38) output(22,better,77) output(22,better,79) output(22,better,84) output(22,better,24) output(22,better,52) output(84,better,24) output(84,better,52) output(38,better,84) output(38,better,24) output(38,better,52) output(77,better,79) output(92,better,77) output(92,better,38) output(92,better,84) output(92,better,79) output(92,better,24) output(92,better,52) output(100,better,92) output(100,better,38) output(100,better,77) output(100,better,79) output(100,better,84) output(100,better,24) output(100,better,52) output(58,better,65) output(58,better,22) output(58,better,92) output(58,better,77) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(65,better,22) output(65,better,92) output(65,better,77) output(65,better,79) output(65,better,38) output(65,better,84) output(65,better,52) output(65,better,24) output(75,better,64) output(24,better,52)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.055 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 298.170s (Solving: 295.19s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1183.460s
Threads      : 4        (Winner: 4)

Choices      : 9235056  (Domain: 276316)
Conflicts    : 4316895  (Analyzed: 4316892)
Restarts     : 4360     (Average: 990.11 Last: 277738)
Model-Level  : 122.9   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 4328516  (Deleted: 4114219)
  Binary     : 236      (Ratio:   0.01%)
  Ternary    : 1237     (Ratio:   0.03%)
  Conflict   : 4316892  (Average Length:  387.3 Ratio:  99.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 11624    (Average Length:   53.0 Ratio:   0.27%) 
  Distributed: 3882     (Ratio:   0.09% Average LBD: 3.62) 
  Integrated : 11646    (Ratio: 300.00% Unit: 31 Average Jumps: 33.68)
Backjumps    : 4316892  (Average:  1.85 Max: 931 Sum: 7992248)
  Executed   : 4316891  (Average:  1.85 Max: 931 Sum: 7992225 Ratio: 100.00%)
  Bounded    : 1        (Average: 23.00 Max:  23 Sum:     23 Ratio:   0.00%)

Rules        : 550670  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15298   
Bodies       : 19057   
  Sum        : 96      
  Count      : 14      
Equivalences : 7530     (Atom=Atom: 493 Body=Body: 206 Other: 6831)
Tight        : Yes
Variables    : 17103    (Eliminated:    0 Frozen: 7779)
Constraints  : 571324   (Binary:  97.7% Ternary:   1.6% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(4)) ; 
  6 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(4)) ; 
  6 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(5)) ; 
  5 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(5)) ; 
  6 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(4)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCost(3)) ; 
  6 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCost(3)) ; 
  6 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(1)) 
}.
