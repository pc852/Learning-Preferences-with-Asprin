asprin_vL version 1.0
Reading from stdin
-:1264:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1289:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1370:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1644:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1821:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2022:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2026:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2026:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2032:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2131:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2157:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2277:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2311:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2333:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1181:1-16: info: no atoms over signature occur in program:
  output/3

-:1173:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1174:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1175:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1176:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1206:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(80,eq,84) output(84,eq,22) output(22,eq,53) output(53,eq,71) output(71,eq,83) output(49,eq,52) output(74,eq,82) output(82,eq,65) output(65,eq,22) output(22,eq,33) output(33,eq,10) output(39,eq,88) output(22,eq,10) output(84,eq,33) output(65,eq,33) output(82,eq,22) output(74,eq,65) output(53,eq,83) output(22,eq,71) output(84,eq,53) output(65,eq,53) output(80,eq,22) output(82,eq,53) output(74,eq,53) output(80,eq,53) output(84,eq,71) output(65,eq,71) output(82,eq,71) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(65,eq,83) output(74,eq,22) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(84,eq,10) output(65,eq,10) output(82,eq,10) output(80,eq,10) output(74,eq,10) output(82,eq,83) output(74,eq,83) output(80,eq,83) output(74,eq,71)
Optimization: 45 6
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasPrep(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(80,better,84) output(65,better,22) output(33,better,10) output(39,better,88) output(82,better,22) output(80,better,22) output(74,better,22) output(65,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(22,worse,53) output(22,worse,33) output(84,worse,33) output(22,worse,71) output(84,worse,53) output(84,worse,71) output(22,worse,83) output(84,worse,83) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(49,eq,52) output(74,eq,82) output(82,eq,65) output(22,eq,10) output(65,eq,33) output(74,eq,65) output(53,eq,83) output(65,eq,53) output(82,eq,53) output(74,eq,53) output(80,eq,53) output(65,eq,71) output(82,eq,71) output(80,eq,71) output(65,eq,83) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(84,eq,10) output(82,eq,83) output(74,eq,83) output(80,eq,83) output(74,eq,71)
Optimization: 34 6
Answer: 3
preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(22,better,53) output(49,better,52) output(74,better,82) output(33,better,10) output(22,better,10) output(22,better,71) output(84,better,53) output(65,better,53) output(74,better,53) output(84,better,71) output(65,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(84,better,10) output(65,better,10) output(74,better,10) output(74,better,83) output(74,better,71) output(80,worse,84) output(82,worse,65) output(39,worse,88) output(82,worse,22) output(80,worse,22) output(82,worse,33) output(80,worse,33) output(84,eq,22) output(53,eq,71) output(71,eq,83) output(65,eq,22) output(22,eq,33) output(84,eq,33) output(65,eq,33) output(74,eq,65) output(53,eq,83) output(82,eq,53) output(80,eq,53) output(82,eq,71) output(80,eq,71) output(74,eq,22) output(74,eq,33) output(82,eq,10) output(80,eq,10) output(82,eq,83) output(80,eq,83)
Optimization: 26 6
Answer: 4
preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasCost(5))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(84,better,22) output(49,better,52) output(74,better,82) output(82,better,65) output(39,better,88) output(84,better,33) output(74,better,65) output(84,better,53) output(80,better,22) output(74,better,53) output(80,better,53) output(84,better,83) output(74,better,22) output(74,better,33) output(80,better,33) output(84,better,10) output(80,better,10) output(74,better,10) output(74,better,83) output(80,better,83) output(65,worse,22) output(65,worse,33) output(65,worse,53) output(65,worse,71) output(65,worse,83) output(80,eq,84) output(22,eq,53) output(22,eq,33) output(82,eq,22) output(53,eq,83) output(82,eq,53) output(22,eq,83) output(82,eq,33) output(82,eq,83)
Optimization: 25 6
Answer: 5
preference(1,(1,1),0,for(atom(hasCost(5))),()) preference(1,(1,2),0,for(atom(hasCategory(5))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(53,better,71) output(49,better,52) output(65,better,22) output(22,better,33) output(84,better,33) output(65,better,33) output(53,better,83) output(22,better,71) output(65,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(82,better,33) output(74,better,33) output(80,better,33) output(65,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(33,worse,10) output(39,worse,88) output(74,worse,65) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(74,eq,82) output(22,eq,10) output(82,eq,22) output(84,eq,53) output(82,eq,53) output(74,eq,53) output(74,eq,22) output(84,eq,10) output(82,eq,10) output(74,eq,10)
Optimization: 21 4
Answer: 6
preference(1,(1,1),0,for(atom(hasCost(5))),()) preference(1,(1,2),0,for(atom(hasCategory(5))),()) preference(1,(1,5),0,for(atom(hasPrep(1))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(80,better,84) output(53,better,71) output(49,better,52) output(65,better,22) output(22,better,33) output(84,better,33) output(65,better,33) output(53,better,83) output(22,better,71) output(65,better,53) output(80,better,22) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(82,better,33) output(80,better,33) output(65,better,10) output(80,better,10) output(82,better,83) output(80,better,83) output(74,worse,82) output(82,worse,65) output(33,worse,10) output(39,worse,88) output(74,worse,65) output(74,worse,53) output(74,worse,22) output(74,worse,10) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(22,eq,10) output(82,eq,22) output(84,eq,53) output(82,eq,53) output(74,eq,33) output(84,eq,10) output(82,eq,10) output(74,eq,83) output(74,eq,71)
Optimization: 20 4
Answer: 7
preference(1,(1,1),0,for(atom(hasCost(5))),()) preference(1,(1,2),0,for(atom(hasCategory(5))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(53,better,71) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(22,better,10) output(84,better,33) output(65,better,33) output(53,better,83) output(22,better,71) output(65,better,53) output(84,better,71) output(65,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(80,better,10) output(74,better,10) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(39,worse,88) output(82,worse,22) output(74,worse,65) output(82,worse,53) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(33,eq,10) output(84,eq,53) output(74,eq,53) output(82,eq,71) output(74,eq,22) output(82,eq,33) output(82,eq,10) output(82,eq,83)
Optimization: 19 4
Answer: 8
preference(1,(1,1),0,for(atom(hasCost(5))),()) preference(1,(1,2),0,for(atom(hasCategory(5))),()) preference(1,(1,5),0,for(atom(hasPrep(1))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(80,better,84) output(53,better,71) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(22,better,10) output(84,better,33) output(65,better,33) output(53,better,83) output(22,better,71) output(65,better,53) output(80,better,22) output(80,better,53) output(84,better,71) output(65,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(80,better,10) output(74,better,10) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(39,worse,88) output(82,worse,22) output(74,worse,65) output(82,worse,53) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(33,eq,10) output(84,eq,53) output(74,eq,53) output(82,eq,71) output(74,eq,22) output(82,eq,33) output(82,eq,10) output(82,eq,83)
Optimization: 16 4
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(71,better,83) output(74,better,82) output(33,better,10) output(39,better,88) output(84,better,33) output(53,better,83) output(84,better,53) output(80,better,22) output(74,better,53) output(80,better,53) output(84,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(49,worse,52)
Optimization: 15 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(71,better,83) output(49,better,52) output(74,better,82) output(33,better,10) output(84,better,33) output(53,better,83) output(84,better,53) output(80,better,22) output(74,better,53) output(80,better,53) output(84,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71)
Optimization: 14 6
Answer: 11
preference(1,(1,1),0,for(atom(hasDifficulty(4))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(atom(hasCategory(2))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(atom(hasIngredient(11))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(80,better,84) output(22,better,53) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(22,better,10) output(84,better,33) output(65,better,33) output(53,better,83) output(22,better,71) output(65,better,53) output(80,better,22) output(74,better,53) output(80,better,53) output(65,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(65,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(84,worse,22) output(82,worse,65) output(33,worse,10) output(82,worse,22) output(82,worse,53) output(82,worse,71) output(82,worse,10) output(74,eq,65)
Optimization: 13 6
Answer: 12
preference(1,(1,1),0,for(atom(hasDifficulty(4))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(atom(hasCategory(2))),()) preference(1,(1,4),0,for(atom(hasDifficulty(4))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(84,better,22) output(22,better,53) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(84,better,33) output(65,better,33) output(53,better,83) output(84,better,53) output(65,better,53) output(80,better,22) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(53,worse,71) output(82,worse,65) output(33,worse,10) output(39,worse,88) output(82,worse,22) output(82,worse,71) output(82,worse,10) output(80,eq,84) output(22,eq,10) output(74,eq,65) output(22,eq,71) output(82,eq,53)
Optimization: 12 6
Progression : [ 1;12] (Error: 11)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(3))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(11))),()) preference(1,(1,5),3,for(atom(hasIngredient(8))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(53,better,71) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(39,better,88) output(84,better,33) output(65,better,33) output(82,better,22) output(74,better,65) output(53,better,83) output(22,better,71) output(84,better,53) output(65,better,53) output(80,better,22) output(82,better,53) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(22,eq,53) output(82,eq,65)
Optimization: 4 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(53,better,71) output(71,better,83) output(49,better,52) output(74,better,82) output(82,better,65) output(65,better,22) output(22,better,33) output(39,better,88) output(84,better,33) output(65,better,33) output(82,better,22) output(74,better,65) output(53,better,83) output(22,better,71) output(84,better,53) output(65,better,53) output(80,better,22) output(82,better,53) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71)
Optimization: 3 6
Progression : [2;3] (Error: 0.5)
Answer: 15
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(53,better,71) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(33,better,10) output(39,better,88) output(22,better,10) output(84,better,33) output(65,better,33) output(74,better,65) output(53,better,83) output(22,better,71) output(84,better,53) output(65,better,53) output(80,better,22) output(82,better,53) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(82,eq,22)
Optimization: 2 6
Progression : 2 [1;6] (Error: 5)
Answer: 16
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(53,better,71) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(33,better,10) output(39,better,88) output(22,better,10) output(84,better,33) output(65,better,33) output(74,better,65) output(53,better,83) output(22,better,71) output(84,better,53) output(65,better,53) output(80,better,22) output(82,better,53) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(82,eq,22)
Optimization: 2 5
Answer: 17
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),3,for(atom(hasDifficulty(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(80,better,84) output(84,better,22) output(22,better,53) output(53,better,71) output(71,better,83) output(49,better,52) output(74,better,82) output(65,better,22) output(22,better,33) output(33,better,10) output(39,better,88) output(22,better,10) output(84,better,33) output(65,better,33) output(74,better,65) output(53,better,83) output(22,better,71) output(84,better,53) output(65,better,53) output(80,better,22) output(82,better,53) output(74,better,53) output(80,better,53) output(84,better,71) output(65,better,71) output(82,better,71) output(80,better,71) output(22,better,83) output(84,better,83) output(65,better,83) output(74,better,22) output(82,better,33) output(74,better,33) output(80,better,33) output(84,better,10) output(65,better,10) output(82,better,10) output(80,better,10) output(74,better,10) output(82,better,83) output(74,better,83) output(80,better,83) output(74,better,71) output(82,worse,65) output(82,eq,22)
Optimization: 2 4
Progression : 2 [2;4] (Error: 1)
Progression : 2 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 17
  Optimum    : yes
Optimization : 2 4
Calls        : 1
Time         : 39.214s (Solving: 29.38s 1st Model: 0.65s Unsat: 22.36s)
CPU Time     : 126.419s
Threads      : 4        (Winner: 1)

Choices      : 332653   (Domain: 7615)
Conflicts    : 74455    (Analyzed: 74448)
Restarts     : 94       (Average: 792.00 Last: 4950)
Model-Level  : 630.7   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 115493   (Deleted: 30474)
  Binary     : 3756     (Ratio:   3.25%)
  Ternary    : 13217    (Ratio:  11.44%)
  Conflict   : 74448    (Average Length:  148.1 Ratio:  64.46%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 41045    (Average Length:   54.9 Ratio:  35.54%) 
  Distributed: 13750    (Ratio:  18.47% Average LBD: 3.09) 
  Integrated : 41250    (Ratio: 300.00% Unit: 289 Average Jumps: 80.71)
Backjumps    : 74448    (Average:  3.88 Max: 1621 Sum: 288501)
  Executed   : 74427    (Average:  3.87 Max: 1621 Sum: 287928 Ratio:  99.80%)
  Bounded    : 21       (Average: 27.29 Max:  44 Sum:    573 Ratio:   0.20%)

Rules        : 4324829 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 713134  
Bodies       : 869550  
  Count      : 1644    
Equivalences : 2172789  (Atom=Atom: 640683 Body=Body: 701380 Other: 830726)
Tight        : Yes
Variables    : 107307   (Eliminated:    0 Frozen: 41943)
Constraints  : 3760650  (Binary:  97.2% Ternary:   2.6% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(2)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(5)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrepTime(2)) >> not atom(hasIngredient(3))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(6))  ; 
  atom(hasCost(5)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(5))  >> not atom(hasPrep(3))  >> atom(hasIngredient(9)) || atom(hasCost(5)) ; 
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasIngredient(11))  || atom(hasCategory(5)) ; 
  not atom(hasPrep(1))  >> not atom(hasIngredient(4))  || atom(hasPrep(6)) ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(2))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(5))  >> not atom(hasPrep(3))  >> atom(hasIngredient(9)) || atom(hasCost(5)) ; 
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasIngredient(11))  || atom(hasCategory(5)) ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(4))  || atom(hasPrep(1)) ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(2))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> not atom(hasIngredient(2))  >> atom(hasIngredient(9)) || atom(hasCost(5)) ; 
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasIngredient(11))  || atom(hasCategory(5)) ; 
  not atom(hasPrep(1))  >> not atom(hasIngredient(4))  || not atom(hasCost(1))  ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(2))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(4))  >> not atom(hasIngredient(2))  >> atom(hasIngredient(9)) || atom(hasCost(5)) ; 
  not atom(hasIngredient(6))  >> not atom(hasCategory(5))  >> not atom(hasIngredient(11))  || atom(hasCategory(5)) ; 
  atom(hasCategory(2)) >> not atom(hasCost(1))  || atom(hasPrep(1)) ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(2))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> atom(hasIngredient(7)) || not atom(hasIngredient(3))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(1)) >> not atom(hasPrep(0))  || not atom(hasCost(1))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(12))  >> atom(hasPrep(1)) || not atom(hasIngredient(3))  ; 
  atom(hasCost(4)) >> atom(hasPrep(7)) >> atom(hasIngredient(10)) || not atom(hasPrep(2))  ; 
  atom(hasCost(5)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(10)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(1))  >> atom(hasPrep(5)) || not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> atom(hasIngredient(7)) || not atom(hasIngredient(3))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(3)) >> atom(hasPrep(1)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(12))  >> atom(hasPrep(1)) || not atom(hasIngredient(3))  ; 
  atom(hasCost(4)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(10)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(3)) || not atom(hasCost(3))  ; 
  atom(hasPrep(2)) >> not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(5))  >> not atom(hasIngredient(5))  >> not atom(hasIngredient(3))  || atom(hasDifficulty(4)) ; 
  not atom(hasDifficulty(2))  >> atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) || not atom(hasCategory(1))  ; 
  not atom(hasPrep(3))  >> not atom(hasIngredient(11))  || atom(hasCategory(2)) ; 
  atom(hasCost(3)) >> not atom(hasPrep(1))  >> not atom(hasCost(1))  || not atom(hasCategory(2))  ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(4))  >> not atom(hasIngredient(3))  || atom(hasIngredient(11)) ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(0))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(5))  >> not atom(hasIngredient(5))  >> not atom(hasIngredient(12))  || atom(hasDifficulty(4)) ; 
  not atom(hasDifficulty(2))  >> atom(hasPrepTime(2)) >> atom(hasDifficulty(1)) || not atom(hasCategory(1))  ; 
  not atom(hasPrep(3))  >> not atom(hasIngredient(11))  || atom(hasCategory(2)) ; 
  not atom(hasDifficulty(3))  >> not atom(hasPrep(7))  >> not atom(hasIngredient(8))  || atom(hasDifficulty(4)) ; 
  not atom(hasCategory(2))  >> not atom(hasIngredient(4))  >> not atom(hasIngredient(3))  || not atom(hasPrep(6))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasCost(1))  || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(3)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(10))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(11)) >> atom(hasPrep(2)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(3)) >> not atom(hasIngredient(3))  >> atom(hasIngredient(11)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(2)) >> atom(hasDifficulty(3)) >> atom(hasIngredient(8)) || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(5)) >> not atom(hasDifficulty(4))  >> not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasPrep(2))  ; 
  atom(hasCost(1)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(12))  ; 
  atom(hasPrepTime(3)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(3)) || not atom(hasCategory(2))  ; 
  not atom(hasIngredient(7))  >> not atom(hasIngredient(9))  >> atom(hasCost(1)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(12))  ; 
  atom(hasCategory(2)) >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(3)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(9))  >> atom(hasCategory(1)) || not atom(hasCost(1))  ; 
  atom(hasCategory(2)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(10)) >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(10)) >> not atom(hasCategory(5))  || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(9))  >> atom(hasCategory(1)) || not atom(hasCost(1))  ; 
  atom(hasCategory(2)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(3)) ; 
  atom(hasCategory(2)) >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasPrep(1))  >> not atom(hasPrep(0))  || not atom(hasIngredient(12))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(9))  >> atom(hasCategory(1)) || not atom(hasCost(1))  ; 
  atom(hasCategory(2)) >> not atom(hasPrep(2))  >> atom(hasDifficulty(3)) ; 
  atom(hasCategory(2)) >> not atom(hasPrepTime(3))  >> atom(hasDifficulty(3)) 
}.
