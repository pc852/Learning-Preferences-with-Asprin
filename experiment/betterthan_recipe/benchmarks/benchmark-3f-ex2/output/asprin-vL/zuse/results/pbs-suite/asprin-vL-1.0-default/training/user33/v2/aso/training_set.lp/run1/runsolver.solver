asprin_vL version 1.0
Reading from stdin
-:1245:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1270:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1351:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1625:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1802:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2003:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2007:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2007:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2112:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2138:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2258:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2292:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2314:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1162:1-16: info: no atoms over signature occur in program:
  output/3

-:1154:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1155:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1156:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1157:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1187:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(57,better,52) output(76,better,67) output(60,better,98) output(53,better,98) output(17,better,98) output(51,worse,55) output(67,worse,8) output(78,worse,76) output(71,worse,55) output(99,worse,55) output(91,worse,55) output(78,worse,8) output(91,eq,99) output(99,eq,71) output(71,eq,51) output(71,eq,30) output(17,eq,53) output(53,eq,60) output(17,eq,60) output(99,eq,30) output(76,eq,8) output(99,eq,51) output(91,eq,71) output(91,eq,51) output(91,eq,30)
Optimization: 21 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(57,better,52) output(67,better,8) output(17,better,53) output(17,better,60) output(76,better,8) output(17,better,98) output(78,worse,76) output(78,worse,67) output(78,worse,8) output(91,eq,99) output(99,eq,71) output(71,eq,51) output(51,eq,55) output(76,eq,67) output(71,eq,30) output(53,eq,60) output(60,eq,98) output(53,eq,98) output(99,eq,30) output(71,eq,55) output(99,eq,51) output(91,eq,71) output(91,eq,51) output(99,eq,55) output(91,eq,55) output(91,eq,30)
Optimization: 20 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCategory(5))),()) preference(1,aso) output(71,better,51) output(57,better,52) output(71,better,30) output(99,better,30) output(71,better,55) output(99,better,51) output(91,better,51) output(99,better,55) output(91,better,55) output(91,better,30) output(76,worse,67) output(78,worse,67) output(78,worse,8) output(91,eq,99) output(51,eq,55) output(53,eq,60) output(60,eq,98) output(53,eq,98)
Optimization: 16 6
Answer: 4
preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,aso) output(71,better,51) output(51,better,55) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(99,better,55) output(78,better,8) output(91,better,30) output(91,worse,99) output(53,worse,60) output(53,worse,98) output(17,worse,60) output(91,worse,71) output(17,worse,98) output(99,eq,71) output(57,eq,52) output(60,eq,98)
Optimization: 11 3
Answer: 5
preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,71) output(71,better,51) output(51,better,55) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(99,better,55) output(78,better,8) output(91,better,30) output(91,worse,99) output(53,worse,60) output(53,worse,98) output(17,worse,60) output(17,worse,98) output(57,eq,52) output(60,eq,98)
Optimization: 10 4
Answer: 6
preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,4),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,71) output(71,better,51) output(51,better,55) output(57,better,52) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(99,better,55) output(78,better,8) output(91,better,30) output(91,worse,99) output(53,worse,60) output(53,worse,98) output(17,worse,60) output(17,worse,98) output(60,eq,98)
Optimization: 9 5
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasCategory(2))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(91,better,99) output(99,better,71) output(71,better,51) output(51,better,55) output(57,better,52) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(53,better,60) output(60,better,98) output(53,better,98) output(17,better,60) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(91,better,71) output(91,better,51) output(99,better,55) output(91,better,55) output(78,better,8) output(91,better,30) output(17,better,98)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,4),2,for(atom(hasCost(2))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,aso) output(91,better,99) output(99,better,71) output(71,better,51) output(51,better,55) output(57,better,52) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(53,better,60) output(60,better,98) output(53,better,98) output(17,better,60) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(91,better,71) output(91,better,51) output(99,better,55) output(91,better,55) output(78,better,8) output(91,better,30) output(17,better,98)
Optimization: 0 5
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(91,better,99) output(99,better,71) output(71,better,51) output(51,better,55) output(57,better,52) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(53,better,60) output(60,better,98) output(53,better,98) output(17,better,60) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(91,better,71) output(91,better,51) output(99,better,55) output(91,better,55) output(78,better,8) output(91,better,30) output(17,better,98)
Optimization: 0 4
Progression : 0 [2;4] (Error: 1)
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,aso) output(91,better,99) output(99,better,71) output(71,better,51) output(51,better,55) output(57,better,52) output(76,better,67) output(67,better,8) output(71,better,30) output(78,better,76) output(17,better,53) output(53,better,60) output(60,better,98) output(53,better,98) output(17,better,60) output(99,better,30) output(76,better,8) output(78,better,67) output(71,better,55) output(99,better,51) output(91,better,71) output(91,better,51) output(99,better,55) output(91,better,55) output(78,better,8) output(91,better,30) output(17,better,98)
Optimization: 0 3
OPTIMUM FOUND

Models       : 10
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 10.533s (Solving: 4.50s 1st Model: 0.34s Unsat: 2.72s)
CPU Time     : 23.871s
Threads      : 4        (Winner: 3)

Choices      : 130572   (Domain: 120)
Conflicts    : 15364    (Analyzed: 15361)
Restarts     : 43       (Average: 357.23 Last: 1347)
Model-Level  : 873.3   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 27678    (Deleted: 0)
  Binary     : 1339     (Ratio:   4.84%)
  Ternary    : 5123     (Ratio:  18.51%)
  Conflict   : 15360    (Average Length:  186.0 Ratio:  55.50%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12318    (Average Length:   54.8 Ratio:  44.50%) 
  Distributed: 4169     (Ratio:  27.14% Average LBD: 3.05) 
  Integrated : 12502    (Ratio: 299.88% Unit: 134 Average Jumps: 82.51)
Backjumps    : 15361    (Average:  7.21 Max: 1393 Sum: 110685)
  Executed   : 15351    (Average:  7.20 Max: 1393 Sum: 110543 Ratio:  99.87%)
  Bounded    : 10       (Average: 14.20 Max:  23 Sum:    142 Ratio:   0.13%)

Rules        : 2529088 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 426726  
Bodies       : 538457  
  Count      : 960     
Equivalences : 1288551  (Atom=Atom: 378491 Body=Body: 407829 Other: 502231)
Tight        : Yes
Variables    : 90943    (Eliminated:    0 Frozen: 25807)
Constraints  : 2271964  (Binary:  96.1% Ternary:   3.7% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(7))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(6))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(6))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(2)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasCost(5)) >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(4)) >> atom(hasCost(2)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasCategory(4)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasCost(5)) >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(4)) >> atom(hasCost(2)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasCategory(4)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasCost(5)) >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(4)) >> atom(hasCost(2)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasCategory(4)) >> atom(hasCost(2)) ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(1)) >> not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasCategory(5)) >> not atom(hasIngredient(5))  || not atom(hasCost(4))  ; 
  atom(hasCost(5)) >> atom(hasCost(1)) >> atom(hasPrep(1)) || not atom(hasIngredient(8))  ; 
  atom(hasCost(5)) >> atom(hasDifficulty(2)) >> atom(hasPrepTime(2)) || not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(11))  ; 
  atom(hasDifficulty(3)) >> atom(hasDifficulty(1)) >> not atom(hasCategory(5))  ; 
  atom(hasCost(4)) >> atom(hasCategory(2)) >> atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasDifficulty(4)) >> atom(hasPrep(1)) || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(1)) >> not atom(hasPrep(3))  || not atom(hasCost(5))  ; 
  atom(hasCost(4)) >> atom(hasCost(2)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(4))  ; 
  atom(hasCost(5)) >> atom(hasDifficulty(4)) >> atom(hasPrep(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasDifficulty(4)) >> atom(hasPrep(1)) || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(6)) >> atom(hasDifficulty(3)) >> not atom(hasPrep(3))  || not atom(hasCost(5))  ; 
  atom(hasIngredient(4)) >> atom(hasCost(2)) >> atom(hasDifficulty(2)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasCost(1)) >> atom(hasPrep(1)) || not atom(hasCost(5))  ; 
  atom(hasIngredient(6)) >> atom(hasPrepTime(1)) >> not atom(hasCost(5))  || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(4)) >> not atom(hasCost(4))  || not atom(hasCost(5))  
}.
