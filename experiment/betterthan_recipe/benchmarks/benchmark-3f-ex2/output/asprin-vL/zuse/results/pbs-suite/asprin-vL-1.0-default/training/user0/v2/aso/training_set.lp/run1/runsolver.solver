asprin_vL version 1.0
Reading from stdin
-:1252:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1277:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1358:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1632:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1809:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2010:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2014:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2014:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2020:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2119:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2145:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2265:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2299:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2321:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1169:1-16: info: no atoms over signature occur in program:
  output/3

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1162:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1163:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1164:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1194:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(69,better,67) output(10,better,14) output(25,better,42) output(65,better,42) output(10,better,13) output(69,better,72) output(52,better,67) output(65,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(13,worse,51) output(18,worse,65) output(65,worse,25) output(18,worse,25) output(14,worse,51) output(18,worse,52) output(18,worse,64) output(18,worse,69) output(65,eq,52) output(67,eq,72) output(72,eq,42) output(14,eq,13) output(67,eq,42) output(18,eq,67) output(10,eq,51) output(18,eq,42) output(18,eq,72)
Optimization: 21 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(65,better,52) output(69,better,67) output(10,better,14) output(14,better,13) output(25,better,42) output(65,better,42) output(10,better,13) output(69,better,72) output(18,better,52) output(65,better,67) output(18,better,67) output(65,better,72) output(69,better,42) output(18,better,42) output(18,better,72) output(52,worse,69) output(13,worse,51) output(14,worse,51) output(67,eq,72) output(72,eq,42) output(18,eq,65) output(67,eq,42) output(52,eq,67) output(52,eq,72) output(52,eq,42) output(10,eq,51)
Optimization: 18 6
Answer: 3
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(67,better,72) output(13,better,51) output(65,better,25) output(18,better,25) output(14,better,51) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,72) output(10,better,51) output(18,better,72) output(69,worse,67) output(72,worse,42) output(25,worse,42) output(69,worse,72) output(52,worse,67) output(69,worse,42) output(52,worse,42) output(10,eq,14) output(14,eq,13) output(18,eq,65) output(65,eq,42) output(10,eq,13) output(67,eq,42) output(65,eq,67) output(18,eq,67) output(52,eq,72) output(18,eq,42)
Optimization: 17 2
Answer: 4
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(67,better,72) output(14,better,13) output(13,better,51) output(65,better,25) output(18,better,25) output(14,better,51) output(10,better,13) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,72) output(10,better,51) output(18,better,72) output(69,worse,67) output(72,worse,42) output(25,worse,42) output(69,worse,72) output(52,worse,67) output(69,worse,42) output(52,worse,42) output(10,eq,14) output(18,eq,65) output(65,eq,42) output(67,eq,42) output(65,eq,67) output(18,eq,67) output(52,eq,72) output(18,eq,42)
Optimization: 15 2
Answer: 5
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(14,better,13) output(13,better,51) output(65,better,25) output(18,better,25) output(14,better,51) output(10,better,13) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(65,better,72) output(10,better,51) output(18,better,72) output(69,worse,67) output(72,worse,42) output(25,worse,42) output(67,worse,42) output(69,worse,72) output(69,worse,42) output(52,worse,42) output(67,eq,72) output(10,eq,14) output(18,eq,65) output(65,eq,42) output(52,eq,67) output(52,eq,72) output(18,eq,42)
Optimization: 14 2
Answer: 6
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(10,better,14) output(13,better,51) output(65,better,25) output(65,better,42) output(18,better,25) output(14,better,51) output(10,better,13) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(65,better,72) output(10,better,51) output(18,better,42) output(18,better,72) output(69,worse,67) output(69,worse,72) output(69,worse,42) output(67,eq,72) output(72,eq,42) output(14,eq,13) output(18,eq,65) output(25,eq,42) output(67,eq,42) output(52,eq,67) output(52,eq,72) output(52,eq,42)
Optimization: 12 2
Answer: 7
preference(1,(1,1),0,for(atom(hasCategory(5))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(72,better,42) output(13,better,51) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(14,better,51) output(67,better,42) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(65,better,72) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72) output(69,worse,67) output(69,worse,72) output(67,eq,72) output(10,eq,14) output(14,eq,13) output(18,eq,65) output(10,eq,13) output(52,eq,67) output(52,eq,72) output(69,eq,42)
Optimization: 10 2
Answer: 8
preference(1,(1,4),0,for(atom(hasIngredient(5))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(69,better,67) output(67,better,72) output(72,better,42) output(10,better,14) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(10,better,13) output(67,better,42) output(69,better,72) output(18,better,52) output(65,better,64) output(18,better,64) output(65,better,67) output(18,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72) output(52,worse,69) output(14,worse,13) output(14,worse,51) output(13,eq,51) output(18,eq,65) output(52,eq,67) output(65,eq,69) output(18,eq,69)
Optimization: 8 4
Answer: 9
preference(1,(1,2),0,for(atom(hasPrep(1))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(72,better,42) output(10,better,14) output(14,better,13) output(13,better,51) output(18,better,65) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(14,better,51) output(10,better,13) output(67,better,42) output(69,better,72) output(52,better,67) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCategory(4))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(72,better,42) output(10,better,14) output(14,better,13) output(13,better,51) output(18,better,65) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(14,better,51) output(10,better,13) output(67,better,42) output(69,better,72) output(52,better,67) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(72,better,42) output(10,better,14) output(14,better,13) output(13,better,51) output(18,better,65) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(14,better,51) output(10,better,13) output(67,better,42) output(69,better,72) output(52,better,67) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72)
Optimization: 0 4
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(25,better,64) output(65,better,52) output(52,better,69) output(69,better,67) output(67,better,72) output(72,better,42) output(10,better,14) output(14,better,13) output(13,better,51) output(18,better,65) output(65,better,25) output(25,better,42) output(65,better,42) output(18,better,25) output(14,better,51) output(10,better,13) output(67,better,42) output(69,better,72) output(52,better,67) output(65,better,69) output(18,better,52) output(65,better,64) output(18,better,64) output(18,better,69) output(65,better,67) output(18,better,67) output(52,better,72) output(65,better,72) output(69,better,42) output(52,better,42) output(10,better,51) output(18,better,42) output(18,better,72)
Optimization: 0 3
OPTIMUM FOUND

Models       : 12
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 8.920s (Solving: 2.50s 1st Model: 0.45s Unsat: 0.55s)
CPU Time     : 16.208s
Threads      : 4        (Winner: 0)

Choices      : 83620    (Domain: 369)
Conflicts    : 8444     (Analyzed: 8441)
Restarts     : 25       (Average: 337.64 Last: 2401)
Model-Level  : 453.3   
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 17468    (Deleted: 0)
  Binary     : 1613     (Ratio:   9.23%)
  Ternary    : 4094     (Ratio:  23.44%)
  Conflict   : 8440     (Average Length:   97.1 Ratio:  48.32%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 9028     (Average Length:   30.2 Ratio:  51.68%) 
  Distributed: 3061     (Ratio:  36.27% Average LBD: 2.84) 
  Integrated : 9182     (Ratio: 299.97% Unit: 147 Average Jumps: 57.01)
Backjumps    : 8441     (Average:  7.81 Max: 1390 Sum:  65888)
  Executed   : 8427     (Average:  7.77 Max: 1390 Sum:  65628 Ratio:  99.61%)
  Bounded    : 14       (Average: 18.57 Max:  31 Sum:    260 Ratio:   0.39%)

Rules        : 3188753 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 531052  
Bodies       : 659786  
  Count      : 1212    
Equivalences : 1610435  (Atom=Atom: 474481 Body=Body: 516220 Other: 619734)
Tight        : Yes
Variables    : 97065    (Eliminated:    0 Frozen: 31845)
Constraints  : 2820054  (Binary:  96.6% Ternary:   3.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCategory(5)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(2)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(6)) >> atom(hasCategory(2)) >> not atom(hasPrepTime(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(1))  || atom(hasCategory(5)) ; 
  atom(hasIngredient(4)) >> not atom(hasCategory(3))  >> not atom(hasDifficulty(2))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(1))  || atom(hasCategory(5)) ; 
  atom(hasIngredient(9)) >> atom(hasDifficulty(2)) >> not atom(hasCost(1))  || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(1))  || atom(hasCategory(5)) ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(2)) >> not atom(hasCost(1))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(1))  || atom(hasCategory(5)) ; 
  atom(hasCost(4)) >> atom(hasDifficulty(2)) >> not atom(hasCost(1))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(6)) >> not atom(hasIngredient(1))  || atom(hasCategory(5)) ; 
  atom(hasCost(4)) >> not atom(hasCategory(3))  >> not atom(hasPrep(5))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(2))  >> not atom(hasIngredient(6))  >> not atom(hasPrep(4))  || atom(hasIngredient(5)) ; 
  not atom(hasCost(3))  >> not atom(hasIngredient(7))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(0))  >> not atom(hasCost(4))  || not atom(hasPrep(4))  ; 
  not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrep(5)) >> atom(hasIngredient(7)) || atom(hasPrep(1)) ; 
  atom(hasCategory(4)) >> not atom(hasCategory(3))  >> atom(hasIngredient(5)) || not atom(hasCategory(1))  ; 
  atom(hasCategory(4)) >> atom(hasPrep(5)) >> not atom(hasCost(5))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(4)) >> not atom(hasCategory(4))  || not atom(hasCost(4))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(1)) >> not atom(hasCost(2))  || not atom(hasPrepTime(3))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(0))  >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> atom(hasPrep(5)) >> not atom(hasPrep(6))  || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(4)) >> not atom(hasCategory(3))  >> atom(hasIngredient(5)) || not atom(hasCategory(1))  ; 
  atom(hasCategory(4)) >> atom(hasPrep(5)) >> not atom(hasCost(5))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(4)) >> not atom(hasCategory(4))  || not atom(hasCost(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(0))  >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(4)) >> atom(hasIngredient(7)) >> not atom(hasPrep(5))  || not atom(hasIngredient(12))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(4)) >> not atom(hasCost(2))  || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(4)) >> not atom(hasPrep(7))  || not atom(hasCost(4))  ; 
  atom(hasCost(4)) >> atom(hasCategory(4)) >> not atom(hasPrepTime(1))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasCategory(4)) >> not atom(hasIngredient(10))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(0))  >> not atom(hasPrep(5))  || not atom(hasCost(4))  ; 
  atom(hasPrep(6)) >> not atom(hasCost(3))  >> atom(hasPrepTime(2)) || not atom(hasDifficulty(3))  
}.
