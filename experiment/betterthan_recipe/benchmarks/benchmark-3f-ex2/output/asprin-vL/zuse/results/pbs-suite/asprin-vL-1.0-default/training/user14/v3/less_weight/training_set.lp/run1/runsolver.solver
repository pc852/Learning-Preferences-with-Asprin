asprin_vL version 1.0
Reading from stdin
-:1222:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1232:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1247:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1328:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1589:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1602:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1779:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1908:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1980:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1984:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1984:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2089:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2115:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2235:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2269:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2291:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1139:1-16: info: no atoms over signature occur in program:
  output/3

-:1131:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1132:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(84,eq,69) output(69,eq,61) output(39,eq,18) output(30,eq,32) output(32,eq,17) output(17,eq,7) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(66,eq,58) output(62,eq,10) output(10,eq,32) output(62,eq,32) output(21,eq,58) output(67,eq,39) output(32,eq,7) output(30,eq,17) output(10,eq,17) output(50,eq,18) output(84,eq,61) output(67,eq,18) output(62,eq,17) output(30,eq,7) output(10,eq,7) output(62,eq,7)
Optimization: 25 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCost(2))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),7) preference(1,(1,4),1,for(atom(hasCategory(3))),7) preference(1,(1,5),1,for(atom(hasIngredient(7))),7) preference(1,(1,6),1,for(atom(hasIngredient(3))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(10))),8) preference(1,(1,14),1,for(atom(hasIngredient(12))),7) preference(1,less(weight)) output(10,better,7) output(30,better,7) output(32,better,7) output(17,better,7) output(84,worse,69) output(84,worse,61) output(62,worse,10) output(62,worse,32) output(62,worse,17) output(69,eq,61) output(39,eq,18) output(30,eq,32) output(32,eq,17) output(67,eq,50) output(50,eq,39) output(21,eq,66) output(66,eq,58) output(10,eq,32) output(21,eq,58) output(67,eq,39) output(30,eq,17) output(10,eq,17) output(50,eq,18) output(67,eq,18) output(62,eq,7)
Optimization: 21 12
Answer: 3
preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasCost(3))),8) preference(1,(1,5),1,for(atom(hasCategory(4))),6) preference(1,(1,6),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasCategory(5))),8) preference(1,(1,8),1,for(atom(hasIngredient(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(3))),6) preference(1,(1,13),1,for(atom(hasCost(4))),8) preference(1,(1,14),1,for(atom(hasPrep(4))),6) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,7) output(50,better,39) output(50,better,18) output(67,better,50) output(67,better,39) output(67,better,18) output(84,better,69) output(84,better,61) output(39,better,18) output(62,better,10) output(62,better,32) output(62,better,17) output(62,better,7) output(66,better,58) output(69,better,61) output(21,better,66) output(21,better,58) output(30,better,32) output(30,better,17) output(30,better,7) output(32,better,17) output(32,better,7) output(17,better,7)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 4
preference(1,(1,1),1,for(atom(hasCategory(5))),8) preference(1,(1,2),1,for(atom(hasPrep(7))),5) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasCost(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),4) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,11),1,for(atom(hasCategory(4))),3) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,7) output(50,better,39) output(50,better,18) output(67,better,50) output(67,better,39) output(67,better,18) output(84,better,69) output(84,better,61) output(39,better,18) output(62,better,10) output(62,better,32) output(62,better,17) output(62,better,7) output(66,better,58) output(69,better,61) output(21,better,66) output(21,better,58) output(30,better,32) output(30,better,17) output(30,better,7) output(32,better,17) output(32,better,7) output(17,better,7)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(3))),5) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,7),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasIngredient(12))),6) preference(1,(1,11),1,for(atom(hasCost(4))),3) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,7) output(50,better,39) output(50,better,18) output(67,better,50) output(67,better,39) output(67,better,18) output(84,better,69) output(84,better,61) output(39,better,18) output(62,better,10) output(62,better,32) output(62,better,17) output(62,better,7) output(66,better,58) output(69,better,61) output(21,better,66) output(21,better,58) output(30,better,32) output(30,better,17) output(30,better,7) output(32,better,17) output(32,better,7) output(17,better,7)
Optimization: 0 11
Answer: 6
preference(1,(1,2),1,for(atom(hasIngredient(7))),6) preference(1,(1,3),1,for(atom(hasCategory(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasIngredient(12))),1) preference(1,(1,9),1,for(atom(hasIngredient(9))),7) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasCategory(3))),6) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,7) output(50,better,39) output(50,better,18) output(67,better,50) output(67,better,39) output(67,better,18) output(84,better,69) output(84,better,61) output(39,better,18) output(62,better,10) output(62,better,32) output(62,better,17) output(62,better,7) output(66,better,58) output(69,better,61) output(21,better,66) output(21,better,58) output(30,better,32) output(30,better,17) output(30,better,7) output(32,better,17) output(32,better,7) output(17,better,7)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
Answer: 7
preference(1,(1,1),1,for(atom(hasCategory(3))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,12),1,for(atom(hasCost(3))),8) preference(1,(1,13),1,for(atom(hasCategory(5))),8) preference(1,less(weight)) output(10,better,32) output(10,better,17) output(10,better,7) output(50,better,39) output(50,better,18) output(67,better,50) output(67,better,39) output(67,better,18) output(84,better,69) output(84,better,61) output(39,better,18) output(62,better,10) output(62,better,32) output(62,better,17) output(62,better,7) output(66,better,58) output(69,better,61) output(21,better,66) output(21,better,58) output(30,better,32) output(30,better,17) output(30,better,7) output(32,better,17) output(32,better,7) output(17,better,7)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 298.262s (Solving: 295.50s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 1184.488s
Threads      : 4        (Winner: 4)

Choices      : 6627848  (Domain: 195666)
Conflicts    : 4248676  (Analyzed: 4248673)
Restarts     : 3620     (Average: 1173.67 Last: 272741)
Model-Level  : 59.7    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 4253497  (Deleted: 3965942)
  Binary     : 324      (Ratio:   0.01%)
  Ternary    : 611      (Ratio:   0.01%)
  Conflict   : 4248673  (Average Length:  635.4 Ratio:  99.89%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 4824     (Average Length:   57.0 Ratio:   0.11%) 
  Distributed: 1608     (Ratio:   0.04% Average LBD: 3.57) 
  Integrated : 4824     (Ratio: 300.00% Unit: 6 Average Jumps: 4.17)
Backjumps    : 4248673  (Average:  1.42 Max: 997 Sum: 6042035)
  Executed   : 4248672  (Average:  1.42 Max: 997 Sum: 6042014 Ratio: 100.00%)
  Bounded    : 1        (Average: 21.00 Max:  21 Sum:     21 Ratio:   0.00%)

Rules        : 337011  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13060   
Bodies       : 18804   
  Sum        : 50      
  Count      : 14      
Equivalences : 6725     (Atom=Atom: 263 Body=Body: 114 Other: 6348)
Tight        : Yes
Variables    : 17027    (Eliminated:    0 Frozen: 7703)
Constraints  : 359774   (Binary:  96.4% Ternary:   2.6% Other:   1.0%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(1)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasIngredient(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasCategory(5)) 
}.
