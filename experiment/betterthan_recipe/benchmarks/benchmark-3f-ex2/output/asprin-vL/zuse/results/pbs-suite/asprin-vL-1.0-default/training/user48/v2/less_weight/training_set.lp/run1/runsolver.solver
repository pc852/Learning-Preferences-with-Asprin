asprin_vL version 1.0
Reading from stdin
-:1229:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1239:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1254:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1335:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1596:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1609:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1786:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1915:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1987:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1991:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1991:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2096:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2122:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2242:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2276:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1146:1-16: info: no atoms over signature occur in program:
  output/3

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1139:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(69,eq,72) output(72,eq,52) output(52,eq,65) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(42,eq,25) output(18,eq,51) output(13,eq,25) output(48,eq,42) output(70,eq,13) output(42,eq,64) output(13,eq,67) output(52,eq,24) output(10,eq,24) output(72,eq,65) output(69,eq,52) output(69,eq,65) output(72,eq,24) output(69,eq,24) output(48,eq,67) output(70,eq,67) output(13,eq,64) output(48,eq,64) output(70,eq,42) output(48,eq,25) output(70,eq,25) output(70,eq,64)
Optimization: 32 0
Answer: 2
preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(4))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(18,better,51) output(67,better,64) output(72,better,65) output(72,better,24) output(13,better,64) output(42,better,64) output(52,better,65) output(52,better,24) output(69,worse,72) output(69,worse,52) output(69,worse,65) output(69,worse,24) output(70,worse,13) output(70,worse,67) output(70,worse,42) output(70,worse,25) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,25) output(72,eq,52) output(65,eq,24) output(42,eq,67) output(10,eq,65) output(70,eq,48) output(13,eq,42) output(42,eq,25) output(13,eq,25) output(13,eq,67) output(10,eq,24) output(48,eq,64) output(70,eq,64)
Optimization: 24 4
Answer: 3
preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(18,better,51) output(67,better,64) output(72,better,65) output(72,better,24) output(13,better,25) output(13,better,64) output(42,better,25) output(42,better,64) output(52,better,65) output(52,better,24) output(10,worse,65) output(10,worse,24) output(69,worse,72) output(69,worse,52) output(69,worse,65) output(69,worse,24) output(70,worse,13) output(70,worse,67) output(70,worse,42) output(70,worse,25) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,25) output(72,eq,52) output(65,eq,24) output(42,eq,67) output(70,eq,48) output(13,eq,42) output(13,eq,67) output(48,eq,64) output(70,eq,64)
Optimization: 22 4
Answer: 4
preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,64) output(42,better,64) output(70,better,48) output(52,better,65) output(52,better,24) output(65,better,24) output(69,worse,72) output(69,worse,52) output(69,worse,65) output(70,worse,13) output(70,worse,67) output(70,worse,42) output(70,worse,25) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,64) output(48,worse,25) output(42,eq,67) output(10,eq,65) output(13,eq,42) output(42,eq,25) output(13,eq,25) output(13,eq,67) output(69,eq,24) output(70,eq,64)
Optimization: 20 4
Answer: 5
preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),5) preference(1,(1,10),1,for(atom(hasCategory(4))),1) preference(1,(1,12),1,for(atom(hasIngredient(3))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),1) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,25) output(13,better,64) output(42,better,25) output(42,better,64) output(70,better,48) output(52,better,65) output(52,better,24) output(69,worse,72) output(69,worse,52) output(70,worse,13) output(70,worse,67) output(70,worse,42) output(70,worse,25) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,64) output(48,worse,25) output(65,eq,24) output(42,eq,67) output(13,eq,42) output(13,eq,67) output(69,eq,65) output(69,eq,24) output(70,eq,64)
Optimization: 18 5
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(1))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(3))),5) preference(1,(1,5),1,for(atom(hasIngredient(6))),5) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasIngredient(5))),5) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasIngredient(10))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),5) preference(1,(1,11),1,for(atom(hasDifficulty(4))),5) preference(1,(1,12),1,for(atom(hasIngredient(4))),5) preference(1,(1,13),1,for(atom(hasCategory(5))),5) preference(1,(1,14),1,for(atom(hasPrep(7))),5) preference(1,less(weight)) output(18,better,51) output(72,better,65) output(72,better,24) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(70,better,48) output(70,better,67) output(70,better,25) output(70,better,64) output(52,better,65) output(52,better,24) output(69,worse,72) output(69,worse,52) output(48,worse,13) output(48,worse,42) output(72,eq,52) output(65,eq,24) output(67,eq,64) output(10,eq,65) output(13,eq,42) output(70,eq,13) output(10,eq,24) output(69,eq,65) output(69,eq,24) output(48,eq,67) output(48,eq,64) output(70,eq,42) output(48,eq,25)
Optimization: 17 14
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(3))),5) preference(1,(1,2),1,for(atom(hasIngredient(2))),5) preference(1,(1,3),1,for(atom(hasIngredient(4))),5) preference(1,(1,4),1,for(atom(hasIngredient(8))),5) preference(1,(1,5),1,for(atom(hasPrep(3))),5) preference(1,(1,6),1,for(atom(hasCost(1))),5) preference(1,(1,7),1,for(atom(hasIngredient(5))),5) preference(1,(1,8),1,for(atom(hasDifficulty(4))),5) preference(1,(1,9),1,for(atom(hasIngredient(10))),5) preference(1,(1,10),1,for(atom(hasCost(5))),5) preference(1,(1,11),1,for(atom(hasCategory(5))),5) preference(1,(1,12),1,for(atom(hasIngredient(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasCategory(4))),5) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,25) output(13,better,67) output(42,better,67) output(42,better,25) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,67) output(70,better,25) output(67,worse,64) output(48,worse,13) output(48,worse,42) output(48,worse,64) output(69,eq,72) output(52,eq,65) output(65,eq,24) output(13,eq,42) output(70,eq,13) output(42,eq,64) output(52,eq,24) output(48,eq,67) output(13,eq,64) output(70,eq,42) output(48,eq,25) output(70,eq,64)
Optimization: 16 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(4))),5) preference(1,(1,2),1,for(atom(hasCost(5))),5) preference(1,(1,3),1,for(atom(hasIngredient(4))),5) preference(1,(1,4),1,for(atom(hasIngredient(8))),5) preference(1,(1,5),1,for(atom(hasIngredient(10))),5) preference(1,(1,6),1,for(atom(hasIngredient(5))),5) preference(1,(1,7),1,for(atom(hasDifficulty(4))),5) preference(1,(1,8),1,for(atom(hasCategory(5))),5) preference(1,(1,9),1,for(atom(hasIngredient(11))),5) preference(1,(1,10),1,for(atom(hasCategory(2))),5) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(3))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,24) output(18,better,51) output(72,better,24) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(70,better,67) output(70,better,25) output(70,better,64) output(48,better,67) output(48,better,64) output(48,better,25) output(52,better,24) output(65,better,24) output(69,worse,72) output(69,worse,52) output(69,worse,65) output(72,eq,52) output(52,eq,65) output(67,eq,64) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(48,eq,42) output(70,eq,13) output(72,eq,65) output(69,eq,24) output(70,eq,42)
Optimization: 15 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(3))),5) preference(1,(1,2),1,for(atom(hasPrep(0))),5) preference(1,(1,3),1,for(atom(hasIngredient(10))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),5) preference(1,(1,6),1,for(atom(hasCost(4))),5) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),5) preference(1,(1,9),1,for(atom(hasDifficulty(3))),5) preference(1,(1,10),1,for(atom(hasCategory(5))),5) preference(1,(1,11),1,for(atom(hasPrep(4))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(72,better,65) output(72,better,24) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,25) output(52,better,65) output(52,better,24) output(67,worse,64) output(13,worse,64) output(42,worse,64) output(48,worse,64) output(72,eq,52) output(65,eq,24) output(42,eq,67) output(13,eq,42) output(42,eq,25) output(13,eq,25) output(13,eq,67) output(70,eq,64)
Optimization: 12 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(3))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(4))),5) preference(1,(1,6),1,for(atom(hasCategory(5))),5) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasCost(4))),5) preference(1,(1,11),1,for(atom(hasDifficulty(4))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(72,better,65) output(72,better,24) output(42,better,67) output(42,better,25) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(48,better,13) output(48,better,67) output(48,better,25) output(52,better,65) output(52,better,24) output(67,worse,64) output(13,worse,42) output(13,worse,64) output(42,worse,64) output(48,worse,64) output(72,eq,52) output(65,eq,24) output(13,eq,25) output(48,eq,42) output(13,eq,67) output(70,eq,64)
Optimization: 11 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),5) preference(1,(1,3),1,for(atom(hasCategory(5))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(1))),5) preference(1,(1,6),1,for(atom(hasDifficulty(4))),8) preference(1,(1,7),1,for(atom(hasIngredient(4))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasIngredient(8))),5) preference(1,(1,11),1,for(atom(hasCategory(2))),5) preference(1,(1,12),1,for(atom(hasCost(5))),5) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(72,better,52) output(72,better,24) output(13,better,25) output(13,better,67) output(42,better,67) output(42,better,25) output(69,better,52) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(65,better,24) output(67,worse,64) output(72,worse,65) output(69,worse,65) output(52,worse,65) output(69,eq,72) output(13,eq,42) output(42,eq,64) output(52,eq,24) output(13,eq,64)
Optimization: 9 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),1) preference(1,(1,2),1,for(atom(hasIngredient(4))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,9),1,for(atom(hasIngredient(3))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),6) preference(1,(1,14),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,25) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(52,better,65) output(52,better,24) output(65,better,24) output(67,worse,64) output(42,worse,67) output(42,worse,64) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,64) output(48,worse,25)
Optimization: 8 11
Answer: 13
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasCategory(1))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),6) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasDifficulty(3))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasDifficulty(1))),4) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(12))),6) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasCategory(3))),6) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(52,better,65) output(52,better,24) output(48,worse,13) output(48,worse,42) output(48,worse,67) output(48,worse,64) output(65,eq,24) output(70,eq,13) output(48,eq,25)
Optimization: 7 14
Answer: 14
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasIngredient(9))),4) preference(1,(1,5),1,for(atom(hasPrep(0))),4) preference(1,(1,6),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),3) preference(1,(1,8),1,for(atom(hasIngredient(7))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasIngredient(10))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasCost(3))),5) preference(1,(1,13),1,for(atom(hasIngredient(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(4))),2) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(52,better,65) output(52,better,24) output(65,better,24)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),4) preference(1,(1,5),1,for(atom(hasIngredient(4))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasIngredient(7))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),6) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasCategory(3))),1) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(52,better,65) output(52,better,24) output(65,better,24)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(0))),7) preference(1,(1,2),1,for(atom(hasIngredient(3))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasCost(3))),1) preference(1,(1,6),1,for(atom(hasIngredient(4))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasIngredient(10))),8) preference(1,(1,11),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),2) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(52,better,65) output(52,better,24) output(65,better,24)
Optimization: 0 12
Progression : 0 [ 3;12] (Error: 3)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasIngredient(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasCost(3))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasCategory(4))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasIngredient(4))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,less(weight)) output(10,better,65) output(10,better,24) output(18,better,51) output(67,better,64) output(72,better,52) output(72,better,65) output(72,better,24) output(13,better,42) output(13,better,25) output(13,better,67) output(13,better,64) output(42,better,67) output(42,better,25) output(42,better,64) output(69,better,72) output(69,better,52) output(69,better,65) output(69,better,24) output(70,better,48) output(70,better,13) output(70,better,67) output(70,better,42) output(70,better,25) output(70,better,64) output(48,better,13) output(48,better,42) output(48,better,67) output(48,better,64) output(48,better,25) output(52,better,65) output(52,better,24) output(65,better,24)
Optimization: 0 11
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.046 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 597.297s (Solving: 594.83s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2381.256s
Threads      : 4        (Winner: 4)

Choices      : 9942188  (Domain: 730240)
Conflicts    : 9284467  (Analyzed: 9284464)
Restarts     : 8031     (Average: 1156.08 Last: 574809)
Model-Level  : 64.7    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 9546822  (Deleted: 9131753)
  Binary     : 502      (Ratio:   0.01%)
  Ternary    : 1438     (Ratio:   0.02%)
  Conflict   : 9284464  (Average Length:  455.4 Ratio:  97.25%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 262358   (Average Length:  522.7 Ratio:   2.75%) 
  Distributed: 87506    (Ratio:   0.94% Average LBD: 3.85) 
  Integrated : 262518   (Ratio: 300.00% Unit: 62 Average Jumps: 3.18)
Backjumps    : 9284464  (Average:  1.06 Max:  63 Sum: 9829832)
  Executed   : 9284463  (Average:  1.06 Max:  63 Sum: 9829802 Ratio: 100.00%)
  Bounded    : 1        (Average: 30.00 Max:  30 Sum:     30 Ratio:   0.00%)

Rules        : 400494  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13738   
Bodies       : 18881   
  Sum        : 64      
  Count      : 14      
Equivalences : 6970     (Atom=Atom: 333 Body=Body: 142 Other: 6495)
Tight        : Yes
Variables    : 17047    (Eliminated:    0 Frozen: 7723)
Constraints  : 422612   (Binary:  96.9% Ternary:   2.2% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasIngredient(6)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(2)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(5)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(5)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasIngredient(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(5)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(5)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasIngredient(11)) ; 
  5 :: atom(hasCategory(2)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasPrep(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(4)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(4)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCategory(5)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(1)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasCategory(2)) ; 
  5 :: atom(hasCost(5)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  1 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(0)) ; 
  5 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCategory(4)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCategory(1)) 
}.
