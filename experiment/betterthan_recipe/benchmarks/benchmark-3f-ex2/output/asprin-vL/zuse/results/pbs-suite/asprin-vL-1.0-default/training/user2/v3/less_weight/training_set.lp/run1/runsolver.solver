asprin_vL version 1.0
Reading from stdin
-:1251:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1261:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1276:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1357:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1618:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1631:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1808:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1937:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2009:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2013:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2118:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2144:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2264:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1168:1-16: info: no atoms over signature occur in program:
  output/3

-:1160:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,18) output(23,eq,64) output(64,eq,47) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(25,eq,69) output(69,eq,24) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(23,eq,72) output(52,eq,72) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(47,eq,67) output(69,eq,67) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(69,eq,49) output(64,eq,24) output(23,eq,47) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(23,eq,24) output(42,eq,24) output(52,eq,24) output(25,eq,49) output(64,eq,49) output(23,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(25,eq,67) output(64,eq,67) output(23,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(23,eq,70) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 54 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(23,better,64) output(23,better,52) output(25,better,69) output(42,worse,47) output(42,worse,24) output(42,worse,49) output(42,worse,67) output(42,worse,23) output(42,worse,72) output(42,worse,70) output(64,worse,47) output(64,worse,23) output(64,worse,24) output(64,worse,49) output(64,worse,70) output(64,worse,67) output(64,worse,72) output(69,worse,24) output(69,worse,67) output(69,worse,49) output(69,worse,70) output(52,worse,23) output(52,worse,72) output(52,worse,47) output(52,worse,24) output(52,worse,67) output(52,worse,70) output(52,worse,49) output(50,eq,18) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(23,eq,72) output(42,eq,52) output(47,eq,67) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(25,eq,49) output(23,eq,49) output(47,eq,70) output(25,eq,70) output(25,eq,67) output(23,eq,67) output(52,eq,52) output(23,eq,23) output(23,eq,70)
Optimization: 51 14
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(4))),3) preference(1,less(weight)) output(42,better,67) output(64,better,67) output(69,better,67) output(23,better,67) output(25,better,67) output(47,better,67) output(52,better,67) output(24,better,67) output(50,eq,18) output(23,eq,64) output(64,eq,47) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(25,eq,69) output(69,eq,24) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(23,eq,72) output(52,eq,72) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(69,eq,49) output(64,eq,24) output(23,eq,47) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(23,eq,24) output(42,eq,24) output(52,eq,24) output(25,eq,49) output(64,eq,49) output(23,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(64,eq,72) output(42,eq,72) output(23,eq,70) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 46 1
Progression : [ 4;46] (Error: 10.5)
Answer: 4
preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(42,better,24) output(42,better,23) output(64,better,23) output(64,better,24) output(69,better,24) output(25,better,24) output(47,better,24) output(52,better,23) output(52,better,24) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(23,worse,47) output(23,worse,49) output(23,worse,67) output(23,worse,70) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(50,eq,18) output(64,eq,47) output(49,eq,70) output(25,eq,69) output(42,eq,64) output(64,eq,52) output(52,eq,72) output(42,eq,52) output(47,eq,67) output(69,eq,67) output(47,eq,49) output(69,eq,49) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(23,eq,24) output(25,eq,49) output(64,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(25,eq,67) output(64,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(64,eq,72) output(42,eq,72) output(52,eq,67) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 45 1
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,2),1,for(atom(hasIngredient(4))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasIngredient(7))),2) preference(1,(1,14),1,for(atom(hasCost(4))),3) preference(1,less(weight)) output(50,better,18) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(42,worse,47) output(42,worse,49) output(42,worse,72) output(64,worse,47) output(64,worse,49) output(64,worse,72) output(69,worse,49) output(23,worse,72) output(23,worse,47) output(23,worse,49) output(52,worse,72) output(52,worse,47) output(52,worse,49) output(24,worse,49) output(23,eq,64) output(69,eq,24) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(69,eq,67) output(24,eq,70) output(64,eq,24) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(42,eq,24) output(52,eq,24) output(25,eq,49) output(69,eq,70) output(64,eq,70) output(64,eq,67) output(23,eq,67) output(42,eq,67) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(52,eq,67) output(23,eq,70) output(42,eq,70) output(52,eq,70)
Optimization: 44 10
Answer: 6
preference(1,(1,14),1,for(atom(hasPrep(5))),3) preference(1,less(weight)) output(42,better,24) output(42,better,67) output(42,better,72) output(64,better,24) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(23,better,72) output(23,better,24) output(23,better,67) output(25,better,24) output(25,better,67) output(47,better,24) output(47,better,67) output(52,better,72) output(52,better,24) output(52,better,67) output(24,worse,49) output(24,worse,70) output(50,eq,18) output(23,eq,64) output(64,eq,47) output(49,eq,70) output(25,eq,69) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(47,eq,49) output(69,eq,49) output(23,eq,47) output(42,eq,47) output(52,eq,64) output(64,eq,64) output(52,eq,47) output(25,eq,49) output(64,eq,49) output(23,eq,49) output(42,eq,49) output(47,eq,70) output(69,eq,70) output(25,eq,70) output(64,eq,70) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(23,eq,70) output(42,eq,70) output(52,eq,70) output(52,eq,49)
Optimization: 36 1
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasCategory(5))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasIngredient(7))),2) preference(1,(1,14),1,for(atom(hasCost(4))),3) preference(1,less(weight)) output(50,better,18) output(42,better,24) output(42,better,67) output(64,better,24) output(64,better,67) output(69,better,24) output(69,better,67) output(23,better,24) output(23,better,67) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,24) output(52,better,67) output(42,worse,47) output(42,worse,49) output(42,worse,72) output(64,worse,47) output(64,worse,49) output(64,worse,72) output(69,worse,49) output(23,worse,72) output(23,worse,47) output(23,worse,49) output(52,worse,72) output(52,worse,47) output(52,worse,49) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(23,eq,64) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(52,eq,64) output(64,eq,64) output(25,eq,49) output(69,eq,70) output(64,eq,70) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(23,eq,70) output(42,eq,70) output(52,eq,70)
Optimization: 34 11
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasCost(5))),7) preference(1,(1,6),1,for(atom(hasCategory(5))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasIngredient(4))),7) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasIngredient(7))),2) preference(1,(1,14),1,for(atom(hasCost(4))),3) preference(1,less(weight)) output(50,better,18) output(42,better,47) output(42,better,24) output(42,better,67) output(64,better,47) output(64,better,24) output(64,better,67) output(69,better,24) output(69,better,67) output(23,better,47) output(23,better,24) output(23,better,67) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(49,better,70) output(52,better,47) output(52,better,24) output(52,better,67) output(42,worse,49) output(42,worse,72) output(64,worse,49) output(64,worse,72) output(69,worse,49) output(23,worse,72) output(23,worse,49) output(47,worse,49) output(47,worse,70) output(52,worse,72) output(52,worse,49) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(23,eq,64) output(42,eq,64) output(64,eq,52) output(52,eq,23) output(64,eq,23) output(23,eq,52) output(42,eq,52) output(52,eq,64) output(64,eq,64) output(25,eq,49) output(69,eq,70) output(64,eq,70) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(23,eq,70) output(42,eq,70) output(52,eq,70)
Optimization: 32 12
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(12))),2) preference(1,(1,2),1,for(atom(hasPrepTime(3))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),2) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasCategory(4))),2) preference(1,(1,6),1,for(atom(hasCost(3))),2) preference(1,(1,7),1,for(atom(hasCost(2))),6) preference(1,(1,8),1,for(atom(hasIngredient(3))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasCategory(3))),2) preference(1,(1,11),1,for(atom(hasPrep(7))),2) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),2) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,67) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(47,better,67) output(47,better,70) output(49,better,70) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(24,better,67) output(24,better,70) output(50,worse,18) output(42,worse,23) output(64,worse,52) output(64,worse,23) output(64,worse,49) output(69,worse,49) output(47,worse,24) output(47,worse,49) output(52,worse,23) output(24,worse,49) output(69,eq,24) output(64,eq,24) output(64,eq,64) output(25,eq,49) output(52,eq,52) output(23,eq,23) output(52,eq,49)
Optimization: 17 14
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(7))),8) preference(1,(1,8),1,for(atom(hasIngredient(3))),3) preference(1,(1,9),1,for(atom(hasCost(4))),8) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasCategory(5))),8) preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(64,worse,52) output(23,worse,52) output(23,eq,64) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(24,eq,67) output(64,eq,23) output(42,eq,52) output(47,eq,67) output(24,eq,70) output(47,eq,49) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23)
Optimization: 16 12
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(12))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(3))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(9))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),3) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasDifficulty(3))),3) preference(1,(1,12),1,for(atom(hasPrep(6))),3) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,49) output(64,better,70) output(64,better,67) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,70) output(49,better,70) output(52,better,64) output(52,better,47) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(64,worse,23) output(64,worse,24) output(64,worse,72) output(69,worse,24) output(23,worse,24) output(47,worse,24) output(52,worse,23) output(52,worse,24) output(52,eq,72) output(47,eq,67) output(47,eq,49) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 15 14
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasCost(3))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(3))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCategory(1))),8) preference(1,(1,10),1,for(atom(hasIngredient(7))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(12))),5) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,52) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,49) output(69,better,70) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,70) output(23,worse,64) output(23,worse,72) output(23,worse,52) output(47,worse,24) output(47,worse,67) output(47,worse,49) output(52,worse,64) output(24,worse,49) output(24,worse,67) output(69,eq,67) output(64,eq,64) output(23,eq,67) output(52,eq,52) output(23,eq,23)
Optimization: 14 14
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasCategory(5))),1) preference(1,(1,4),1,for(atom(hasPrep(5))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasIngredient(7))),2) preference(1,(1,11),1,for(atom(hasPrepTime(3))),3) preference(1,(1,12),1,for(atom(hasPrep(4))),5) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasIngredient(3))),2) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(64,worse,49) output(69,worse,24) output(69,worse,49) output(23,worse,64) output(23,worse,52) output(23,worse,49) output(25,worse,49) output(47,worse,49) output(24,worse,49) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 13 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasIngredient(10))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),1) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(69,worse,49) output(23,worse,64) output(23,worse,52) output(23,worse,49) output(47,worse,49) output(24,worse,49) output(69,eq,24) output(64,eq,64) output(64,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 12 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasCategory(3))),1) preference(1,(1,3),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasIngredient(10))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasDifficulty(4))),1) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),1) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(69,worse,49) output(23,worse,64) output(23,worse,52) output(23,worse,49) output(47,worse,49) output(24,worse,49) output(64,eq,64) output(64,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 11 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(1))),1) preference(1,(1,2),1,for(atom(hasCategory(3))),1) preference(1,(1,3),1,for(atom(hasCategory(5))),2) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasIngredient(7))),3) preference(1,(1,11),1,for(atom(hasIngredient(4))),6) preference(1,(1,12),1,for(atom(hasDifficulty(4))),1) preference(1,(1,13),1,for(atom(hasIngredient(3))),5) preference(1,(1,14),1,for(atom(hasCost(5))),1) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(23,worse,64) output(23,worse,52) output(23,worse,49) output(47,worse,49) output(24,worse,49) output(64,eq,64) output(64,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 10 13
Answer: 17
preference(1,(1,1),1,for(atom(hasIngredient(10))),1) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCategory(5))),4) preference(1,(1,10),1,for(atom(hasDifficulty(4))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),2) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(23,worse,64) output(23,worse,52) output(24,worse,49) output(24,worse,70) output(64,eq,52) output(52,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 9 14
Answer: 18
preference(1,(1,1),1,for(atom(hasIngredient(10))),1) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),5) preference(1,(1,9),1,for(atom(hasCategory(5))),2) preference(1,(1,10),1,for(atom(hasDifficulty(4))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),2) preference(1,(1,13),1,for(atom(hasIngredient(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),2) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(23,worse,64) output(23,worse,52) output(24,eq,49) output(64,eq,52) output(52,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 8 14
Answer: 19
preference(1,(1,1),1,for(atom(hasDifficulty(4))),5) preference(1,(1,2),1,for(atom(hasIngredient(10))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCost(5))),1) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasCategory(5))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(23,worse,64) output(23,worse,52) output(24,eq,49) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 7 14
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(4))),5) preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,3),1,for(atom(hasIngredient(4))),5) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasCost(3))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(23,worse,64) output(23,worse,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 14
Progression : [6;6] (Error: 0)
Answer: 21
preference(1,(1,1),1,for(atom(hasDifficulty(4))),5) preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,3),1,for(atom(hasIngredient(4))),5) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasPrepTime(3))),7) preference(1,(1,6),1,for(atom(hasCost(3))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasCategory(3))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasPrep(4))),4) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,23) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,72) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,23) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(23,worse,64) output(23,worse,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 13
Progression : 6 [ 1;13] (Error: 12)
Answer: 22
preference(1,(1,2),1,for(atom(hasIngredient(3))),8) preference(1,(1,3),1,for(atom(hasIngredient(7))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasCost(3))),2) preference(1,(1,7),1,for(atom(hasDifficulty(3))),5) preference(1,(1,8),1,for(atom(hasCategory(1))),8) preference(1,(1,11),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),7) preference(1,less(weight)) output(50,better,18) output(42,better,64) output(42,better,52) output(42,better,47) output(42,better,24) output(42,better,49) output(42,better,67) output(42,better,23) output(42,better,72) output(42,better,70) output(64,better,47) output(64,better,24) output(64,better,49) output(64,better,70) output(64,better,67) output(64,better,72) output(69,better,24) output(69,better,67) output(69,better,49) output(69,better,70) output(23,better,64) output(23,better,72) output(23,better,52) output(23,better,47) output(23,better,24) output(23,better,49) output(23,better,67) output(23,better,70) output(25,better,69) output(25,better,24) output(25,better,49) output(25,better,70) output(25,better,67) output(47,better,24) output(47,better,67) output(47,better,49) output(47,better,70) output(49,better,70) output(52,better,72) output(52,better,64) output(52,better,47) output(52,better,24) output(52,better,67) output(52,better,70) output(52,better,49) output(24,better,49) output(24,better,67) output(24,better,70) output(64,worse,52) output(64,worse,23) output(52,worse,23) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 6 10
Progression : 6 [ 2;10] (Error: 4)
Progression : 6 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 6 10
Bounds       : 6 [3;10]
Calls        : 1
Time         : 298.292s (Solving: 295.29s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1175.943s
Threads      : 4        (Winner: 4)

Choices      : 5654584  (Domain: 170206)
Conflicts    : 3028575  (Analyzed: 3028568)
Restarts     : 2686     (Average: 1127.54 Last: 203158)
Model-Level  : 182.5   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 3105101  (Deleted: 2875643)
  Binary     : 170      (Ratio:   0.01%)
  Ternary    : 388      (Ratio:   0.01%)
  Conflict   : 3028568  (Average Length:  489.9 Ratio:  97.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 76533    (Average Length:  572.5 Ratio:   2.46%) 
  Distributed: 25526    (Ratio:   0.84% Average LBD: 3.79) 
  Integrated : 76578    (Ratio: 300.00% Unit: 35 Average Jumps: 4.69)
Backjumps    : 3028568  (Average:  1.55 Max: 964 Sum: 4707968)
  Executed   : 3028564  (Average:  1.55 Max: 964 Sum: 4707921 Ratio: 100.00%)
  Bounded    : 4        (Average: 11.75 Max:  18 Sum:     47 Ratio:   0.00%)

Rules        : 606515  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15886   
Bodies       : 19120   
  Sum        : 105     
  Count      : 14      
Equivalences : 13901    (Atom=Atom: 547 Body=Body: 233 Other: 13121)
Tight        : Yes
Variables    : 17121    (Eliminated:    0 Frozen: 7797)
Constraints  : 626617   (Binary:  97.9% Ternary:   1.5% Other:   0.6%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(5)) ; 
  7 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(4)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasCategory(5)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCategory(5)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCost(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(5)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCost(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(5)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(4)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) 
}.
