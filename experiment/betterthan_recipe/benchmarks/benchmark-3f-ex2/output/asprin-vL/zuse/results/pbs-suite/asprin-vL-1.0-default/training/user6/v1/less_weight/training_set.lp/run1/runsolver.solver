asprin_vL version 1.0
Reading from stdin
-:1320:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1330:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1345:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1426:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1687:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1700:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1877:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2006:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2078:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2082:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2082:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2088:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2187:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2213:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2333:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2367:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2389:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1237:1-16: info: no atoms over signature occur in program:
  output/3

-:1229:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1230:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(4,eq,46) output(46,eq,60) output(60,eq,78) output(52,eq,33) output(33,eq,32) output(32,eq,7) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(4,eq,18) output(76,eq,42) output(41,eq,60) output(60,eq,32) output(32,eq,37) output(37,eq,72) output(18,eq,76) output(42,eq,41) output(72,eq,92) output(37,eq,92) output(76,eq,41) output(4,eq,76) output(32,eq,72) output(33,eq,37) output(60,eq,37) output(46,eq,32) output(41,eq,32) output(42,eq,60) output(18,eq,42) output(32,eq,39) output(60,eq,52) output(7,eq,79) output(33,eq,7) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(46,eq,78) output(41,eq,78) output(4,eq,60) output(42,eq,78) output(76,eq,78) output(4,eq,78) output(60,eq,33) output(46,eq,33) output(41,eq,33) output(78,eq,32) output(46,eq,7) output(41,eq,7) output(42,eq,7) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(46,eq,52) output(41,eq,52) output(42,eq,52) output(4,eq,52) output(33,eq,39) output(60,eq,39) output(46,eq,39) output(41,eq,39) output(52,eq,39) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(42,eq,32) output(76,eq,32) output(4,eq,32) output(46,eq,37) output(41,eq,37) output(42,eq,37) output(4,eq,37) output(52,eq,37) output(78,eq,37) output(33,eq,72) output(60,eq,72) output(46,eq,72) output(41,eq,72) output(52,eq,72) output(18,eq,41) output(4,eq,41) output(32,eq,92) output(33,eq,92) output(60,eq,92) output(46,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(76,eq,92) output(18,eq,92) output(52,eq,92) output(78,eq,92) output(78,eq,72) output(42,eq,72) output(4,eq,72) output(76,eq,72) output(18,eq,72) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(42,eq,39) output(4,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,52) output(18,eq,52) output(46,eq,79) output(41,eq,79) output(42,eq,79) output(4,eq,79) output(76,eq,79) output(18,eq,79) output(52,eq,79) output(78,eq,79) output(76,eq,7) output(18,eq,7) output(42,eq,33) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 123 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasIngredient(9))),8) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,92) output(46,better,79) output(4,worse,46) output(60,eq,78) output(52,eq,33) output(33,eq,32) output(32,eq,7) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(4,eq,18) output(76,eq,42) output(41,eq,60) output(60,eq,32) output(32,eq,37) output(37,eq,72) output(18,eq,76) output(42,eq,41) output(72,eq,92) output(37,eq,92) output(76,eq,41) output(4,eq,76) output(32,eq,72) output(33,eq,37) output(60,eq,37) output(41,eq,32) output(42,eq,60) output(18,eq,42) output(32,eq,39) output(60,eq,52) output(7,eq,79) output(33,eq,7) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(41,eq,78) output(4,eq,60) output(42,eq,78) output(76,eq,78) output(4,eq,78) output(60,eq,33) output(41,eq,33) output(78,eq,32) output(41,eq,7) output(42,eq,7) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(41,eq,52) output(42,eq,52) output(4,eq,52) output(33,eq,39) output(60,eq,39) output(41,eq,39) output(52,eq,39) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(42,eq,32) output(76,eq,32) output(4,eq,32) output(41,eq,37) output(42,eq,37) output(4,eq,37) output(52,eq,37) output(78,eq,37) output(33,eq,72) output(60,eq,72) output(41,eq,72) output(52,eq,72) output(18,eq,41) output(4,eq,41) output(32,eq,92) output(33,eq,92) output(60,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(76,eq,92) output(18,eq,92) output(52,eq,92) output(78,eq,92) output(78,eq,72) output(42,eq,72) output(4,eq,72) output(76,eq,72) output(18,eq,72) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(42,eq,39) output(4,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,52) output(18,eq,52) output(41,eq,79) output(42,eq,79) output(4,eq,79) output(76,eq,79) output(18,eq,79) output(52,eq,79) output(78,eq,79) output(76,eq,7) output(18,eq,7) output(42,eq,33) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 112 9
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(18,better,60) output(18,better,7) output(4,better,46) output(4,better,60) output(4,better,7) output(42,better,60) output(42,better,7) output(32,better,7) output(33,better,7) output(41,better,60) output(41,better,7) output(52,better,7) output(78,better,7) output(76,better,60) output(76,better,7) output(46,worse,32) output(46,worse,78) output(46,worse,33) output(46,worse,52) output(46,worse,39) output(46,worse,37) output(46,worse,72) output(46,worse,92) output(46,worse,79) output(60,worse,78) output(60,worse,32) output(60,worse,37) output(60,worse,52) output(60,worse,33) output(60,worse,79) output(60,worse,39) output(60,worse,72) output(60,worse,92) output(7,worse,39) output(7,worse,79) output(46,eq,60) output(52,eq,33) output(33,eq,32) output(39,eq,79) output(78,eq,52) output(4,eq,18) output(76,eq,42) output(32,eq,37) output(37,eq,72) output(18,eq,76) output(42,eq,41) output(72,eq,92) output(37,eq,92) output(76,eq,41) output(4,eq,76) output(32,eq,72) output(33,eq,37) output(41,eq,32) output(18,eq,42) output(32,eq,39) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(41,eq,78) output(42,eq,78) output(76,eq,78) output(4,eq,78) output(41,eq,33) output(78,eq,32) output(46,eq,7) output(32,eq,79) output(33,eq,79) output(41,eq,52) output(42,eq,52) output(4,eq,52) output(33,eq,39) output(41,eq,39) output(52,eq,39) output(4,eq,42) output(42,eq,32) output(76,eq,32) output(4,eq,32) output(41,eq,37) output(42,eq,37) output(4,eq,37) output(52,eq,37) output(78,eq,37) output(33,eq,72) output(41,eq,72) output(52,eq,72) output(18,eq,41) output(4,eq,41) output(32,eq,92) output(33,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(76,eq,92) output(18,eq,92) output(52,eq,92) output(78,eq,92) output(78,eq,72) output(42,eq,72) output(4,eq,72) output(76,eq,72) output(18,eq,72) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(42,eq,39) output(4,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,52) output(18,eq,52) output(41,eq,79) output(42,eq,79) output(4,eq,79) output(76,eq,79) output(18,eq,79) output(52,eq,79) output(78,eq,79) output(42,eq,33) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 108 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasIngredient(9))),8) preference(1,(1,11),1,for(atom(hasCategory(3))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,92) output(46,better,79) output(72,better,92) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,33) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,92) output(41,better,79) output(18,worse,41) output(18,worse,72) output(60,worse,72) output(4,worse,46) output(4,worse,41) output(4,worse,72) output(37,worse,72) output(42,worse,41) output(42,worse,72) output(32,worse,72) output(33,worse,72) output(52,worse,72) output(78,worse,72) output(76,worse,41) output(76,worse,72) output(60,eq,78) output(52,eq,33) output(33,eq,32) output(32,eq,7) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(4,eq,18) output(76,eq,42) output(60,eq,32) output(32,eq,37) output(18,eq,76) output(37,eq,92) output(4,eq,76) output(33,eq,37) output(60,eq,37) output(42,eq,60) output(18,eq,42) output(32,eq,39) output(60,eq,52) output(7,eq,79) output(33,eq,7) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(4,eq,60) output(42,eq,78) output(76,eq,78) output(4,eq,78) output(60,eq,33) output(78,eq,32) output(42,eq,7) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(42,eq,52) output(4,eq,52) output(33,eq,39) output(60,eq,39) output(52,eq,39) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(42,eq,32) output(76,eq,32) output(4,eq,32) output(42,eq,37) output(4,eq,37) output(52,eq,37) output(78,eq,37) output(46,eq,72) output(41,eq,72) output(32,eq,92) output(33,eq,92) output(60,eq,92) output(42,eq,92) output(4,eq,92) output(76,eq,92) output(18,eq,92) output(52,eq,92) output(78,eq,92) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(42,eq,39) output(4,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,52) output(18,eq,52) output(42,eq,79) output(4,eq,79) output(76,eq,79) output(18,eq,79) output(52,eq,79) output(78,eq,79) output(76,eq,7) output(18,eq,7) output(42,eq,33) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 102 6
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(3))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,92) output(46,better,79) output(72,better,92) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,92) output(42,better,39) output(42,better,79) output(42,better,33) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,33) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,92) output(41,better,79) output(18,worse,42) output(18,worse,41) output(18,worse,72) output(60,worse,72) output(4,worse,46) output(4,worse,42) output(4,worse,41) output(4,worse,72) output(37,worse,72) output(32,worse,72) output(33,worse,72) output(52,worse,72) output(78,worse,72) output(76,worse,42) output(76,worse,41) output(76,worse,72) output(60,eq,78) output(52,eq,33) output(33,eq,32) output(32,eq,7) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(4,eq,18) output(60,eq,32) output(32,eq,37) output(18,eq,76) output(42,eq,41) output(37,eq,92) output(4,eq,76) output(33,eq,37) output(60,eq,37) output(32,eq,39) output(60,eq,52) output(7,eq,79) output(33,eq,7) output(60,eq,7) output(52,eq,32) output(78,eq,33) output(4,eq,60) output(76,eq,78) output(4,eq,78) output(60,eq,33) output(78,eq,32) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(4,eq,52) output(33,eq,39) output(60,eq,39) output(52,eq,39) output(76,eq,60) output(18,eq,60) output(76,eq,32) output(4,eq,32) output(4,eq,37) output(52,eq,37) output(78,eq,37) output(46,eq,72) output(41,eq,72) output(32,eq,92) output(33,eq,92) output(60,eq,92) output(4,eq,92) output(76,eq,92) output(18,eq,92) output(52,eq,92) output(78,eq,92) output(42,eq,72) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(4,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,52) output(18,eq,52) output(4,eq,79) output(76,eq,79) output(18,eq,79) output(52,eq,79) output(78,eq,79) output(76,eq,7) output(18,eq,7) output(76,eq,33) output(18,eq,33) output(4,eq,33) output(18,eq,78)
Optimization: 92 5
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasCost(4))),1) preference(1,(1,6),1,for(atom(hasDifficulty(3))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasCategory(4))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasIngredient(9))),5) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(18,better,76) output(18,better,92) output(18,better,39) output(18,better,52) output(18,better,7) output(18,better,78) output(46,better,78) output(46,better,7) output(46,better,52) output(46,better,39) output(60,better,78) output(60,better,52) output(60,better,7) output(60,better,39) output(60,better,92) output(72,better,92) output(37,better,92) output(42,better,41) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,92) output(42,better,39) output(42,better,79) output(42,better,33) output(32,better,7) output(32,better,39) output(32,better,92) output(33,better,7) output(33,better,39) output(33,better,92) output(41,better,78) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,92) output(18,worse,42) output(18,worse,72) output(46,worse,60) output(46,worse,32) output(46,worse,33) output(46,worse,37) output(46,worse,72) output(46,worse,79) output(60,worse,72) output(4,worse,46) output(4,worse,18) output(4,worse,60) output(4,worse,42) output(4,worse,32) output(4,worse,37) output(4,worse,41) output(4,worse,92) output(4,worse,72) output(4,worse,79) output(4,worse,33) output(37,worse,72) output(39,worse,79) output(7,worse,79) output(32,worse,72) output(33,worse,72) output(41,worse,72) output(52,worse,33) output(52,worse,32) output(52,worse,37) output(52,worse,72) output(52,worse,92) output(52,worse,79) output(78,worse,33) output(78,worse,32) output(78,worse,37) output(78,worse,92) output(78,worse,72) output(78,worse,79) output(76,worse,42) output(76,worse,41) output(76,worse,60) output(76,worse,32) output(76,worse,92) output(76,worse,72) output(76,worse,37) output(76,worse,79) output(76,worse,33) output(33,eq,32) output(78,eq,52) output(7,eq,39) output(41,eq,60) output(60,eq,32) output(32,eq,37) output(4,eq,76) output(33,eq,37) output(60,eq,37) output(41,eq,32) output(76,eq,78) output(4,eq,78) output(60,eq,33) output(41,eq,33) output(4,eq,7) output(52,eq,7) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(4,eq,52) output(52,eq,39) output(18,eq,60) output(41,eq,37) output(18,eq,41) output(46,eq,92) output(42,eq,72) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(4,eq,39) output(76,eq,39) output(76,eq,52) output(41,eq,79) output(18,eq,79) output(76,eq,7) output(18,eq,33)
Optimization: 84 14
Progression : [ 1;84] (Error: 83)
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,39) output(46,better,37) output(46,better,79) output(4,better,18) output(4,better,76) output(4,better,60) output(4,better,78) output(4,better,7) output(4,better,32) output(4,better,37) output(4,better,39) output(4,better,79) output(4,better,33) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,32) output(42,better,37) output(42,better,39) output(42,better,79) output(42,better,33) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,33) output(41,better,7) output(41,better,39) output(41,better,37) output(41,better,79) output(52,better,33) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,79) output(18,worse,42) output(18,worse,41) output(18,worse,92) output(18,worse,72) output(18,worse,52) output(60,worse,52) output(60,worse,72) output(60,worse,92) output(37,worse,72) output(37,worse,92) output(32,worse,72) output(32,worse,92) output(33,worse,72) output(33,worse,92) output(78,worse,52) output(78,worse,92) output(78,worse,72) output(76,worse,42) output(76,worse,41) output(76,worse,92) output(76,worse,72) output(76,worse,52) output(4,eq,46) output(60,eq,78) output(33,eq,32) output(32,eq,7) output(39,eq,79) output(7,eq,39) output(60,eq,32) output(32,eq,37) output(18,eq,76) output(42,eq,41) output(72,eq,92) output(33,eq,37) output(60,eq,37) output(32,eq,39) output(7,eq,79) output(33,eq,7) output(60,eq,7) output(78,eq,33) output(76,eq,78) output(60,eq,33) output(78,eq,32) output(78,eq,7) output(32,eq,79) output(33,eq,79) output(60,eq,79) output(46,eq,52) output(41,eq,52) output(42,eq,52) output(4,eq,52) output(33,eq,39) output(60,eq,39) output(4,eq,42) output(76,eq,60) output(18,eq,60) output(76,eq,32) output(78,eq,37) output(46,eq,72) output(41,eq,72) output(52,eq,72) output(4,eq,41) output(46,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(52,eq,92) output(42,eq,72) output(4,eq,72) output(76,eq,37) output(18,eq,37) output(18,eq,32) output(78,eq,39) output(76,eq,39) output(18,eq,39) output(76,eq,79) output(18,eq,79) output(78,eq,79) output(76,eq,7) output(18,eq,7) output(76,eq,33) output(18,eq,33) output(18,eq,78)
Optimization: 83 4
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasCategory(3))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasCost(3))),7) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasDifficulty(3))),7) preference(1,(1,9),1,for(atom(hasCost(4))),7) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(10))),1) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(18,better,76) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,7) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,92) output(46,better,79) output(60,better,32) output(60,better,37) output(60,better,7) output(60,better,39) output(4,better,18) output(4,better,76) output(4,better,60) output(4,better,78) output(4,better,7) output(4,better,52) output(4,better,42) output(4,better,32) output(4,better,37) output(4,better,41) output(4,better,72) output(4,better,39) output(4,better,79) output(4,better,33) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,32) output(42,better,37) output(42,better,39) output(42,better,79) output(7,better,39) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,79) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,79) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,39) output(76,better,32) output(76,better,37) output(76,better,39) output(18,worse,42) output(18,worse,41) output(18,worse,92) output(18,worse,72) output(18,worse,52) output(18,worse,79) output(18,worse,33) output(60,worse,52) output(60,worse,33) output(60,worse,79) output(60,worse,72) output(60,worse,92) output(72,worse,92) output(4,worse,46) output(37,worse,72) output(37,worse,92) output(39,worse,79) output(42,worse,41) output(42,worse,52) output(42,worse,92) output(42,worse,72) output(42,worse,33) output(7,worse,79) output(32,worse,7) output(32,worse,37) output(32,worse,72) output(32,worse,79) output(32,worse,92) output(33,worse,92) output(41,worse,92) output(52,worse,33) output(52,worse,72) output(52,worse,92) output(78,worse,52) output(78,worse,33) output(78,worse,92) output(78,worse,72) output(78,worse,79) output(76,worse,42) output(76,worse,41) output(76,worse,78) output(76,worse,60) output(76,worse,92) output(76,worse,72) output(76,worse,52) output(76,worse,79) output(76,worse,33) output(60,eq,78) output(32,eq,39) output(41,eq,33) output(18,eq,60) output(33,eq,72) output(41,eq,72) output(4,eq,92) output(76,eq,7) output(18,eq,78)
Optimization: 56 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(3))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasCost(3))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasIngredient(10))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,less(weight)) output(18,better,76) output(18,better,42) output(18,better,60) output(18,better,41) output(18,better,92) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(46,better,60) output(46,better,32) output(46,better,7) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,79) output(4,better,46) output(4,better,76) output(4,better,60) output(4,better,7) output(4,better,52) output(4,better,32) output(4,better,37) output(4,better,41) output(4,better,72) output(4,better,39) output(4,better,79) output(42,better,41) output(42,better,60) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(33,better,92) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,79) output(78,better,52) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,92) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,41) output(76,better,60) output(76,better,32) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,79) output(76,better,7) output(46,worse,78) output(46,worse,33) output(46,worse,92) output(60,worse,78) output(60,worse,52) output(60,worse,33) output(60,worse,92) output(72,worse,92) output(4,worse,18) output(4,worse,78) output(4,worse,33) output(37,worse,92) output(42,worse,78) output(42,worse,33) output(32,worse,92) output(41,worse,78) output(41,worse,33) output(41,worse,52) output(41,worse,92) output(52,worse,33) output(52,worse,92) output(76,worse,42) output(76,worse,78) output(76,worse,92) output(76,worse,33) output(32,eq,7) output(39,eq,79) output(7,eq,39) output(41,eq,60) output(60,eq,32) output(32,eq,37) output(37,eq,72) output(32,eq,72) output(60,eq,37) output(41,eq,32) output(32,eq,39) output(7,eq,79) output(60,eq,7) output(78,eq,33) output(41,eq,7) output(32,eq,79) output(60,eq,79) output(46,eq,52) output(60,eq,39) output(41,eq,39) output(4,eq,42) output(41,eq,37) output(60,eq,72) output(41,eq,72) output(42,eq,92) output(4,eq,92) output(76,eq,52) output(41,eq,79) output(18,eq,33) output(18,eq,78)
Optimization: 55 10
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(3))),7) preference(1,(1,2),1,for(atom(hasPrep(5))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasDifficulty(3))),7) preference(1,(1,5),1,for(atom(hasIngredient(10))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(18,better,76) output(18,better,42) output(18,better,60) output(18,better,41) output(18,better,92) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(18,better,78) output(46,better,60) output(46,better,7) output(46,better,39) output(46,better,37) output(46,better,79) output(4,better,46) output(4,better,76) output(4,better,60) output(4,better,7) output(4,better,52) output(4,better,32) output(4,better,37) output(4,better,41) output(4,better,72) output(4,better,39) output(4,better,79) output(42,better,41) output(42,better,60) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(32,better,7) output(32,better,37) output(32,better,39) output(32,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(33,better,92) output(41,better,60) output(41,better,7) output(41,better,39) output(41,better,37) output(41,better,79) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,79) output(78,better,52) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,60) output(76,better,37) output(76,better,39) output(76,better,79) output(76,better,7) output(46,worse,78) output(46,worse,33) output(46,worse,92) output(60,worse,78) output(60,worse,32) output(60,worse,52) output(60,worse,33) output(60,worse,72) output(60,worse,92) output(72,worse,92) output(4,worse,18) output(4,worse,33) output(37,worse,72) output(37,worse,92) output(42,worse,33) output(32,worse,92) output(41,worse,78) output(41,worse,33) output(41,worse,92) output(52,worse,33) output(52,worse,92) output(78,worse,33) output(76,worse,42) output(76,worse,78) output(76,worse,92) output(76,worse,33) output(39,eq,79) output(7,eq,39) output(76,eq,41) output(32,eq,72) output(60,eq,37) output(46,eq,32) output(41,eq,32) output(7,eq,79) output(60,eq,7) output(52,eq,32) output(42,eq,78) output(4,eq,78) output(60,eq,79) output(46,eq,52) output(41,eq,52) output(60,eq,39) output(4,eq,42) output(76,eq,32) output(46,eq,72) output(41,eq,72) output(52,eq,72) output(42,eq,92) output(4,eq,92) output(78,eq,92) output(76,eq,72) output(76,eq,52) output(18,eq,33)
Optimization: 53 9
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasCost(3))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasCost(5))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),7) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(18,better,60) output(18,better,72) output(18,better,37) output(18,better,39) output(18,better,79) output(18,better,7) output(46,better,60) output(46,better,7) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,79) output(4,better,46) output(4,better,18) output(4,better,60) output(4,better,7) output(4,better,52) output(4,better,37) output(4,better,72) output(4,better,39) output(4,better,79) output(42,better,60) output(42,better,7) output(42,better,52) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(32,better,7) output(32,better,37) output(32,better,72) output(32,better,39) output(32,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(33,better,92) output(41,better,60) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,72) output(41,better,79) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,79) output(78,better,52) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,92) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(18,worse,76) output(18,worse,42) output(18,worse,41) output(18,worse,92) output(18,worse,32) output(18,worse,33) output(18,worse,78) output(46,worse,32) output(46,worse,78) output(46,worse,33) output(46,worse,92) output(60,worse,78) output(60,worse,32) output(60,worse,52) output(60,worse,33) output(60,worse,92) output(72,worse,92) output(4,worse,76) output(4,worse,78) output(4,worse,33) output(37,worse,92) output(42,worse,78) output(42,worse,33) output(41,worse,78) output(41,worse,33) output(52,worse,33) output(52,worse,32) output(52,worse,92) output(39,eq,79) output(7,eq,39) output(37,eq,72) output(42,eq,41) output(60,eq,37) output(41,eq,32) output(7,eq,79) output(60,eq,7) output(78,eq,33) output(76,eq,78) output(60,eq,79) output(46,eq,52) output(60,eq,39) output(4,eq,42) output(42,eq,32) output(4,eq,32) output(60,eq,72) output(4,eq,41) output(32,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(18,eq,52) output(76,eq,33)
Optimization: 52 11
Answer: 12
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasCost(3))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),8) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(18,better,60) output(18,better,72) output(18,better,37) output(18,better,39) output(18,better,79) output(18,better,7) output(46,better,60) output(46,better,7) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,79) output(4,better,46) output(4,better,18) output(4,better,60) output(4,better,78) output(4,better,7) output(4,better,52) output(4,better,37) output(4,better,72) output(4,better,39) output(4,better,79) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(32,better,7) output(32,better,37) output(32,better,72) output(32,better,39) output(32,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(33,better,92) output(41,better,60) output(41,better,78) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,72) output(41,better,79) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,79) output(78,better,7) output(78,better,37) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,78) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(18,worse,76) output(18,worse,42) output(18,worse,41) output(18,worse,92) output(18,worse,32) output(18,worse,33) output(46,worse,32) output(46,worse,33) output(46,worse,92) output(60,worse,78) output(60,worse,32) output(60,worse,52) output(60,worse,33) output(60,worse,92) output(72,worse,92) output(4,worse,76) output(4,worse,33) output(37,worse,92) output(42,worse,33) output(41,worse,33) output(52,worse,33) output(52,worse,32) output(52,worse,92) output(78,worse,33) output(78,worse,32) output(78,worse,92) output(39,eq,79) output(78,eq,52) output(7,eq,39) output(37,eq,72) output(42,eq,41) output(60,eq,37) output(41,eq,32) output(7,eq,79) output(60,eq,7) output(46,eq,78) output(60,eq,79) output(46,eq,52) output(60,eq,39) output(4,eq,42) output(42,eq,32) output(4,eq,32) output(60,eq,72) output(4,eq,41) output(32,eq,92) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(18,eq,52) output(76,eq,33) output(18,eq,78)
Optimization: 51 11
Progression : [ 2;51] (Error: 24.5)
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasIngredient(12))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasIngredient(7))),3) preference(1,(1,10),1,for(atom(hasCategory(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasIngredient(9))),1) preference(1,less(weight)) output(18,better,76) output(18,better,42) output(18,better,41) output(18,better,72) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,7) output(18,better,33) output(18,better,78) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,79) output(60,better,78) output(60,better,32) output(60,better,37) output(60,better,52) output(60,better,7) output(60,better,33) output(60,better,79) output(60,better,39) output(60,better,72) output(60,better,92) output(4,better,46) output(4,better,18) output(4,better,76) output(4,better,78) output(4,better,7) output(4,better,52) output(4,better,42) output(4,better,32) output(4,better,37) output(4,better,41) output(4,better,72) output(4,better,39) output(4,better,79) output(4,better,33) output(37,better,72) output(42,better,41) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,72) output(42,better,39) output(42,better,33) output(33,better,32) output(33,better,7) output(33,better,39) output(33,better,72) output(41,better,32) output(41,better,7) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,72) output(78,better,32) output(78,better,7) output(78,better,72) output(78,better,39) output(76,better,41) output(76,better,78) output(76,better,32) output(76,better,72) output(76,better,39) output(76,better,52) output(76,better,7) output(76,better,33) output(18,worse,60) output(18,worse,92) output(46,worse,60) output(46,worse,92) output(72,worse,92) output(4,worse,60) output(37,worse,92) output(39,worse,79) output(42,worse,60) output(42,worse,37) output(42,worse,92) output(42,worse,79) output(7,worse,39) output(7,worse,79) output(32,worse,37) output(32,worse,72) output(32,worse,39) output(32,worse,79) output(32,worse,92) output(33,worse,37) output(33,worse,79) output(33,worse,92) output(41,worse,60) output(41,worse,78) output(41,worse,33) output(41,worse,52) output(41,worse,39) output(41,worse,37) output(41,worse,72) output(41,worse,92) output(41,worse,79) output(52,worse,37) output(52,worse,92) output(52,worse,79) output(78,worse,52) output(78,worse,33) output(78,worse,37) output(78,worse,92) output(78,worse,79) output(76,worse,42) output(76,worse,60) output(76,worse,92) output(76,worse,37) output(76,worse,79) output(52,eq,33) output(32,eq,7) output(4,eq,92) output(18,eq,37) output(18,eq,79)
Optimization: 49 14
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasIngredient(12))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasIngredient(9))),1) preference(1,less(weight)) output(18,better,76) output(18,better,42) output(18,better,60) output(18,better,41) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,78) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,79) output(60,better,78) output(60,better,32) output(60,better,37) output(60,better,52) output(60,better,7) output(60,better,33) output(60,better,79) output(60,better,39) output(60,better,72) output(4,better,46) output(4,better,76) output(4,better,60) output(4,better,78) output(4,better,7) output(4,better,52) output(4,better,42) output(4,better,32) output(4,better,37) output(4,better,41) output(4,better,72) output(4,better,39) output(4,better,79) output(4,better,33) output(37,better,72) output(42,better,41) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(42,better,33) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,79) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,78) output(76,better,60) output(76,better,32) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(76,better,33) output(46,worse,92) output(60,worse,92) output(72,worse,92) output(37,worse,92) output(39,worse,79) output(42,worse,60) output(42,worse,92) output(7,worse,39) output(7,worse,79) output(32,worse,37) output(32,worse,72) output(32,worse,39) output(32,worse,79) output(32,worse,92) output(33,worse,92) output(41,worse,60) output(41,worse,78) output(41,worse,33) output(41,worse,52) output(41,worse,39) output(41,worse,37) output(41,worse,72) output(41,worse,92) output(41,worse,79) output(52,worse,92) output(78,worse,92) output(76,worse,92) output(52,eq,33) output(32,eq,7) output(78,eq,52) output(4,eq,18) output(41,eq,32) output(78,eq,33) output(41,eq,7) output(4,eq,92) output(18,eq,92)
Optimization: 36 14
Progression : [ 3;36] (Error: 11)
Progression : [ 4;36] (Error: 8)
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasCategory(4))),2) preference(1,(1,4),1,for(atom(hasPrep(5))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasCost(3))),2) preference(1,(1,10),1,for(atom(hasCost(4))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(10))),3) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(18,better,42) output(18,better,60) output(18,better,41) output(18,better,92) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(18,better,33) output(46,better,60) output(46,better,32) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,92) output(46,better,79) output(60,better,32) output(60,better,37) output(60,better,52) output(60,better,7) output(60,better,33) output(60,better,79) output(60,better,39) output(60,better,72) output(4,better,60) output(4,better,7) output(4,better,52) output(4,better,32) output(4,better,37) output(4,better,72) output(4,better,39) output(4,better,79) output(4,better,33) output(39,better,79) output(42,better,60) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,72) output(42,better,39) output(42,better,79) output(42,better,33) output(7,better,79) output(32,better,7) output(32,better,37) output(32,better,39) output(32,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(41,better,60) output(41,better,32) output(41,better,33) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,72) output(41,better,79) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,79) output(78,better,52) output(78,better,33) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,92) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,78) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(76,better,33) output(18,worse,76) output(60,worse,78) output(60,worse,92) output(72,worse,92) output(4,worse,46) output(4,worse,18) output(4,worse,76) output(4,worse,78) output(37,worse,72) output(37,worse,92) output(42,worse,78) output(32,worse,92) output(33,worse,92) output(41,worse,78) output(52,worse,92) output(52,eq,33) output(7,eq,39) output(42,eq,41) output(32,eq,72) output(46,eq,78) output(4,eq,42) output(4,eq,41) output(41,eq,92) output(42,eq,92) output(4,eq,92) output(18,eq,78)
Optimization: 26 14
Progression : [ 5;26] (Error: 4.2)
Progression : [ 6;26] (Error: 3.33333)
Progression : [ 7;26] (Error: 2.71429)
Progression : [ 8;26] (Error: 2.25)
Progression : [ 9;26] (Error: 1.88889)
Progression : [10;26] (Error: 1.6)
Progression : [11;26] (Error: 1.36364)
Progression : [12;26] (Error: 1.16667)
Progression : [13;26] (Error: 1)
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasCost(3))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasCategory(4))),3) preference(1,(1,7),1,for(atom(hasCategory(3))),8) preference(1,(1,8),1,for(atom(hasDifficulty(3))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),7) preference(1,(1,10),1,for(atom(hasPrep(6))),7) preference(1,(1,11),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasCategory(1))),7) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(18,better,42) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,78) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,92) output(46,better,79) output(60,better,32) output(60,better,37) output(60,better,52) output(60,better,7) output(60,better,33) output(60,better,79) output(60,better,39) output(60,better,72) output(60,better,92) output(72,better,92) output(4,better,37) output(4,better,39) output(4,better,79) output(39,better,79) output(42,better,7) output(42,better,32) output(42,better,37) output(42,better,92) output(42,better,72) output(42,better,39) output(42,better,79) output(7,better,39) output(7,better,79) output(32,better,7) output(32,better,37) output(32,better,39) output(32,better,79) output(32,better,92) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,72) output(33,better,92) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,33) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,72) output(41,better,92) output(41,better,79) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,72) output(52,better,92) output(52,better,79) output(78,better,52) output(78,better,33) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,92) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,78) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(76,better,33) output(18,worse,76) output(18,worse,41) output(4,worse,46) output(4,worse,18) output(4,worse,76) output(4,worse,60) output(4,worse,78) output(4,worse,7) output(4,worse,52) output(4,worse,42) output(4,worse,32) output(4,worse,41) output(4,worse,92) output(4,worse,72) output(4,worse,33) output(37,worse,72) output(37,worse,92) output(42,worse,41) output(42,worse,60) output(42,worse,78) output(42,worse,52) output(42,worse,33) output(60,eq,78) output(52,eq,33) output(32,eq,72)
Optimization: 25 14
Answer: 17
preference(1,(1,1),1,for(atom(hasCost(1))),5) preference(1,(1,2),1,for(atom(hasCost(4))),1) preference(1,(1,3),1,for(atom(hasIngredient(10))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),2) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasCost(3))),2) preference(1,(1,9),1,for(atom(hasCategory(4))),5) preference(1,(1,10),1,for(atom(hasIngredient(12))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),6) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasIngredient(7))),1) preference(1,(1,14),1,for(atom(hasCategory(3))),7) preference(1,less(weight)) output(18,better,42) output(18,better,60) output(18,better,41) output(18,better,92) output(18,better,72) output(18,better,37) output(18,better,32) output(18,better,39) output(18,better,52) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,78) output(46,better,60) output(46,better,32) output(46,better,78) output(46,better,33) output(46,better,7) output(46,better,52) output(46,better,39) output(46,better,37) output(46,better,72) output(46,better,92) output(46,better,79) output(60,better,32) output(60,better,37) output(60,better,52) output(60,better,7) output(60,better,33) output(60,better,79) output(60,better,39) output(60,better,92) output(72,better,92) output(4,better,7) output(4,better,32) output(4,better,39) output(4,better,79) output(37,better,92) output(39,better,79) output(42,better,60) output(42,better,78) output(42,better,7) output(42,better,52) output(42,better,32) output(42,better,37) output(42,better,92) output(42,better,72) output(42,better,39) output(42,better,79) output(42,better,33) output(7,better,79) output(32,better,7) output(32,better,39) output(32,better,79) output(33,better,32) output(33,better,37) output(33,better,7) output(33,better,79) output(33,better,39) output(33,better,92) output(41,better,60) output(41,better,32) output(41,better,78) output(41,better,33) output(41,better,7) output(41,better,52) output(41,better,39) output(41,better,37) output(41,better,72) output(41,better,92) output(41,better,79) output(52,better,33) output(52,better,32) output(52,better,7) output(52,better,39) output(52,better,37) output(52,better,92) output(52,better,79) output(78,better,52) output(78,better,33) output(78,better,32) output(78,better,7) output(78,better,37) output(78,better,92) output(78,better,72) output(78,better,39) output(78,better,79) output(76,better,42) output(76,better,41) output(76,better,78) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,37) output(76,better,39) output(76,better,52) output(76,better,79) output(76,better,7) output(76,better,33) output(60,worse,78) output(4,worse,46) output(4,worse,18) output(4,worse,76) output(4,worse,60) output(4,worse,78) output(4,worse,52) output(4,worse,42) output(4,worse,37) output(4,worse,41) output(4,worse,72) output(4,worse,33) output(37,worse,72) output(32,worse,37) output(32,worse,72) output(32,worse,92) output(33,worse,72) output(52,worse,72) output(7,eq,39) output(18,eq,76) output(42,eq,41) output(60,eq,72) output(4,eq,92)
Optimization: 23 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.040 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 23 14
Bounds       : [13;23] [0;14]
Calls        : 1
Time         : 298.211s (Solving: 293.74s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 1179.206s
Threads      : 4        (Winner: 4)

Choices      : 7193020  (Domain: 343084)
Conflicts    : 4970421  (Analyzed: 4970408)
Restarts     : 4869     (Average: 1020.83 Last: 269039)
Model-Level  : 67.9    
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 5020992  (Deleted: 4731116)
  Binary     : 495      (Ratio:   0.01%)
  Ternary    : 3153     (Ratio:   0.06%)
  Conflict   : 4970408  (Average Length:  363.7 Ratio:  98.99%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 50584    (Average Length:   34.1 Ratio:   1.01%) 
  Distributed: 16868    (Ratio:   0.34% Average LBD: 3.69) 
  Integrated : 50604    (Ratio: 300.00% Unit: 117 Average Jumps: 9.68)
Backjumps    : 4970408  (Average:  1.39 Max: 550 Sum: 6918937)
  Executed   : 4970384  (Average:  1.39 Max: 550 Sum: 6918263 Ratio:  99.99%)
  Bounded    : 24       (Average: 28.08 Max:  85 Sum:    674 Ratio:   0.01%)

Rules        : 1259485 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 22672   
Bodies       : 19882   
  Sum        : 246     
  Count      : 14      
Equivalences : 10155    (Atom=Atom: 1243 Body=Body: 506 Other: 8406)
Tight        : Yes
Variables    : 17427    (Eliminated:    0 Frozen: 8103)
Constraints  : 1273338  (Binary:  99.0% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(4)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(3)) ; 
  3 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(3)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(3)) 
}.
