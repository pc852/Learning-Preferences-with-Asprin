asprin_vL version 1.0
Reading from stdin
-:1255:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1280:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1361:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1635:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1812:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2013:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2017:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2017:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2023:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2122:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2148:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2268:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2324:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1172:1-16: info: no atoms over signature occur in program:
  output/3

-:1164:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1165:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1166:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1167:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1197:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(82,better,65) output(39,better,60) output(60,better,68) output(39,better,68) output(39,better,65) output(46,better,65) output(39,better,22) output(46,better,68) output(65,worse,33) output(68,worse,22) output(46,worse,39) output(46,worse,82) output(46,worse,33) output(39,eq,82) output(10,eq,74) output(74,eq,80) output(52,eq,74) output(74,eq,66) output(66,eq,55) output(74,eq,55) output(10,eq,66) output(52,eq,66) output(46,eq,60) output(10,eq,80) output(52,eq,80) output(60,eq,22) output(82,eq,33) output(39,eq,33) output(46,eq,22) output(10,eq,55) output(52,eq,55)
Optimization: 28 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(82,better,65) output(46,better,39) output(60,better,68) output(74,better,66) output(55,better,47) output(10,better,66) output(52,better,66) output(82,better,33) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,68) output(74,better,47) output(10,better,47) output(52,better,47) output(39,worse,82) output(68,worse,22) output(74,worse,80) output(39,worse,60) output(66,worse,55) output(39,worse,68) output(52,worse,80) output(39,worse,22) output(65,eq,33) output(52,eq,74) output(66,eq,47) output(74,eq,55) output(46,eq,60) output(60,eq,22) output(39,eq,65) output(39,eq,33) output(46,eq,22) output(52,eq,55)
Optimization: 21 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(39,better,60) output(60,better,68) output(52,better,74) output(52,better,66) output(39,better,68) output(46,better,60) output(52,better,80) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(52,better,55) output(65,worse,33) output(68,worse,22) output(55,worse,47) output(66,worse,47) output(74,worse,47) output(10,worse,47) output(10,eq,74) output(74,eq,80) output(46,eq,39) output(74,eq,66) output(66,eq,55) output(74,eq,55) output(10,eq,66) output(10,eq,80) output(60,eq,22) output(82,eq,33) output(10,eq,55)
Optimization: 18 6
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(82,better,65) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(52,better,80) output(82,better,33) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,68) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47) output(39,worse,82) output(68,worse,22) output(39,worse,60) output(39,worse,68) output(39,worse,65) output(39,worse,33) output(39,worse,22) output(65,eq,33) output(60,eq,22)
Optimization: 17 5
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(82,better,65) output(65,better,33) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(52,better,80) output(82,better,33) output(46,better,82) output(46,better,65) output(46,better,33) output(46,better,68) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47) output(39,worse,82) output(68,worse,22) output(39,worse,60) output(39,worse,68) output(39,worse,65) output(39,worse,33) output(39,worse,22) output(60,eq,22)
Optimization: 16 5
Answer: 6
preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(atom(hasCost(1))),()) preference(1,(1,5),0,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(68,better,22) output(10,better,74) output(74,better,80) output(39,better,60) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47) output(60,worse,68) output(74,worse,66) output(60,worse,22) output(65,eq,33) output(46,eq,39)
Optimization: 6 4
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(atom(hasIngredient(9))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,aso) output(82,better,65) output(10,better,74) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 5 5
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,aso) output(82,better,65) output(65,better,33) output(10,better,74) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 4 5
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(10,better,74) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 3 5
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(68,better,22) output(10,better,74) output(74,better,80) output(46,better,39) output(60,better,68) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 2 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasCost(4))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(68,better,22) output(10,better,74) output(74,better,80) output(46,better,39) output(39,better,60) output(60,better,68) output(52,better,74) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 1 5
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasCost(4))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(68,better,22) output(10,better,74) output(74,better,80) output(46,better,39) output(39,better,60) output(60,better,68) output(52,better,74) output(74,better,66) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 0 5
Progression : 0 [1;5] (Error: 4)
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(68,better,22) output(10,better,74) output(74,better,80) output(46,better,39) output(39,better,60) output(60,better,68) output(52,better,74) output(74,better,66) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 0 4
Progression : 0 [2;4] (Error: 1)
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(39,better,82) output(82,better,65) output(65,better,33) output(68,better,22) output(10,better,74) output(74,better,80) output(46,better,39) output(39,better,60) output(60,better,68) output(52,better,74) output(74,better,66) output(66,better,55) output(55,better,47) output(66,better,47) output(74,better,55) output(10,better,66) output(52,better,66) output(39,better,68) output(46,better,60) output(10,better,80) output(52,better,80) output(60,better,22) output(82,better,33) output(39,better,65) output(46,better,82) output(46,better,65) output(39,better,33) output(46,better,33) output(39,better,22) output(46,better,22) output(46,better,68) output(10,better,55) output(52,better,55) output(74,better,47) output(10,better,47) output(52,better,47)
Optimization: 0 3
OPTIMUM FOUND

Models       : 14
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 11.754s (Solving: 4.36s 1st Model: 0.44s Unsat: 2.52s)
CPU Time     : 24.352s
Threads      : 4        (Winner: 3)

Choices      : 128468   (Domain: 428)
Conflicts    : 16342    (Analyzed: 16339)
Restarts     : 37       (Average: 441.59 Last: 1354)
Model-Level  : 831.4   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 32558    (Deleted: 0)
  Binary     : 2289     (Ratio:   7.03%)
  Ternary    : 7394     (Ratio:  22.71%)
  Conflict   : 16338    (Average Length:  141.8 Ratio:  50.18%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 16220    (Average Length:   50.3 Ratio:  49.82%) 
  Distributed: 5450     (Ratio:  33.36% Average LBD: 2.92) 
  Integrated : 16316    (Ratio: 299.38% Unit: 270 Average Jumps: 49.07)
Backjumps    : 16339    (Average:  6.39 Max: 737 Sum: 104362)
  Executed   : 16324    (Average:  6.37 Max: 737 Sum: 104007 Ratio:  99.66%)
  Bounded    : 15       (Average: 23.67 Max:  34 Sum:    355 Ratio:   0.34%)

Rules        : 3470024 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 575536  
Bodies       : 710123  
  Count      : 1320    
Equivalences : 1747193  (Atom=Atom: 514687 Body=Body: 560137 Other: 672369)
Tight        : Yes
Variables    : 99693    (Eliminated:    0 Frozen: 34437)
Constraints  : 3055674  (Binary:  96.8% Ternary:   3.0% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(1))  ; 
  atom(hasIngredient(5)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(5)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasPrep(4)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(4)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(2)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(3))  ; 
  atom(hasCategory(5)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasCost(2))  >> not atom(hasPrepTime(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(10)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasCost(2))  >> not atom(hasPrepTime(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(10)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasPrep(4)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(1)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(3)) >> atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasDifficulty(3))  || not atom(hasCategory(3))  ; 
  atom(hasPrep(1)) >> not atom(hasIngredient(11))  || atom(hasCost(1)) ; 
  not atom(hasCategory(2))  >> atom(hasIngredient(7)) || atom(hasCost(3)) ; 
  atom(hasDifficulty(3)) >> not atom(hasDifficulty(2))  >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasPrepTime(2))  >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(3)) >> atom(hasIngredient(7)) || atom(hasIngredient(9)) ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(4))  >> not atom(hasCost(2))  || not atom(hasPrep(2))  ; 
  atom(hasCategory(1)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasPrepTime(2))  >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> not atom(hasCost(1))  >> atom(hasIngredient(7)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(4))  >> not atom(hasCost(2))  || not atom(hasPrep(2))  ; 
  atom(hasCategory(1)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrepTime(2))  >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> not atom(hasCost(1))  >> atom(hasIngredient(7)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(4))  >> not atom(hasCost(2))  || not atom(hasPrep(2))  ; 
  atom(hasCategory(1)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasPrepTime(2))  >> not atom(hasCost(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> not atom(hasCost(1))  >> atom(hasIngredient(7)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> atom(hasCategory(3)) >> not atom(hasCost(2))  || not atom(hasPrep(2))  ; 
  atom(hasCategory(1)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> atom(hasCategory(3)) >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(2)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(4)) >> not atom(hasPrepTime(3))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(3)) >> atom(hasCategory(3)) >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(3)) >> not atom(hasPrep(1))  >> atom(hasCategory(5)) || not atom(hasPrep(6))  ; 
  atom(hasCategory(1)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(4)) >> not atom(hasPrepTime(3))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> atom(hasCategory(3)) >> not atom(hasPrep(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(4)) >> atom(hasCost(1)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(1))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> atom(hasCost(3)) >> not atom(hasCost(2))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(3)) >> atom(hasPrep(0)) >> atom(hasDifficulty(2)) || not atom(hasCategory(1))  
}.
