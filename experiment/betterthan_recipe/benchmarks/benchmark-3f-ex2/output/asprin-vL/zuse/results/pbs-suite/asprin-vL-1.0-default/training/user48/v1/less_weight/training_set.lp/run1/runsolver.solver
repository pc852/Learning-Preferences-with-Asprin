asprin_vL version 1.0
Reading from stdin
-:1283:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1293:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1308:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1389:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1650:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1663:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1840:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1969:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2041:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2045:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2045:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2051:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2150:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2176:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2296:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2352:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1200:1-16: info: no atoms over signature occur in program:
  output/3

-:1192:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1193:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,10) output(10,eq,24) output(49,eq,70) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(18,eq,51) output(65,eq,70) output(25,eq,18) output(10,eq,70) output(47,eq,51) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(14,eq,65) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(49,eq,29) output(65,eq,29) output(23,eq,70) output(50,eq,24) output(14,eq,24) output(10,eq,29) output(50,eq,29) output(14,eq,29) output(23,eq,29) output(49,eq,64) output(65,eq,64) output(10,eq,64) output(23,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(49,eq,47) output(65,eq,47) output(10,eq,48) output(50,eq,48) output(14,eq,48) output(23,eq,48) output(49,eq,13) output(65,eq,13) output(10,eq,13) output(23,eq,13) output(70,eq,42) output(49,eq,42) output(65,eq,42) output(64,eq,51) output(29,eq,51) output(50,eq,70) output(14,eq,70) output(70,eq,51) output(49,eq,51) output(65,eq,51) output(10,eq,51) output(50,eq,51) output(14,eq,51) output(23,eq,51) output(10,eq,42) output(50,eq,42) output(14,eq,42) output(23,eq,42) output(50,eq,13) output(14,eq,13) output(10,eq,47) output(50,eq,47) output(14,eq,47) output(23,eq,47) output(49,eq,18) output(65,eq,18) output(10,eq,18) output(23,eq,18) output(50,eq,18) output(14,eq,18) output(50,eq,64) output(14,eq,64)
Optimization: 86 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(9))),4) preference(1,less(weight)) output(50,better,10) output(50,better,65) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,42) output(50,better,47) output(50,better,18) output(13,better,42) output(64,better,47) output(64,better,18) output(25,better,18) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,47) output(49,better,42) output(49,better,18) output(10,worse,24) output(10,worse,64) output(10,worse,13) output(10,worse,51) output(18,worse,51) output(14,worse,24) output(14,worse,51) output(14,worse,13) output(14,worse,64) output(29,worse,64) output(29,worse,51) output(70,worse,13) output(70,worse,64) output(70,worse,51) output(23,worse,49) output(23,worse,64) output(23,worse,13) output(23,worse,51) output(47,worse,51) output(48,worse,13) output(65,worse,64) output(65,worse,13) output(65,worse,51) output(70,eq,29) output(47,eq,18) output(14,eq,10) output(10,eq,65) output(70,eq,48) output(65,eq,70) output(10,eq,70) output(25,eq,51) output(48,eq,42) output(65,eq,48) output(14,eq,65) output(29,eq,47) output(65,eq,29) output(23,eq,70) output(50,eq,24) output(10,eq,29) output(14,eq,29) output(23,eq,29) output(49,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(65,eq,47) output(10,eq,48) output(14,eq,48) output(23,eq,48) output(49,eq,13) output(70,eq,42) output(65,eq,42) output(64,eq,51) output(14,eq,70) output(49,eq,51) output(50,eq,51) output(10,eq,42) output(14,eq,42) output(23,eq,42) output(50,eq,13) output(10,eq,47) output(14,eq,47) output(23,eq,47) output(65,eq,18) output(10,eq,18) output(23,eq,18) output(14,eq,18) output(50,eq,64)
Optimization: 68 1
Answer: 3
preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,47) output(50,better,18) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(25,better,18) output(25,better,51) output(49,better,70) output(49,better,48) output(49,better,47) output(49,better,51) output(49,better,18) output(10,worse,29) output(10,worse,64) output(10,worse,13) output(10,worse,42) output(14,worse,29) output(14,worse,42) output(14,worse,13) output(14,worse,64) output(70,worse,29) output(70,worse,13) output(70,worse,64) output(70,worse,42) output(23,worse,49) output(23,worse,29) output(23,worse,64) output(23,worse,13) output(23,worse,42) output(48,worse,13) output(48,worse,42) output(65,worse,29) output(65,worse,64) output(65,worse,13) output(65,worse,42) output(10,eq,24) output(29,eq,64) output(47,eq,18) output(14,eq,10) output(10,eq,65) output(70,eq,48) output(13,eq,42) output(18,eq,51) output(65,eq,70) output(10,eq,70) output(47,eq,51) output(65,eq,48) output(14,eq,65) output(49,eq,29) output(23,eq,70) output(14,eq,24) output(50,eq,29) output(49,eq,64) output(70,eq,18) output(70,eq,47) output(65,eq,47) output(10,eq,48) output(14,eq,48) output(23,eq,48) output(49,eq,13) output(49,eq,42) output(14,eq,70) output(70,eq,51) output(65,eq,51) output(10,eq,51) output(14,eq,51) output(23,eq,51) output(50,eq,42) output(50,eq,13) output(10,eq,47) output(14,eq,47) output(23,eq,47) output(65,eq,18) output(10,eq,18) output(23,eq,18) output(14,eq,18) output(50,eq,64)
Optimization: 65 1
Answer: 4
preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(18,better,51) output(14,better,10) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,13) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(47,better,51) output(48,better,13) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,13) output(49,better,51) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,13) output(65,better,51) output(10,worse,24) output(10,worse,65) output(10,worse,48) output(10,worse,42) output(10,worse,47) output(10,worse,18) output(50,worse,65) output(50,worse,24) output(50,worse,48) output(50,worse,42) output(50,worse,47) output(50,worse,18) output(13,worse,42) output(29,worse,47) output(29,worse,18) output(64,worse,47) output(64,worse,18) output(70,worse,48) output(70,worse,18) output(70,worse,47) output(70,worse,42) output(25,worse,18) output(50,eq,10) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(10,eq,70) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(14,eq,65) output(70,eq,64) output(14,eq,24) output(10,eq,29) output(50,eq,29) output(10,eq,64) output(49,eq,47) output(65,eq,47) output(14,eq,48) output(23,eq,48) output(10,eq,13) output(49,eq,42) output(65,eq,42) output(64,eq,51) output(29,eq,51) output(50,eq,70) output(70,eq,51) output(10,eq,51) output(50,eq,51) output(14,eq,42) output(23,eq,42) output(50,eq,13) output(14,eq,47) output(23,eq,47) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(14,eq,18) output(50,eq,64)
Optimization: 62 1
Answer: 5
preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(50,better,10) output(50,better,29) output(50,better,48) output(50,better,42) output(50,better,13) output(50,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,42) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,13) output(49,better,42) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,13) output(65,better,42) output(10,worse,24) output(10,worse,65) output(10,worse,70) output(10,worse,51) output(10,worse,47) output(10,worse,18) output(14,worse,65) output(14,worse,24) output(14,worse,70) output(14,worse,51) output(14,worse,47) output(14,worse,18) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(49,eq,70) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(14,eq,10) output(48,eq,13) output(13,eq,42) output(18,eq,51) output(65,eq,70) output(25,eq,18) output(47,eq,51) output(25,eq,51) output(48,eq,42) output(50,eq,65) output(23,eq,70) output(50,eq,24) output(10,eq,29) output(14,eq,29) output(10,eq,64) output(70,eq,18) output(70,eq,47) output(49,eq,47) output(65,eq,47) output(10,eq,48) output(14,eq,48) output(10,eq,13) output(50,eq,70) output(70,eq,51) output(49,eq,51) output(65,eq,51) output(50,eq,51) output(23,eq,51) output(10,eq,42) output(14,eq,42) output(14,eq,13) output(50,eq,47) output(23,eq,47) output(49,eq,18) output(65,eq,18) output(23,eq,18) output(50,eq,18) output(14,eq,64)
Optimization: 60 1
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,47) output(10,better,18) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,70) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,47) output(23,better,18) output(25,better,18) output(48,better,13) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,18) output(18,worse,51) output(50,worse,10) output(50,worse,48) output(50,worse,51) output(50,worse,42) output(13,worse,42) output(29,worse,51) output(64,worse,51) output(70,worse,48) output(70,worse,42) output(70,worse,51) output(47,worse,51) output(65,worse,48) output(65,worse,42) output(65,worse,51) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(65,eq,70) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(49,eq,48) output(50,eq,65) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(65,eq,29) output(50,eq,24) output(50,eq,29) output(65,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(65,eq,47) output(10,eq,48) output(14,eq,48) output(23,eq,48) output(65,eq,13) output(49,eq,42) output(50,eq,70) output(49,eq,51) output(10,eq,51) output(14,eq,51) output(23,eq,51) output(10,eq,42) output(14,eq,42) output(23,eq,42) output(50,eq,13) output(50,eq,47) output(65,eq,18) output(50,eq,18) output(50,eq,64)
Optimization: 56 14
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(12))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasIngredient(9))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasIngredient(7))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCost(3))),5) preference(1,(1,9),1,for(atom(hasIngredient(3))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,47) output(10,better,18) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,70) output(14,better,51) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,18) output(64,better,18) output(70,better,18) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(23,better,47) output(23,better,18) output(25,better,18) output(47,better,18) output(48,better,13) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,18) output(10,worse,48) output(10,worse,42) output(18,worse,51) output(50,worse,10) output(50,worse,65) output(50,worse,24) output(50,worse,29) output(50,worse,48) output(50,worse,70) output(50,worse,51) output(50,worse,42) output(50,worse,13) output(50,worse,47) output(50,worse,64) output(13,worse,42) output(29,worse,51) output(64,worse,51) output(70,worse,48) output(70,worse,42) output(70,worse,51) output(23,worse,49) output(47,worse,51) output(65,worse,48) output(65,worse,42) output(65,worse,51) output(70,eq,29) output(29,eq,64) output(64,eq,47) output(65,eq,70) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(29,eq,47) output(70,eq,64) output(65,eq,29) output(65,eq,64) output(70,eq,47) output(65,eq,47) output(14,eq,48) output(23,eq,48) output(65,eq,13) output(10,eq,51) output(14,eq,42) output(23,eq,42) output(50,eq,18)
Optimization: 45 14
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(5))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasIngredient(5))),4) preference(1,(1,4),1,for(atom(hasIngredient(6))),4) preference(1,(1,5),1,for(atom(hasIngredient(8))),4) preference(1,(1,6),1,for(atom(hasCategory(2))),4) preference(1,(1,7),1,for(atom(hasIngredient(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasIngredient(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(4))),4) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasCategory(3))),4) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,18) output(50,better,24) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,18) output(50,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(14,worse,10) output(14,worse,65) output(14,worse,48) output(14,worse,47) output(29,worse,47) output(64,worse,47) output(70,worse,48) output(70,worse,47) output(50,eq,10) output(70,eq,29) output(29,eq,64) output(23,eq,49) output(10,eq,65) output(13,eq,42) output(18,eq,51) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(64,eq,18) output(70,eq,64) output(14,eq,24) output(14,eq,29) output(29,eq,18) output(70,eq,18) output(49,eq,47) output(65,eq,47) output(10,eq,48) output(50,eq,48) output(23,eq,48) output(70,eq,42) output(64,eq,51) output(29,eq,51) output(14,eq,70) output(70,eq,51) output(14,eq,51) output(14,eq,42) output(14,eq,13) output(10,eq,47) output(50,eq,47) output(23,eq,47) output(14,eq,18) output(14,eq,64)
Optimization: 43 13
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(5))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasCategory(5))),4) preference(1,(1,4),1,for(atom(hasIngredient(5))),4) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasIngredient(2))),4) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasDifficulty(4))),4) preference(1,(1,10),1,for(atom(hasCategory(2))),4) preference(1,(1,11),1,for(atom(hasCategory(3))),4) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,24) output(50,better,29) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(14,worse,10) output(14,worse,65) output(14,worse,48) output(70,worse,48) output(50,eq,10) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(10,eq,65) output(13,eq,42) output(18,eq,51) output(47,eq,51) output(70,eq,13) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(14,eq,24) output(14,eq,29) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(10,eq,48) output(50,eq,48) output(23,eq,48) output(70,eq,42) output(64,eq,51) output(29,eq,51) output(14,eq,70) output(70,eq,51) output(14,eq,51) output(14,eq,42) output(14,eq,13) output(14,eq,47) output(14,eq,18) output(14,eq,64)
Optimization: 40 13
Answer: 10
preference(1,(1,4),1,for(atom(hasDifficulty(4))),4) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasCost(4))),4) preference(1,(1,8),1,for(atom(hasCost(5))),4) preference(1,(1,10),1,for(atom(hasCategory(5))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(10,better,24) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,24) output(50,better,29) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,24) output(14,better,29) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(70,better,29) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,29) output(23,better,64) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(50,eq,10) output(49,eq,70) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(10,eq,65) output(70,eq,48) output(13,eq,42) output(18,eq,51) output(65,eq,70) output(10,eq,70) output(47,eq,51) output(49,eq,48) output(65,eq,48) output(50,eq,65) output(14,eq,65) output(29,eq,47) output(64,eq,18) output(23,eq,70) output(29,eq,18) output(10,eq,48) output(50,eq,48) output(14,eq,48) output(23,eq,48) output(64,eq,51) output(29,eq,51) output(50,eq,70) output(14,eq,70)
Optimization: 30 6
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasCategory(4))),8) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),4) preference(1,(1,10),1,for(atom(hasCategory(5))),8) preference(1,(1,11),1,for(atom(hasDifficulty(4))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),4) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(50,eq,10) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(18,eq,51) output(25,eq,18) output(47,eq,51) output(25,eq,51) output(48,eq,42) output(70,eq,13) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(70,eq,42) output(64,eq,51) output(29,eq,51) output(70,eq,51)
Optimization: 26 13
Answer: 12
preference(1,(1,3),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCategory(1))),4) preference(1,(1,6),1,for(atom(hasCategory(5))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasDifficulty(4))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),4) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(50,eq,10) output(70,eq,29) output(29,eq,64) output(47,eq,18) output(23,eq,49) output(64,eq,47) output(14,eq,10) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(18,eq,51) output(47,eq,51) output(48,eq,42) output(70,eq,13) output(29,eq,47) output(64,eq,18) output(70,eq,64) output(29,eq,18) output(70,eq,18) output(70,eq,47) output(70,eq,42) output(64,eq,51) output(29,eq,51) output(70,eq,51)
Optimization: 24 9
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),3) preference(1,(1,4),1,for(atom(hasCost(4))),8) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasCost(5))),6) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCategory(1))),4) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(7))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,18) output(13,better,42) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,18) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(18,worse,51) output(50,worse,10) output(50,worse,65) output(50,worse,24) output(50,worse,29) output(50,worse,48) output(50,worse,70) output(50,worse,51) output(50,worse,42) output(50,worse,13) output(50,worse,47) output(50,worse,64) output(14,worse,10) output(14,worse,65) output(14,worse,70) output(29,worse,64) output(29,worse,47) output(29,worse,51) output(64,worse,47) output(49,worse,70) output(10,eq,65) output(14,eq,24)
Optimization: 22 13
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasIngredient(9))),5) preference(1,(1,5),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasPrep(0))),1) preference(1,(1,9),1,for(atom(hasPrep(1))),6) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,42) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,10) output(14,better,65) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,42) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(10,worse,24) output(10,worse,65) output(10,worse,47) output(13,worse,42) output(14,worse,24) output(29,worse,47) output(29,worse,18) output(29,worse,51) output(64,worse,47) output(64,worse,18) output(64,worse,51) output(70,worse,47) output(48,worse,13) output(48,worse,42) output(18,eq,51) output(10,eq,70) output(70,eq,18) output(65,eq,47) output(70,eq,51) output(10,eq,51) output(10,eq,18)
Optimization: 21 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasIngredient(3))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasCost(5))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(10,better,24) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,51) output(64,better,47) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(25,better,51) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(29,worse,18) output(64,worse,18) output(47,worse,18) output(49,worse,70) output(49,worse,18) output(14,eq,10) output(10,eq,65) output(13,eq,42) output(65,eq,70) output(25,eq,18) output(10,eq,70) output(49,eq,48) output(14,eq,65) output(23,eq,70) output(70,eq,18) output(14,eq,70) output(65,eq,18) output(10,eq,18) output(23,eq,18) output(14,eq,18)
Optimization: 20 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasIngredient(3))),1) preference(1,(1,5),1,for(atom(hasIngredient(7))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasCost(5))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasDifficulty(4))),8) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(10,better,24) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,51) output(14,better,47) output(14,better,18) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,18) output(70,better,47) output(70,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(18,worse,51) output(14,worse,10) output(14,worse,65) output(14,worse,24) output(14,worse,29) output(14,worse,48) output(14,worse,42) output(14,worse,13) output(70,worse,29) output(70,worse,48) output(70,worse,13) output(70,worse,42) output(10,eq,65) output(13,eq,42) output(49,eq,48) output(70,eq,64) output(14,eq,70) output(14,eq,64)
Optimization: 18 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(7))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasCost(5))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasDifficulty(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(10,better,29) output(10,better,64) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,10) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,51) output(64,better,47) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(10,worse,65) output(10,worse,70) output(29,worse,18) output(64,worse,18) output(47,worse,18) output(49,worse,70) output(10,eq,24) output(13,eq,42) output(65,eq,70) output(49,eq,48) output(14,eq,65) output(23,eq,70) output(10,eq,48) output(14,eq,70) output(49,eq,18) output(10,eq,18)
Optimization: 16 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasDifficulty(4))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasCost(5))),5) preference(1,(1,9),1,for(atom(hasCost(4))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(10,better,24) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(18,worse,51) output(49,worse,70) output(14,eq,10) output(10,eq,65) output(13,eq,42) output(65,eq,70) output(10,eq,70) output(49,eq,48) output(14,eq,65) output(23,eq,70) output(14,eq,70)
Optimization: 11 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(7))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasCost(5))),5) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasDifficulty(4))),7) preference(1,(1,12),1,for(atom(hasCost(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(10,better,24) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18) output(49,worse,70) output(14,eq,10) output(10,eq,65) output(13,eq,42) output(65,eq,70) output(10,eq,70) output(49,eq,48) output(14,eq,65) output(23,eq,70) output(14,eq,70)
Optimization: 10 14
Answer: 20
preference(1,(1,1),1,for(atom(hasCategory(1))),3) preference(1,(1,2),1,for(atom(hasIngredient(12))),2) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,4),1,for(atom(hasDifficulty(4))),8) preference(1,(1,5),1,for(atom(hasPrep(7))),2) preference(1,(1,6),1,for(atom(hasCategory(4))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasIngredient(3))),4) preference(1,(1,10),1,for(atom(hasCost(4))),5) preference(1,(1,11),1,for(atom(hasCost(3))),6) preference(1,(1,12),1,for(atom(hasCost(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasCategory(3))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(13,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(0))),1) preference(1,(1,2),1,for(atom(hasCategory(5))),6) preference(1,(1,3),1,for(atom(hasPrep(3))),6) preference(1,(1,4),1,for(atom(hasDifficulty(4))),8) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasIngredient(12))),5) preference(1,(1,10),1,for(atom(hasCost(4))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasCategory(3))),3) preference(1,(1,13),1,for(atom(hasPrepTime(3))),3) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(13,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18)
Optimization: 0 13
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(3))),3) preference(1,(1,3),1,for(atom(hasCost(4))),7) preference(1,(1,4),1,for(atom(hasDifficulty(4))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,9),1,for(atom(hasCost(5))),6) preference(1,(1,10),1,for(atom(hasIngredient(7))),3) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(10,better,24) output(10,better,65) output(10,better,70) output(10,better,29) output(10,better,64) output(10,better,48) output(10,better,13) output(10,better,51) output(10,better,42) output(10,better,47) output(10,better,18) output(18,better,51) output(50,better,10) output(50,better,65) output(50,better,24) output(50,better,29) output(50,better,48) output(50,better,70) output(50,better,51) output(50,better,42) output(50,better,13) output(50,better,47) output(50,better,18) output(50,better,64) output(13,better,42) output(14,better,10) output(14,better,65) output(14,better,24) output(14,better,29) output(14,better,48) output(14,better,70) output(14,better,51) output(14,better,42) output(14,better,13) output(14,better,47) output(14,better,18) output(14,better,64) output(29,better,64) output(29,better,47) output(29,better,18) output(29,better,51) output(64,better,47) output(64,better,18) output(64,better,51) output(70,better,29) output(70,better,48) output(70,better,13) output(70,better,64) output(70,better,18) output(70,better,47) output(70,better,42) output(70,better,51) output(23,better,49) output(23,better,70) output(23,better,29) output(23,better,64) output(23,better,48) output(23,better,13) output(23,better,51) output(23,better,42) output(23,better,47) output(23,better,18) output(25,better,18) output(25,better,51) output(47,better,18) output(47,better,51) output(48,better,13) output(48,better,42) output(49,better,70) output(49,better,48) output(49,better,29) output(49,better,64) output(49,better,47) output(49,better,13) output(49,better,42) output(49,better,51) output(49,better,18) output(65,better,70) output(65,better,48) output(65,better,29) output(65,better,64) output(65,better,47) output(65,better,13) output(65,better,42) output(65,better,51) output(65,better,18)
Optimization: 0 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.149 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 597.688s (Solving: 593.76s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2370.644s
Threads      : 4        (Winner: 4)

Choices      : 11401012 (Domain: 419095)
Conflicts    : 8474703  (Analyzed: 8474701)
Restarts     : 7803     (Average: 1086.08 Last: 435531)
Model-Level  : 35.0    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 8548074  (Deleted: 8239635)
  Binary     : 668      (Ratio:   0.01%)
  Ternary    : 2028     (Ratio:   0.02%)
  Conflict   : 8474701  (Average Length:  454.7 Ratio:  99.14%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 73373    (Average Length:   64.2 Ratio:   0.86%) 
  Distributed: 24476    (Ratio:   0.29% Average LBD: 3.70) 
  Integrated : 73428    (Ratio: 300.00% Unit: 137 Average Jumps: 3.77)
Backjumps    : 8474701  (Average:  1.28 Max: 635 Sum: 10877510)
  Executed   : 8474699  (Average:  1.28 Max: 635 Sum: 10877502 Ratio: 100.00%)
  Bounded    : 2        (Average:  4.00 Max:   6 Sum:      8 Ratio:   0.00%)

Rules        : 911468  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 19046   
Bodies       : 19475   
  Sum        : 172     
  Count      : 14      
Equivalences : 8860     (Atom=Atom: 873 Body=Body: 358 Other: 7629)
Tight        : Yes
Variables    : 17279    (Eliminated:    0 Frozen: 7955)
Constraints  : 928688   (Binary:  98.6% Ternary:   1.0% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(5)) ; 
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasIngredient(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(1)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasIngredient(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasIngredient(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(5)) ; 
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(5)) ; 
  1 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(5)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(5)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(4)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCost(4)) ; 
  6 :: atom(hasCost(3)) ; 
  7 :: atom(hasCost(5)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCategory(5)) ; 
  6 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCost(4)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCost(5)) ; 
  3 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  1 :: atom(hasDifficulty(1)) 
}.
