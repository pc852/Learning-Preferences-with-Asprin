asprin_vL version 1.0
Reading from stdin
-:1256:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1266:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1281:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1362:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1623:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1636:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1813:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1942:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2014:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2018:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2018:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2024:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2123:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2149:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2269:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2303:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2325:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1173:1-16: info: no atoms over signature occur in program:
  output/3

-:1165:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(32,eq,98) output(98,eq,48) output(31,eq,46) output(46,eq,60) output(60,eq,23) output(23,eq,79) output(20,eq,52) output(52,eq,98) output(98,eq,8) output(8,eq,41) output(41,eq,46) output(46,eq,26) output(31,eq,26) output(41,eq,26) output(8,eq,46) output(98,eq,41) output(32,eq,8) output(52,eq,8) output(20,eq,98) output(60,eq,79) output(46,eq,23) output(31,eq,60) output(41,eq,60) output(32,eq,48) output(52,eq,48) output(20,eq,48) output(8,eq,60) output(98,eq,60) output(31,eq,23) output(41,eq,23) output(8,eq,23) output(46,eq,79) output(31,eq,79) output(41,eq,79) output(20,eq,8) output(32,eq,41) output(52,eq,41) output(20,eq,41) output(98,eq,46) output(32,eq,46) output(52,eq,46) output(8,eq,26) output(98,eq,26) output(32,eq,26) output(52,eq,26) output(20,eq,26) output(20,eq,46) output(8,eq,79) output(98,eq,79) output(32,eq,79) output(52,eq,79) output(20,eq,79) output(98,eq,23) output(32,eq,23) output(52,eq,23) output(20,eq,23) output(32,eq,60) output(52,eq,60) output(20,eq,60)
Optimization: 59 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCost(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasIngredient(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(7))),4) preference(1,(1,12),1,for(atom(hasCategory(4))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),5) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(8,better,41) output(8,better,23) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,26) output(98,better,79) output(98,better,23) output(52,better,48) output(52,better,41) output(52,better,23) output(8,worse,46) output(8,worse,60) output(8,worse,79) output(98,worse,46) output(20,worse,52) output(20,worse,98) output(20,worse,48) output(20,worse,8) output(20,worse,41) output(20,worse,26) output(20,worse,46) output(20,worse,79) output(20,worse,23) output(20,worse,60) output(23,worse,79) output(32,worse,98) output(32,worse,8) output(32,worse,48) output(32,worse,41) output(32,worse,46) output(32,worse,26) output(32,worse,79) output(32,worse,23) output(32,worse,60) output(41,worse,46) output(41,worse,26) output(41,worse,60) output(41,worse,23) output(41,worse,79) output(52,worse,98) output(52,worse,46) output(52,worse,79) output(52,worse,60) output(52,eq,8) output(60,eq,79) output(8,eq,26) output(52,eq,26)
Optimization: 37 8
Progression : [ 1;37] (Error: 36)
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(3))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasCategory(1))),2) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasCategory(5))),6) preference(1,(1,11),1,for(atom(hasPrep(2))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),7) preference(1,(1,13),1,for(atom(hasCategory(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,23) output(98,better,23) output(20,better,23) output(32,better,23) output(41,better,23) output(52,better,98) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(31,worse,46) output(31,worse,26) output(31,worse,60) output(98,worse,8) output(98,worse,60) output(98,worse,46) output(98,worse,26) output(98,worse,79) output(20,worse,52) output(20,worse,8) output(20,worse,26) output(20,worse,46) output(20,worse,79) output(20,worse,60) output(23,worse,79) output(32,worse,8) output(32,worse,46) output(32,worse,26) output(32,worse,79) output(32,worse,60) output(41,worse,46) output(41,worse,26) output(41,worse,60) output(41,worse,79) output(52,worse,8) output(32,eq,98) output(98,eq,48) output(46,eq,60) output(46,eq,26) output(98,eq,41) output(20,eq,98) output(32,eq,48) output(20,eq,48) output(31,eq,79) output(32,eq,41) output(20,eq,41)
Optimization: 36 14
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(2))),3) preference(1,(1,2),1,for(atom(hasCost(2))),4) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(10))),4) preference(1,(1,8),1,for(atom(hasPrep(1))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasCategory(4))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasIngredient(3))),5) preference(1,less(weight)) output(46,better,60) output(46,better,79) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,79) output(31,better,60) output(31,better,79) output(98,better,48) output(98,better,60) output(98,better,46) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,48) output(20,better,79) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,48) output(32,better,46) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,79) output(52,better,60) output(46,worse,26) output(60,worse,23) output(31,worse,46) output(31,worse,26) output(31,worse,23) output(98,worse,8) output(98,worse,41) output(98,worse,26) output(20,worse,98) output(20,worse,8) output(20,worse,41) output(20,worse,26) output(32,worse,8) output(32,worse,26) output(41,worse,26) output(52,worse,98) output(52,worse,8) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,23) output(46,eq,23) output(52,eq,48) output(32,eq,41) output(8,eq,26) output(20,eq,46) output(20,eq,23)
Optimization: 27 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasCategory(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCategory(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(46,better,26) output(8,better,26) output(31,better,46) output(31,better,26) output(31,better,60) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(20,better,52) output(20,better,98) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,46) output(32,better,26) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(52,better,98) output(52,better,8) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,60) output(46,worse,23) output(46,worse,79) output(60,worse,23) output(60,worse,79) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,23) output(8,worse,79) output(31,worse,23) output(98,worse,48) output(98,worse,41) output(98,worse,79) output(98,worse,23) output(20,worse,48) output(32,worse,48) output(32,worse,23) output(41,worse,23) output(52,worse,48) output(52,worse,23) output(46,eq,60) output(31,eq,79) output(41,eq,79) output(32,eq,41) output(32,eq,79)
Optimization: 25 13
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,3),1,for(atom(hasCategory(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(7))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),5) preference(1,(1,12),1,for(atom(hasCost(1))),2) preference(1,(1,13),1,for(atom(hasCost(2))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(46,better,26) output(8,better,26) output(31,better,46) output(31,better,26) output(31,better,60) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,79) output(52,better,8) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,60) output(46,worse,23) output(46,worse,79) output(60,worse,23) output(60,worse,79) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,23) output(8,worse,79) output(31,worse,23) output(98,worse,48) output(20,worse,48) output(32,worse,98) output(32,worse,48) output(32,worse,23) output(41,worse,23) output(52,worse,98) output(52,worse,48) output(52,worse,23) output(46,eq,60) output(20,eq,98) output(31,eq,79) output(32,eq,41)
Optimization: 23 13
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(12))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasCategory(4))),5) preference(1,(1,7),1,for(atom(hasIngredient(10))),4) preference(1,(1,8),1,for(atom(hasIngredient(3))),6) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasIngredient(7))),5) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,48) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,79) output(32,better,23) output(41,better,23) output(41,better,79) output(52,better,79) output(46,worse,60) output(46,worse,26) output(20,worse,98) output(32,worse,98) output(32,worse,8) output(32,worse,26) output(32,worse,60) output(41,worse,26) output(41,worse,60) output(52,worse,98) output(52,worse,8) output(52,worse,48) output(52,worse,41) output(52,worse,46) output(52,worse,26) output(52,worse,23) output(52,worse,60) output(41,eq,46) output(20,eq,8) output(32,eq,41) output(32,eq,46)
Optimization: 21 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasIngredient(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(7))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasCategory(1))),7) preference(1,(1,11),1,for(atom(hasCategory(4))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),1) preference(1,(1,13),1,for(atom(hasPrep(1))),1) preference(1,(1,14),1,for(atom(hasCost(3))),1) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,26) output(20,better,46) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,46) output(32,better,26) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,79) output(60,worse,23) output(60,worse,79) output(8,worse,41) output(8,worse,79) output(31,worse,79) output(20,worse,52) output(20,worse,98) output(20,worse,48) output(20,worse,41) output(20,worse,79) output(23,worse,79) output(32,worse,98) output(32,worse,48) output(32,worse,79) output(41,worse,79) output(52,worse,98) output(46,eq,23) output(20,eq,8) output(32,eq,41)
Optimization: 20 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasCost(3))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),6) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),6) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,10),1,for(atom(hasCategory(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(10))),2) preference(1,(1,12),1,for(atom(hasCategory(4))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,79) output(8,better,60) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,8) output(98,better,60) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,8) output(20,better,26) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,worse,23) output(8,worse,41) output(8,worse,46) output(98,worse,41) output(98,worse,46) output(20,worse,52) output(20,worse,41) output(20,worse,46) output(32,worse,41) output(32,worse,46) output(52,worse,41) output(52,worse,46) output(32,eq,98) output(98,eq,48) output(20,eq,98) output(32,eq,48) output(20,eq,48) output(8,eq,23)
Optimization: 18 14
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(7))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(60,better,23) output(60,better,79) output(8,better,46) output(8,better,23) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,60) output(46,worse,26) output(46,worse,79) output(8,worse,41) output(8,worse,60) output(8,worse,26) output(23,worse,79) output(32,eq,98) output(20,eq,52) output(52,eq,98) output(98,eq,41) output(20,eq,98) output(46,eq,23) output(32,eq,41) output(52,eq,41) output(20,eq,41) output(8,eq,79)
Optimization: 17 9
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(7))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(5))),3) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasIngredient(10))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(46,better,23) output(60,better,23) output(60,better,79) output(8,better,46) output(8,better,23) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,48) output(20,better,8) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,60) output(46,worse,26) output(46,worse,79) output(8,worse,41) output(8,worse,60) output(8,worse,26) output(23,worse,79) output(32,eq,98) output(20,eq,52) output(52,eq,98) output(98,eq,41) output(20,eq,98) output(32,eq,41) output(52,eq,41) output(20,eq,41) output(8,eq,79)
Optimization: 16 9
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasCost(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasIngredient(9))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),7) preference(1,(1,12),1,for(atom(hasIngredient(12))),7) preference(1,(1,13),1,for(atom(hasIngredient(7))),7) preference(1,(1,14),1,for(atom(hasCategory(1))),6) preference(1,less(weight)) output(46,better,26) output(46,better,23) output(60,better,23) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,26) output(31,better,23) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(23,worse,79) output(32,worse,98) output(31,eq,46) output(46,eq,60) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(32,eq,8) output(20,eq,98) output(60,eq,79) output(31,eq,60) output(46,eq,79) output(31,eq,79) output(32,eq,41)
Optimization: 14 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasIngredient(9))),7) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasCategory(2))),2) preference(1,(1,12),1,for(atom(hasIngredient(10))),4) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(60,better,23) output(60,better,79) output(8,better,46) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,60) output(46,worse,23) output(8,worse,41) output(32,worse,98) output(52,worse,98) output(46,eq,26) output(20,eq,98) output(31,eq,60) output(8,eq,60) output(46,eq,79) output(32,eq,41) output(52,eq,41)
Optimization: 12 12
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasCost(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),4) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,60) output(46,worse,23) output(32,worse,98) output(32,worse,8) output(52,worse,98) output(52,worse,8) output(46,eq,26) output(20,eq,98) output(31,eq,60) output(32,eq,41) output(52,eq,41)
Optimization: 11 13
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrepTime(3))),5) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasCategory(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasCost(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasIngredient(10))),4) preference(1,(1,13),1,for(atom(hasCost(1))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(46,worse,60) output(46,worse,23) output(31,worse,60) output(32,worse,98) output(32,worse,8) output(52,worse,98) output(52,worse,8) output(46,eq,26) output(32,eq,41) output(52,eq,41)
Optimization: 10 14
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),8) preference(1,(1,3),1,for(atom(hasIngredient(7))),8) preference(1,(1,4),1,for(atom(hasPrep(7))),4) preference(1,(1,5),1,for(atom(hasIngredient(10))),4) preference(1,(1,6),1,for(atom(hasPrepTime(2))),8) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasCost(1))),6) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,79) output(8,better,26) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,worse,23) output(8,worse,41) output(8,worse,46) output(8,worse,60) output(8,worse,23) output(8,worse,79) output(98,worse,41) output(20,worse,52) output(32,eq,41)
Optimization: 9 14
Answer: 17
preference(1,(1,1),1,for(atom(hasIngredient(10))),7) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrepTime(1))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),7) preference(1,(1,6),1,for(atom(hasIngredient(12))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCategory(2))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCategory(3))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCategory(4))),5) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,79) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,60) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(8,worse,41) output(98,worse,8) output(98,worse,41) output(60,eq,23) output(32,eq,41) output(52,eq,41) output(98,eq,46)
Optimization: 7 11
Answer: 18
preference(1,(1,1),1,for(atom(hasCategory(1))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,5),1,for(atom(hasIngredient(3))),1) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),3) preference(1,(1,8),1,for(atom(hasIngredient(9))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),5) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasIngredient(7))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasIngredient(10))),4) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,48) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(20,worse,52) output(20,worse,98) output(32,worse,98) output(32,worse,8) output(20,eq,8) output(32,eq,41)
Optimization: 6 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCategory(4))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),4) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),1) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,79) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(60,worse,23) output(8,worse,41) output(32,worse,98) output(32,worse,41) output(52,worse,98)
Optimization: 5 13
Answer: 20
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasCost(1))),5) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(3))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasCategory(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(3))),3) preference(1,(1,12),1,for(atom(hasIngredient(9))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),7) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,98) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(8,worse,41) output(31,worse,46) output(98,worse,41) output(32,eq,41)
Optimization: 4 14
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(1))),2) preference(1,(1,3),1,for(atom(hasIngredient(10))),4) preference(1,(1,4),1,for(atom(hasCost(1))),2) preference(1,(1,5),1,for(atom(hasDifficulty(3))),3) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasIngredient(3))),2) preference(1,(1,10),1,for(atom(hasCategory(3))),3) preference(1,(1,11),1,for(atom(hasPrepTime(3))),1) preference(1,(1,12),1,for(atom(hasPrep(7))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),2) preference(1,(1,14),1,for(atom(hasIngredient(9))),4) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,8) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(8,worse,41) output(32,worse,98) output(32,eq,41)
Optimization: 3 12
Progression : [3;3] (Error: 0)
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasIngredient(12))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasIngredient(10))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(32,worse,98) output(32,worse,8) output(32,eq,41)
Optimization: 3 10
Answer: 23
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasIngredient(12))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(10))),6) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(3))),1) preference(1,(1,13),1,for(atom(hasPrep(2))),6) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(32,worse,98) output(32,worse,8) output(32,eq,41)
Optimization: 3 9
Progression : 3 [1;9] (Error: 8)
Progression : 3 [2;9] (Error: 3.5)
Answer: 24
preference(1,(1,1),1,for(atom(hasCategory(1))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasIngredient(10))),1) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),1) preference(1,(1,13),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(46,better,60) output(46,better,26) output(46,better,23) output(46,better,79) output(60,better,23) output(60,better,79) output(8,better,41) output(8,better,46) output(8,better,60) output(8,better,23) output(8,better,26) output(8,better,79) output(31,better,46) output(31,better,26) output(31,better,60) output(31,better,23) output(31,better,79) output(98,better,48) output(98,better,8) output(98,better,41) output(98,better,60) output(98,better,46) output(98,better,26) output(98,better,79) output(98,better,23) output(20,better,52) output(20,better,98) output(20,better,48) output(20,better,8) output(20,better,41) output(20,better,26) output(20,better,46) output(20,better,79) output(20,better,23) output(20,better,60) output(23,better,79) output(32,better,48) output(32,better,46) output(32,better,26) output(32,better,79) output(32,better,23) output(32,better,60) output(41,better,46) output(41,better,26) output(41,better,60) output(41,better,23) output(41,better,79) output(52,better,98) output(52,better,8) output(52,better,48) output(52,better,41) output(52,better,46) output(52,better,26) output(52,better,79) output(52,better,23) output(52,better,60) output(32,worse,98) output(32,worse,8) output(32,eq,41)
Optimization: 3 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.115 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 3 8
Bounds       : 3 [2;8]
Calls        : 1
Time         : 598.051s (Solving: 594.90s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2382.275s
Threads      : 4        (Winner: 4)

Choices      : 11682172 (Domain: 300465)
Conflicts    : 7914816  (Analyzed: 7914809)
Restarts     : 8185     (Average: 966.99 Last: 374482)
Model-Level  : 33.8    
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 7929218  (Deleted: 7473738)
  Binary     : 1179     (Ratio:   0.01%)
  Ternary    : 1548     (Ratio:   0.02%)
  Conflict   : 7914809  (Average Length:  451.1 Ratio:  99.82%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 14409    (Average Length:   52.8 Ratio:   0.18%) 
  Distributed: 4818     (Ratio:   0.06% Average LBD: 3.58) 
  Integrated : 14454    (Ratio: 300.00% Unit: 24 Average Jumps: 11.38)
Backjumps    : 7914809  (Average:  1.34 Max: 732 Sum: 10570943)
  Executed   : 7914801  (Average:  1.34 Max: 732 Sum: 10570856 Ratio: 100.00%)
  Bounded    : 8        (Average: 10.88 Max:  41 Sum:     87 Ratio:   0.00%)

Rules        : 652397  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16368   
Bodies       : 19178   
  Sum        : 118     
  Count      : 14      
Equivalences : 7915     (Atom=Atom: 603 Body=Body: 250 Other: 7062)
Tight        : Yes
Variables    : 17139    (Eliminated:    0 Frozen: 7815)
Constraints  : 672042   (Binary:  98.1% Ternary:   1.4% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(1)) ; 
  2 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(2)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(7)) ; 
  7 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(2)) ; 
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCategory(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(3)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(1)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(1)) ; 
  6 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasDifficulty(1)) 
}.
