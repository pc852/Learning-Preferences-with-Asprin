asprin_vL version 1.0
Reading from stdin
-:1259:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1269:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1284:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1365:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1626:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1639:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1816:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1945:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2017:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2021:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2027:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2126:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2152:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2272:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1176:1-16: info: no atoms over signature occur in program:
  output/3

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1169:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(33,eq,78) output(78,eq,7) output(7,eq,39) output(39,eq,60) output(79,eq,52) output(52,eq,46) output(18,eq,23) output(23,eq,78) output(78,eq,31) output(42,eq,51) output(51,eq,90) output(90,eq,7) output(7,eq,79) output(78,eq,79) output(90,eq,79) output(51,eq,7) output(42,eq,90) output(33,eq,31) output(23,eq,31) output(18,eq,78) output(79,eq,46) output(7,eq,52) output(7,eq,60) output(78,eq,39) output(90,eq,39) output(33,eq,7) output(23,eq,7) output(18,eq,7) output(51,eq,39) output(42,eq,39) output(33,eq,39) output(23,eq,39) output(18,eq,39) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(7,eq,46) output(78,eq,46) output(90,eq,46) output(18,eq,31) output(42,eq,7) output(51,eq,79) output(42,eq,79) output(33,eq,79) output(23,eq,79) output(18,eq,79) output(51,eq,46) output(42,eq,46) output(33,eq,46) output(23,eq,46) output(18,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 62 0
Answer: 2
preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(18,better,31) output(18,better,46) output(51,better,46) output(42,better,46) output(79,better,46) output(7,better,46) output(23,better,31) output(23,better,46) output(33,better,31) output(33,better,46) output(52,better,46) output(78,better,31) output(78,better,46) output(90,better,46) output(33,eq,78) output(78,eq,7) output(7,eq,39) output(39,eq,60) output(79,eq,52) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(51,eq,90) output(90,eq,7) output(7,eq,79) output(78,eq,79) output(90,eq,79) output(51,eq,7) output(42,eq,90) output(18,eq,78) output(7,eq,52) output(7,eq,60) output(78,eq,39) output(90,eq,39) output(33,eq,7) output(23,eq,7) output(18,eq,7) output(51,eq,39) output(42,eq,39) output(33,eq,39) output(23,eq,39) output(18,eq,39) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(42,eq,7) output(51,eq,79) output(42,eq,79) output(33,eq,79) output(23,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 48 1
Answer: 3
preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(18,better,31) output(18,better,79) output(18,better,46) output(51,better,79) output(51,better,46) output(42,better,79) output(42,better,46) output(7,better,79) output(7,better,46) output(23,better,31) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,31) output(78,better,79) output(78,better,46) output(90,better,79) output(90,better,46) output(79,worse,52) output(33,eq,78) output(78,eq,7) output(7,eq,39) output(39,eq,60) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(51,eq,90) output(90,eq,7) output(51,eq,7) output(42,eq,90) output(18,eq,78) output(79,eq,46) output(7,eq,52) output(7,eq,60) output(78,eq,39) output(90,eq,39) output(33,eq,7) output(23,eq,7) output(18,eq,7) output(51,eq,39) output(42,eq,39) output(33,eq,39) output(23,eq,39) output(18,eq,39) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(42,eq,7) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 41 2
Answer: 4
preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,46) output(51,better,7) output(51,better,39) output(51,better,46) output(42,better,39) output(42,better,7) output(42,better,46) output(79,better,46) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,39) output(78,better,46) output(90,better,7) output(90,better,39) output(90,better,46) output(39,worse,60) output(7,worse,79) output(7,worse,52) output(7,worse,60) output(33,eq,78) output(7,eq,39) output(79,eq,52) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(51,eq,90) output(78,eq,79) output(90,eq,79) output(42,eq,90) output(18,eq,78) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(7,eq,46) output(51,eq,79) output(42,eq,79) output(33,eq,79) output(23,eq,79) output(18,eq,79) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 35 2
Answer: 5
preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(51,better,7) output(51,better,39) output(51,better,79) output(51,better,46) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,46) output(39,worse,60) output(79,worse,52) output(7,worse,52) output(7,worse,60) output(33,eq,78) output(7,eq,39) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(51,eq,90) output(7,eq,79) output(42,eq,90) output(18,eq,78) output(79,eq,46) output(78,eq,60) output(90,eq,60) output(51,eq,60) output(33,eq,60) output(23,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(7,eq,46) output(18,eq,52) output(42,eq,52) output(18,eq,60) output(42,eq,60)
Optimization: 29 3
Answer: 6
preference(1,(1,4),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,60) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,79) output(51,better,46) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,46) output(79,worse,52) output(7,worse,52) output(33,eq,78) output(7,eq,39) output(39,eq,60) output(18,eq,23) output(23,eq,78) output(42,eq,51) output(51,eq,90) output(7,eq,79) output(42,eq,90) output(18,eq,78) output(79,eq,46) output(7,eq,60) output(78,eq,52) output(90,eq,52) output(51,eq,52) output(33,eq,52) output(23,eq,52) output(7,eq,46) output(18,eq,52) output(42,eq,52)
Optimization: 22 4
Answer: 7
preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(42,better,51) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(51,worse,90) output(33,eq,78) output(7,eq,39) output(39,eq,60) output(79,eq,52) output(52,eq,46) output(18,eq,23) output(23,eq,78) output(7,eq,79) output(51,eq,7) output(42,eq,90) output(18,eq,78) output(79,eq,46) output(7,eq,52) output(7,eq,60) output(51,eq,39) output(51,eq,60) output(51,eq,52) output(7,eq,46) output(51,eq,79) output(51,eq,46)
Optimization: 21 6
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasIngredient(12))),7) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(9))),2) preference(1,(1,5),1,for(atom(hasIngredient(7))),7) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(51,worse,90) output(78,eq,7) output(79,eq,52) output(18,eq,23) output(23,eq,78) output(18,eq,78) output(23,eq,7) output(18,eq,7)
Optimization: 8 9
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),1) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),2) preference(1,(1,7),1,for(atom(hasDifficulty(2))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasCategory(1))),1) preference(1,(1,14),1,for(atom(hasPrep(2))),6) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(18,worse,23) output(18,worse,78) output(7,worse,79) output(33,worse,78) output(90,eq,79)
Optimization: 5 13
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),8) preference(1,(1,8),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasDifficulty(3))),1) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasCost(1))),6) preference(1,(1,13),1,for(atom(hasCategory(4))),3) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,31) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46) output(79,worse,52) output(78,eq,7) output(23,eq,78) output(23,eq,7)
Optimization: 4 12
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(3))),4) preference(1,(1,2),1,for(atom(hasDifficulty(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(7))),5) preference(1,(1,4),1,for(atom(hasCategory(4))),7) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),1) preference(1,(1,9),1,for(atom(hasIngredient(10))),5) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),6) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(3))),7) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCost(4))),2) preference(1,(1,9),1,for(atom(hasIngredient(10))),4) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(3))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCost(4))),2) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 12
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(3))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCost(4))),2) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,12),1,for(atom(hasCost(2))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),5) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 11
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasIngredient(3))),3) preference(1,(1,5),1,for(atom(hasPrep(7))),3) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(10))),1) preference(1,(1,14),1,for(atom(hasCost(4))),4) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 9
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(4))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasIngredient(3))),5) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasIngredient(7))),1) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(18,better,23) output(18,better,78) output(18,better,7) output(18,better,39) output(18,better,31) output(18,better,79) output(18,better,46) output(18,better,52) output(18,better,60) output(51,better,90) output(51,better,7) output(51,better,39) output(51,better,60) output(51,better,52) output(51,better,79) output(51,better,46) output(39,better,60) output(42,better,51) output(42,better,90) output(42,better,39) output(42,better,7) output(42,better,79) output(42,better,46) output(42,better,52) output(42,better,60) output(79,better,52) output(79,better,46) output(7,better,39) output(7,better,79) output(7,better,52) output(7,better,60) output(7,better,46) output(23,better,78) output(23,better,31) output(23,better,7) output(23,better,39) output(23,better,60) output(23,better,52) output(23,better,79) output(23,better,46) output(33,better,78) output(33,better,31) output(33,better,7) output(33,better,39) output(33,better,60) output(33,better,52) output(33,better,79) output(33,better,46) output(52,better,46) output(78,better,7) output(78,better,31) output(78,better,79) output(78,better,39) output(78,better,60) output(78,better,52) output(78,better,46) output(90,better,7) output(90,better,79) output(90,better,39) output(90,better,60) output(90,better,52) output(90,better,46)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.079 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 598.171s (Solving: 595.00s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2382.788s
Threads      : 4        (Winner: 4)

Choices      : 10099381 (Domain: 456127)
Conflicts    : 6979439  (Analyzed: 6979437)
Restarts     : 6867     (Average: 1016.37 Last: 424028)
Model-Level  : 142.1   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 6993766  (Deleted: 6640399)
  Binary     : 1317     (Ratio:   0.02%)
  Ternary    : 2152     (Ratio:   0.03%)
  Conflict   : 6979437  (Average Length:  456.7 Ratio:  99.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 14329    (Average Length:   42.5 Ratio:   0.20%) 
  Distributed: 4781     (Ratio:   0.07% Average LBD: 3.42) 
  Integrated : 14343    (Ratio: 300.00% Unit: 7 Average Jumps: 4.43)
Backjumps    : 6979437  (Average:  1.33 Max: 986 Sum: 9313873)
  Executed   : 6979436  (Average:  1.33 Max: 986 Sum: 9313841 Ratio: 100.00%)
  Bounded    : 1        (Average: 32.00 Max:  32 Sum:     32 Ratio:   0.00%)

Rules        : 682340  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16670   
Bodies       : 19211   
  Sum        : 124     
  Count      : 14      
Equivalences : 8020     (Atom=Atom: 633 Body=Body: 262 Other: 7125)
Tight        : Yes
Variables    : 17159    (Eliminated:    0 Frozen: 7835)
Constraints  : 701720   (Binary:  98.1% Ternary:   1.3% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(4)) ; 
  1 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(4)) ; 
  1 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(3)) 
}.
