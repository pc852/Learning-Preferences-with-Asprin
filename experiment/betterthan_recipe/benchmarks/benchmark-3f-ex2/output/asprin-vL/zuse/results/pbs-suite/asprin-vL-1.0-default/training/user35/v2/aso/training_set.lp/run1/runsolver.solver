asprin_vL version 1.0
Reading from stdin
-:1251:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1276:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1357:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1631:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1808:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2009:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2013:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2118:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2144:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2264:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1168:1-16: info: no atoms over signature occur in program:
  output/3

-:1160:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1162:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1163:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1193:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(67,better,51) output(71,better,98) output(17,better,99) output(67,better,52) output(76,better,51) output(71,better,51) output(30,better,51) output(76,better,52) output(71,better,52) output(30,better,52) output(60,worse,30) output(78,worse,71) output(98,worse,53) output(60,worse,76) output(78,worse,76) output(60,worse,67) output(78,worse,67) output(60,worse,51) output(78,worse,53) output(60,worse,52) output(76,eq,67) output(51,eq,52) output(57,eq,8) output(91,eq,55) output(71,eq,53) output(78,eq,98) output(78,eq,51) output(78,eq,52)
Optimization: 22 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasPrep(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,5),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(67,better,51) output(57,better,8) output(91,better,55) output(71,better,98) output(71,better,53) output(78,better,98) output(76,better,51) output(71,better,51) output(30,better,51) output(78,better,51) output(78,better,53) output(51,worse,52) output(60,worse,30) output(60,worse,76) output(60,worse,67) output(60,worse,51) output(60,worse,52) output(76,eq,67) output(78,eq,71) output(98,eq,53) output(71,eq,52) output(30,eq,52) output(78,eq,52)
Optimization: 21 6
Answer: 3
preference(1,(1,1),0,for(atom(hasIngredient(11))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(71,better,76) output(51,better,52) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(60,better,76) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(60,better,51) output(78,better,51) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52) output(67,worse,51) output(76,worse,51) output(76,eq,67) output(57,eq,8) output(98,eq,53) output(17,eq,99) output(67,eq,52) output(71,eq,51) output(30,eq,51) output(76,eq,52)
Optimization: 10 2
Answer: 4
preference(1,(1,1),0,for(atom(hasIngredient(11))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(71,better,76) output(51,better,52) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(71,better,53) output(78,better,98) output(60,better,76) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(60,better,51) output(78,better,51) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52) output(67,worse,51) output(17,worse,99) output(76,worse,51) output(76,eq,67) output(98,eq,53) output(67,eq,52) output(71,eq,51) output(30,eq,51) output(76,eq,52)
Optimization: 9 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,aso) output(71,better,76) output(67,better,51) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(17,better,99) output(78,better,98) output(60,better,76) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52) output(51,worse,52) output(98,worse,53) output(71,eq,53) output(67,eq,52)
Optimization: 8 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,aso) output(71,better,76) output(67,better,51) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(17,better,99) output(78,better,98) output(60,better,76) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52) output(51,worse,52) output(98,worse,53) output(71,eq,53) output(67,eq,52)
Optimization: 7 6
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasPrepTime(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(4))),()) preference(1,(1,6),0,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,aso) output(71,better,76) output(67,better,51) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(17,better,99) output(78,better,98) output(60,better,76) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52) output(51,worse,52) output(98,worse,53) output(71,eq,53) output(67,eq,52)
Optimization: 6 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),0,for(atom(hasCost(2))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(71,better,76) output(76,better,67) output(67,better,51) output(51,better,52) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(17,better,99) output(71,better,53) output(78,better,98) output(60,better,76) output(67,better,52) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(76,better,52) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Progression : 0 [2;6] (Error: 2)
Answer: 9
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(7))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(71,better,76) output(76,better,67) output(67,better,51) output(51,better,52) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(17,better,99) output(71,better,53) output(78,better,98) output(60,better,76) output(67,better,52) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(76,better,52) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52)
Optimization: 0 5
Answer: 10
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCategory(3))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(71,better,76) output(76,better,67) output(67,better,51) output(51,better,52) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(17,better,99) output(71,better,53) output(78,better,98) output(60,better,76) output(67,better,52) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(76,better,52) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52)
Optimization: 0 4
Answer: 11
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(4))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(71,better,76) output(76,better,67) output(67,better,51) output(51,better,52) output(57,better,8) output(91,better,55) output(60,better,30) output(30,better,76) output(78,better,71) output(71,better,98) output(98,better,53) output(17,better,99) output(71,better,53) output(78,better,98) output(60,better,76) output(67,better,52) output(76,better,51) output(71,better,67) output(30,better,67) output(78,better,76) output(60,better,67) output(78,better,67) output(71,better,51) output(30,better,51) output(60,better,51) output(78,better,51) output(76,better,52) output(71,better,52) output(30,better,52) output(78,better,53) output(60,better,52) output(78,better,52)
Optimization: 0 3
OPTIMUM FOUND

Models       : 11
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 9.532s (Solving: 2.58s 1st Model: 0.42s Unsat: 1.30s)
CPU Time     : 17.090s
Threads      : 4        (Winner: 3)

Choices      : 82786    (Domain: 173)
Conflicts    : 6465     (Analyzed: 6462)
Restarts     : 23       (Average: 280.96 Last: 825)
Model-Level  : 547.5   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 12501    (Deleted: 0)
  Binary     : 797      (Ratio:   6.38%)
  Ternary    : 2513     (Ratio:  20.10%)
  Conflict   : 6462     (Average Length:  114.2 Ratio:  51.69%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 6039     (Average Length:   37.9 Ratio:  48.31%) 
  Distributed: 2029     (Ratio:  31.40% Average LBD: 2.92) 
  Integrated : 6085     (Ratio: 299.90% Unit: 104 Average Jumps: 79.85)
Backjumps    : 6462     (Average: 10.12 Max: 1459 Sum:  65369)
  Executed   : 6452     (Average: 10.08 Max: 1459 Sum:  65157 Ratio:  99.68%)
  Bounded    : 10       (Average: 21.20 Max:  30 Sum:    212 Ratio:   0.32%)

Rules        : 3099262 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 518592  
Bodies       : 645611  
  Count      : 1176    
Equivalences : 1573149  (Atom=Atom: 462239 Body=Body: 502143 Other: 608767)
Tight        : Yes
Variables    : 96367    (Eliminated:    0 Frozen: 31159)
Constraints  : 2742856  (Binary:  96.6% Ternary:   3.2% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(9))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(5)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(2)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasPrep(6)) >> not atom(hasCost(1))  || atom(hasIngredient(11)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(2))  >> not atom(hasDifficulty(4))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasPrep(6)) >> not atom(hasCost(1))  || atom(hasIngredient(11)) ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(2))  >> not atom(hasIngredient(6))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(7))  ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(4))  >> not atom(hasCategory(2))  || not atom(hasCost(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(11))  >> not atom(hasCategory(2))  || atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  || atom(hasDifficulty(4)) ; 
  atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(7))  ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(4))  >> not atom(hasCategory(2))  || not atom(hasCost(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(11))  >> not atom(hasCategory(2))  || atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  || atom(hasDifficulty(4)) ; 
  atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> not atom(hasIngredient(9))  || not atom(hasIngredient(7))  ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(4))  >> not atom(hasCategory(2))  || not atom(hasCost(4))  ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(11))  >> not atom(hasCategory(2))  || atom(hasPrepTime(3)) ; 
  not atom(hasDifficulty(4))  >> not atom(hasIngredient(1))  || atom(hasDifficulty(4)) ; 
  atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasCategory(3)) >> atom(hasPrep(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasCategory(5)) >> not atom(hasIngredient(11))  || atom(hasCost(2)) ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(12))  ; 
  atom(hasCost(1)) >> atom(hasDifficulty(1)) >> not atom(hasDifficulty(1))  || not atom(hasCost(4))  ; 
  atom(hasPrep(1)) >> atom(hasIngredient(3)) >> atom(hasPrep(0)) || not atom(hasPrep(2))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(3)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasPrep(0)) >> atom(hasIngredient(3)) || atom(hasCost(2)) ; 
  atom(hasPrep(3)) >> not atom(hasIngredient(3))  >> not atom(hasIngredient(10))  || not atom(hasCost(5))  ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  >> not atom(hasPrep(6))  || not atom(hasCost(4))  ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(7)) >> not atom(hasPrepTime(1))  >> atom(hasPrepTime(1)) || atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(1)) >> atom(hasCategory(3)) >> atom(hasIngredient(3)) || atom(hasCost(2)) ; 
  atom(hasIngredient(5)) >> not atom(hasIngredient(3))  >> not atom(hasIngredient(10))  || not atom(hasPrep(3))  ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  >> not atom(hasPrep(6))  || not atom(hasCost(4))  ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> not atom(hasCategory(4))  >> atom(hasIngredient(3)) || atom(hasCost(2)) ; 
  atom(hasCost(1)) >> not atom(hasCost(1))  >> not atom(hasPrep(6))  || not atom(hasCost(4))  ; 
  atom(hasCost(1)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(1))  || not atom(hasCost(4))  
}.
