asprin_vL version 1.0
Reading from stdin
-:1297:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1307:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1322:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1403:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1664:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1677:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1854:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1983:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2055:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2059:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2059:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2065:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2164:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2190:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2310:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2344:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2366:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1214:1-16: info: no atoms over signature occur in program:
  output/3

-:1206:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1207:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(71,eq,7) output(7,eq,39) output(18,eq,84) output(30,eq,32) output(17,eq,69) output(69,eq,61) output(39,eq,18) output(84,eq,30) output(32,eq,17) output(8,eq,21) output(18,eq,47) output(47,eq,7) output(7,eq,42) output(42,eq,62) output(89,eq,61) output(67,eq,18) output(62,eq,89) output(42,eq,89) output(62,eq,61) output(7,eq,62) output(71,eq,42) output(47,eq,42) output(18,eq,7) output(39,eq,47) output(67,eq,47) output(30,eq,17) output(18,eq,30) output(7,eq,18) output(17,eq,61) output(32,eq,69) output(84,eq,32) output(39,eq,84) output(67,eq,84) output(71,eq,39) output(47,eq,39) output(18,eq,39) output(39,eq,39) output(67,eq,39) output(7,eq,84) output(71,eq,84) output(47,eq,84) output(18,eq,32) output(39,eq,32) output(67,eq,32) output(30,eq,69) output(84,eq,69) output(32,eq,61) output(30,eq,61) output(71,eq,18) output(47,eq,18) output(18,eq,18) output(39,eq,30) output(67,eq,30) output(7,eq,30) output(84,eq,17) output(18,eq,17) output(7,eq,47) output(71,eq,47) output(47,eq,47) output(39,eq,7) output(67,eq,7) output(7,eq,7) output(18,eq,42) output(39,eq,42) output(67,eq,42) output(71,eq,62) output(47,eq,62) output(18,eq,62) output(42,eq,61) output(7,eq,61) output(7,eq,89) output(71,eq,89) output(47,eq,89) output(18,eq,89) output(39,eq,89) output(67,eq,89) output(71,eq,61) output(47,eq,61) output(18,eq,61) output(39,eq,61) output(67,eq,61) output(39,eq,62) output(67,eq,62) output(39,eq,17) output(67,eq,17) output(7,eq,17) output(71,eq,17) output(47,eq,17) output(71,eq,30) output(47,eq,30) output(84,eq,61) output(18,eq,69) output(39,eq,69) output(67,eq,69) output(7,eq,69) output(71,eq,69) output(47,eq,69) output(7,eq,32) output(71,eq,32) output(47,eq,32)
Optimization: 100 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(7))),3) preference(1,less(weight)) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,7) output(67,better,62) output(67,better,17) output(67,better,69) output(42,better,62) output(30,better,32) output(30,better,17) output(30,better,69) output(71,better,7) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,17) output(71,better,69) output(71,better,32) output(18,worse,30) output(18,worse,42) output(18,worse,89) output(18,worse,61) output(84,worse,30) output(84,worse,61) output(8,worse,21) output(39,worse,30) output(39,worse,42) output(39,worse,89) output(39,worse,61) output(62,worse,89) output(62,worse,61) output(69,worse,61) output(7,worse,42) output(7,worse,30) output(7,worse,61) output(7,worse,89) output(32,worse,61) output(47,worse,42) output(47,worse,89) output(47,worse,61) output(47,worse,30) output(17,worse,61) output(7,eq,39) output(18,eq,84) output(17,eq,69) output(39,eq,18) output(32,eq,17) output(18,eq,47) output(47,eq,7) output(89,eq,61) output(42,eq,89) output(7,eq,62) output(71,eq,42) output(18,eq,7) output(39,eq,47) output(7,eq,18) output(32,eq,69) output(84,eq,32) output(39,eq,84) output(47,eq,39) output(18,eq,39) output(39,eq,39) output(7,eq,84) output(47,eq,84) output(18,eq,32) output(39,eq,32) output(84,eq,69) output(30,eq,61) output(47,eq,18) output(18,eq,18) output(67,eq,30) output(84,eq,17) output(18,eq,17) output(7,eq,47) output(47,eq,47) output(39,eq,7) output(7,eq,7) output(67,eq,42) output(47,eq,62) output(18,eq,62) output(42,eq,61) output(71,eq,89) output(67,eq,89) output(71,eq,61) output(67,eq,61) output(39,eq,62) output(39,eq,17) output(7,eq,17) output(47,eq,17) output(71,eq,30) output(18,eq,69) output(39,eq,69) output(7,eq,69) output(47,eq,69) output(7,eq,32) output(47,eq,32)
Optimization: 78 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCost(3))),7) preference(1,(1,2),1,for(atom(hasIngredient(10))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),7) preference(1,(1,6),1,for(atom(hasDifficulty(3))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasIngredient(9))),6) preference(1,(1,10),1,for(atom(hasIngredient(7))),1) preference(1,(1,11),1,for(atom(hasCost(5))),8) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(3))),4) preference(1,less(weight)) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,62) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,62) output(67,better,69) output(39,better,47) output(39,better,84) output(39,better,7) output(39,better,62) output(42,better,62) output(30,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(17,better,69) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(18,worse,89) output(18,worse,61) output(18,worse,69) output(84,worse,30) output(84,worse,32) output(84,worse,69) output(84,worse,17) output(84,worse,61) output(8,worse,21) output(39,worse,32) output(39,worse,30) output(39,worse,42) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(69,worse,61) output(7,worse,39) output(7,worse,42) output(7,worse,62) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(7,worse,32) output(30,worse,17) output(30,worse,61) output(32,worse,17) output(32,worse,69) output(32,worse,61) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,18) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(47,worse,32) output(71,worse,89) output(71,worse,61) output(71,worse,17) output(71,worse,30) output(71,worse,69) output(71,worse,32) output(39,eq,18) output(47,eq,7) output(89,eq,61) output(17,eq,61) output(18,eq,39) output(39,eq,39) output(30,eq,69) output(18,eq,18) output(7,eq,47) output(47,eq,47) output(7,eq,7) output(67,eq,89) output(67,eq,61) output(67,eq,17)
Optimization: 72 14
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(3))),7) preference(1,(1,2),1,for(atom(hasIngredient(10))),4) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),7) preference(1,(1,6),1,for(atom(hasDifficulty(3))),2) preference(1,(1,7),1,for(atom(hasCategory(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasIngredient(9))),6) preference(1,(1,10),1,for(atom(hasIngredient(7))),1) preference(1,(1,11),1,for(atom(hasCost(5))),8) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasPrep(3))),4) preference(1,less(weight)) output(18,better,84) output(18,better,47) output(18,better,7) output(18,better,39) output(18,better,62) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,61) output(67,better,62) output(67,better,69) output(39,better,47) output(39,better,7) output(39,better,62) output(42,better,62) output(89,better,61) output(30,better,32) output(30,better,69) output(30,better,61) output(32,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,61) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(18,worse,89) output(18,worse,61) output(18,worse,69) output(84,worse,30) output(84,worse,32) output(84,worse,69) output(84,worse,17) output(84,worse,61) output(8,worse,21) output(39,worse,18) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,42) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(69,worse,61) output(7,worse,39) output(7,worse,42) output(7,worse,62) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(7,worse,32) output(30,worse,17) output(32,worse,17) output(47,worse,42) output(47,worse,39) output(47,worse,84) output(47,worse,18) output(47,worse,62) output(47,worse,89) output(47,worse,61) output(47,worse,17) output(47,worse,30) output(47,worse,69) output(47,worse,32) output(71,worse,89) output(71,worse,17) output(47,eq,7) output(39,eq,39) output(32,eq,61) output(18,eq,18) output(7,eq,47) output(47,eq,47) output(7,eq,7) output(67,eq,89) output(67,eq,17) output(71,eq,30)
Optimization: 63 14
Answer: 5
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(9))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasCost(2))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),4) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasIngredient(3))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(18,better,84) output(18,better,7) output(18,better,30) output(18,better,39) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,84) output(67,better,30) output(67,better,7) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,30) output(84,better,69) output(84,better,17) output(84,better,61) output(39,better,84) output(39,better,30) output(39,better,7) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,89) output(42,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(67,worse,18) output(67,worse,47) output(67,worse,32) output(84,worse,32) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,32) output(7,worse,39) output(7,worse,42) output(7,worse,18) output(7,worse,84) output(7,worse,47) output(7,worse,32) output(30,worse,32) output(71,worse,42) output(71,worse,39) output(71,worse,84) output(71,worse,18) output(71,worse,47) output(71,worse,32) output(71,eq,7) output(17,eq,69) output(69,eq,61) output(18,eq,47) output(89,eq,61) output(62,eq,89) output(62,eq,61) output(7,eq,62) output(30,eq,17) output(17,eq,61) output(39,eq,39) output(67,eq,39) output(18,eq,32) output(30,eq,69) output(30,eq,61) output(47,eq,18) output(18,eq,18) output(7,eq,30) output(47,eq,47) output(7,eq,7) output(39,eq,42) output(67,eq,42) output(71,eq,62) output(7,eq,61) output(7,eq,89) output(71,eq,89) output(71,eq,61) output(7,eq,17) output(71,eq,17) output(71,eq,30) output(7,eq,69) output(71,eq,69) output(47,eq,32)
Optimization: 54 14
Progression : [ 5;54] (Error: 9.8)
Progression : [ 6;54] (Error: 8)
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(10))),7) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(5))),2) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),1) preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(18,better,39) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(84,better,69) output(84,better,61) output(39,better,42) output(39,better,62) output(42,better,62) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,61) output(7,better,89) output(7,better,69) output(30,better,32) output(30,better,69) output(30,better,61) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,84) output(18,worse,47) output(18,worse,7) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(18,worse,69) output(67,worse,30) output(67,worse,17) output(84,worse,30) output(84,worse,32) output(84,worse,17) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(7,worse,84) output(7,worse,30) output(7,worse,47) output(7,worse,17) output(7,worse,32) output(30,worse,17) output(32,worse,17) output(47,worse,17) output(47,worse,30) output(47,worse,32) output(71,worse,17) output(39,eq,39) output(67,eq,32) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(71,eq,30)
Optimization: 44 14
Progression : [ 7;44] (Error: 5.28571)
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(10))),7) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCategory(4))),1) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrep(3))),2) preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(18,better,39) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(84,better,69) output(84,better,61) output(39,better,42) output(39,better,62) output(42,better,62) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,61) output(7,better,89) output(7,better,69) output(30,better,32) output(30,better,69) output(30,better,61) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,69) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,84) output(18,worse,47) output(18,worse,7) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(18,worse,69) output(67,worse,30) output(67,worse,17) output(84,worse,30) output(84,worse,32) output(84,worse,17) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,89) output(39,worse,61) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(7,worse,84) output(7,worse,30) output(7,worse,47) output(7,worse,17) output(7,worse,32) output(30,worse,17) output(32,worse,17) output(47,worse,17) output(47,worse,30) output(47,worse,32) output(71,worse,17) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(71,eq,30)
Optimization: 43 14
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(10))),7) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(5))),2) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(18,better,84) output(18,better,39) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,84) output(67,better,39) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(84,better,69) output(84,better,61) output(39,better,42) output(39,better,61) output(39,better,62) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,47) output(18,worse,7) output(18,worse,30) output(18,worse,17) output(67,worse,47) output(67,worse,30) output(67,worse,7) output(67,worse,17) output(84,worse,30) output(84,worse,32) output(84,worse,17) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,89) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(7,worse,30) output(7,worse,47) output(7,worse,17) output(32,worse,17) output(42,eq,62) output(67,eq,18) output(39,eq,39) output(18,eq,32) output(67,eq,32) output(18,eq,18) output(47,eq,47) output(7,eq,7)
Optimization: 37 14
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(10))),7) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasPrep(1))),4) preference(1,(1,5),1,for(atom(hasCost(5))),2) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(2))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(18,better,84) output(18,better,39) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,18) output(67,better,84) output(67,better,39) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,69) output(84,better,69) output(84,better,61) output(39,better,42) output(39,better,61) output(39,better,62) output(42,better,62) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,61) output(7,better,89) output(7,better,69) output(7,better,32) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,47) output(18,worse,7) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(67,worse,47) output(67,worse,30) output(67,worse,7) output(67,worse,17) output(84,worse,30) output(84,worse,32) output(84,worse,17) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,84) output(39,worse,32) output(39,worse,30) output(39,worse,7) output(39,worse,89) output(39,worse,17) output(39,worse,69) output(42,worse,89) output(42,worse,61) output(62,worse,89) output(62,worse,61) output(7,worse,30) output(7,worse,47) output(7,worse,17) output(32,worse,17) output(39,eq,39) output(67,eq,32) output(18,eq,18) output(47,eq,47) output(7,eq,7) output(47,eq,30)
Optimization: 36 14
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),8) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasCost(4))),3) preference(1,(1,6),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasCost(1))),3) preference(1,(1,9),1,for(atom(hasCategory(5))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasCategory(3))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasIngredient(10))),1) preference(1,(1,14),1,for(atom(hasIngredient(12))),2) preference(1,less(weight)) output(18,better,7) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,18) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(39,better,18) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,89) output(42,better,61) output(89,better,61) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,84) output(18,worse,47) output(18,worse,39) output(67,worse,47) output(8,worse,21) output(39,worse,47) output(39,worse,84) output(62,worse,89) output(7,worse,39) output(7,worse,42) output(7,worse,62) output(7,worse,18) output(7,worse,84) output(7,worse,30) output(7,worse,47) output(7,worse,61) output(7,worse,89) output(7,worse,17) output(7,worse,69) output(7,worse,32) output(71,worse,47) output(69,eq,61) output(62,eq,61) output(18,eq,30) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7)
Optimization: 28 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(7))),4) preference(1,(1,2),1,for(atom(hasIngredient(10))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),2) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),7) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasIngredient(3))),3) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasCost(3))),6) preference(1,less(weight)) output(18,better,84) output(18,better,30) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,61) output(62,better,61) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(30,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,42) output(71,better,62) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,47) output(18,worse,7) output(67,worse,47) output(67,worse,7) output(8,worse,21) output(39,worse,18) output(39,worse,47) output(39,worse,7) output(39,worse,89) output(42,worse,89) output(62,worse,89) output(7,worse,47) output(30,worse,32) output(30,worse,17) output(30,worse,69) output(71,worse,7) output(71,worse,18) output(71,worse,47) output(71,worse,89) output(67,eq,18) output(39,eq,84) output(71,eq,39) output(39,eq,39) output(71,eq,84) output(18,eq,18) output(47,eq,47) output(7,eq,7)
Optimization: 27 12
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(9))),3) preference(1,(1,6),1,for(atom(hasIngredient(7))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),2) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasIngredient(12))),1) preference(1,(1,11),1,for(atom(hasIngredient(10))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),2) preference(1,less(weight)) output(18,better,84) output(18,better,7) output(18,better,30) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,18) output(67,better,84) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,30) output(84,better,69) output(84,better,17) output(84,better,61) output(39,better,18) output(39,better,84) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,89) output(42,better,61) output(62,better,89) output(62,better,61) output(69,better,61) output(89,better,61) output(7,better,62) output(7,better,61) output(7,better,89) output(7,better,69) output(30,better,69) output(30,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(17,better,69) output(17,better,61) output(18,worse,47) output(18,worse,39) output(18,worse,32) output(67,worse,47) output(67,worse,32) output(84,worse,32) output(8,worse,21) output(39,worse,47) output(39,worse,32) output(7,worse,39) output(7,worse,42) output(7,worse,18) output(7,worse,84) output(7,worse,47) output(7,worse,32) output(30,worse,32) output(71,worse,47) output(71,worse,32) output(30,eq,17) output(39,eq,39) output(67,eq,39) output(18,eq,18) output(7,eq,30) output(47,eq,47) output(7,eq,7) output(7,eq,17)
Optimization: 26 14
Answer: 13
preference(1,(1,1),1,for(atom(hasCategory(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasIngredient(9))),1) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrep(6))),1) preference(1,(1,8),1,for(atom(hasIngredient(3))),3) preference(1,(1,9),1,for(atom(hasCategory(5))),6) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasCategory(4))),2) preference(1,less(weight)) output(18,better,84) output(18,better,30) output(18,better,39) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(8,better,21) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,89) output(42,better,61) output(62,better,89) output(62,better,61) output(69,better,61) output(89,better,61) output(7,better,39) output(7,better,42) output(7,better,62) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(39,worse,18) output(39,worse,47) output(39,worse,7) output(84,eq,30) output(18,eq,47) output(47,eq,7) output(18,eq,7) output(7,eq,18) output(39,eq,39) output(47,eq,18) output(18,eq,18) output(7,eq,47) output(47,eq,47) output(7,eq,7)
Optimization: 14 14
Progression : [ 8;14] (Error: 0.75)
Progression : [ 9;14] (Error: 0.555556)
Progression : [10;14] (Error: 0.4)
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasPrep(2))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),6) preference(1,(1,6),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(0))),5) preference(1,(1,10),1,for(atom(hasPrepTime(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasCategory(5))),7) preference(1,less(weight)) output(18,better,84) output(18,better,30) output(18,better,32) output(18,better,17) output(18,better,42) output(18,better,62) output(18,better,89) output(18,better,61) output(18,better,69) output(67,better,18) output(67,better,47) output(67,better,84) output(67,better,39) output(67,better,32) output(67,better,30) output(67,better,7) output(67,better,42) output(67,better,89) output(67,better,61) output(67,better,62) output(67,better,17) output(67,better,69) output(84,better,30) output(84,better,32) output(84,better,69) output(84,better,17) output(84,better,61) output(8,better,21) output(39,better,18) output(39,better,84) output(39,better,32) output(39,better,30) output(39,better,7) output(39,better,42) output(39,better,89) output(39,better,61) output(39,better,62) output(39,better,17) output(39,better,69) output(42,better,62) output(42,better,89) output(42,better,61) output(62,better,89) output(62,better,61) output(69,better,61) output(89,better,61) output(7,better,42) output(7,better,62) output(7,better,18) output(7,better,84) output(7,better,30) output(7,better,61) output(7,better,89) output(7,better,17) output(7,better,69) output(7,better,32) output(30,better,32) output(30,better,17) output(30,better,69) output(30,better,61) output(32,better,17) output(32,better,69) output(32,better,61) output(47,better,7) output(47,better,42) output(47,better,39) output(47,better,84) output(47,better,18) output(47,better,62) output(47,better,89) output(47,better,61) output(47,better,17) output(47,better,30) output(47,better,69) output(47,better,32) output(71,better,7) output(71,better,42) output(71,better,39) output(71,better,84) output(71,better,18) output(71,better,47) output(71,better,62) output(71,better,89) output(71,better,61) output(71,better,17) output(71,better,30) output(71,better,69) output(71,better,32) output(17,better,69) output(17,better,61) output(18,worse,47) output(18,worse,7) output(18,worse,39) output(39,worse,47) output(7,worse,39) output(7,worse,47) output(39,eq,39) output(18,eq,18) output(47,eq,47) output(7,eq,7)
Optimization: 10 14
Progression : 10 [ 1;14] (Error: 13)
Progression : 10 [ 2;14] (Error: 6)
Progression : 10 [ 3;14] (Error: 3.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.080 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 10 14
Bounds       : 10 [3;14]
Calls        : 1
Time         : 597.311s (Solving: 593.50s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2377.365s
Threads      : 4        (Winner: 4)

Choices      : 16521201 (Domain: 144147)
Conflicts    : 8889011  (Analyzed: 8889002)
Restarts     : 7226     (Average: 1230.14 Last: 944963)
Model-Level  : 180.0   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 8923460  (Deleted: 8510842)
  Binary     : 598      (Ratio:   0.01%)
  Ternary    : 3614     (Ratio:   0.04%)
  Conflict   : 8889002  (Average Length:  500.0 Ratio:  99.61%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 34458    (Average Length:   39.0 Ratio:   0.39%) 
  Distributed: 11529    (Ratio:   0.13% Average LBD: 3.65) 
  Integrated : 34587    (Ratio: 300.00% Unit: 86 Average Jumps: 38.51)
Backjumps    : 8889002  (Average:  1.65 Max: 733 Sum: 14665719)
  Executed   : 8888984  (Average:  1.65 Max: 733 Sum: 14665481 Ratio: 100.00%)
  Bounded    : 18       (Average: 13.22 Max:  95 Sum:    238 Ratio:   0.00%)

Rules        : 1043798 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 20418   
Bodies       : 19625   
  Sum        : 196     
  Count      : 14      
Equivalences : 15824    (Atom=Atom: 1005 Body=Body: 418 Other: 14401)
Tight        : Yes
Variables    : 17327    (Eliminated:    0 Frozen: 8003)
Constraints  : 1059736  (Binary:  98.8% Ternary:   0.9% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(5)) ; 
  2 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(5)) ; 
  2 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(3)) ; 
  4 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCost(4)) ; 
  5 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(5)) ; 
  8 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCategory(5)) 
}.
