asprin_vL version 1.0
Reading from stdin
-:1247:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1272:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1353:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1627:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1804:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2005:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2009:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2009:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2015:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2114:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2140:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2260:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2294:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2316:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1164:1-16: info: no atoms over signature occur in program:
  output/3

-:1156:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1157:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1158:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1159:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1189:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(67,better,52) output(67,better,55) output(67,better,8) output(62,worse,75) output(99,worse,51) output(76,worse,67) output(8,worse,91) output(55,worse,91) output(62,worse,17) output(52,worse,91) output(86,worse,91) output(76,worse,91) output(25,worse,91) output(75,eq,17) output(25,eq,86) output(86,eq,52) output(52,eq,55) output(55,eq,8) output(76,eq,52) output(52,eq,8) output(86,eq,55) output(25,eq,52) output(76,eq,55) output(25,eq,55) output(86,eq,8) output(76,eq,8) output(25,eq,8)
Optimization: 25 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(76,better,67) output(76,better,52) output(62,better,17) output(25,worse,86) output(52,worse,55) output(99,worse,51) output(52,worse,8) output(67,worse,55) output(25,worse,55) output(67,worse,8) output(25,worse,8) output(52,worse,91) output(67,worse,91) output(25,worse,91) output(55,eq,8) output(67,eq,52) output(86,eq,55) output(25,eq,52) output(76,eq,55) output(86,eq,8) output(76,eq,8)
Optimization: 23 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(67,better,52) output(76,better,52) output(67,better,55) output(76,better,55) output(67,better,8) output(76,better,8) output(62,worse,75) output(75,worse,17) output(99,worse,51) output(76,worse,67) output(8,worse,91) output(55,worse,91) output(62,worse,17) output(52,worse,91) output(86,worse,91) output(25,worse,91) output(25,eq,86) output(86,eq,52) output(52,eq,55) output(55,eq,8) output(52,eq,8) output(86,eq,55) output(25,eq,52) output(25,eq,55) output(86,eq,8) output(25,eq,8)
Optimization: 22 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(76,better,67) output(8,better,91) output(55,better,91) output(76,better,52) output(62,better,17) output(86,better,91) output(76,better,91) output(25,worse,86) output(52,worse,55) output(99,worse,51) output(52,worse,8) output(67,worse,55) output(25,worse,55) output(67,worse,8) output(25,worse,8) output(55,eq,8) output(67,eq,52) output(86,eq,55) output(25,eq,52) output(76,eq,55) output(86,eq,8) output(76,eq,8) output(52,eq,91) output(67,eq,91) output(25,eq,91)
Optimization: 19 6
Answer: 5
preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrep(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(76,better,67) output(8,better,91) output(55,better,91) output(76,better,52) output(62,better,17) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(25,worse,86) output(52,worse,55) output(99,worse,51) output(52,worse,8) output(67,worse,55) output(25,worse,55) output(67,worse,8) output(25,worse,8) output(55,eq,8) output(67,eq,52) output(86,eq,55) output(25,eq,52) output(76,eq,55) output(86,eq,8) output(76,eq,8)
Optimization: 16 6
Answer: 6
preference(1,(1,1),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrep(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(76,better,67) output(67,better,52) output(8,better,91) output(55,better,91) output(76,better,52) output(86,better,55) output(62,better,17) output(76,better,55) output(86,better,91) output(67,better,91) output(76,better,91) output(25,worse,86) output(52,worse,55) output(55,worse,8) output(99,worse,51) output(52,worse,8) output(25,worse,55) output(67,worse,8) output(25,worse,8) output(25,eq,52) output(86,eq,8) output(76,eq,8) output(52,eq,91) output(25,eq,91)
Optimization: 15 6
Answer: 7
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,aso) output(52,better,55) output(55,better,8) output(55,better,91) output(52,better,8) output(86,better,55) output(62,better,17) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(67,worse,52) output(76,worse,52) output(25,eq,86) output(86,eq,52) output(99,eq,51) output(76,eq,67) output(67,eq,55) output(25,eq,52) output(76,eq,55)
Optimization: 12 4
Answer: 8
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,aso) output(52,better,55) output(55,better,8) output(55,better,91) output(52,better,8) output(86,better,55) output(67,better,55) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(25,eq,86) output(86,eq,52) output(99,eq,51) output(76,eq,67) output(67,eq,52) output(76,eq,52) output(25,eq,52)
Optimization: 11 4
Answer: 9
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,aso) output(52,better,55) output(55,better,8) output(76,better,67) output(8,better,91) output(55,better,91) output(52,better,8) output(86,better,55) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(99,worse,51) output(67,worse,52) output(25,eq,86) output(86,eq,52) output(76,eq,52) output(67,eq,55) output(25,eq,52)
Optimization: 10 4
Answer: 10
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(55,better,8) output(67,better,52) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(25,eq,86) output(52,eq,55) output(99,eq,51) output(76,eq,67)
Optimization: 8 4
Answer: 11
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(55,better,8) output(99,better,51) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(62,better,17) output(76,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(25,worse,86) output(52,eq,55) output(76,eq,67) output(25,eq,52) output(25,eq,55)
Optimization: 7 4
Answer: 12
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(55,better,8) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(99,worse,51) output(25,eq,86) output(52,eq,55) output(76,eq,67)
Optimization: 6 4
Answer: 13
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(86,better,52) output(55,better,8) output(99,better,51) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(75,worse,17) output(25,eq,86) output(52,eq,55) output(76,eq,67)
Optimization: 5 4
Answer: 14
preference(1,(1,3),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasDifficulty(3))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(2))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(75,better,17) output(86,better,52) output(55,better,8) output(99,better,51) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(25,eq,86) output(52,eq,55) output(76,eq,67)
Optimization: 4 4
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasCategory(1))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(75,better,17) output(25,better,86) output(86,better,52) output(55,better,8) output(99,better,51) output(76,better,67) output(67,better,52) output(8,better,91) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(62,worse,75)
Optimization: 3 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasCategory(1))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(75,better,17) output(25,better,86) output(86,better,52) output(52,better,55) output(55,better,8) output(99,better,51) output(76,better,67) output(67,better,52) output(8,better,91) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(62,worse,75)
Optimization: 2 6
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),0,for(atom(hasIngredient(11))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(1))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasCategory(1))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(62,better,75) output(75,better,17) output(25,better,86) output(86,better,52) output(52,better,55) output(55,better,8) output(99,better,51) output(76,better,67) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91)
Optimization: 1 6
Progression : [1;1] (Error: 0)
Progression : 1 [1;6] (Error: 5)
Answer: 18
preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasIngredient(7))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,4),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(62,better,75) output(75,better,17) output(25,better,86) output(86,better,52) output(52,better,55) output(55,better,8) output(99,better,51) output(76,better,67) output(67,better,52) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 19
preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(62,better,75) output(75,better,17) output(25,better,86) output(52,better,55) output(55,better,8) output(99,better,51) output(76,better,67) output(67,better,52) output(8,better,91) output(55,better,91) output(76,better,52) output(52,better,8) output(86,better,55) output(67,better,55) output(25,better,52) output(62,better,17) output(76,better,55) output(25,better,55) output(86,better,8) output(67,better,8) output(76,better,8) output(25,better,8) output(52,better,91) output(86,better,91) output(67,better,91) output(76,better,91) output(25,better,91) output(86,eq,52)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 19
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 22.518s (Solving: 16.16s 1st Model: 0.37s Unsat: 13.76s)
CPU Time     : 70.829s
Threads      : 4        (Winner: 1)

Choices      : 234510   (Domain: 2009)
Conflicts    : 51965    (Analyzed: 51957)
Restarts     : 92       (Average: 564.75 Last: 3990)
Model-Level  : 654.0   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 83759    (Deleted: 18412)
  Binary     : 2192     (Ratio:   2.62%)
  Ternary    : 10122    (Ratio:  12.08%)
  Conflict   : 51956    (Average Length:  167.6 Ratio:  62.03%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 31803    (Average Length:   71.6 Ratio:  37.97%) 
  Distributed: 10697    (Ratio:  20.59% Average LBD: 3.09) 
  Integrated : 32090    (Ratio: 299.99% Unit: 291 Average Jumps: 64.31)
Backjumps    : 51957    (Average:  3.88 Max: 1516 Sum: 201478)
  Executed   : 51946    (Average:  3.87 Max: 1516 Sum: 201269 Ratio:  99.90%)
  Bounded    : 11       (Average: 19.00 Max:  27 Sum:    209 Ratio:   0.10%)

Rules        : 2715732 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 455108  
Bodies       : 572396  
  Count      : 1032    
Equivalences : 1376482  (Atom=Atom: 405270 Body=Body: 439235 Other: 531977)
Tight        : Yes
Variables    : 92501    (Eliminated:    0 Frozen: 27341)
Constraints  : 2427518  (Binary:  96.3% Ternary:   3.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCost(4)) >> not atom(hasIngredient(5))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(1)) >> not atom(hasCost(5))  ; 
  atom(hasPrep(3)) >> atom(hasCost(4)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> not atom(hasCost(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasCost(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasPrep(4)) >> atom(hasCost(4)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasPrep(4)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> not atom(hasDifficulty(2))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasPrep(4)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasCost(4)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(4)) ; 
  atom(hasCost(4)) >> atom(hasPrep(3)) >> not atom(hasPrepTime(3))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasIngredient(5))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasCategory(4)) >> not atom(hasCategory(2))  >> not atom(hasIngredient(11))  || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasCategory(4)) >> not atom(hasCategory(2))  >> not atom(hasIngredient(11))  || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasCategory(4)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(11))  || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasPrep(2)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasIngredient(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(2))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(12))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasIngredient(2))  || atom(hasDifficulty(3)) ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasPrepTime(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> atom(hasPrep(0)) || not atom(hasIngredient(4))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasCost(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasCategory(4))  || atom(hasIngredient(11)) ; 
  atom(hasCategory(1)) >> atom(hasCategory(4)) >> not atom(hasIngredient(4))  || not atom(hasCost(3))  ; 
  atom(hasPrepTime(1)) >> not atom(hasDifficulty(1))  ; 
  atom(hasCost(3)) >> not atom(hasCategory(5))  >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> not atom(hasCategory(4))  || not atom(hasIngredient(4))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasCost(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasCategory(4))  || atom(hasIngredient(11)) ; 
  atom(hasCategory(1)) >> atom(hasCategory(4)) >> not atom(hasIngredient(4))  || not atom(hasCost(3))  ; 
  atom(hasPrepTime(1)) >> not atom(hasDifficulty(1))  ; 
  atom(hasCost(3)) >> not atom(hasCategory(5))  >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasCost(3))  ; 
  atom(hasCategory(2)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(2))  || not atom(hasPrepTime(1))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasCategory(4))  || atom(hasIngredient(11)) ; 
  atom(hasCost(3)) >> atom(hasCategory(4)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(4))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(11)) >> not atom(hasCategory(5))  >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasCategory(4)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(4))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(12)) >> not atom(hasDifficulty(2))  || not atom(hasCategory(2))  ; 
  atom(hasIngredient(12)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasPrepTime(1))  ; 
  atom(hasIngredient(7)) >> atom(hasCost(5)) >> atom(hasCategory(1)) || not atom(hasCategory(1))  ; 
  atom(hasCost(3)) >> not atom(hasIngredient(10))  >> atom(hasCategory(2)) || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> not atom(hasPrep(0))  >> not atom(hasIngredient(3))  || not atom(hasCategory(5))  ; 
  atom(hasIngredient(4)) >> atom(hasCategory(4)) >> not atom(hasIngredient(3))  || not atom(hasCost(3))  ; 
  atom(hasPrepTime(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(10)) >> not atom(hasCost(2))  >> not atom(hasDifficulty(2))  
}.
