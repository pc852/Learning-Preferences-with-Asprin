asprin_vL version 1.0
Reading from stdin
-:1282:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1292:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1307:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1388:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1649:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1662:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1839:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1968:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2040:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2044:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2044:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2050:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2149:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2175:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2295:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2329:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2351:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1199:1-16: info: no atoms over signature occur in program:
  output/3

-:1191:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1192:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(5,eq,32) output(32,eq,26) output(20,eq,48) output(48,eq,60) output(60,eq,55) output(55,eq,22) output(75,eq,5) output(26,eq,20) output(42,eq,51) output(51,eq,36) output(36,eq,5) output(32,eq,11) output(23,eq,25) output(11,eq,23) output(73,eq,22) output(32,eq,23) output(11,eq,25) output(5,eq,11) output(51,eq,5) output(42,eq,36) output(32,eq,20) output(60,eq,22) output(48,eq,55) output(20,eq,60) output(26,eq,48) output(5,eq,26) output(75,eq,32) output(36,eq,32) output(51,eq,32) output(42,eq,32) output(75,eq,26) output(36,eq,26) output(51,eq,26) output(32,eq,48) output(5,eq,48) output(26,eq,60) output(32,eq,60) output(20,eq,55) output(26,eq,55) output(48,eq,22) output(20,eq,22) output(5,eq,20) output(75,eq,20) output(36,eq,20) output(42,eq,5) output(75,eq,11) output(36,eq,11) output(51,eq,11) output(32,eq,25) output(5,eq,25) output(5,eq,23) output(75,eq,23) output(36,eq,23) output(51,eq,23) output(42,eq,23) output(75,eq,25) output(36,eq,25) output(51,eq,25) output(42,eq,25) output(42,eq,11) output(51,eq,20) output(42,eq,20) output(26,eq,22) output(32,eq,22) output(5,eq,22) output(75,eq,22) output(36,eq,22) output(32,eq,55) output(5,eq,55) output(75,eq,55) output(36,eq,55) output(51,eq,55) output(5,eq,60) output(75,eq,60) output(36,eq,60) output(51,eq,60) output(42,eq,60) output(75,eq,48) output(36,eq,48) output(51,eq,48) output(42,eq,48) output(42,eq,26) output(42,eq,55) output(51,eq,22) output(42,eq,22)
Optimization: 85 0
Answer: 2
preference(1,(1,13),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(26,better,60) output(26,better,22) output(51,better,11) output(51,better,60) output(51,better,22) output(5,better,11) output(5,better,22) output(5,better,60) output(36,better,11) output(36,better,22) output(36,better,60) output(42,better,11) output(42,better,60) output(42,better,22) output(55,better,22) output(20,better,60) output(20,better,22) output(32,better,11) output(32,better,60) output(32,better,22) output(48,better,60) output(48,better,22) output(73,better,22) output(60,worse,55) output(11,worse,23) output(11,worse,25) output(75,worse,5) output(75,worse,32) output(75,worse,26) output(75,worse,20) output(75,worse,23) output(75,worse,25) output(75,worse,55) output(75,worse,48) output(5,eq,32) output(32,eq,26) output(20,eq,48) output(26,eq,20) output(42,eq,51) output(51,eq,36) output(36,eq,5) output(23,eq,25) output(32,eq,23) output(51,eq,5) output(42,eq,36) output(32,eq,20) output(60,eq,22) output(48,eq,55) output(26,eq,48) output(5,eq,26) output(36,eq,32) output(51,eq,32) output(42,eq,32) output(36,eq,26) output(51,eq,26) output(32,eq,48) output(5,eq,48) output(20,eq,55) output(26,eq,55) output(5,eq,20) output(36,eq,20) output(42,eq,5) output(75,eq,11) output(32,eq,25) output(5,eq,25) output(5,eq,23) output(36,eq,23) output(51,eq,23) output(42,eq,23) output(36,eq,25) output(51,eq,25) output(42,eq,25) output(51,eq,20) output(42,eq,20) output(75,eq,22) output(32,eq,55) output(5,eq,55) output(36,eq,55) output(51,eq,55) output(75,eq,60) output(36,eq,48) output(51,eq,48) output(42,eq,48) output(42,eq,26) output(42,eq,55)
Optimization: 62 2
Answer: 3
preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,25) output(36,better,55) output(36,better,60) output(36,better,48) output(23,better,25) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,25) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,22) output(60,worse,22) output(5,worse,11) output(5,worse,23) output(5,worse,22) output(42,worse,51) output(42,worse,36) output(42,worse,23) output(42,worse,11) output(42,worse,22) output(55,worse,22) output(20,worse,22) output(32,worse,11) output(32,worse,23) output(32,worse,22) output(48,worse,22) output(73,worse,22) output(5,eq,32) output(32,eq,26) output(20,eq,48) output(48,eq,60) output(60,eq,55) output(26,eq,20) output(51,eq,36) output(11,eq,23) output(32,eq,20) output(48,eq,55) output(20,eq,60) output(26,eq,48) output(5,eq,26) output(42,eq,32) output(32,eq,48) output(5,eq,48) output(26,eq,60) output(32,eq,60) output(20,eq,55) output(26,eq,55) output(5,eq,20) output(42,eq,5) output(75,eq,11) output(36,eq,11) output(51,eq,11) output(32,eq,25) output(5,eq,25) output(75,eq,23) output(36,eq,23) output(51,eq,23) output(42,eq,25) output(42,eq,20) output(75,eq,22) output(36,eq,22) output(32,eq,55) output(5,eq,55) output(5,eq,60) output(42,eq,60) output(42,eq,48) output(42,eq,26) output(42,eq,55) output(51,eq,22)
Optimization: 59 1
Answer: 4
preference(1,(1,14),1,for(atom(hasIngredient(7))),4) preference(1,less(weight)) output(51,better,36) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,20) output(5,better,22) output(5,better,55) output(5,better,60) output(42,better,36) output(42,better,32) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,26) output(42,better,55) output(42,better,22) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(26,worse,48) output(11,worse,23) output(11,worse,25) output(36,worse,5) output(36,worse,23) output(36,worse,25) output(36,worse,48) output(20,worse,48) output(32,worse,23) output(32,worse,48) output(32,worse,25) output(75,worse,5) output(75,worse,23) output(75,worse,25) output(75,worse,48) output(32,eq,26) output(60,eq,55) output(55,eq,22) output(26,eq,20) output(42,eq,51) output(32,eq,11) output(23,eq,25) output(51,eq,5) output(32,eq,20) output(60,eq,22) output(20,eq,60) output(75,eq,32) output(36,eq,32) output(75,eq,26) output(36,eq,26) output(5,eq,48) output(26,eq,60) output(32,eq,60) output(20,eq,55) output(26,eq,55) output(20,eq,22) output(75,eq,20) output(36,eq,20) output(42,eq,5) output(75,eq,11) output(36,eq,11) output(5,eq,25) output(5,eq,23) output(51,eq,23) output(42,eq,23) output(51,eq,25) output(42,eq,25) output(26,eq,22) output(32,eq,22) output(75,eq,22) output(36,eq,22) output(32,eq,55) output(75,eq,55) output(36,eq,55) output(75,eq,60) output(36,eq,60) output(51,eq,48) output(42,eq,48)
Optimization: 58 1
Answer: 5
preference(1,(1,13),1,for(atom(hasIngredient(12))),4) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,22) output(51,better,32) output(51,better,23) output(51,better,60) output(51,better,48) output(51,better,22) output(5,better,32) output(5,better,48) output(5,better,23) output(5,better,22) output(5,better,60) output(11,better,23) output(36,better,32) output(36,better,23) output(36,better,22) output(36,better,60) output(36,better,48) output(42,better,32) output(42,better,23) output(42,better,60) output(42,better,48) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,22) output(73,better,22) output(60,worse,55) output(23,worse,25) output(32,worse,26) output(32,worse,11) output(32,worse,20) output(32,worse,25) output(32,worse,55) output(48,worse,55) output(75,worse,5) output(75,worse,26) output(75,worse,20) output(75,worse,11) output(75,worse,25) output(75,worse,55) output(48,eq,60) output(26,eq,20) output(42,eq,51) output(51,eq,36) output(36,eq,5) output(32,eq,23) output(11,eq,25) output(5,eq,11) output(51,eq,5) output(42,eq,36) output(60,eq,22) output(5,eq,26) output(75,eq,32) output(36,eq,26) output(51,eq,26) output(32,eq,48) output(32,eq,60) output(20,eq,55) output(26,eq,55) output(48,eq,22) output(5,eq,20) output(36,eq,20) output(42,eq,5) output(36,eq,11) output(51,eq,11) output(5,eq,25) output(75,eq,23) output(36,eq,25) output(51,eq,25) output(42,eq,25) output(42,eq,11) output(51,eq,20) output(42,eq,20) output(32,eq,22) output(75,eq,22) output(5,eq,55) output(36,eq,55) output(51,eq,55) output(75,eq,60) output(75,eq,48) output(42,eq,26) output(42,eq,55)
Optimization: 56 2
Answer: 6
preference(1,(1,13),1,for(atom(hasPrep(7))),4) preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,23) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(5,better,48) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(36,better,23) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,23) output(42,better,60) output(42,better,48) output(42,better,55) output(42,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(32,better,23) output(32,better,48) output(32,better,60) output(32,better,22) output(32,better,55) output(73,better,22) output(75,better,23) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(23,worse,25) output(5,eq,32) output(32,eq,26) output(48,eq,60) output(60,eq,55) output(55,eq,22) output(75,eq,5) output(26,eq,20) output(42,eq,51) output(51,eq,36) output(36,eq,5) output(32,eq,11) output(11,eq,25) output(5,eq,11) output(51,eq,5) output(42,eq,36) output(32,eq,20) output(60,eq,22) output(48,eq,55) output(5,eq,26) output(75,eq,32) output(36,eq,32) output(51,eq,32) output(42,eq,32) output(75,eq,26) output(36,eq,26) output(51,eq,26) output(48,eq,22) output(5,eq,20) output(75,eq,20) output(36,eq,20) output(42,eq,5) output(75,eq,11) output(36,eq,11) output(51,eq,11) output(32,eq,25) output(5,eq,25) output(75,eq,25) output(36,eq,25) output(51,eq,25) output(42,eq,25) output(42,eq,11) output(51,eq,20) output(42,eq,20) output(42,eq,26)
Optimization: 45 2
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(9))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasCategory(3))),4) preference(1,(1,5),1,for(atom(hasCost(2))),7) preference(1,(1,6),1,for(atom(hasIngredient(7))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),3) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasCategory(4))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(26,better,48) output(26,better,55) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(60,better,55) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,23) output(5,better,55) output(5,better,60) output(11,better,23) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,23) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(20,better,48) output(20,better,55) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,55) output(26,worse,22) output(51,worse,36) output(51,worse,5) output(51,worse,25) output(51,worse,22) output(60,worse,22) output(5,worse,25) output(5,worse,22) output(11,worse,25) output(36,worse,22) output(42,worse,51) output(42,worse,36) output(42,worse,32) output(42,worse,5) output(42,worse,25) output(42,worse,22) output(55,worse,22) output(20,worse,22) output(23,worse,25) output(32,worse,25) output(32,worse,22) output(48,worse,60) output(48,worse,55) output(48,worse,22) output(73,worse,22) output(75,worse,5) output(75,worse,32) output(75,worse,26) output(75,worse,20) output(75,worse,11) output(75,worse,23) output(75,worse,25) output(75,worse,22) output(75,worse,55) output(75,worse,60) output(75,worse,48) output(26,eq,20) output(20,eq,60) output(26,eq,60)
Optimization: 39 14
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(7))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),7) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasCategory(3))),8) preference(1,(1,7),1,for(atom(hasPrep(0))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),8) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,26) output(51,better,11) output(51,better,25) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(5,better,11) output(5,better,55) output(36,better,5) output(36,better,11) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,5) output(42,better,11) output(42,better,48) output(42,better,55) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,55) output(73,better,22) output(75,better,5) output(75,better,26) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(51,worse,32) output(51,worse,23) output(51,worse,20) output(5,worse,32) output(5,worse,26) output(5,worse,48) output(5,worse,20) output(5,worse,25) output(5,worse,23) output(5,worse,22) output(5,worse,60) output(11,worse,23) output(11,worse,25) output(36,worse,32) output(36,worse,26) output(36,worse,20) output(36,worse,23) output(36,worse,25) output(42,worse,51) output(42,worse,36) output(42,worse,32) output(42,worse,23) output(42,worse,25) output(42,worse,20) output(42,worse,60) output(42,worse,26) output(42,worse,22) output(55,worse,22) output(32,worse,20) output(48,worse,60) output(48,worse,22) output(75,worse,32) output(75,worse,20) output(60,eq,22)
Optimization: 35 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(3))),6) preference(1,(1,2),1,for(atom(hasIngredient(9))),6) preference(1,(1,3),1,for(atom(hasIngredient(12))),6) preference(1,(1,4),1,for(atom(hasPrep(7))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasDifficulty(3))),1) preference(1,(1,8),1,for(atom(hasPrep(1))),6) preference(1,(1,9),1,for(atom(hasIngredient(3))),6) preference(1,(1,10),1,for(atom(hasIngredient(7))),5) preference(1,(1,11),1,for(atom(hasCost(1))),4) preference(1,(1,12),1,for(atom(hasDifficulty(2))),6) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(26,better,60) output(26,better,22) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,20) output(5,better,22) output(5,better,55) output(5,better,60) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(42,better,51) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,60) output(20,better,55) output(20,better,22) output(32,better,26) output(32,better,11) output(32,better,60) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,22) output(75,better,60) output(26,worse,20) output(26,worse,48) output(51,worse,36) output(51,worse,48) output(60,worse,55) output(5,worse,48) output(11,worse,23) output(11,worse,25) output(20,worse,48) output(32,worse,23) output(32,worse,48) output(32,worse,25) output(75,worse,5) output(75,worse,32) output(75,worse,20) output(75,worse,23) output(75,worse,25) output(75,worse,48) output(23,eq,25) output(51,eq,5) output(42,eq,36) output(32,eq,20) output(60,eq,22) output(75,eq,26) output(26,eq,55) output(75,eq,11) output(5,eq,25) output(5,eq,23) output(51,eq,23) output(51,eq,25) output(75,eq,55) output(36,eq,48) output(42,eq,48)
Optimization: 33 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),5) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrepTime(1))),4) preference(1,(1,9),1,for(atom(hasIngredient(7))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,11) output(51,better,55) output(51,better,60) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,25) output(5,better,22) output(5,better,55) output(5,better,60) output(36,better,5) output(36,better,26) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,26) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(26,worse,48) output(51,worse,36) output(51,worse,5) output(51,worse,32) output(51,worse,23) output(51,worse,20) output(51,worse,48) output(5,worse,32) output(5,worse,20) output(11,worse,23) output(11,worse,25) output(36,worse,32) output(42,worse,32) output(75,worse,32) output(75,worse,20) output(51,eq,26) output(5,eq,48) output(36,eq,20) output(5,eq,23) output(51,eq,25)
Optimization: 21 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),5) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasIngredient(7))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,11) output(51,better,23) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(36,better,5) output(36,better,26) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,23) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(51,worse,36) output(51,worse,5) output(51,worse,32) output(51,worse,20) output(5,worse,32) output(5,worse,20) output(11,worse,25) output(23,worse,25) output(75,worse,5) output(75,worse,32) output(75,worse,26) output(75,worse,20) output(75,worse,11) output(75,worse,25) output(32,eq,20) output(36,eq,32) output(51,eq,26) output(36,eq,20) output(51,eq,25)
Optimization: 20 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasCost(2))),3) preference(1,(1,3),1,for(atom(hasPrep(7))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),5) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasCategory(4))),5) preference(1,(1,9),1,for(atom(hasIngredient(7))),6) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),8) preference(1,less(weight)) output(26,better,20) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,11) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,20) output(5,better,25) output(5,better,22) output(5,better,55) output(5,better,60) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,48) output(51,worse,36) output(51,worse,5) output(51,worse,32) output(51,worse,23) output(51,worse,48) output(5,worse,32) output(11,worse,23) output(20,worse,48) output(11,eq,25) output(75,eq,32) output(51,eq,26) output(5,eq,48) output(5,eq,23)
Optimization: 14 14
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasCost(3))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(9))),6) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasIngredient(7))),4) preference(1,(1,14),1,for(atom(hasIngredient(10))),8) preference(1,less(weight)) output(26,better,20) output(26,better,55) output(26,better,22) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(20,better,55) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,48) output(26,worse,48) output(26,worse,60) output(51,worse,36) output(42,worse,51) output(42,worse,36) output(55,worse,22) output(20,worse,48) output(20,worse,60) output(20,worse,22) output(32,worse,60) output(48,worse,60) output(75,worse,5) output(75,worse,60) output(32,eq,48)
Optimization: 14 12
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(7))),8) preference(1,(1,2),1,for(atom(hasIngredient(12))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasCost(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),8) preference(1,(1,7),1,for(atom(hasCost(1))),4) preference(1,(1,8),1,for(atom(hasCategory(1))),6) preference(1,(1,9),1,for(atom(hasPrepTime(3))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasCost(2))),6) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(26,better,60) output(26,better,55) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(26,worse,48) output(26,worse,22) output(60,worse,22) output(11,worse,23) output(11,worse,25) output(55,worse,22) output(23,worse,25) output(48,worse,22) output(5,eq,32) output(20,eq,22) output(32,eq,25) output(5,eq,25)
Optimization: 13 14
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(2))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasCategory(1))),2) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,6),1,for(atom(hasIngredient(10))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),2) preference(1,(1,12),1,for(atom(hasCategory(4))),4) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasIngredient(12))),4) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,23) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(60,worse,55) output(36,worse,5) output(32,worse,26) output(75,worse,5) output(75,worse,26) output(32,eq,11) output(32,eq,20) output(75,eq,32) output(75,eq,20) output(75,eq,11)
Optimization: 10 14
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(1))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasDifficulty(3))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),7) preference(1,(1,8),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasCost(2))),6) preference(1,(1,11),1,for(atom(hasCategory(1))),6) preference(1,(1,12),1,for(atom(hasIngredient(4))),1) preference(1,(1,14),1,for(atom(hasIngredient(7))),3) preference(1,less(weight)) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(26,worse,48) output(5,worse,11) output(32,worse,11) output(32,eq,23) output(32,eq,20) output(26,eq,60)
Optimization: 7 13
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasDifficulty(3))),2) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasCategory(4))),5) preference(1,(1,7),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasCategory(3))),4) preference(1,(1,13),1,for(atom(hasIngredient(10))),8) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(5,worse,32) output(36,worse,32) output(42,worse,51) output(60,eq,55) output(36,eq,5) output(75,eq,32)
Optimization: 6 10
Answer: 18
preference(1,(1,1),1,for(atom(hasIngredient(7))),3) preference(1,(1,2),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrep(5))),3) preference(1,(1,7),1,for(atom(hasPrep(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasCost(1))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),4) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(60,worse,55) output(75,worse,5) output(75,worse,32) output(5,eq,32) output(26,eq,20)
Optimization: 5 11
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasDifficulty(4))),3) preference(1,(1,6),1,for(atom(hasDifficulty(3))),5) preference(1,(1,7),1,for(atom(hasCategory(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,10),1,for(atom(hasIngredient(7))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),5) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(36,eq,5) output(32,eq,20) output(26,eq,48)
Optimization: 4 13
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,3),1,for(atom(hasPrep(6))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,6),1,for(atom(hasCategory(4))),1) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,9),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),4) preference(1,less(weight)) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(26,worse,20) output(5,worse,32) output(42,worse,51)
Optimization: 3 11
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(7))),8) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrep(5))),3) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasCategory(3))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasIngredient(4))),1) preference(1,(1,11),1,for(atom(hasCategory(1))),1) preference(1,(1,12),1,for(atom(hasCost(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(51,worse,36) output(5,worse,32)
Optimization: 2 14
Answer: 22
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(10))),8) preference(1,(1,4),1,for(atom(hasDifficulty(1))),5) preference(1,(1,5),1,for(atom(hasCost(2))),3) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasDifficulty(3))),4) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasCategory(4))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasCategory(3))),4) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48) output(5,eq,32)
Optimization: 1 14
Answer: 23
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),1) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasIngredient(10))),8) preference(1,(1,10),1,for(atom(hasPrep(0))),6) preference(1,(1,11),1,for(atom(hasDifficulty(3))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasPrep(7))),8) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 24
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),3) preference(1,(1,8),1,for(atom(hasIngredient(12))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),7) preference(1,(1,12),1,for(atom(hasCategory(3))),3) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasCategory(4))),5) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48)
Optimization: 0 13
Answer: 25
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasPrepTime(3))),2) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasCategory(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCost(2))),4) preference(1,(1,14),1,for(atom(hasCategory(4))),5) preference(1,less(weight)) output(26,better,20) output(26,better,48) output(26,better,60) output(26,better,55) output(26,better,22) output(51,better,36) output(51,better,5) output(51,better,32) output(51,better,26) output(51,better,11) output(51,better,23) output(51,better,25) output(51,better,20) output(51,better,55) output(51,better,60) output(51,better,48) output(51,better,22) output(60,better,55) output(60,better,22) output(5,better,32) output(5,better,11) output(5,better,26) output(5,better,48) output(5,better,20) output(5,better,25) output(5,better,23) output(5,better,22) output(5,better,55) output(5,better,60) output(11,better,23) output(11,better,25) output(36,better,5) output(36,better,32) output(36,better,26) output(36,better,20) output(36,better,11) output(36,better,23) output(36,better,25) output(36,better,22) output(36,better,55) output(36,better,60) output(36,better,48) output(42,better,51) output(42,better,36) output(42,better,32) output(42,better,5) output(42,better,23) output(42,better,25) output(42,better,11) output(42,better,20) output(42,better,60) output(42,better,48) output(42,better,26) output(42,better,55) output(42,better,22) output(55,better,22) output(20,better,48) output(20,better,60) output(20,better,55) output(20,better,22) output(23,better,25) output(32,better,26) output(32,better,11) output(32,better,23) output(32,better,20) output(32,better,48) output(32,better,60) output(32,better,25) output(32,better,22) output(32,better,55) output(48,better,60) output(48,better,55) output(48,better,22) output(73,better,22) output(75,better,5) output(75,better,32) output(75,better,26) output(75,better,20) output(75,better,11) output(75,better,23) output(75,better,25) output(75,better,22) output(75,better,55) output(75,better,60) output(75,better,48)
Optimization: 0 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.048 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 598.285s (Solving: 594.64s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2381.759s
Threads      : 4        (Winner: 4)

Choices      : 16796411 (Domain: 358988)
Conflicts    : 9821497  (Analyzed: 9821496)
Restarts     : 9916     (Average: 990.47 Last: 607968)
Model-Level  : 36.0    
Problems     : 6        (Average Length: 0.67 Splits: 0)
Lemmas       : 9857640  (Deleted: 9471750)
  Binary     : 784      (Ratio:   0.01%)
  Ternary    : 1660     (Ratio:   0.02%)
  Conflict   : 9821496  (Average Length:  403.7 Ratio:  99.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 36144    (Average Length:   42.0 Ratio:   0.37%) 
  Distributed: 12066    (Ratio:   0.12% Average LBD: 3.72) 
  Integrated : 36198    (Ratio: 300.00% Unit: 66 Average Jumps: 7.91)
Backjumps    : 9821496  (Average:  1.59 Max: 512 Sum: 15599621)
  Executed   : 9821495  (Average:  1.59 Max: 512 Sum: 15599597 Ratio: 100.00%)
  Bounded    : 1        (Average: 24.00 Max:  24 Sum:     24 Ratio:   0.00%)

Rules        : 899919  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18940   
Bodies       : 19464   
  Sum        : 170     
  Count      : 14      
Equivalences : 8825     (Atom=Atom: 863 Body=Body: 354 Other: 7608)
Tight        : Yes
Variables    : 17267    (Eliminated:    0 Frozen: 7943)
Constraints  : 917222   (Binary:  98.6% Ternary:   1.0% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  6 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(3)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  4 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCost(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(4)) 
}.
