asprin_vL version 1.0
Reading from stdin
-:1282:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1292:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1307:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1388:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1649:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1662:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1839:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1968:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2040:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2044:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2044:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2050:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2149:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2175:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2295:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2329:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2351:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1199:1-16: info: no atoms over signature occur in program:
  output/3

-:1191:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1192:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(99,eq,55) output(55,eq,52) output(52,eq,67) output(76,eq,91) output(91,eq,51) output(71,eq,57) output(8,eq,55) output(78,eq,86) output(86,eq,75) output(75,eq,62) output(62,eq,25) output(75,eq,25) output(86,eq,62) output(78,eq,75) output(52,eq,86) output(51,eq,57) output(76,eq,51) output(67,eq,91) output(55,eq,67) output(99,eq,52) output(8,eq,52) output(99,eq,67) output(8,eq,67) output(52,eq,91) output(55,eq,91) output(67,eq,51) output(52,eq,51) output(91,eq,57) output(76,eq,57) output(55,eq,86) output(99,eq,86) output(8,eq,86) output(52,eq,75) output(55,eq,75) output(78,eq,62) output(52,eq,62) output(86,eq,25) output(78,eq,25) output(52,eq,25) output(55,eq,25) output(99,eq,25) output(8,eq,25) output(55,eq,62) output(99,eq,62) output(8,eq,62) output(99,eq,75) output(8,eq,75) output(67,eq,57) output(52,eq,57) output(55,eq,57) output(99,eq,57) output(8,eq,57) output(55,eq,51) output(99,eq,51) output(8,eq,51) output(99,eq,91) output(8,eq,91) output(8,eq,99) output(67,eq,76) output(51,eq,71) output(52,eq,78) output(25,eq,94) output(25,eq,17) output(62,eq,94) output(55,eq,78) output(91,eq,71) output(52,eq,76) output(55,eq,76) output(8,eq,76) output(67,eq,71) output(8,eq,78) output(75,eq,94) output(86,eq,94) output(62,eq,17) output(75,eq,17) output(86,eq,17) output(52,eq,17) output(55,eq,17) output(52,eq,94) output(55,eq,94) output(8,eq,94) output(52,eq,71) output(55,eq,71) output(8,eq,71) output(8,eq,17)
Optimization: 85 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(51,better,57) output(67,better,91) output(67,better,57) output(25,better,94) output(52,better,91) output(52,better,62) output(52,better,57) output(52,better,94) output(71,better,57) output(75,better,62) output(75,better,94) output(78,better,62) output(86,better,62) output(86,better,94) output(76,better,91) output(76,better,57) output(8,worse,52) output(8,worse,67) output(8,worse,86) output(8,worse,25) output(8,worse,75) output(8,worse,51) output(8,worse,76) output(8,worse,78) output(8,worse,71) output(8,worse,17) output(55,worse,52) output(55,worse,67) output(55,worse,86) output(55,worse,75) output(55,worse,25) output(55,worse,51) output(55,worse,78) output(55,worse,76) output(55,worse,17) output(55,worse,71) output(62,worse,25) output(62,worse,17) output(91,worse,51) output(91,worse,71) output(99,worse,52) output(99,worse,67) output(99,worse,86) output(99,worse,25) output(99,worse,75) output(99,worse,51) output(99,eq,55) output(52,eq,67) output(8,eq,55) output(78,eq,86) output(86,eq,75) output(75,eq,25) output(78,eq,75) output(52,eq,86) output(76,eq,51) output(55,eq,91) output(67,eq,51) output(52,eq,51) output(91,eq,57) output(52,eq,75) output(86,eq,25) output(78,eq,25) output(52,eq,25) output(55,eq,62) output(99,eq,62) output(8,eq,62) output(55,eq,57) output(99,eq,57) output(8,eq,57) output(99,eq,91) output(8,eq,91) output(8,eq,99) output(67,eq,76) output(51,eq,71) output(52,eq,78) output(25,eq,17) output(62,eq,94) output(52,eq,76) output(67,eq,71) output(75,eq,17) output(86,eq,17) output(52,eq,17) output(55,eq,94) output(8,eq,94) output(52,eq,71)
Optimization: 69 2
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCategory(3))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasIngredient(10))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,57) output(67,better,71) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,75) output(8,better,57) output(8,better,91) output(8,better,99) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,67) output(55,better,91) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,78) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(62,better,17) output(99,better,52) output(99,better,75) output(99,better,57) output(99,better,91) output(25,better,94) output(86,better,75) output(86,better,94) output(76,better,91) output(76,better,57) output(67,worse,51) output(67,worse,76) output(91,worse,51) output(99,worse,55) output(99,worse,67) output(99,worse,86) output(99,worse,25) output(99,worse,62) output(99,worse,51) output(52,worse,67) output(52,worse,86) output(52,worse,51) output(52,worse,62) output(52,worse,25) output(52,worse,76) output(52,worse,17) output(52,worse,94) output(75,worse,62) output(75,worse,25) output(75,worse,94) output(75,worse,17) output(78,worse,86) output(78,worse,62) output(78,worse,25) output(86,worse,62) output(71,eq,57) output(8,eq,55) output(78,eq,75) output(76,eq,51) output(52,eq,91) output(91,eq,57) output(52,eq,75) output(86,eq,25) output(55,eq,62) output(8,eq,62) output(52,eq,57) output(55,eq,51) output(8,eq,51) output(52,eq,78) output(25,eq,17) output(91,eq,71) output(55,eq,76) output(8,eq,76) output(86,eq,17) output(52,eq,71)
Optimization: 45 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCategory(3))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasIngredient(10))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,57) output(67,better,71) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,75) output(8,better,57) output(8,better,91) output(8,better,99) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,67) output(55,better,91) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,78) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(62,better,17) output(91,better,57) output(91,better,71) output(99,better,52) output(99,better,75) output(99,better,57) output(25,better,94) output(25,better,17) output(86,better,75) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,57) output(67,worse,51) output(67,worse,76) output(91,worse,51) output(99,worse,55) output(99,worse,86) output(99,worse,25) output(99,worse,62) output(99,worse,51) output(52,worse,67) output(52,worse,86) output(52,worse,91) output(52,worse,51) output(52,worse,62) output(52,worse,25) output(52,worse,76) output(52,worse,17) output(52,worse,94) output(75,worse,62) output(75,worse,25) output(75,worse,94) output(75,worse,17) output(78,worse,86) output(78,worse,62) output(78,worse,25) output(86,worse,62) output(71,eq,57) output(8,eq,55) output(78,eq,75) output(76,eq,51) output(67,eq,91) output(99,eq,67) output(52,eq,75) output(86,eq,25) output(55,eq,62) output(8,eq,62) output(52,eq,57) output(55,eq,51) output(8,eq,51) output(99,eq,91) output(52,eq,78) output(55,eq,76) output(8,eq,76) output(52,eq,71)
Optimization: 43 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),4) preference(1,(1,2),1,for(atom(hasCategory(3))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(9))),4) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),4) preference(1,(1,9),1,for(atom(hasIngredient(10))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,57) output(67,better,71) output(8,better,52) output(8,better,86) output(8,better,25) output(8,better,75) output(8,better,57) output(8,better,91) output(8,better,99) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,91) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,78) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(62,better,17) output(91,better,57) output(91,better,71) output(99,better,52) output(99,better,75) output(99,better,57) output(25,better,94) output(25,better,17) output(52,better,75) output(52,better,71) output(78,better,75) output(86,better,75) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,57) output(91,worse,51) output(99,worse,55) output(99,worse,67) output(99,worse,86) output(99,worse,25) output(99,worse,62) output(99,worse,51) output(52,worse,67) output(52,worse,86) output(52,worse,91) output(52,worse,51) output(52,worse,62) output(52,worse,25) output(52,worse,76) output(52,worse,17) output(52,worse,94) output(71,worse,57) output(75,worse,62) output(75,worse,25) output(75,worse,94) output(75,worse,17) output(78,worse,86) output(78,worse,62) output(78,worse,25) output(86,worse,62) output(8,eq,55) output(76,eq,51) output(55,eq,67) output(8,eq,67) output(67,eq,51) output(86,eq,25) output(55,eq,62) output(8,eq,62) output(52,eq,57) output(55,eq,51) output(8,eq,51) output(99,eq,91) output(67,eq,76) output(52,eq,78) output(55,eq,76) output(8,eq,76)
Optimization: 41 14
Answer: 6
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasCategory(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),3) preference(1,(1,8),1,for(atom(hasIngredient(7))),8) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),7) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(67,better,51) output(67,better,57) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,67) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,51) output(55,better,78) output(55,better,71) output(62,better,25) output(91,better,51) output(91,better,57) output(91,better,71) output(99,better,55) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(52,better,51) output(52,better,25) output(75,better,25) output(78,better,75) output(78,better,25) output(86,better,75) output(86,better,25) output(76,better,91) output(76,better,51) output(76,better,57) output(51,worse,57) output(51,worse,71) output(67,worse,91) output(67,worse,76) output(55,worse,76) output(25,worse,94) output(25,worse,17) output(52,worse,67) output(52,worse,86) output(52,worse,91) output(52,worse,62) output(52,worse,78) output(52,worse,76) output(52,worse,17) output(52,worse,94) output(75,worse,62) output(75,worse,94) output(75,worse,17) output(78,worse,62) output(86,worse,62) output(86,worse,94) output(86,worse,17) output(71,eq,57) output(78,eq,86) output(55,eq,91) output(52,eq,75) output(55,eq,62) output(52,eq,57) output(8,eq,99) output(62,eq,94) output(8,eq,76) output(62,eq,17) output(55,eq,17) output(55,eq,94) output(52,eq,71)
Optimization: 35 14
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),8) preference(1,(1,3),1,for(atom(hasCategory(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),3) preference(1,(1,8),1,for(atom(hasIngredient(7))),8) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),1) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(67,better,51) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,67) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,51) output(55,better,71) output(62,better,25) output(91,better,51) output(91,better,57) output(91,better,71) output(99,better,55) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(52,better,67) output(52,better,51) output(52,better,25) output(75,better,25) output(78,better,75) output(78,better,62) output(78,better,25) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,51) output(76,better,57) output(51,worse,57) output(51,worse,71) output(67,worse,91) output(67,worse,57) output(67,worse,76) output(67,worse,71) output(55,worse,86) output(55,worse,78) output(55,worse,76) output(25,worse,94) output(25,worse,17) output(52,worse,86) output(52,worse,91) output(52,worse,62) output(52,worse,78) output(52,worse,76) output(52,worse,17) output(52,worse,94) output(75,worse,62) output(75,worse,94) output(75,worse,17) output(71,eq,57) output(78,eq,86) output(55,eq,91) output(52,eq,75) output(55,eq,62) output(52,eq,57) output(8,eq,99) output(62,eq,94) output(8,eq,76) output(62,eq,17) output(55,eq,17) output(55,eq,94) output(52,eq,71)
Optimization: 34 14
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasIngredient(3))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),7) preference(1,(1,9),1,for(atom(hasPrepTime(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),2) preference(1,(1,14),1,for(atom(hasDifficulty(4))),6) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,51) output(67,better,57) output(67,better,76) output(67,better,71) output(8,better,52) output(8,better,86) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,91) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,91) output(55,better,86) output(55,better,75) output(55,better,62) output(55,better,57) output(55,better,51) output(55,better,78) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,17) output(91,better,57) output(91,better,71) output(99,better,52) output(99,better,86) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(25,better,94) output(25,better,17) output(52,better,91) output(52,better,75) output(52,better,62) output(52,better,57) output(52,better,17) output(52,better,94) output(52,better,71) output(75,better,17) output(78,better,86) output(78,better,75) output(78,better,62) output(86,better,75) output(86,better,62) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,51) output(76,better,57) output(8,worse,55) output(8,worse,67) output(8,worse,25) output(8,worse,99) output(8,worse,76) output(55,worse,67) output(55,worse,76) output(62,worse,25) output(91,worse,51) output(99,worse,67) output(52,worse,67) output(52,worse,86) output(52,worse,51) output(52,worse,25) output(52,worse,78) output(52,worse,76) output(71,worse,57) output(75,worse,25) output(78,worse,25) output(86,worse,25) output(99,eq,55) output(75,eq,62) output(55,eq,25) output(99,eq,25) output(8,eq,51) output(62,eq,94) output(8,eq,78) output(75,eq,94)
Optimization: 28 14
Answer: 9
preference(1,(1,1),1,for(atom(hasIngredient(3))),1) preference(1,(1,2),1,for(atom(hasCategory(3))),2) preference(1,(1,3),1,for(atom(hasIngredient(9))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),7) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasPrep(5))),4) preference(1,(1,8),1,for(atom(hasPrep(2))),7) preference(1,(1,9),1,for(atom(hasPrep(6))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(7))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(51,better,71) output(67,better,51) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,99) output(8,better,78) output(8,better,94) output(8,better,71) output(55,better,52) output(55,better,67) output(55,better,91) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,57) output(55,better,51) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(91,better,51) output(91,better,57) output(91,better,71) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,57) output(99,better,51) output(99,better,91) output(52,better,86) output(52,better,51) output(52,better,25) output(52,better,94) output(52,better,71) output(75,better,62) output(75,better,25) output(75,better,94) output(78,better,86) output(78,better,75) output(78,better,62) output(78,better,25) output(86,better,25) output(86,better,94) output(76,better,91) output(76,better,51) output(76,better,57) output(51,worse,57) output(67,worse,91) output(67,worse,76) output(8,worse,17) output(55,worse,76) output(55,worse,17) output(62,worse,17) output(99,worse,55) output(25,worse,17) output(52,worse,91) output(52,worse,75) output(52,worse,78) output(52,worse,76) output(52,worse,17) output(71,worse,57) output(75,worse,17) output(86,worse,75) output(86,worse,62) output(86,worse,17) output(52,eq,67) output(52,eq,62) output(99,eq,75) output(67,eq,57) output(52,eq,57) output(25,eq,94) output(55,eq,78) output(8,eq,76)
Optimization: 27 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasIngredient(7))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(9))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasCategory(5))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasIngredient(4))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasCategory(1))),1) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,51) output(67,better,57) output(67,better,76) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,76) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,86) output(55,better,75) output(55,better,25) output(55,better,57) output(55,better,51) output(55,better,78) output(55,better,76) output(55,better,17) output(55,better,71) output(62,better,25) output(62,better,17) output(91,better,51) output(91,better,57) output(91,better,71) output(99,better,55) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(25,better,17) output(52,better,75) output(52,better,25) output(52,better,76) output(52,better,17) output(52,better,71) output(75,better,25) output(75,better,17) output(78,better,86) output(78,better,75) output(78,better,25) output(86,better,75) output(86,better,25) output(86,better,17) output(67,worse,91) output(8,worse,91) output(8,worse,99) output(55,worse,91) output(25,worse,94) output(52,worse,67) output(52,worse,91) output(52,worse,51) output(52,worse,62) output(52,worse,78) output(52,worse,94) output(71,worse,57) output(75,worse,62) output(75,worse,94) output(78,worse,62) output(86,worse,62) output(86,worse,94) output(76,worse,91) output(76,worse,51) output(76,worse,57) output(52,eq,86) output(55,eq,67) output(55,eq,62) output(52,eq,57) output(62,eq,94) output(55,eq,94)
Optimization: 26 13
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,57) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,91) output(8,better,76) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,91) output(55,better,75) output(55,better,62) output(55,better,57) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,94) output(62,better,17) output(91,better,57) output(99,better,55) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,91) output(25,better,94) output(25,better,17) output(52,better,91) output(52,better,57) output(52,better,17) output(52,better,94) output(52,better,71) output(71,better,57) output(75,better,62) output(75,better,94) output(75,better,17) output(78,better,86) output(78,better,75) output(78,better,62) output(78,better,25) output(86,better,75) output(86,better,62) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,57) output(67,worse,51) output(8,worse,51) output(8,worse,99) output(55,worse,67) output(55,worse,51) output(55,worse,78) output(55,worse,76) output(62,worse,25) output(91,worse,51) output(99,worse,51) output(52,worse,67) output(52,worse,86) output(52,worse,51) output(52,worse,75) output(52,worse,62) output(52,worse,25) output(52,worse,78) output(52,worse,76) output(75,worse,25) output(76,worse,51) output(55,eq,86) output(86,eq,25) output(55,eq,25) output(67,eq,76) output(91,eq,71)
Optimization: 25 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,51) output(67,better,57) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,91) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,57) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(91,better,57) output(99,better,55) output(99,better,52) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(25,better,94) output(52,better,91) output(52,better,57) output(52,better,94) output(52,better,71) output(71,better,57) output(75,better,62) output(75,better,25) output(75,better,94) output(75,better,17) output(78,better,86) output(78,better,75) output(78,better,62) output(78,better,25) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,51) output(76,better,57) output(8,worse,67) output(8,worse,99) output(8,worse,76) output(55,worse,67) output(55,worse,51) output(55,worse,78) output(55,worse,76) output(91,worse,51) output(99,worse,67) output(25,worse,17) output(52,worse,67) output(52,worse,86) output(52,worse,51) output(52,worse,75) output(52,worse,62) output(52,worse,25) output(52,worse,78) output(52,worse,76) output(52,worse,17) output(55,eq,86) output(67,eq,76) output(91,eq,71) output(62,eq,17)
Optimization: 23 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasCategory(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(9))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),6) preference(1,less(weight)) output(51,better,57) output(51,better,71) output(67,better,91) output(67,better,51) output(67,better,57) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,86) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,91) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,57) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(91,better,57) output(99,better,55) output(99,better,52) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(25,better,94) output(52,better,91) output(52,better,25) output(52,better,57) output(52,better,94) output(52,better,71) output(71,better,57) output(75,better,62) output(75,better,25) output(75,better,94) output(75,better,17) output(78,better,86) output(78,better,75) output(78,better,62) output(78,better,25) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,51) output(76,better,57) output(8,worse,67) output(8,worse,99) output(8,worse,76) output(55,worse,67) output(55,worse,51) output(55,worse,78) output(55,worse,76) output(91,worse,51) output(99,worse,67) output(25,worse,17) output(52,worse,67) output(52,worse,86) output(52,worse,51) output(52,worse,75) output(52,worse,62) output(52,worse,78) output(52,worse,76) output(52,worse,17) output(55,eq,86) output(67,eq,76) output(91,eq,71) output(62,eq,17)
Optimization: 22 13
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(4))),5) preference(1,(1,2),1,for(atom(hasCategory(4))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasCategory(5))),5) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),5) preference(1,(1,10),1,for(atom(hasIngredient(7))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasPrepTime(3))),4) preference(1,(1,13),1,for(atom(hasIngredient(9))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(51,better,71) output(67,better,91) output(67,better,51) output(67,better,57) output(67,better,71) output(8,better,55) output(8,better,52) output(8,better,67) output(8,better,25) output(8,better,62) output(8,better,75) output(8,better,57) output(8,better,51) output(8,better,91) output(8,better,76) output(8,better,78) output(8,better,94) output(8,better,71) output(8,better,17) output(55,better,52) output(55,better,67) output(55,better,91) output(55,better,75) output(55,better,25) output(55,better,62) output(55,better,57) output(55,better,51) output(55,better,78) output(55,better,76) output(55,better,17) output(55,better,94) output(55,better,71) output(62,better,25) output(62,better,94) output(91,better,51) output(91,better,57) output(91,better,71) output(99,better,55) output(99,better,52) output(99,better,67) output(99,better,86) output(99,better,25) output(99,better,62) output(99,better,75) output(99,better,57) output(99,better,51) output(99,better,91) output(25,better,94) output(52,better,91) output(52,better,51) output(52,better,75) output(52,better,25) output(52,better,57) output(52,better,94) output(52,better,71) output(75,better,94) output(78,better,75) output(78,better,25) output(86,better,75) output(86,better,62) output(86,better,25) output(86,better,94) output(86,better,17) output(76,better,91) output(76,better,51) output(76,better,57) output(8,worse,86) output(8,worse,99) output(55,worse,86) output(62,worse,17) output(25,worse,17) output(52,worse,86) output(52,worse,17) output(71,worse,57) output(75,worse,62) output(75,worse,25) output(75,worse,17) output(78,worse,86) output(52,eq,67) output(51,eq,57) output(78,eq,62) output(52,eq,62) output(67,eq,76) output(52,eq,78) output(52,eq,76)
Optimization: 19 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.133 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 14+
  Optimum    : unknown
Optimization : 19 14
Calls        : 1
Time         : 596.947s (Solving: 593.51s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2371.940s
Threads      : 4        (Winner: 4)

Choices      : 12067107 (Domain: 355350)
Conflicts    : 10069045 (Analyzed: 10069045)
Restarts     : 6401     (Average: 1573.04 Last: 612754)
Model-Level  : 53.2    
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 10126842 (Deleted: 9648811)
  Binary     : 2198     (Ratio:   0.02%)
  Ternary    : 3690     (Ratio:   0.04%)
  Conflict   : 10069045 (Average Length:  600.0 Ratio:  99.43%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 57797    (Average Length:   41.5 Ratio:   0.57%) 
  Distributed: 19297    (Ratio:   0.19% Average LBD: 3.67) 
  Integrated : 57891    (Ratio: 300.00% Unit: 29 Average Jumps: 10.86)
Backjumps    : 10069045 (Average:  1.18 Max: 137 Sum: 11917113)
  Executed   : 10069037 (Average:  1.18 Max: 137 Sum: 11916790 Ratio: 100.00%)
  Bounded    : 8        (Average: 40.38 Max:  87 Sum:    323 Ratio:   0.00%)

Rules        : 901263  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18948   
Bodies       : 19464   
  Sum        : 170     
  Count      : 14      
Equivalences : 8825     (Atom=Atom: 863 Body=Body: 354 Other: 7608)
Tight        : Yes
Variables    : 17275    (Eliminated:    0 Frozen: 7951)
Constraints  : 918574   (Binary:  98.6% Ternary:   1.0% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(5)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrep(6)) 
}.
