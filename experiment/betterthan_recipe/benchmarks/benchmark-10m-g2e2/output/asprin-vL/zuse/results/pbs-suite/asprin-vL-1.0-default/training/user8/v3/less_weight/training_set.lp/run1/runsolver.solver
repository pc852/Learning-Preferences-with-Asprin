asprin_vL version 1.0
Reading from stdin
-:1285:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1295:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1310:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1391:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1652:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1665:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1842:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1971:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2043:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2047:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2047:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2053:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2152:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2178:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2298:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2332:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2354:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1202:1-16: info: no atoms over signature occur in program:
  output/3

-:1194:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1195:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(78,eq,7) output(7,eq,23) output(42,eq,90) output(18,eq,51) output(51,eq,79) output(79,eq,31) output(7,eq,33) output(32,eq,52) output(52,eq,39) output(4,eq,46) output(60,eq,79) output(46,eq,79) output(39,eq,46) output(32,eq,39) output(33,eq,52) output(78,eq,33) output(51,eq,31) output(60,eq,31) output(18,eq,79) output(90,eq,51) output(72,eq,90) output(78,eq,23) output(23,eq,90) output(7,eq,90) output(42,eq,51) output(72,eq,51) output(90,eq,79) output(42,eq,79) output(46,eq,31) output(4,eq,31) output(18,eq,31) output(90,eq,31) output(7,eq,52) output(78,eq,52) output(33,eq,39) output(7,eq,39) output(52,eq,46) output(32,eq,46) output(4,eq,79) output(39,eq,79) output(52,eq,79) output(32,eq,79) output(33,eq,79) output(7,eq,79) output(33,eq,46) output(7,eq,46) output(78,eq,46) output(78,eq,39) output(42,eq,31) output(72,eq,31) output(23,eq,31) output(7,eq,31) output(39,eq,31) output(52,eq,31) output(32,eq,31) output(33,eq,31) output(72,eq,79) output(23,eq,79) output(78,eq,79) output(23,eq,51) output(7,eq,51) output(78,eq,51) output(78,eq,90) output(78,eq,31) output(23,eq,72) output(90,eq,18) output(33,eq,32) output(39,eq,4) output(46,eq,60) output(52,eq,4) output(7,eq,32) output(23,eq,42) output(7,eq,72) output(78,eq,72) output(7,eq,42) output(78,eq,42) output(23,eq,18) output(78,eq,32) output(33,eq,4) output(39,eq,60) output(52,eq,60) output(33,eq,60) output(7,eq,60) output(78,eq,60) output(7,eq,4) output(78,eq,4) output(7,eq,18) output(78,eq,18)
Optimization: 88 0
Answer: 2
preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(7,better,33) output(7,better,90) output(7,better,52) output(7,better,39) output(7,better,46) output(7,better,32) output(7,better,72) output(7,better,42) output(7,better,60) output(7,better,4) output(7,better,18) output(23,better,90) output(23,better,72) output(23,better,42) output(23,better,18) output(78,better,33) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,90) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(18,worse,51) output(18,worse,79) output(18,worse,31) output(46,worse,79) output(46,worse,31) output(60,worse,79) output(60,worse,31) output(72,worse,51) output(72,worse,31) output(72,worse,79) output(4,worse,31) output(4,worse,79) output(39,worse,79) output(39,worse,31) output(42,worse,51) output(42,worse,79) output(42,worse,31) output(32,worse,79) output(32,worse,31) output(33,worse,79) output(33,worse,31) output(52,worse,79) output(52,worse,31) output(90,worse,51) output(90,worse,79) output(90,worse,31) output(78,eq,7) output(7,eq,23) output(42,eq,90) output(51,eq,79) output(79,eq,31) output(32,eq,52) output(52,eq,39) output(4,eq,46) output(39,eq,46) output(32,eq,39) output(33,eq,52) output(51,eq,31) output(72,eq,90) output(78,eq,23) output(33,eq,39) output(52,eq,46) output(32,eq,46) output(7,eq,79) output(33,eq,46) output(23,eq,31) output(7,eq,31) output(23,eq,79) output(78,eq,79) output(23,eq,51) output(7,eq,51) output(78,eq,51) output(78,eq,31) output(90,eq,18) output(33,eq,32) output(39,eq,4) output(46,eq,60) output(52,eq,4) output(33,eq,4) output(39,eq,60) output(52,eq,60) output(33,eq,60)
Optimization: 62 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(2))),3) preference(1,(1,2),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasCategory(5))),3) preference(1,(1,4),1,for(atom(hasIngredient(6))),3) preference(1,(1,5),1,for(atom(hasDifficulty(4))),3) preference(1,(1,6),1,for(atom(hasIngredient(1))),3) preference(1,(1,7),1,for(atom(hasIngredient(5))),3) preference(1,(1,8),1,for(atom(hasIngredient(3))),3) preference(1,(1,9),1,for(atom(hasPrepTime(1))),3) preference(1,(1,10),1,for(atom(hasCost(5))),3) preference(1,(1,11),1,for(atom(hasPrep(3))),3) preference(1,(1,12),1,for(atom(hasIngredient(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(4))),3) preference(1,less(weight)) output(18,better,51) output(18,better,31) output(60,better,31) output(72,better,51) output(72,better,31) output(4,better,46) output(4,better,31) output(42,better,51) output(42,better,31) output(79,better,31) output(7,better,52) output(7,better,39) output(7,better,46) output(7,better,31) output(7,better,51) output(23,better,31) output(23,better,51) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,31) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,51) output(78,better,31) output(90,better,51) output(90,better,31) output(46,worse,79) output(46,worse,60) output(51,worse,79) output(39,worse,79) output(39,worse,4) output(39,worse,60) output(52,worse,79) output(52,worse,4) output(52,worse,60) output(78,eq,7) output(7,eq,23) output(42,eq,90) output(7,eq,33) output(52,eq,39) output(60,eq,79) output(39,eq,46) output(78,eq,33) output(51,eq,31) output(18,eq,79) output(72,eq,90) output(78,eq,23) output(23,eq,90) output(7,eq,90) output(90,eq,79) output(42,eq,79) output(46,eq,31) output(52,eq,46) output(4,eq,79) output(32,eq,79) output(33,eq,79) output(7,eq,79) output(39,eq,31) output(52,eq,31) output(72,eq,79) output(23,eq,79) output(78,eq,79) output(78,eq,90) output(23,eq,72) output(90,eq,18) output(33,eq,32) output(7,eq,32) output(23,eq,42) output(7,eq,72) output(78,eq,72) output(7,eq,42) output(78,eq,42) output(23,eq,18) output(78,eq,32) output(33,eq,4) output(33,eq,60) output(7,eq,60) output(78,eq,60) output(7,eq,4) output(78,eq,4) output(7,eq,18) output(78,eq,18)
Optimization: 56 13
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasPrep(7))),3) preference(1,(1,3),1,for(atom(hasIngredient(1))),3) preference(1,(1,4),1,for(atom(hasIngredient(6))),3) preference(1,(1,5),1,for(atom(hasCategory(2))),3) preference(1,(1,6),1,for(atom(hasCategory(5))),3) preference(1,(1,7),1,for(atom(hasPrep(3))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(4))),3) preference(1,(1,10),1,for(atom(hasIngredient(11))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasCost(5))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),3) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,23) output(7,better,52) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,60) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,60) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,31) output(78,better,60) output(90,better,51) output(90,better,79) output(90,better,31) output(39,worse,4) output(23,worse,90) output(23,worse,72) output(23,worse,42) output(23,worse,18) output(52,worse,4) output(78,eq,7) output(42,eq,90) output(51,eq,79) output(79,eq,31) output(7,eq,33) output(52,eq,39) output(60,eq,79) output(46,eq,79) output(39,eq,46) output(78,eq,33) output(51,eq,31) output(60,eq,31) output(72,eq,90) output(7,eq,90) output(46,eq,31) output(52,eq,46) output(39,eq,79) output(52,eq,79) output(23,eq,31) output(39,eq,31) output(52,eq,31) output(23,eq,79) output(23,eq,51) output(78,eq,90) output(90,eq,18) output(33,eq,32) output(46,eq,60) output(7,eq,32) output(7,eq,72) output(78,eq,72) output(7,eq,42) output(78,eq,42) output(78,eq,32) output(33,eq,4) output(39,eq,60) output(52,eq,60) output(7,eq,4) output(78,eq,4) output(7,eq,18) output(78,eq,18)
Optimization: 46 13
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(1))),3) preference(1,(1,2),1,for(atom(hasPrep(4))),3) preference(1,(1,3),1,for(atom(hasIngredient(2))),3) preference(1,(1,4),1,for(atom(hasCategory(5))),3) preference(1,(1,5),1,for(atom(hasIngredient(11))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,7),1,for(atom(hasIngredient(6))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(4))),3) preference(1,(1,10),1,for(atom(hasIngredient(5))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasCost(5))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),3) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,52) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,60) output(23,better,31) output(23,better,79) output(23,better,51) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,60) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,31) output(78,better,60) output(90,better,51) output(90,better,79) output(90,better,31) output(39,worse,4) output(52,worse,4) output(78,eq,7) output(7,eq,23) output(42,eq,90) output(51,eq,79) output(79,eq,31) output(7,eq,33) output(52,eq,39) output(60,eq,79) output(46,eq,79) output(39,eq,46) output(78,eq,33) output(51,eq,31) output(60,eq,31) output(72,eq,90) output(78,eq,23) output(23,eq,90) output(7,eq,90) output(46,eq,31) output(52,eq,46) output(39,eq,79) output(52,eq,79) output(39,eq,31) output(52,eq,31) output(78,eq,90) output(23,eq,72) output(90,eq,18) output(33,eq,32) output(46,eq,60) output(7,eq,32) output(23,eq,42) output(7,eq,72) output(78,eq,72) output(7,eq,42) output(78,eq,42) output(23,eq,18) output(78,eq,32) output(33,eq,4) output(39,eq,60) output(52,eq,60) output(7,eq,4) output(78,eq,4) output(7,eq,18) output(78,eq,18)
Optimization: 45 13
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(3))),3) preference(1,(1,2),1,for(atom(hasCost(1))),3) preference(1,(1,3),1,for(atom(hasIngredient(11))),3) preference(1,(1,4),1,for(atom(hasCategory(2))),3) preference(1,(1,5),1,for(atom(hasIngredient(8))),3) preference(1,(1,6),1,for(atom(hasPrep(3))),3) preference(1,(1,7),1,for(atom(hasIngredient(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasDifficulty(4))),3) preference(1,(1,10),1,for(atom(hasIngredient(6))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),3) preference(1,(1,12),1,for(atom(hasCost(5))),3) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(72,better,51) output(72,better,31) output(72,better,79) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,42) output(7,better,60) output(7,better,4) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,42) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,31) output(78,better,42) output(78,better,60) output(78,better,4) output(90,better,51) output(90,better,79) output(90,better,31) output(42,worse,90) output(78,eq,7) output(7,eq,23) output(51,eq,79) output(79,eq,31) output(7,eq,33) output(32,eq,52) output(4,eq,46) output(60,eq,79) output(46,eq,79) output(39,eq,46) output(33,eq,52) output(78,eq,33) output(51,eq,31) output(60,eq,31) output(72,eq,90) output(78,eq,23) output(23,eq,90) output(7,eq,90) output(42,eq,51) output(42,eq,79) output(46,eq,31) output(4,eq,31) output(7,eq,52) output(78,eq,52) output(4,eq,79) output(39,eq,79) output(42,eq,31) output(39,eq,31) output(78,eq,90) output(23,eq,72) output(90,eq,18) output(33,eq,32) output(39,eq,4) output(46,eq,60) output(7,eq,32) output(7,eq,72) output(78,eq,72) output(23,eq,18) output(78,eq,32) output(39,eq,60) output(7,eq,18) output(78,eq,18)
Optimization: 43 12
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasIngredient(10))),5) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(9))),8) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),7) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasCategory(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(18,better,79) output(18,better,31) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,31) output(4,better,46) output(4,better,31) output(39,better,46) output(79,better,31) output(32,better,39) output(32,better,46) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(78,better,7) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(46,worse,79) output(46,worse,31) output(46,worse,60) output(72,worse,90) output(72,worse,51) output(72,worse,79) output(39,worse,79) output(39,worse,31) output(39,worse,4) output(39,worse,60) output(42,worse,90) output(42,worse,51) output(42,worse,79) output(42,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,79) output(7,worse,46) output(7,worse,31) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(7,worse,18) output(23,worse,90) output(23,worse,31) output(23,worse,79) output(23,worse,51) output(23,worse,72) output(23,worse,18) output(32,worse,52) output(32,worse,79) output(52,worse,60) output(78,eq,33) output(4,eq,79) output(23,eq,42)
Optimization: 42 14
Answer: 8
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrep(6))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),7) preference(1,(1,4),1,for(atom(hasCost(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),8) preference(1,(1,11),1,for(atom(hasCategory(4))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),5) preference(1,(1,13),1,for(atom(hasPrep(0))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),4) preference(1,less(weight)) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(39,better,46) output(79,better,31) output(7,better,52) output(7,better,39) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,42) output(7,better,4) output(7,better,18) output(23,better,31) output(23,better,51) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,31) output(33,better,4) output(52,better,39) output(52,better,46) output(52,better,4) output(78,better,7) output(78,better,33) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,51) output(78,better,31) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,31) output(90,better,18) output(18,worse,79) output(18,worse,31) output(46,worse,79) output(46,worse,31) output(46,worse,60) output(51,worse,79) output(51,worse,31) output(60,worse,79) output(4,worse,31) output(4,worse,79) output(39,worse,79) output(39,worse,31) output(39,worse,60) output(42,worse,90) output(42,worse,79) output(42,worse,31) output(7,worse,33) output(7,worse,90) output(7,worse,79) output(7,worse,32) output(7,worse,72) output(7,worse,60) output(23,worse,90) output(23,worse,79) output(23,worse,72) output(32,worse,79) output(33,worse,79) output(52,worse,79) output(52,worse,31) output(52,worse,60) output(78,worse,72) output(7,eq,23) output(18,eq,51) output(42,eq,51) output(90,eq,79) output(78,eq,79) output(78,eq,90) output(33,eq,32) output(39,eq,4) output(33,eq,60)
Optimization: 40 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasIngredient(10))),5) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(9))),8) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasPrep(6))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),7) preference(1,(1,10),1,for(atom(hasIngredient(12))),7) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasCategory(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasDifficulty(1))),6) preference(1,less(weight)) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(42,better,79) output(42,better,31) output(79,better,31) output(23,better,31) output(23,better,79) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(78,better,7) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,4) output(78,better,18) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(46,worse,60) output(72,worse,90) output(72,worse,51) output(39,worse,46) output(39,worse,79) output(39,worse,31) output(39,worse,4) output(39,worse,60) output(42,worse,90) output(42,worse,51) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,79) output(7,worse,46) output(7,worse,31) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(7,worse,18) output(23,worse,90) output(23,worse,51) output(23,worse,72) output(23,worse,18) output(32,worse,52) output(33,worse,60) output(52,worse,60) output(78,worse,60) output(90,worse,51) output(78,eq,33) output(78,eq,51) output(23,eq,42)
Optimization: 38 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(7))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(3))),1) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),1) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasCategory(3))),4) preference(1,(1,9),1,for(atom(hasIngredient(9))),8) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCategory(1))),4) preference(1,less(weight)) output(46,better,79) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(42,better,79) output(7,better,39) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,42) output(23,better,18) output(32,better,39) output(32,better,46) output(32,better,79) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(78,better,7) output(78,better,33) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(18,worse,79) output(18,worse,31) output(46,worse,31) output(46,worse,60) output(4,worse,46) output(4,worse,31) output(4,worse,79) output(39,worse,46) output(39,worse,79) output(39,worse,31) output(39,worse,4) output(39,worse,60) output(42,worse,90) output(42,worse,51) output(42,worse,31) output(79,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,79) output(7,worse,46) output(7,worse,31) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(32,worse,52) output(33,worse,52) output(33,worse,60) output(52,worse,60) output(90,eq,51) output(32,eq,31) output(23,eq,72) output(7,eq,4)
Optimization: 37 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrepTime(1))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),1) preference(1,(1,7),1,for(atom(hasCost(1))),1) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,9),1,for(atom(hasIngredient(7))),7) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasCost(4))),2) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasIngredient(10))),6) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(18,better,31) output(46,better,31) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,31) output(42,better,79) output(42,better,31) output(79,better,31) output(7,better,31) output(23,better,31) output(23,better,79) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,39) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,33) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(46,worse,60) output(72,worse,90) output(72,worse,51) output(39,worse,46) output(39,worse,79) output(39,worse,4) output(39,worse,60) output(42,worse,90) output(42,worse,51) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,79) output(7,worse,46) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(7,worse,18) output(23,worse,90) output(23,worse,51) output(32,worse,52) output(33,worse,52) output(78,worse,90) output(46,eq,79) output(18,eq,79) output(7,eq,39) output(32,eq,46) output(32,eq,79)
Optimization: 33 14
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(10))),3) preference(1,(1,2),1,for(atom(hasCategory(1))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(60,better,79) output(60,better,31) output(72,better,51) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,46) output(7,better,51) output(7,better,72) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(18,worse,79) output(18,worse,31) output(46,worse,79) output(46,worse,31) output(46,worse,60) output(51,worse,79) output(51,worse,31) output(72,worse,90) output(72,worse,31) output(72,worse,79) output(39,worse,60) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,32) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(32,worse,52) output(78,worse,33) output(78,worse,52) output(42,eq,90) output(79,eq,31) output(32,eq,39) output(33,eq,52) output(78,eq,23) output(7,eq,79) output(7,eq,31) output(39,eq,4)
Optimization: 32 14
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasCategory(3))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),7) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasPrep(6))),3) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasPrep(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(72,better,90) output(72,better,31) output(72,better,79) output(4,better,79) output(39,better,79) output(39,better,31) output(39,better,4) output(39,better,60) output(42,better,79) output(42,better,31) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,31) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,33) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(60,worse,79) output(60,worse,31) output(72,worse,51) output(4,worse,46) output(39,worse,46) output(42,worse,90) output(42,worse,51) output(79,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,79) output(7,worse,46) output(7,worse,31) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(7,worse,18) output(33,worse,46) output(33,worse,32) output(52,worse,46) output(90,worse,51) output(33,eq,52) output(78,eq,23) output(4,eq,31)
Optimization: 31 14
Answer: 14
preference(1,(1,1),1,for(atom(hasIngredient(10))),3) preference(1,(1,2),1,for(atom(hasCategory(1))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(18,better,79) output(51,better,79) output(60,better,79) output(60,better,31) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,72) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(18,worse,31) output(46,worse,79) output(46,worse,31) output(46,worse,60) output(72,worse,90) output(39,worse,60) output(79,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,32) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(32,worse,52) output(78,worse,33) output(78,worse,52) output(42,eq,90) output(32,eq,39) output(33,eq,52) output(51,eq,31) output(78,eq,23) output(39,eq,4)
Optimization: 26 14
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(10))),3) preference(1,(1,2),1,for(atom(hasCategory(1))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasCost(1))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasDifficulty(2))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,10),1,for(atom(hasPrep(6))),8) preference(1,(1,11),1,for(atom(hasCost(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(18,better,79) output(18,better,31) output(46,better,79) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18) output(18,worse,51) output(46,worse,31) output(46,worse,60) output(39,worse,60) output(79,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,90) output(7,worse,52) output(7,worse,39) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,60) output(7,worse,4) output(32,worse,52) output(78,worse,33) output(78,worse,52) output(78,worse,60) output(42,eq,90) output(32,eq,39) output(33,eq,52) output(78,eq,23) output(39,eq,4)
Optimization: 24 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasCategory(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasDifficulty(2))),4) preference(1,(1,6),1,for(atom(hasPrep(6))),7) preference(1,(1,7),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasCategory(3))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasCategory(4))),7) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(39,better,60) output(42,better,90) output(42,better,51) output(42,better,79) output(42,better,31) output(79,better,31) output(7,better,90) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,60) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,79) output(90,better,31) output(18,worse,51) output(60,worse,79) output(60,worse,31) output(7,worse,23) output(7,worse,33) output(7,worse,52) output(7,worse,39) output(7,worse,51) output(7,worse,32) output(7,worse,72) output(7,worse,42) output(7,worse,4) output(7,worse,18) output(78,worse,33) output(78,worse,23) output(78,worse,72) output(78,worse,42) output(90,worse,51) output(90,worse,18) output(39,eq,4)
Optimization: 20 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCategory(4))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasCost(2))),4) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasIngredient(7))),1) preference(1,(1,9),1,for(atom(hasCategory(1))),3) preference(1,(1,10),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasIngredient(12))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,31) output(4,better,79) output(39,better,79) output(39,better,31) output(39,better,60) output(42,better,90) output(42,better,51) output(42,better,79) output(42,better,31) output(7,better,23) output(7,better,33) output(7,better,90) output(7,better,52) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,32) output(7,better,42) output(7,better,60) output(7,better,4) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,60) output(78,better,4) output(90,better,79) output(90,better,31) output(60,worse,31) output(4,worse,46) output(39,worse,46) output(79,worse,31) output(7,worse,72) output(23,worse,72) output(78,worse,7) output(78,worse,33) output(78,worse,23) output(78,worse,72) output(90,worse,18) output(60,eq,79) output(90,eq,51) output(52,eq,46) output(39,eq,4) output(78,eq,42) output(78,eq,32) output(78,eq,18)
Optimization: 18 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(2))),7) preference(1,(1,2),1,for(atom(hasCategory(4))),7) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),7) preference(1,(1,8),1,for(atom(hasIngredient(7))),1) preference(1,(1,9),1,for(atom(hasCategory(1))),3) preference(1,(1,10),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasIngredient(12))),3) preference(1,(1,12),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(39,better,60) output(42,better,90) output(42,better,51) output(42,better,79) output(42,better,31) output(79,better,31) output(7,better,23) output(7,better,33) output(7,better,90) output(7,better,52) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,32) output(7,better,42) output(7,better,60) output(7,better,4) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,60) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,60) output(78,better,4) output(90,better,79) output(90,better,31) output(39,worse,4) output(7,worse,72) output(23,worse,72) output(78,worse,7) output(78,worse,33) output(78,worse,23) output(78,worse,72) output(78,worse,42) output(90,worse,18) output(60,eq,79) output(90,eq,51) output(52,eq,4) output(23,eq,42) output(78,eq,32) output(78,eq,18)
Optimization: 15 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(3))),5) preference(1,(1,7),1,for(atom(hasCost(1))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasCategory(1))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),7) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(39,better,4) output(39,better,60) output(42,better,79) output(42,better,31) output(7,better,90) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,42) output(7,better,60) output(7,better,4) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,33) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,79) output(90,better,31) output(7,worse,23) output(7,worse,33) output(7,worse,52) output(7,worse,32) output(7,worse,72) output(7,worse,18) output(33,worse,32) output(78,worse,23) output(90,worse,18) output(42,eq,90) output(79,eq,31) output(90,eq,51) output(42,eq,51) output(7,eq,39)
Optimization: 14 14
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasCategory(1))),7) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(4))),6) preference(1,(1,8),1,for(atom(hasIngredient(3))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,12),1,for(atom(hasCategory(3))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasIngredient(7))),2) preference(1,less(weight)) output(18,better,51) output(18,better,79) output(18,better,31) output(46,better,79) output(46,better,31) output(46,better,60) output(51,better,79) output(51,better,31) output(60,better,79) output(60,better,31) output(72,better,90) output(72,better,51) output(72,better,31) output(72,better,79) output(4,better,46) output(4,better,31) output(4,better,79) output(39,better,46) output(39,better,79) output(39,better,31) output(39,better,4) output(39,better,60) output(42,better,90) output(42,better,51) output(42,better,79) output(42,better,31) output(79,better,31) output(7,better,23) output(7,better,33) output(7,better,90) output(7,better,52) output(7,better,39) output(7,better,79) output(7,better,46) output(7,better,31) output(7,better,51) output(7,better,32) output(7,better,72) output(7,better,42) output(7,better,60) output(7,better,4) output(7,better,18) output(23,better,90) output(23,better,31) output(23,better,79) output(23,better,51) output(23,better,72) output(23,better,42) output(23,better,18) output(32,better,52) output(32,better,39) output(32,better,46) output(32,better,79) output(32,better,31) output(33,better,52) output(33,better,39) output(33,better,79) output(33,better,46) output(33,better,31) output(33,better,32) output(33,better,4) output(33,better,60) output(52,better,39) output(52,better,46) output(52,better,79) output(52,better,31) output(52,better,4) output(52,better,60) output(78,better,7) output(78,better,33) output(78,better,23) output(78,better,52) output(78,better,46) output(78,better,39) output(78,better,79) output(78,better,51) output(78,better,90) output(78,better,31) output(78,better,72) output(78,better,42) output(78,better,32) output(78,better,60) output(78,better,4) output(78,better,18) output(90,better,51) output(90,better,79) output(90,better,31) output(90,better,18)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.118 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 20+
  Optimum    : unknown
Optimization : 0 14
Calls        : 1
Time         : 597.512s (Solving: 593.99s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2379.090s
Threads      : 4        (Winner: 4)

Choices      : 15686538 (Domain: 244600)
Conflicts    : 7801458  (Analyzed: 7801456)
Restarts     : 6835     (Average: 1141.40 Last: 481896)
Model-Level  : 133.1   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 7826177  (Deleted: 7434698)
  Binary     : 468      (Ratio:   0.01%)
  Ternary    : 2318     (Ratio:   0.03%)
  Conflict   : 7801456  (Average Length:  544.9 Ratio:  99.68%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 24721    (Average Length:   54.4 Ratio:   0.32%) 
  Distributed: 8279     (Ratio:   0.11% Average LBD: 3.66) 
  Integrated : 24837    (Ratio: 300.00% Unit: 41 Average Jumps: 6.73)
Backjumps    : 7801456  (Average:  1.78 Max: 853 Sum: 13858058)
  Executed   : 7801455  (Average:  1.78 Max: 853 Sum: 13857975 Ratio: 100.00%)
  Bounded    : 1        (Average: 83.00 Max:  83 Sum:     83 Ratio:   0.00%)

Rules        : 929638  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 19242   
Bodies       : 19497   
  Sum        : 176     
  Count      : 14      
Equivalences : 8930     (Atom=Atom: 893 Body=Body: 366 Other: 7671)
Tight        : Yes
Variables    : 17287    (Eliminated:    0 Frozen: 7963)
Constraints  : 946676   (Binary:  98.6% Ternary:   1.0% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(2)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(6)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(1)) ; 
  3 :: atom(hasIngredient(5)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(5)) ; 
  3 :: atom(hasPrep(3)) ; 
  3 :: atom(hasIngredient(2)) ; 
  3 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(1)) ; 
  3 :: atom(hasIngredient(6)) ; 
  3 :: atom(hasCategory(2)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrep(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(11)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(5)) ; 
  3 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  3 :: atom(hasIngredient(2)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(11)) ; 
  3 :: atom(hasPrep(3)) ; 
  3 :: atom(hasIngredient(6)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(5)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(5)) ; 
  3 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(11)) ; 
  3 :: atom(hasCategory(2)) ; 
  3 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasPrep(3)) ; 
  3 :: atom(hasIngredient(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(6)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(4)) ; 
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasIngredient(7)) 
}.
