asprin_vL version 1.0
Reading from stdin
-:1344:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1369:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1450:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1724:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1901:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2102:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2106:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2106:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2112:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2211:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2237:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2357:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2391:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2413:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1261:1-16: info: no atoms over signature occur in program:
  output/3

-:1253:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1254:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1255:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1256:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1286:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,6),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(8))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasPrep(4))),()) preference(1,(1,2),4,for(atom(hasCategory(4))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasDifficulty(4))),()) preference(1,(1,5),4,for(atom(hasIngredient(5))),()) preference(1,aso) output(10,better,21) output(42,better,47) output(18,better,47) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(89,better,47) output(62,better,47) output(58,better,47) output(8,better,47) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(66,better,32) output(67,better,7) output(10,better,39) output(50,better,32) output(67,better,32) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(10,better,7) output(89,better,7) output(10,better,61) output(10,better,18) output(62,better,32) output(58,better,32) output(8,better,32) output(42,better,32) output(10,better,84) output(89,better,32) output(10,better,32) output(21,worse,58) output(21,worse,8) output(47,worse,67) output(21,worse,62) output(21,worse,67) output(47,worse,50) output(21,worse,89) output(21,worse,42) output(47,worse,66) output(21,worse,66) output(21,worse,50) output(47,worse,61) output(21,worse,39) output(47,worse,84) output(21,worse,18) output(21,worse,61) output(21,worse,84) output(39,eq,67) output(67,eq,50) output(84,eq,66) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(61,eq,67) output(89,eq,42) output(8,eq,89) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(62,eq,67) output(8,eq,67) output(42,eq,50) output(62,eq,50) output(8,eq,50) output(67,eq,66) output(39,eq,66) output(61,eq,66) output(62,eq,42) output(8,eq,42) output(42,eq,67) output(18,eq,67) output(89,eq,67) output(21,eq,47) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(8,eq,66) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(42,eq,61) output(62,eq,18) output(67,eq,84) output(8,eq,39) output(62,eq,84) output(8,eq,18) output(89,eq,61) output(47,eq,7) output(21,eq,7) output(62,eq,61) output(8,eq,61) output(47,eq,32) output(21,eq,32) output(8,eq,84) output(42,eq,84) output(89,eq,84)
Optimization: 79 6
Answer: 2
preference(1,(1,6),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCategory(5))),()) preference(1,(1,3),3,for(atom(hasIngredient(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,(1,1),4,for(atom(hasIngredient(4))),()) preference(1,(1,2),4,for(atom(hasCategory(4))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(1))),()) preference(1,(1,5),4,for(atom(hasPrep(4))),()) preference(1,aso) output(10,better,21) output(39,better,67) output(42,better,47) output(61,better,67) output(18,better,47) output(10,better,8) output(62,better,67) output(10,better,58) output(8,better,67) output(10,better,62) output(10,better,89) output(89,better,47) output(62,better,47) output(42,better,67) output(18,better,67) output(89,better,67) output(58,better,47) output(8,better,47) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(66,better,32) output(10,better,39) output(50,better,32) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(10,better,7) output(89,better,7) output(10,better,61) output(10,better,18) output(62,better,32) output(58,better,32) output(8,better,32) output(42,better,32) output(10,better,84) output(89,better,32) output(10,better,32) output(21,worse,58) output(67,worse,50) output(21,worse,8) output(21,worse,62) output(47,worse,50) output(67,worse,66) output(21,worse,89) output(21,worse,42) output(47,worse,66) output(21,worse,66) output(21,worse,50) output(47,worse,61) output(67,worse,84) output(21,worse,39) output(47,worse,84) output(21,worse,18) output(21,worse,61) output(21,worse,84) output(84,eq,66) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(89,eq,42) output(8,eq,89) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(42,eq,50) output(62,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(62,eq,42) output(8,eq,42) output(21,eq,47) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(8,eq,66) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(42,eq,61) output(62,eq,18) output(8,eq,39) output(62,eq,84) output(8,eq,18) output(89,eq,61) output(47,eq,7) output(21,eq,7) output(62,eq,61) output(8,eq,61) output(47,eq,32) output(21,eq,32) output(8,eq,84) output(42,eq,84) output(89,eq,84)
Optimization: 74 6
Answer: 3
preference(1,(1,5),4,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasIngredient(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(6))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,(1,2),4,for(atom(hasCategory(4))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(8))),()) preference(1,aso) output(10,better,21) output(42,better,47) output(61,better,67) output(18,better,47) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(89,better,47) output(42,better,67) output(18,better,67) output(89,better,67) output(58,better,47) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(66,better,32) output(67,better,7) output(10,better,39) output(50,better,32) output(67,better,32) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(10,better,84) output(89,better,32) output(10,better,32) output(21,worse,58) output(67,worse,50) output(62,worse,89) output(8,worse,89) output(39,worse,50) output(47,worse,50) output(62,worse,50) output(8,worse,50) output(67,worse,66) output(39,worse,66) output(21,worse,89) output(62,worse,42) output(8,worse,42) output(21,worse,42) output(47,worse,66) output(62,worse,66) output(8,worse,66) output(21,worse,66) output(21,worse,50) output(47,worse,61) output(62,worse,18) output(67,worse,84) output(47,worse,84) output(62,worse,84) output(8,worse,18) output(21,worse,18) output(62,worse,61) output(8,worse,61) output(21,worse,61) output(8,worse,84) output(21,worse,84) output(39,eq,67) output(84,eq,66) output(8,eq,62) output(18,eq,42) output(89,eq,42) output(50,eq,66) output(61,eq,50) output(62,eq,67) output(8,eq,67) output(42,eq,50) output(61,eq,66) output(21,eq,47) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(42,eq,61) output(8,eq,39) output(89,eq,61) output(42,eq,84) output(89,eq,84)
Optimization: 73 6
Answer: 4
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,2),0,for(atom(hasIngredient(10))),()) preference(1,(1,3),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),1,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),4,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasDifficulty(2))),()) preference(1,(1,3),3,for(atom(hasPrep(4))),()) preference(1,(1,6),3,for(atom(hasPrepTime(1))),()) preference(1,aso) output(10,better,21) output(62,better,89) output(18,better,47) output(8,better,89) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(62,better,42) output(8,better,42) output(62,better,47) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(10,better,42) output(18,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(10,better,66) output(10,better,50) output(10,better,67) output(62,better,39) output(50,better,84) output(42,better,61) output(62,better,18) output(67,better,84) output(58,better,39) output(8,better,39) output(10,better,39) output(62,better,84) output(50,better,32) output(67,better,32) output(58,better,18) output(8,better,18) output(62,better,7) output(58,better,7) output(8,better,7) output(10,better,7) output(62,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(62,better,32) output(8,better,32) output(21,better,32) output(8,better,84) output(10,better,84) output(10,better,32) output(67,worse,50) output(21,worse,8) output(61,worse,67) output(47,worse,67) output(21,worse,62) output(61,worse,50) output(47,worse,50) output(21,worse,50) output(89,worse,50) output(47,worse,7) output(47,worse,32) output(8,eq,62) output(39,eq,66)
Optimization: 64 6
Answer: 5
preference(1,(1,1),0,for(atom(hasPrep(6))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,aso) output(61,better,67) output(89,better,42) output(50,better,66) output(62,better,67) output(58,better,67) output(8,better,67) output(21,better,67) output(62,better,42) output(58,better,42) output(8,better,42) output(89,better,47) output(62,better,47) output(89,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(10,better,67) output(62,better,39) output(50,better,84) output(66,better,32) output(89,better,18) output(62,better,18) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(50,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(89,better,61) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(67,worse,50) output(39,worse,50) output(61,worse,50) output(47,worse,50) output(42,worse,50) output(67,worse,66) output(39,worse,66) output(47,worse,66) output(42,worse,66) output(18,worse,66) output(18,worse,50) output(47,worse,61) output(67,worse,7) output(42,worse,61) output(67,worse,84) output(47,worse,84) output(47,worse,7) output(42,worse,7) output(42,worse,84) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(47,eq,67) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(10,eq,58) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(42,eq,67) output(18,eq,67) output(21,eq,50) output(10,eq,50) output(89,eq,50) output(67,eq,32) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(47,eq,32) output(42,eq,32)
Optimization: 57 2
Answer: 6
preference(1,(1,1),0,for(atom(hasCategory(1))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(atom(hasCategory(2))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),4,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(58,better,62) output(39,better,67) output(21,better,8) output(18,better,42) output(47,better,67) output(58,better,89) output(21,better,62) output(10,better,8) output(39,better,50) output(58,better,67) output(21,better,67) output(47,better,50) output(58,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(58,better,42) output(42,better,67) output(18,better,67) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(58,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(10,better,67) output(50,better,84) output(66,better,32) output(47,better,61) output(42,better,61) output(67,better,84) output(47,better,84) output(62,better,84) output(50,better,32) output(67,better,32) output(58,better,61) output(21,better,61) output(10,better,61) output(47,better,32) output(62,better,32) output(58,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(21,better,84) output(10,better,84) output(42,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(84,worse,66) output(8,worse,62) output(42,worse,47) output(89,worse,42) output(8,worse,50) output(89,worse,47) output(62,worse,47) output(8,worse,47) output(62,worse,39) output(89,worse,18) output(67,worse,7) output(62,worse,18) output(8,worse,39) output(8,worse,18) output(42,worse,7) output(62,worse,7) output(8,worse,7) output(89,worse,7) output(10,eq,21) output(21,eq,58) output(61,eq,67) output(18,eq,47) output(10,eq,58) output(62,eq,50) output(89,eq,67) output(58,eq,47) output(21,eq,47) output(10,eq,47) output(58,eq,39) output(21,eq,39) output(10,eq,39) output(58,eq,18) output(21,eq,18) output(89,eq,61) output(47,eq,7) output(58,eq,7) output(21,eq,7) output(10,eq,7) output(10,eq,18)
Optimization: 56 5
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,3),0,for(atom(hasPrep(1))),()) preference(1,(1,5),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(21,better,58) output(67,better,50) output(8,better,62) output(18,better,42) output(61,better,67) output(47,better,67) output(89,better,42) output(8,better,89) output(21,better,62) output(61,better,50) output(10,better,58) output(8,better,67) output(21,better,67) output(47,better,50) output(8,better,50) output(39,better,66) output(61,better,66) output(10,better,62) output(62,better,42) output(58,better,42) output(8,better,42) output(18,better,67) output(89,better,67) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(47,better,61) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(8,better,18) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(8,better,61) output(47,better,32) output(8,better,32) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,84) output(21,worse,8) output(62,worse,89) output(42,worse,47) output(18,worse,47) output(58,worse,89) output(10,worse,8) output(89,worse,47) output(62,worse,47) output(58,worse,47) output(8,worse,47) output(21,worse,47) output(10,worse,47) output(50,worse,84) output(66,worse,32) output(42,worse,61) output(62,worse,18) output(50,worse,32) output(67,worse,32) output(58,worse,18) output(62,worse,61) output(58,worse,61) output(62,worse,32) output(58,worse,32) output(42,worse,32) output(10,eq,21) output(58,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,39) output(89,eq,18) output(67,eq,84) output(58,eq,39) output(21,eq,18) output(89,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(21,eq,32) output(89,eq,32) output(10,eq,32)
Optimization: 55 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),4,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,aso) output(21,better,58) output(67,better,50) output(8,better,62) output(18,better,42) output(47,better,67) output(18,better,47) output(89,better,42) output(8,better,89) output(21,better,62) output(10,better,58) output(8,better,67) output(21,better,67) output(47,better,50) output(8,better,50) output(39,better,66) output(61,better,66) output(10,better,62) output(62,better,42) output(58,better,42) output(8,better,42) output(18,better,67) output(89,better,67) output(8,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(47,better,61) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(8,better,32) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,84) output(21,worse,8) output(62,worse,89) output(42,worse,47) output(58,worse,89) output(10,worse,8) output(62,worse,47) output(58,worse,47) output(50,worse,84) output(66,worse,32) output(89,worse,18) output(62,worse,18) output(50,worse,32) output(67,worse,32) output(58,worse,18) output(8,worse,18) output(21,worse,18) output(10,worse,18) output(62,worse,32) output(58,worse,32) output(42,worse,32) output(10,eq,21) output(58,eq,62) output(21,eq,89) output(10,eq,89) output(89,eq,47) output(21,eq,47) output(10,eq,47) output(62,eq,39) output(42,eq,61) output(67,eq,84) output(58,eq,39) output(47,eq,32) output(21,eq,32) output(89,eq,32) output(10,eq,32)
Optimization: 52 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),4,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(21,better,58) output(67,better,50) output(8,better,62) output(18,better,42) output(47,better,67) output(89,better,42) output(8,better,89) output(21,better,62) output(10,better,58) output(8,better,67) output(21,better,67) output(47,better,50) output(8,better,50) output(39,better,66) output(61,better,66) output(10,better,62) output(62,better,42) output(58,better,42) output(8,better,42) output(18,better,67) output(89,better,67) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(47,better,61) output(67,better,84) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(8,better,18) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(47,better,32) output(8,better,32) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,84) output(21,worse,8) output(62,worse,89) output(42,worse,47) output(18,worse,47) output(58,worse,89) output(10,worse,8) output(89,worse,47) output(62,worse,47) output(58,worse,47) output(8,worse,47) output(21,worse,47) output(10,worse,47) output(66,worse,32) output(62,worse,18) output(50,worse,32) output(67,worse,32) output(58,worse,18) output(62,worse,32) output(58,worse,32) output(42,worse,32) output(10,eq,21) output(58,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(42,eq,61) output(58,eq,39) output(21,eq,18) output(10,eq,18) output(21,eq,32) output(89,eq,32) output(10,eq,32)
Optimization: 51 6
Progression : [ 1;51] (Error: 50)
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(10,better,21) output(21,better,58) output(67,better,50) output(8,better,62) output(18,better,42) output(18,better,47) output(89,better,42) output(8,better,89) output(21,better,62) output(10,better,58) output(8,better,67) output(8,better,50) output(39,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(89,better,47) output(62,better,47) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(10,better,67) output(50,better,84) output(47,better,61) output(42,better,61) output(67,better,84) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(8,better,18) output(21,better,18) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,32) output(10,better,32) output(21,worse,8) output(10,worse,8) output(66,worse,32) output(58,eq,62) output(42,eq,47) output(61,eq,66) output(62,eq,39) output(62,eq,18) output(58,eq,39) output(58,eq,18) output(47,eq,32) output(42,eq,32)
Optimization: 41 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrep(6))),()) preference(1,(1,3),0,for(atom(hasPrep(2))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),4,for(atom(hasPrep(6))),()) preference(1,aso) output(21,better,58) output(67,better,50) output(8,better,62) output(18,better,42) output(18,better,47) output(89,better,42) output(8,better,89) output(21,better,62) output(10,better,58) output(8,better,67) output(21,better,67) output(8,better,50) output(39,better,66) output(10,better,62) output(62,better,42) output(58,better,42) output(8,better,42) output(89,better,47) output(62,better,47) output(18,better,67) output(89,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(50,better,84) output(47,better,61) output(42,better,61) output(67,better,84) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(62,better,84) output(8,better,18) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(42,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(21,worse,8) output(62,worse,89) output(58,worse,89) output(10,worse,8) output(66,worse,32) output(62,worse,18) output(58,worse,18) output(10,eq,21) output(58,eq,62) output(42,eq,47) output(61,eq,66) output(21,eq,89) output(10,eq,89) output(62,eq,39) output(89,eq,18) output(58,eq,39) output(21,eq,18) output(10,eq,18) output(47,eq,32) output(42,eq,32)
Optimization: 38 6
Answer: 12
preference(1,(1,1),0,for(atom(hasIngredient(12))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(7))),()) preference(1,(1,4),3,for(atom(hasCost(3))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,(1,4),4,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(84,better,66) output(8,better,62) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(50,better,66) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(58,better,42) output(8,better,42) output(42,better,67) output(18,better,67) output(89,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(10,better,67) output(42,better,61) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(50,better,32) output(67,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(89,better,61) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(42,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(67,worse,50) output(66,worse,32) output(67,worse,84) output(21,eq,58) output(21,eq,8) output(62,eq,42)
Optimization: 27 6
Progression : [ 2;27] (Error: 12.5)
Progression : [ 3;27] (Error: 8)
Answer: 13
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasCategory(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(4))),()) preference(1,(1,1),4,for(atom(hasIngredient(7))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,(1,3),4,for(atom(hasPrep(2))),()) preference(1,(1,5),4,for(atom(hasCost(3))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(21,better,58) output(58,better,62) output(39,better,67) output(84,better,66) output(8,better,62) output(18,better,42) output(61,better,67) output(47,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(39,better,50) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(62,better,47) output(42,better,67) output(18,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(66,better,32) output(47,better,61) output(42,better,61) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(67,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(10,better,32) output(62,worse,39) output(67,worse,84) output(42,eq,47)
Optimization: 26 6
Answer: 14
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(4))),()) preference(1,(1,1),4,for(atom(hasIngredient(7))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,(1,3),4,for(atom(hasPrep(2))),()) preference(1,(1,5),4,for(atom(hasCost(3))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(21,better,58) output(58,better,62) output(39,better,67) output(84,better,66) output(21,better,8) output(8,better,62) output(18,better,42) output(61,better,67) output(47,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(39,better,50) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(62,better,47) output(42,better,67) output(18,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(66,better,32) output(47,better,61) output(42,better,61) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(67,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(10,better,32) output(62,worse,39) output(67,worse,84) output(42,eq,47)
Optimization: 25 6
Answer: 15
preference(1,(1,1),0,for(atom(hasPrepTime(2))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(10))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(4))),()) preference(1,(1,1),4,for(atom(hasIngredient(7))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,(1,5),4,for(atom(hasCost(3))),()) preference(1,(1,6),4,for(atom(hasPrep(2))),()) preference(1,aso) output(21,better,58) output(58,better,62) output(39,better,67) output(84,better,66) output(21,better,8) output(8,better,62) output(62,better,89) output(18,better,42) output(61,better,67) output(47,better,67) output(18,better,47) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(39,better,50) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(62,better,47) output(42,better,67) output(18,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(66,better,32) output(47,better,61) output(42,better,61) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(67,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(10,better,32) output(62,worse,39) output(67,worse,84) output(42,eq,47)
Optimization: 24 6
Progression : [ 4;24] (Error: 5)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(atom(hasIngredient(7))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasCost(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,(1,1),4,for(atom(hasDifficulty(4))),()) preference(1,(1,2),4,for(atom(hasPrep(5))),()) preference(1,(1,3),4,for(atom(hasPrep(5))),()) preference(1,(1,5),4,for(atom(hasIngredient(12))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(39,better,67) output(84,better,66) output(8,better,62) output(47,better,67) output(89,better,42) output(58,better,89) output(8,better,89) output(21,better,62) output(10,better,8) output(50,better,66) output(39,better,50) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(67,better,66) output(39,better,66) output(61,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(58,better,42) output(8,better,42) output(42,better,67) output(18,better,67) output(89,better,67) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(66,better,32) output(89,better,18) output(47,better,61) output(42,better,61) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(62,better,84) output(50,better,32) output(67,better,32) output(58,better,18) output(8,better,18) output(21,better,18) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(42,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(62,worse,89) output(42,worse,47) output(61,worse,67) output(18,worse,47) output(61,worse,50) output(62,worse,47) output(21,eq,58) output(67,eq,50) output(21,eq,8) output(18,eq,42) output(62,eq,42) output(62,eq,39) output(50,eq,84) output(62,eq,18) output(67,eq,84)
Optimization: 21 6
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),4,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,1),3,for(atom(hasCost(1))),()) preference(1,(1,2),3,for(atom(hasDifficulty(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,1),4,for(atom(hasPrep(3))),()) preference(1,(1,2),4,for(atom(hasIngredient(7))),()) preference(1,(1,3),4,for(atom(hasPrep(2))),()) preference(1,(1,5),4,for(atom(hasDifficulty(1))),()) preference(1,(1,6),4,for(atom(hasCost(3))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(39,better,67) output(67,better,50) output(8,better,62) output(18,better,42) output(42,better,47) output(61,better,67) output(18,better,47) output(89,better,42) output(58,better,89) output(8,better,89) output(10,better,8) output(39,better,50) output(61,better,50) output(62,better,67) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(42,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(39,better,66) output(61,better,66) output(10,better,62) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(89,better,47) output(62,better,47) output(42,better,67) output(18,better,67) output(89,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(62,better,39) output(50,better,84) output(67,better,7) output(67,better,84) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(47,better,84) output(62,better,84) output(58,better,18) output(8,better,18) output(89,better,61) output(47,better,7) output(42,better,7) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(42,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(21,worse,58) output(21,worse,8) output(47,worse,61) output(50,worse,32) output(62,eq,89) output(47,eq,67) output(10,eq,58) output(42,eq,61) output(67,eq,32) output(21,eq,18) output(47,eq,32)
Optimization: 20 6
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),4,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasPrep(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,3),3,for(atom(hasCategory(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasPrepTime(3))),()) preference(1,(1,1),4,for(atom(hasCategory(2))),()) preference(1,(1,2),4,for(atom(hasPrepTime(3))),()) preference(1,(1,4),4,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,21) output(58,better,62) output(39,better,67) output(84,better,66) output(8,better,62) output(62,better,89) output(18,better,42) output(61,better,67) output(47,better,67) output(18,better,47) output(89,better,42) output(58,better,89) output(8,better,89) output(10,better,8) output(39,better,50) output(62,better,67) output(10,better,58) output(58,better,67) output(8,better,67) output(21,better,67) output(47,better,50) output(62,better,50) output(58,better,50) output(8,better,50) output(39,better,66) output(10,better,62) output(21,better,89) output(10,better,89) output(62,better,42) output(58,better,42) output(8,better,42) output(89,better,47) output(62,better,47) output(42,better,67) output(18,better,67) output(89,better,67) output(58,better,47) output(8,better,47) output(21,better,47) output(10,better,47) output(21,better,42) output(10,better,42) output(47,better,66) output(42,better,66) output(18,better,66) output(89,better,66) output(62,better,66) output(58,better,66) output(8,better,66) output(21,better,66) output(10,better,66) output(21,better,50) output(10,better,50) output(18,better,50) output(89,better,50) output(10,better,67) output(62,better,39) output(66,better,32) output(89,better,18) output(47,better,61) output(42,better,61) output(62,better,18) output(58,better,39) output(8,better,39) output(21,better,39) output(10,better,39) output(62,better,84) output(58,better,18) output(8,better,18) output(21,better,18) output(89,better,61) output(62,better,7) output(58,better,7) output(8,better,7) output(21,better,7) output(10,better,7) output(89,better,7) output(62,better,61) output(58,better,61) output(8,better,61) output(21,better,61) output(10,better,61) output(10,better,18) output(47,better,32) output(62,better,32) output(58,better,32) output(8,better,32) output(21,better,32) output(42,better,32) output(58,better,84) output(8,better,84) output(21,better,84) output(10,better,84) output(89,better,84) output(89,better,32) output(10,better,32) output(21,worse,58) output(21,worse,8) output(42,worse,47) output(67,worse,66) output(61,worse,66) output(67,worse,84) output(67,worse,32) output(42,worse,84) output(21,eq,62)
Optimization: 19 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.032 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 19 6
Bounds       : [4;19] [0;6]
Calls        : 1
Time         : 597.438s (Solving: 565.40s 1st Model: 1.78s Unsat: 0.00s)
CPU Time     : 2292.246s
Threads      : 4        (Winner: 4)

Choices      : 11186442 (Domain: 243656)
Conflicts    : 1027084  (Analyzed: 1027080)
Restarts     : 1178     (Average: 871.88 Last: 90520)
Model-Level  : 701.5   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 1540891  (Deleted: 1251131)
  Binary     : 20525    (Ratio:   1.33%)
  Ternary    : 71981    (Ratio:   4.67%)
  Conflict   : 1027080  (Average Length:  612.7 Ratio:  66.65%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 513811   (Average Length:   66.6 Ratio:  33.35%) 
  Distributed: 171282   (Ratio:  16.68% Average LBD: 3.33) 
  Integrated : 513832   (Ratio: 299.99% Unit: 6494 Average Jumps: 141.40)
Backjumps    : 1027080  (Average:  9.69 Max: 36755 Sum: 9950369)
  Executed   : 1025553  (Average:  9.68 Max: 36755 Sum: 9944243 Ratio:  99.94%)
  Bounded    : 1527     (Average:  4.01 Max: 114 Sum:   6126 Ratio:   0.06%)

Rules        : 15263062
  Choice     : 31      
  Minimize   : 2       
Atoms        : 3002266 
Bodies       : 3546778 
  Count      : 4170    
Equivalences : 9314758  (Atom=Atom: 2691620 Body=Body: 2941754 Other: 3681384)
Tight        : Yes
Variables    : 292243   (Eliminated:    0 Frozen: 209833)
Constraints  : 12507977 (Binary:  97.7% Ternary:   2.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(4)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasCategory(5)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(5)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(4)) ; 
  atom(hasIngredient(8)) >> atom(hasDifficulty(4)) >> atom(hasCategory(5)) >> atom(hasCategory(4)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(1)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) >> not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) >> atom(hasPrep(5)) ; 
  atom(hasIngredient(8)) >> atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(4)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> atom(hasIngredient(1)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasIngredient(6)) >> atom(hasIngredient(8)) ; 
  atom(hasIngredient(6)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasIngredient(6)) >> not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(6))  >> not atom(hasCategory(3))  >> not atom(hasPrep(2))  || atom(hasIngredient(7)) ; 
  not atom(hasDifficulty(1))  >> atom(hasIngredient(7)) >> atom(hasDifficulty(2)) >> not atom(hasIngredient(6))  || atom(hasIngredient(10)) ; 
  not atom(hasPrep(0))  >> not atom(hasIngredient(7))  >> atom(hasPrep(4)) || atom(hasPrepTime(2)) ; 
  atom(hasIngredient(4)) >> atom(hasIngredient(10)) >> not atom(hasPrep(2))  || not atom(hasPrep(7))  ; 
  not atom(hasPrep(7))  || atom(hasPrep(6)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(6)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(1))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrep(6))  || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasDifficulty(1)) >> not atom(hasIngredient(10))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  || atom(hasCategory(1)) ; 
  atom(hasCost(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrepTime(3)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(7))  >> not atom(hasCategory(2))  || not atom(hasIngredient(3))  ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(2)) >> not atom(hasCategory(2))  || atom(hasCategory(2)) ; 
  not atom(hasIngredient(7))  >> not atom(hasPrep(6))  || not atom(hasIngredient(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasPrep(1))  >> not atom(hasCategory(2))  || not atom(hasIngredient(9))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(5))  || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(3)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(7))  || atom(hasPrep(1)) ; 
  atom(hasCategory(3)) >> atom(hasIngredient(3)) || atom(hasCategory(1)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(4))  >> not atom(hasDifficulty(4))  >> not atom(hasCost(1))  || not atom(hasIngredient(7))  ; 
  atom(hasPrep(3)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasPrep(1))  >> not atom(hasCategory(2))  || not atom(hasIngredient(9))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(5))  || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(2))  || not atom(hasCategory(1))  ; 
  atom(hasCost(4)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  not atom(hasCost(2))  >> atom(hasIngredient(3)) || atom(hasCategory(1)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(4))  >> not atom(hasDifficulty(4))  >> not atom(hasCost(1))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasPrep(1))  >> not atom(hasCategory(2))  || not atom(hasIngredient(9))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(5))  || atom(hasPrep(6)) ; 
  atom(hasPrepTime(1)) >> atom(hasIngredient(3)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(2))  || not atom(hasCategory(1))  ; 
  atom(hasPrep(0)) >> atom(hasIngredient(7)) || atom(hasCategory(1)) ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(4))  >> not atom(hasDifficulty(4))  >> not atom(hasCost(1))  || not atom(hasIngredient(7))  ; 
  atom(hasPrep(3)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasPrep(1))  >> not atom(hasCategory(2))  || not atom(hasIngredient(9))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(5))  || atom(hasPrep(6)) ; 
  atom(hasCategory(1)) >> not atom(hasCategory(2))  || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(4)) >> atom(hasPrepTime(1)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(4))  >> not atom(hasDifficulty(4))  >> not atom(hasCost(1))  || not atom(hasIngredient(7))  ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasPrep(1))  >> not atom(hasCategory(2))  || not atom(hasIngredient(9))  ; 
  not atom(hasIngredient(11))  >> not atom(hasCategory(5))  || atom(hasPrep(6)) ; 
  atom(hasIngredient(12)) >> not atom(hasCost(4))  || atom(hasPrep(2)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(3)) >> not atom(hasCost(2))  >> atom(hasPrep(6)) || not atom(hasPrepTime(1))  ; 
  not atom(hasCategory(5))  >> not atom(hasPrep(4))  >> not atom(hasDifficulty(4))  >> not atom(hasCost(1))  || not atom(hasIngredient(7))  ; 
  atom(hasCategory(5)) >> atom(hasCategory(2)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(3)) >> not atom(hasCategory(1))  || atom(hasIngredient(12)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(9))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(7)) >> atom(hasCategory(1)) >> atom(hasIngredient(7)) || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(6))  >> atom(hasCost(3)) >> atom(hasPrepTime(2)) || not atom(hasCategory(2))  ; 
  atom(hasIngredient(3)) >> atom(hasDifficulty(4)) >> atom(hasCategory(2)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(5)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasCost(2)) >> atom(hasIngredient(7)) || atom(hasPrepTime(2)) ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(7)) || not atom(hasIngredient(9))  ; 
  atom(hasPrep(7)) >> atom(hasCost(4)) >> not atom(hasPrepTime(1))  >> atom(hasPrep(2)) || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(1))  >> not atom(hasCategory(4))  || not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasCategory(2)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(3))  >> atom(hasPrep(2)) || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasCost(2)) >> atom(hasIngredient(7)) || atom(hasPrepTime(2)) ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(7)) || not atom(hasIngredient(9))  ; 
  atom(hasPrep(7)) >> atom(hasCost(4)) >> not atom(hasPrepTime(1))  >> atom(hasPrep(2)) || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(1))  >> not atom(hasCategory(4))  || not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(3))  >> atom(hasPrep(2)) || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> atom(hasCost(2)) >> atom(hasIngredient(7)) || atom(hasPrepTime(2)) ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> atom(hasIngredient(4)) >> atom(hasIngredient(7)) || not atom(hasIngredient(9))  ; 
  atom(hasPrep(7)) >> atom(hasCost(4)) >> not atom(hasPrepTime(1))  >> not atom(hasPrep(1))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(1))  >> not atom(hasCategory(4))  || not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(3))  >> atom(hasPrep(2)) || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> not atom(hasIngredient(11))  >> atom(hasCost(1)) >> atom(hasDifficulty(4)) || not atom(hasCost(5))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(2)) >> not atom(hasCategory(4))  >> atom(hasPrep(5)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(8)) >> not atom(hasDifficulty(3))  >> atom(hasPrep(5)) || not atom(hasIngredient(2))  ; 
  atom(hasIngredient(2)) >> not atom(hasIngredient(5))  >> atom(hasIngredient(7)) >> not atom(hasPrep(7))  || not atom(hasPrep(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(9)) >> atom(hasCategory(1)) >> atom(hasIngredient(12)) || not atom(hasPrep(7))  ; 
  atom(hasPrepTime(3)) >> atom(hasIngredient(8)) >> atom(hasIngredient(12)) || atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> not atom(hasIngredient(11))  >> atom(hasCost(1)) >> atom(hasPrep(3)) || not atom(hasPrep(4))  ; 
  atom(hasCost(3)) >> atom(hasPrep(2)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(7)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(10))  >> atom(hasPrep(2)) || not atom(hasIngredient(1))  ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(5))  >> atom(hasIngredient(7)) >> not atom(hasPrep(7))  || not atom(hasIngredient(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasPrep(7))  >> atom(hasDifficulty(1)) || not atom(hasCategory(5))  ; 
  atom(hasCategory(2)) >> atom(hasCategory(3)) >> not atom(hasPrep(1))  >> atom(hasCost(3)) || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> not atom(hasDifficulty(3))  >> atom(hasCost(3)) >> atom(hasCategory(2)) || not atom(hasIngredient(1))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(6))  >> atom(hasPrep(2)) >> atom(hasPrepTime(3)) || not atom(hasPrep(7))  ; 
  atom(hasCost(4)) >> atom(hasPrep(3)) >> atom(hasCategory(3)) >> not atom(hasPrep(1))  || not atom(hasIngredient(10))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(9)) >> atom(hasIngredient(7)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(10))  ; 
  atom(hasCategory(2)) >> not atom(hasIngredient(3))  >> atom(hasCategory(1)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(8)) >> atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) || not atom(hasPrepTime(3))  
}.
