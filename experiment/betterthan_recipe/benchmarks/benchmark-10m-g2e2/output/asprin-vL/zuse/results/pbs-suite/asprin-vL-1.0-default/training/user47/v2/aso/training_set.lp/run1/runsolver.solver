asprin_vL version 1.0
Reading from stdin
-:1341:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1366:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1447:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1721:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1898:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2099:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2103:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2103:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2109:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2208:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2234:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2354:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2388:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2410:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1258:1-16: info: no atoms over signature occur in program:
  output/3

-:1250:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1251:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1252:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1253:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1283:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,6),4,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,1),3,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(2))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,(1,2),4,for(atom(hasCategory(3))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(8))),()) preference(1,aso) output(25,better,67) output(50,better,67) output(73,better,68) output(65,better,68) output(54,better,67) output(73,better,67) output(65,better,67) output(52,better,67) output(73,better,86) output(54,better,98) output(52,better,98) output(73,better,98) output(19,worse,73) output(68,worse,50) output(98,worse,50) output(19,worse,52) output(63,worse,73) output(68,worse,46) output(98,worse,46) output(86,worse,50) output(100,worse,73) output(28,worse,73) output(22,worse,73) output(19,worse,50) output(86,worse,46) output(63,worse,52) output(100,worse,52) output(28,worse,52) output(19,worse,54) output(63,worse,54) output(100,worse,54) output(63,worse,50) output(100,worse,50) output(28,worse,50) output(28,worse,54) output(22,worse,54) output(88,worse,54) output(22,worse,52) output(88,worse,52) output(19,worse,46) output(63,worse,46) output(100,worse,46) output(28,worse,46) output(22,worse,46) output(22,worse,50) output(88,worse,50) output(88,worse,73) output(88,worse,46) output(63,worse,65) output(68,worse,25) output(100,worse,65) output(22,worse,65) output(19,worse,25) output(63,worse,25) output(100,worse,25) output(22,worse,25) output(88,eq,22) output(28,eq,100) output(100,eq,19) output(86,eq,68) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(54,eq,50) output(73,eq,54) output(65,eq,52) output(28,eq,63) output(28,eq,19) output(73,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(73,eq,46) output(65,eq,54) output(52,eq,50) output(68,eq,67) output(86,eq,67) output(65,eq,46) output(22,eq,68) output(88,eq,68) output(22,eq,67) output(88,eq,67) output(50,eq,25) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 100 6
Answer: 2
preference(1,(1,6),4,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasPrep(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(2))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,(1,2),4,for(atom(hasCategory(3))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(8))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(25,better,67) output(50,better,67) output(73,better,68) output(65,better,68) output(54,better,67) output(73,better,67) output(65,better,67) output(52,better,67) output(73,better,86) output(54,better,98) output(52,better,98) output(73,better,98) output(19,better,98) output(100,worse,19) output(68,worse,50) output(50,worse,46) output(98,worse,50) output(63,worse,73) output(68,worse,46) output(98,worse,46) output(86,worse,50) output(100,worse,73) output(28,worse,19) output(28,worse,73) output(22,worse,73) output(54,worse,46) output(52,worse,46) output(86,worse,46) output(73,worse,46) output(63,worse,52) output(100,worse,52) output(28,worse,52) output(63,worse,54) output(100,worse,54) output(63,worse,50) output(100,worse,50) output(28,worse,50) output(28,worse,54) output(22,worse,54) output(88,worse,54) output(22,worse,52) output(88,worse,52) output(19,worse,46) output(65,worse,46) output(63,worse,46) output(100,worse,46) output(28,worse,46) output(22,worse,46) output(22,worse,50) output(88,worse,50) output(88,worse,73) output(88,worse,46) output(63,worse,65) output(50,worse,25) output(68,worse,25) output(100,worse,65) output(22,worse,65) output(54,worse,25) output(52,worse,25) output(73,worse,25) output(19,worse,25) output(63,worse,25) output(100,worse,25) output(22,worse,25) output(88,eq,22) output(28,eq,100) output(86,eq,68) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(54,eq,50) output(73,eq,54) output(65,eq,52) output(28,eq,63) output(73,eq,50) output(65,eq,50) output(65,eq,54) output(52,eq,50) output(68,eq,67) output(86,eq,67) output(22,eq,68) output(88,eq,68) output(22,eq,67) output(88,eq,67) output(63,eq,98) output(100,eq,98) output(22,eq,86)
Optimization: 99 6
Answer: 3
preference(1,(1,6),4,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasPrep(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(2))),()) preference(1,(1,1),4,for(atom(hasPrep(5))),()) preference(1,(1,2),4,for(atom(hasCategory(3))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(8))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(86,better,68) output(65,better,73) output(25,better,67) output(50,better,67) output(65,better,52) output(73,better,68) output(65,better,68) output(65,better,50) output(65,better,54) output(54,better,67) output(86,better,67) output(73,better,67) output(65,better,67) output(52,better,67) output(65,better,46) output(54,better,98) output(52,better,98) output(73,better,98) output(19,worse,73) output(68,worse,50) output(98,worse,50) output(19,worse,52) output(63,worse,73) output(68,worse,46) output(98,worse,46) output(100,worse,73) output(28,worse,73) output(22,worse,73) output(19,worse,50) output(63,worse,52) output(100,worse,52) output(28,worse,52) output(19,worse,54) output(63,worse,54) output(100,worse,54) output(63,worse,50) output(100,worse,50) output(28,worse,50) output(28,worse,54) output(22,worse,54) output(88,worse,54) output(22,worse,52) output(88,worse,52) output(19,worse,46) output(63,worse,46) output(100,worse,46) output(28,worse,46) output(22,worse,46) output(22,worse,50) output(88,worse,50) output(88,worse,73) output(88,worse,46) output(63,worse,65) output(68,worse,25) output(100,worse,65) output(22,worse,65) output(19,worse,25) output(63,worse,25) output(100,worse,25) output(22,worse,25) output(22,worse,86) output(88,eq,22) output(28,eq,100) output(100,eq,19) output(50,eq,46) output(100,eq,63) output(73,eq,52) output(52,eq,54) output(54,eq,50) output(73,eq,54) output(28,eq,63) output(28,eq,19) output(73,eq,50) output(54,eq,46) output(52,eq,46) output(73,eq,46) output(52,eq,50) output(68,eq,67) output(22,eq,68) output(88,eq,68) output(22,eq,67) output(88,eq,67) output(50,eq,25) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 94 6
Answer: 4
preference(1,(1,6),4,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasPrep(3))),()) preference(1,(1,5),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasDifficulty(4))),()) preference(1,(1,1),4,for(atom(hasCategory(1))),()) preference(1,(1,2),4,for(atom(hasCategory(3))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasCost(5))),()) preference(1,(1,5),4,for(atom(hasCost(5))),()) preference(1,aso) output(68,better,50) output(25,better,67) output(54,better,50) output(68,better,46) output(86,better,50) output(73,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(52,better,50) output(68,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(65,better,67) output(52,better,67) output(65,better,46) output(28,worse,100) output(28,worse,63) output(28,worse,19) output(28,worse,73) output(22,worse,73) output(28,worse,52) output(28,worse,54) output(22,worse,54) output(88,worse,54) output(22,worse,52) output(88,worse,52) output(28,worse,68) output(22,worse,68) output(88,worse,68) output(88,worse,73) output(50,worse,25) output(22,worse,65) output(22,worse,25) output(22,worse,86) output(88,eq,22) output(100,eq,19) output(86,eq,68) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(50,eq,67) output(73,eq,54) output(65,eq,52) output(73,eq,68) output(65,eq,68) output(65,eq,54) output(22,eq,46) output(22,eq,50) output(88,eq,50) output(88,eq,46) output(22,eq,67) output(88,eq,67) output(73,eq,86) output(68,eq,25) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 93 6
Answer: 5
preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,1),3,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasIngredient(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(5))),()) preference(1,(1,1),4,for(atom(hasPrep(3))),()) preference(1,(1,2),4,for(atom(hasDifficulty(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasIngredient(11))),()) preference(1,aso) output(28,better,100) output(68,better,50) output(28,better,63) output(68,better,46) output(28,better,19) output(22,better,100) output(88,better,100) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(22,better,63) output(88,better,63) output(28,better,52) output(68,better,67) output(28,better,67) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(68,better,25) output(22,better,65) output(22,better,25) output(22,better,98) output(22,better,86) output(86,worse,68) output(73,worse,68) output(19,worse,68) output(65,worse,68) output(63,worse,68) output(100,worse,68) output(88,eq,22) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(73,eq,52) output(52,eq,54) output(98,eq,50) output(25,eq,67) output(50,eq,67) output(54,eq,50) output(73,eq,54) output(19,eq,52) output(65,eq,52) output(63,eq,73) output(98,eq,46) output(86,eq,50) output(100,eq,73) output(73,eq,50) output(19,eq,50) output(65,eq,50) output(54,eq,46) output(52,eq,46) output(86,eq,46) output(73,eq,46) output(63,eq,52) output(100,eq,52) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(98,eq,67) output(54,eq,67) output(86,eq,67) output(73,eq,67) output(19,eq,67) output(65,eq,67) output(63,eq,67) output(100,eq,67) output(52,eq,67) output(63,eq,50) output(100,eq,50) output(19,eq,46) output(65,eq,46) output(63,eq,46) output(100,eq,46) output(28,eq,68) output(22,eq,68) output(88,eq,68) output(22,eq,28) output(73,eq,86) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(52,eq,98) output(100,eq,65) output(19,eq,86) output(63,eq,86) output(100,eq,86) output(73,eq,98) output(19,eq,98) output(54,eq,25) output(52,eq,25) output(73,eq,25) output(19,eq,25) output(63,eq,25) output(100,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 77 6
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasCategory(5))),()) preference(1,(1,1),3,for(atom(hasIngredient(11))),()) preference(1,(1,2),3,for(atom(hasPrep(3))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,4),3,for(atom(hasIngredient(8))),()) preference(1,(1,5),3,for(atom(hasIngredient(8))),()) preference(1,(1,6),3,for(atom(hasIngredient(5))),()) preference(1,(1,1),4,for(atom(hasPrep(3))),()) preference(1,(1,2),4,for(atom(hasCost(2))),()) preference(1,(1,3),4,for(atom(hasIngredient(5))),()) preference(1,(1,4),4,for(atom(hasIngredient(11))),()) preference(1,(1,5),4,for(atom(hasIngredient(11))),()) preference(1,(1,6),4,for(atom(hasIngredient(6))),()) preference(1,aso) output(68,better,50) output(73,better,52) output(98,better,50) output(54,better,50) output(19,better,52) output(65,better,52) output(68,better,46) output(98,better,46) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(73,better,46) output(63,better,52) output(100,better,52) output(28,better,52) output(68,better,67) output(98,better,67) output(54,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(19,better,86) output(63,better,86) output(100,better,86) output(54,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(22,better,86) output(86,worse,68) output(52,worse,54) output(52,worse,98) output(88,eq,22) output(28,eq,100) output(100,eq,19) output(19,eq,73) output(50,eq,46) output(100,eq,63) output(65,eq,73) output(25,eq,67) output(50,eq,67) output(73,eq,54) output(63,eq,73) output(28,eq,63) output(86,eq,50) output(73,eq,68) output(100,eq,73) output(28,eq,19) output(22,eq,100) output(88,eq,100) output(22,eq,19) output(88,eq,19) output(28,eq,73) output(22,eq,73) output(19,eq,68) output(65,eq,68) output(63,eq,68) output(100,eq,68) output(52,eq,46) output(86,eq,46) output(22,eq,63) output(88,eq,63) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(100,eq,54) output(52,eq,50) output(86,eq,67) output(52,eq,67) output(28,eq,54) output(22,eq,54) output(88,eq,54) output(28,eq,68) output(22,eq,68) output(88,eq,68) output(88,eq,73) output(22,eq,28) output(63,eq,65) output(54,eq,98) output(50,eq,25) output(100,eq,65) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(52,eq,25) output(63,eq,98) output(100,eq,98) output(22,eq,98)
Optimization: 59 6
Answer: 7
preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(68,better,50) output(65,better,73) output(73,better,52) output(98,better,50) output(25,better,67) output(54,better,50) output(19,better,52) output(65,better,52) output(63,better,73) output(68,better,46) output(98,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(28,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(19,better,86) output(63,better,86) output(100,better,86) output(54,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(86,worse,68) output(52,worse,54) output(22,worse,100) output(88,worse,100) output(22,worse,19) output(88,worse,19) output(22,worse,73) output(22,worse,63) output(88,worse,63) output(22,worse,54) output(88,worse,54) output(22,worse,68) output(88,worse,68) output(88,worse,73) output(22,worse,28) output(54,worse,98) output(50,worse,25) output(52,worse,98) output(22,worse,65) output(73,worse,98) output(19,worse,98) output(22,worse,98) output(88,eq,22) output(28,eq,100) output(50,eq,46) output(100,eq,63) output(50,eq,67) output(73,eq,54) output(28,eq,63) output(73,eq,68) output(63,eq,65) output(100,eq,65) output(52,eq,25) output(63,eq,98) output(100,eq,98)
Optimization: 39 4
Answer: 8
preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),4,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(68,better,50) output(100,better,63) output(65,better,73) output(73,better,52) output(98,better,50) output(25,better,67) output(54,better,50) output(19,better,52) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(28,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(19,better,86) output(63,better,86) output(100,better,86) output(54,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(100,better,98) output(86,worse,68) output(52,worse,54) output(22,worse,100) output(88,worse,100) output(22,worse,19) output(88,worse,19) output(22,worse,73) output(22,worse,63) output(88,worse,63) output(22,worse,54) output(88,worse,54) output(22,worse,68) output(88,worse,68) output(88,worse,73) output(22,worse,28) output(63,worse,65) output(54,worse,98) output(50,worse,25) output(52,worse,98) output(22,worse,65) output(73,worse,98) output(19,worse,98) output(22,worse,98) output(88,eq,22) output(28,eq,100) output(50,eq,46) output(50,eq,67) output(73,eq,54) output(73,eq,68) output(100,eq,65) output(52,eq,25) output(63,eq,98)
Optimization: 36 4
Answer: 9
preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(atom(hasCategory(1))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,(1,6),4,for(atom(hasDifficulty(2))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(68,better,50) output(100,better,63) output(65,better,73) output(73,better,52) output(98,better,50) output(25,better,67) output(54,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(28,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(19,better,86) output(63,better,86) output(100,better,86) output(54,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(100,better,98) output(88,worse,22) output(86,worse,68) output(52,worse,54) output(22,worse,100) output(88,worse,100) output(88,worse,19) output(88,worse,63) output(88,worse,68) output(88,worse,73) output(22,worse,28) output(63,worse,65) output(54,worse,98) output(50,worse,25) output(52,worse,98) output(22,worse,65) output(73,worse,98) output(19,worse,98) output(28,eq,100) output(50,eq,46) output(50,eq,67) output(73,eq,68) output(100,eq,65) output(52,eq,25) output(63,eq,98)
Optimization: 35 4
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),4,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(100,better,19) output(68,better,50) output(100,better,63) output(52,better,54) output(98,better,50) output(25,better,67) output(54,better,50) output(73,better,54) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(73,better,68) output(100,better,73) output(28,better,19) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(88,better,63) output(100,better,52) output(28,better,52) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(52,better,98) output(100,better,65) output(63,better,86) output(100,better,86) output(22,better,65) output(73,better,98) output(52,better,25) output(73,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(19,worse,73) output(19,worse,52) output(50,worse,25) output(88,eq,22) output(28,eq,100) output(86,eq,68) output(50,eq,46) output(65,eq,73) output(73,eq,52) output(50,eq,67) output(65,eq,52) output(63,eq,73) output(22,eq,100) output(88,eq,100) output(19,eq,68) output(63,eq,52) output(19,eq,54) output(22,eq,28) output(63,eq,65) output(54,eq,98) output(68,eq,25) output(19,eq,86) output(19,eq,98) output(54,eq,25) output(19,eq,25)
Optimization: 25 2
Progression : [ 1;25] (Error: 24)
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(5))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasDifficulty(2))),()) preference(1,(1,1),3,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasPrep(2))),()) preference(1,(1,4),3,for(atom(hasCategory(4))),()) preference(1,(1,5),3,for(atom(hasPrep(3))),()) preference(1,(1,4),4,for(atom(hasDifficulty(2))),()) preference(1,(1,5),4,for(atom(hasCategory(5))),()) preference(1,aso) output(28,better,100) output(100,better,19) output(68,better,50) output(100,better,63) output(65,better,73) output(73,better,52) output(98,better,50) output(25,better,67) output(54,better,50) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(22,better,100) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(65,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(22,better,65) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(88,worse,22) output(86,worse,68) output(73,worse,68) output(50,worse,25) output(50,eq,46) output(50,eq,67) output(19,eq,98)
Optimization: 23 6
Progression : [ 2;23] (Error: 10.5)
Answer: 12
preference(1,(1,4),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(100,better,19) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(98,better,50) output(50,better,67) output(54,better,50) output(73,better,54) output(19,better,52) output(65,better,52) output(28,better,63) output(68,better,46) output(98,better,46) output(73,better,68) output(100,better,73) output(28,better,19) output(22,better,19) output(28,better,73) output(22,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(50,better,25) output(68,better,25) output(19,better,86) output(63,better,86) output(100,better,86) output(54,better,25) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(100,better,98) output(22,better,98) output(22,better,86) output(88,worse,22) output(86,worse,68) output(88,worse,100) output(63,worse,65) output(54,worse,98) output(52,worse,98) output(28,eq,100) output(19,eq,73) output(52,eq,54) output(25,eq,67) output(63,eq,73) output(86,eq,50) output(22,eq,100) output(88,eq,19) output(88,eq,63) output(88,eq,73) output(22,eq,28) output(100,eq,65) output(22,eq,65) output(73,eq,98) output(19,eq,98) output(63,eq,98)
Optimization: 22 2
Progression : [ 3;22] (Error: 6.33333)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasIngredient(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),4,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,(1,2),4,for(atom(hasCost(2))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(50,better,67) output(54,better,50) output(19,better,52) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(88,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(54,better,98) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(22,better,65) output(73,better,98) output(19,better,98) output(54,better,25) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(86,worse,68) output(52,worse,54) output(73,worse,54) output(73,worse,68) output(88,eq,22) output(28,eq,100) output(22,eq,100) output(88,eq,100) output(19,eq,54) output(65,eq,54) output(63,eq,54) output(22,eq,28) output(63,eq,65)
Optimization: 21 5
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(atom(hasIngredient(11))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),4,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),4,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),4,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,(1,2),4,for(atom(hasCost(2))),()) preference(1,aso) output(100,better,19) output(19,better,73) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(50,better,67) output(54,better,50) output(19,better,52) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(88,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(22,better,65) output(73,better,98) output(19,better,98) output(54,better,25) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(86,worse,68) output(52,worse,54) output(73,worse,68) output(88,eq,22) output(28,eq,100) output(22,eq,100) output(88,eq,100) output(22,eq,28) output(63,eq,65)
Optimization: 19 5
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(3))),()) preference(1,(1,5),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrepTime(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasIngredient(12))),()) preference(1,(1,4),3,for(atom(hasIngredient(4))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,(1,1),4,for(atom(hasCost(2))),()) preference(1,(1,3),4,for(atom(hasCost(2))),()) preference(1,(1,6),4,for(atom(hasDifficulty(2))),()) preference(1,aso) output(28,better,100) output(100,better,19) output(19,better,73) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(98,better,50) output(25,better,67) output(50,better,67) output(54,better,50) output(19,better,52) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(100,better,73) output(28,better,19) output(22,better,100) output(88,better,100) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(88,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(22,better,28) output(73,better,86) output(63,better,65) output(54,better,98) output(50,better,25) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(22,better,65) output(73,better,98) output(19,better,98) output(54,better,25) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(88,worse,22) output(52,worse,54) output(73,worse,54) output(19,worse,54) output(65,worse,54) output(63,worse,54) output(100,worse,54) output(28,worse,54) output(22,worse,54) output(88,worse,54)
Optimization: 18 6
Progression : [ 4;18] (Error: 3.5)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(1))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,3),3,for(atom(hasCost(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(3))),()) preference(1,(1,2),4,for(atom(hasCost(2))),()) preference(1,(1,4),4,for(atom(hasDifficulty(2))),()) preference(1,(1,6),4,for(atom(hasIngredient(4))),()) preference(1,aso) output(88,better,22) output(28,better,100) output(100,better,19) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(25,better,67) output(50,better,67) output(73,better,54) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(73,better,68) output(100,better,73) output(28,better,19) output(88,better,100) output(22,better,19) output(88,better,19) output(28,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(88,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(19,better,54) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(19,better,98) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(86,worse,68) output(22,worse,28) output(54,worse,98) output(54,worse,25) output(63,eq,65)
Optimization: 17 6
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),4,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,3),3,for(atom(hasCost(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(3))),()) preference(1,(1,2),4,for(atom(hasCost(2))),()) preference(1,(1,4),4,for(atom(hasDifficulty(2))),()) preference(1,(1,6),4,for(atom(hasIngredient(4))),()) preference(1,aso) output(28,better,100) output(100,better,19) output(68,better,50) output(50,better,46) output(100,better,63) output(65,better,73) output(73,better,52) output(52,better,54) output(25,better,67) output(50,better,67) output(54,better,50) output(73,better,54) output(65,better,52) output(63,better,73) output(28,better,63) output(68,better,46) output(98,better,46) output(86,better,50) output(73,better,68) output(100,better,73) output(28,better,19) output(22,better,100) output(88,better,100) output(22,better,19) output(88,better,19) output(28,better,73) output(22,better,73) output(19,better,68) output(65,better,68) output(63,better,68) output(100,better,68) output(73,better,50) output(19,better,50) output(65,better,50) output(54,better,46) output(52,better,46) output(86,better,46) output(73,better,46) output(22,better,63) output(88,better,63) output(63,better,52) output(100,better,52) output(28,better,52) output(65,better,54) output(63,better,54) output(100,better,54) output(52,better,50) output(68,better,67) output(98,better,67) output(54,better,67) output(86,better,67) output(73,better,67) output(19,better,67) output(65,better,67) output(63,better,67) output(100,better,67) output(28,better,67) output(52,better,67) output(63,better,50) output(100,better,50) output(28,better,50) output(28,better,54) output(22,better,54) output(88,better,54) output(22,better,52) output(88,better,52) output(19,better,46) output(65,better,46) output(63,better,46) output(100,better,46) output(28,better,46) output(22,better,46) output(22,better,50) output(88,better,50) output(28,better,68) output(22,better,68) output(88,better,68) output(88,better,73) output(88,better,46) output(22,better,67) output(88,better,67) output(73,better,86) output(68,better,25) output(100,better,65) output(19,better,86) output(63,better,86) output(100,better,86) output(22,better,65) output(19,better,98) output(52,better,25) output(73,better,25) output(19,better,25) output(63,better,25) output(100,better,25) output(22,better,25) output(63,better,98) output(100,better,98) output(22,better,98) output(22,better,86) output(86,worse,68) output(88,eq,22) output(22,eq,28) output(63,eq,65)
Optimization: 13 6
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.047 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 17+
  Optimum    : unknown
Optimization : 13 6
Bounds       : [4;13] [0;6]
Calls        : 1
Time         : 597.443s (Solving: 567.75s 1st Model: 1.79s Unsat: 0.00s)
CPU Time     : 2299.588s
Threads      : 4        (Winner: 4)

Choices      : 7807569  (Domain: 164801)
Conflicts    : 1108367  (Analyzed: 1108363)
Restarts     : 1271     (Average: 872.04 Last: 61246)
Model-Level  : 954.4   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 1574467  (Deleted: 1309513)
  Binary     : 17786    (Ratio:   1.13%)
  Ternary    : 71247    (Ratio:   4.53%)
  Conflict   : 1108363  (Average Length:  688.7 Ratio:  70.40%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 466104   (Average Length:   63.0 Ratio:  29.60%) 
  Distributed: 155415   (Ratio:  14.02% Average LBD: 3.34) 
  Integrated : 466242   (Ratio: 300.00% Unit: 1890 Average Jumps: 107.76)
Backjumps    : 1108363  (Average:  6.56 Max: 3037 Sum: 7267394)
  Executed   : 1108312  (Average:  6.55 Max: 3037 Sum: 7264614 Ratio:  99.96%)
  Bounded    : 51       (Average: 54.51 Max: 111 Sum:   2780 Ratio:   0.04%)

Rules        : 14923543
  Choice     : 31      
  Minimize   : 2       
Atoms        : 2952946 
Bodies       : 3493029 
  Count      : 4062    
Equivalences : 9167148  (Atom=Atom: 2649204 Body=Body: 2899181 Other: 3618763)
Tight        : Yes
Variables    : 283969   (Eliminated:    0 Frozen: 201595)
Constraints  : 12180281 (Binary:  97.7% Ternary:   2.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasPrep(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(8)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasPrep(5)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasIngredient(8)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(5)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(11)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasPrep(5)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasIngredient(8)) ; 
  atom(hasIngredient(2)) >> atom(hasCategory(5)) >> atom(hasDifficulty(4)) >> atom(hasIngredient(11)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> not atom(hasPrepTime(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> atom(hasIngredient(2)) >> atom(hasCategory(1)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(4)) >> atom(hasCategory(3)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasCost(5)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) >> atom(hasCost(5)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(4)) >> not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasPrep(3)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasDifficulty(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(2)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasIngredient(11)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasPrep(3)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasCost(2)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasIngredient(11)) ; 
  atom(hasIngredient(2)) >> atom(hasCategory(5)) >> atom(hasIngredient(5)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) || not atom(hasCategory(3))  ; 
  not atom(hasCategory(1))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(3))  || atom(hasCategory(1)) ; 
  atom(hasIngredient(12)) >> not atom(hasCost(2))  >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(0)) >> not atom(hasCost(2))  >> not atom(hasCategory(3))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) || not atom(hasCategory(3))  ; 
  not atom(hasCategory(1))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(3))  || atom(hasCategory(1)) ; 
  atom(hasIngredient(12)) >> not atom(hasCost(2))  >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(0)) >> not atom(hasCost(2))  >> not atom(hasCost(5))  || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) || not atom(hasCategory(3))  ; 
  not atom(hasCategory(1))  >> not atom(hasCategory(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(3))  || atom(hasCategory(1)) ; 
  atom(hasIngredient(12)) >> not atom(hasCost(2))  >> not atom(hasIngredient(11))  || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(0)) >> atom(hasCost(3)) >> atom(hasDifficulty(2)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(6)) >> not atom(hasCategory(1))  >> not atom(hasDifficulty(1))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(2)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasDifficulty(2))  >> not atom(hasCategory(5))  >> atom(hasPrep(2)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(2))  >> not atom(hasDifficulty(1))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(7)) >> atom(hasDifficulty(2)) >> atom(hasPrep(3)) >> atom(hasCategory(5)) || not atom(hasCost(4))  ; 
  atom(hasCategory(5)) >> not atom(hasCost(5))  >> atom(hasIngredient(9)) ; 
  atom(hasIngredient(5)) >> atom(hasCategory(3)) >> atom(hasCategory(4)) >> atom(hasDifficulty(2)) ; 
  atom(hasDifficulty(3)) >> not atom(hasCost(2))  >> not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasCost(3)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(4))  ; 
  atom(hasPrep(1)) >> atom(hasIngredient(7)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  || not atom(hasIngredient(7))  ; 
  not atom(hasDifficulty(2))  >> not atom(hasCost(2))  >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || not atom(hasCost(4))  ; 
  atom(hasIngredient(9)) >> atom(hasCategory(4)) >> atom(hasIngredient(3)) >> not atom(hasPrepTime(1))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(8))  >> not atom(hasPrep(0))  >> not atom(hasIngredient(1))  >> not atom(hasCategory(3))  || atom(hasIngredient(4)) ; 
  not atom(hasIngredient(1))  >> atom(hasCost(3)) >> not atom(hasIngredient(11))  >> not atom(hasPrep(6))  || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(3))  || not atom(hasIngredient(7))  ; 
  not atom(hasDifficulty(2))  >> atom(hasCost(3)) >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || not atom(hasCost(4))  ; 
  atom(hasIngredient(9)) >> atom(hasCategory(4)) >> atom(hasIngredient(3)) >> not atom(hasPrepTime(1))  || not atom(hasCost(4))  ; 
  not atom(hasIngredient(8))  >> not atom(hasPrep(0))  >> not atom(hasIngredient(1))  >> not atom(hasCategory(3))  || atom(hasIngredient(11)) ; 
  not atom(hasIngredient(1))  >> atom(hasCost(3)) >> not atom(hasIngredient(11))  >> not atom(hasPrep(6))  || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> not atom(hasCost(2))  >> atom(hasIngredient(7)) >> atom(hasCost(2)) || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(11)) >> not atom(hasDifficulty(2))  >> not atom(hasCategory(2))  || not atom(hasIngredient(2))  ; 
  atom(hasCost(4)) >> atom(hasPrep(6)) >> atom(hasIngredient(12)) >> atom(hasCost(2)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(2)) >> atom(hasIngredient(3)) >> atom(hasIngredient(4)) || not atom(hasIngredient(3))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(7)) >> not atom(hasIngredient(9))  || atom(hasDifficulty(2)) ; 
  atom(hasPrep(1)) >> atom(hasPrepTime(3)) >> atom(hasIngredient(7)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(6)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(5))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(4))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(6)) >> atom(hasIngredient(7)) >> atom(hasDifficulty(2)) || not atom(hasPrep(6))  ; 
  atom(hasCategory(3)) >> atom(hasIngredient(1)) >> atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(4)) >> atom(hasIngredient(3)) >> atom(hasIngredient(4)) || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> not atom(hasDifficulty(2))  >> not atom(hasCost(3))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(6)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasIngredient(11))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCategory(1))  >> atom(hasCost(2)) || not atom(hasCost(4))  ; 
  atom(hasCost(1)) >> atom(hasPrep(6)) >> atom(hasIngredient(7)) >> atom(hasDifficulty(2)) || not atom(hasPrep(6))  ; 
  atom(hasCategory(3)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(4)) >> atom(hasIngredient(3)) >> atom(hasIngredient(4)) || not atom(hasPrep(7))  
}.
