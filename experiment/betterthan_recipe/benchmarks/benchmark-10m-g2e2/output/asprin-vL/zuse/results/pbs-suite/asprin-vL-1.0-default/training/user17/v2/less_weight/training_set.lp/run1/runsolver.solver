asprin_vL version 1.0
Reading from stdin
-:1312:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1322:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1337:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1418:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1679:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1692:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1869:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1998:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2070:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2074:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2074:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2080:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2179:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2205:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2325:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2359:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2381:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1229:1-16: info: no atoms over signature occur in program:
  output/3

-:1221:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1222:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(67,eq,50) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(47,eq,67) output(18,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(62,eq,67) output(10,eq,58) output(58,eq,67) output(8,eq,67) output(21,eq,67) output(47,eq,50) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(89,eq,47) output(62,eq,47) output(42,eq,67) output(18,eq,67) output(89,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(21,eq,42) output(10,eq,42) output(47,eq,66) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(10,eq,67) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(89,eq,18) output(47,eq,61) output(67,eq,7) output(42,eq,61) output(62,eq,18) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(62,eq,84) output(50,eq,32) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(47,eq,32) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 115 0
Answer: 2
preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(10,better,67) output(18,better,67) output(8,better,67) output(39,better,67) output(42,better,67) output(61,better,67) output(62,better,67) output(89,better,67) output(21,better,67) output(47,better,67) output(58,better,67) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(18,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(47,eq,50) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(89,eq,47) output(62,eq,47) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(21,eq,42) output(10,eq,42) output(47,eq,66) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(89,eq,18) output(47,eq,61) output(42,eq,61) output(62,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(62,eq,84) output(50,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(47,eq,32) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 104 1
Answer: 3
preference(1,(1,7),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(10,better,67) output(10,better,18) output(8,better,67) output(8,better,18) output(39,better,67) output(42,better,67) output(61,better,67) output(62,better,67) output(62,better,18) output(89,better,67) output(89,better,18) output(21,better,67) output(21,better,18) output(47,better,67) output(58,better,67) output(58,better,18) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(42,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(47,eq,50) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(89,eq,47) output(62,eq,47) output(18,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(21,eq,42) output(10,eq,42) output(47,eq,66) output(42,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(47,eq,61) output(42,eq,61) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(62,eq,84) output(50,eq,32) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(47,eq,32) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 99 2
Answer: 4
preference(1,(1,7),1,for(atom(hasCost(5))),8) preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(10,better,47) output(10,better,67) output(18,better,47) output(18,better,67) output(8,better,67) output(8,better,47) output(39,better,67) output(42,better,47) output(42,better,67) output(61,better,67) output(62,better,67) output(62,better,47) output(89,better,47) output(89,better,67) output(21,better,67) output(21,better,47) output(58,better,67) output(58,better,47) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(47,worse,7) output(47,worse,32) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(47,eq,67) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(21,eq,42) output(10,eq,42) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(89,eq,18) output(42,eq,61) output(62,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(62,eq,84) output(50,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 97 2
Answer: 5
preference(1,(1,7),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(10,better,47) output(10,better,67) output(10,better,18) output(8,better,67) output(8,better,47) output(8,better,18) output(39,better,67) output(42,better,47) output(42,better,67) output(61,better,67) output(62,better,67) output(62,better,47) output(62,better,18) output(89,better,47) output(89,better,67) output(89,better,18) output(21,better,67) output(21,better,47) output(21,better,18) output(58,better,67) output(58,better,47) output(58,better,18) output(18,worse,42) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(47,worse,7) output(47,worse,32) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(47,eq,67) output(18,eq,47) output(89,eq,42) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(42,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(62,eq,42) output(58,eq,42) output(8,eq,42) output(18,eq,67) output(21,eq,42) output(10,eq,42) output(42,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(66,eq,32) output(42,eq,61) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(62,eq,84) output(50,eq,32) output(89,eq,61) output(42,eq,7) output(62,eq,7) output(58,eq,7) output(8,eq,7) output(21,eq,7) output(10,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(62,eq,32) output(58,eq,32) output(8,eq,32) output(21,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32) output(10,eq,32)
Optimization: 93 3
Answer: 6
preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(10,better,42) output(10,better,67) output(10,better,7) output(10,better,32) output(18,better,42) output(18,better,67) output(50,better,32) output(8,better,67) output(8,better,42) output(8,better,7) output(8,better,32) output(39,better,67) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,7) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,67) output(89,better,7) output(89,better,32) output(21,better,67) output(21,better,42) output(21,better,7) output(21,better,32) output(47,better,67) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,42) output(58,better,7) output(58,better,32) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(42,worse,47) output(42,worse,50) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(47,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(89,eq,47) output(62,eq,47) output(42,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(47,eq,66) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(47,eq,61) output(67,eq,7) output(62,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(62,eq,84) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(42,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(89,eq,84)
Optimization: 82 2
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(4))),8) preference(1,(1,3),1,for(atom(hasCost(5))),8) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(10,better,47) output(10,better,42) output(10,better,67) output(10,better,7) output(10,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(50,better,32) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,7) output(8,better,32) output(39,better,67) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,7) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,7) output(89,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,7) output(21,better,32) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,7) output(58,better,32) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(42,worse,50) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(42,eq,47) output(47,eq,67) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(42,eq,67) output(18,eq,66) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(18,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(89,eq,18) output(67,eq,7) output(62,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(62,eq,84) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(21,eq,18) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(10,eq,18) output(47,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(89,eq,84)
Optimization: 78 4
Answer: 8
preference(1,(1,1),1,for(atom(hasIngredient(4))),8) preference(1,(1,3),1,for(atom(hasCost(5))),8) preference(1,(1,4),1,for(atom(hasPrep(3))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(10,better,47) output(10,better,42) output(10,better,67) output(10,better,7) output(10,better,18) output(10,better,32) output(50,better,32) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,18) output(8,better,7) output(8,better,32) output(39,better,67) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,18) output(62,better,7) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,18) output(89,better,7) output(89,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,18) output(21,better,7) output(21,better,32) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,18) output(58,better,7) output(58,better,32) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(42,worse,50) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(47,eq,67) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(10,eq,58) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(42,eq,67) output(18,eq,67) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(67,eq,7) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(62,eq,84) output(67,eq,32) output(89,eq,61) output(47,eq,7) output(42,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(47,eq,32) output(42,eq,32) output(58,eq,84) output(8,eq,84) output(21,eq,84) output(10,eq,84) output(89,eq,84)
Optimization: 75 5
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(5))),8) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasPrep(3))),8) preference(1,(1,4),1,for(atom(hasCost(4))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,7) output(10,better,18) output(10,better,84) output(10,better,32) output(50,better,84) output(50,better,32) output(67,better,7) output(67,better,84) output(67,better,32) output(8,better,89) output(8,better,42) output(8,better,47) output(8,better,18) output(8,better,7) output(8,better,32) output(8,better,84) output(62,better,89) output(62,better,42) output(62,better,47) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,32) output(66,better,32) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,18) output(21,better,7) output(21,better,32) output(21,better,84) output(58,better,89) output(58,better,42) output(58,better,47) output(58,better,18) output(58,better,7) output(58,better,32) output(58,better,84) output(18,worse,67) output(18,worse,66) output(18,worse,50) output(84,worse,66) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(89,worse,67) output(89,worse,66) output(89,worse,50) output(89,worse,61) output(47,worse,67) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(67,eq,50) output(21,eq,8) output(8,eq,62) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(18,eq,47) output(89,eq,42) output(21,eq,62) output(10,eq,8) output(50,eq,66) output(39,eq,50) output(61,eq,50) output(62,eq,67) output(10,eq,58) output(58,eq,67) output(8,eq,67) output(21,eq,67) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(89,eq,47) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(21,eq,66) output(10,eq,66) output(21,eq,50) output(10,eq,50) output(10,eq,67) output(62,eq,39) output(89,eq,18) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(47,eq,7) output(42,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(21,eq,61) output(10,eq,61) output(47,eq,32) output(42,eq,32) output(42,eq,84) output(89,eq,84) output(89,eq,32)
Optimization: 74 5
Answer: 10
preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(10,better,21) output(10,better,89) output(10,better,42) output(10,better,50) output(10,better,67) output(10,better,7) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,50) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,7) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(61,better,67) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,84) output(62,better,7) output(62,better,32) output(66,better,32) output(47,better,67) output(47,better,50) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,7) output(58,better,32) output(58,better,84) output(50,worse,66) output(67,worse,66) output(84,worse,66) output(42,worse,47) output(42,worse,66) output(42,worse,61) output(89,worse,47) output(89,worse,66) output(89,worse,18) output(89,worse,61) output(21,worse,58) output(21,worse,8) output(21,worse,62) output(21,worse,47) output(21,worse,66) output(21,worse,39) output(21,worse,18) output(21,worse,61) output(58,eq,62) output(67,eq,50) output(8,eq,62) output(18,eq,47) output(89,eq,42) output(10,eq,8) output(10,eq,58) output(21,eq,67) output(42,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(62,eq,47) output(42,eq,67) output(89,eq,67) output(58,eq,47) output(8,eq,47) output(10,eq,47) output(21,eq,42) output(47,eq,66) output(18,eq,66) output(62,eq,66) output(58,eq,66) output(8,eq,66) output(10,eq,66) output(21,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(47,eq,61) output(67,eq,7) output(62,eq,18) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(10,eq,39) output(50,eq,32) output(67,eq,32) output(58,eq,18) output(8,eq,18) output(42,eq,7) output(21,eq,7) output(89,eq,7) output(62,eq,61) output(58,eq,61) output(8,eq,61) output(10,eq,61) output(10,eq,18) output(21,eq,32) output(42,eq,32) output(21,eq,84) output(42,eq,84) output(89,eq,84) output(89,eq,32)
Optimization: 73 4
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(2))),4) preference(1,(1,2),1,for(atom(hasPrep(5))),6) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),7) preference(1,(1,5),1,for(atom(hasIngredient(7))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrep(0))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),8) preference(1,(1,11),1,for(atom(hasIngredient(12))),8) preference(1,(1,12),1,for(atom(hasIngredient(10))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(10,better,8) output(10,better,62) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,18) output(10,better,84) output(18,better,67) output(8,better,67) output(8,better,50) output(8,better,18) output(39,better,67) output(39,better,50) output(42,better,50) output(42,better,67) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,67) output(61,better,50) output(62,better,67) output(62,better,50) output(62,better,18) output(66,better,32) output(89,better,67) output(89,better,50) output(89,better,18) output(89,better,84) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,58) output(10,worse,89) output(10,worse,47) output(10,worse,42) output(10,worse,66) output(10,worse,7) output(10,worse,61) output(10,worse,32) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(50,worse,66) output(50,worse,84) output(50,worse,32) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(84,worse,66) output(8,worse,89) output(8,worse,42) output(8,worse,47) output(8,worse,66) output(8,worse,7) output(8,worse,61) output(8,worse,32) output(8,worse,84) output(39,worse,66) output(42,worse,66) output(42,worse,61) output(62,worse,89) output(62,worse,42) output(62,worse,47) output(62,worse,66) output(62,worse,84) output(62,worse,7) output(62,worse,61) output(62,worse,32) output(89,worse,42) output(89,worse,47) output(89,worse,66) output(89,worse,61) output(89,worse,32) output(21,worse,66) output(21,worse,61) output(47,worse,66) output(47,worse,61) output(58,worse,66) output(58,worse,61) output(21,eq,58) output(8,eq,62) output(42,eq,47) output(61,eq,66) output(58,eq,42) output(58,eq,47) output(21,eq,47) output(21,eq,42) output(18,eq,50) output(62,eq,39) output(8,eq,39) output(89,eq,7)
Optimization: 63 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,89) output(10,better,42) output(10,better,66) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(8,better,89) output(8,better,42) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,66) output(62,better,89) output(62,better,42) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(21,better,89) output(21,better,42) output(21,better,66) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,89) output(58,better,42) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,47) output(18,worse,67) output(18,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(61,worse,67) output(61,worse,50) output(89,worse,47) output(89,worse,67) output(89,worse,50) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(39,eq,67) output(67,eq,50) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(18,eq,42) output(47,eq,67) output(89,eq,42) output(21,eq,62) output(10,eq,8) output(39,eq,50) output(62,eq,67) output(10,eq,58) output(58,eq,67) output(8,eq,67) output(21,eq,67) output(47,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(61,eq,66) output(10,eq,62) output(62,eq,47) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(21,eq,50) output(10,eq,50) output(10,eq,67) output(62,eq,39) output(66,eq,32) output(89,eq,18) output(42,eq,61) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(89,eq,61) output(42,eq,7) output(89,eq,7) output(42,eq,32) output(42,eq,84) output(89,eq,84) output(89,eq,32)
Optimization: 62 4
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasCost(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(10,better,89) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(50,better,66) output(50,better,84) output(50,better,32) output(8,better,89) output(8,better,67) output(8,better,42) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,66) output(62,better,89) output(62,better,67) output(62,better,42) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(21,better,67) output(21,better,89) output(21,better,42) output(21,better,66) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,89) output(58,better,67) output(58,better,42) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,47) output(18,worse,50) output(67,worse,50) output(42,worse,47) output(42,worse,50) output(61,worse,50) output(89,worse,47) output(89,worse,50) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(18,eq,42) output(61,eq,67) output(89,eq,42) output(21,eq,62) output(10,eq,8) output(39,eq,50) output(10,eq,58) output(47,eq,50) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(61,eq,66) output(10,eq,62) output(62,eq,47) output(42,eq,67) output(18,eq,67) output(89,eq,67) output(58,eq,47) output(8,eq,47) output(21,eq,47) output(10,eq,47) output(42,eq,66) output(18,eq,66) output(89,eq,66) output(21,eq,50) output(10,eq,50) output(62,eq,39) output(66,eq,32) output(89,eq,18) output(67,eq,7) output(42,eq,61) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(67,eq,32) output(89,eq,61) output(42,eq,7) output(89,eq,7) output(42,eq,32) output(42,eq,84) output(89,eq,84) output(89,eq,32)
Optimization: 59 5
Answer: 14
preference(1,(1,2),1,for(atom(hasDifficulty(3))),5) preference(1,(1,3),1,for(atom(hasCost(3))),8) preference(1,(1,4),1,for(atom(hasCategory(2))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),8) preference(1,(1,8),1,for(atom(hasCost(5))),8) preference(1,(1,10),1,for(atom(hasCost(4))),8) preference(1,(1,11),1,for(atom(hasPrep(3))),8) preference(1,(1,14),1,for(atom(hasCategory(1))),5) preference(1,less(weight)) output(10,better,47) output(10,better,42) output(10,better,67) output(10,better,7) output(10,better,18) output(10,better,32) output(50,better,32) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,18) output(8,better,7) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(42,better,67) output(42,better,7) output(61,better,67) output(61,better,50) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,50) output(89,better,18) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,8) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,50) output(21,better,18) output(21,better,7) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,7) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,18) output(58,better,7) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,8) output(10,worse,58) output(10,worse,62) output(10,worse,89) output(10,worse,66) output(10,worse,39) output(10,worse,61) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(50,worse,66) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(67,worse,32) output(84,worse,66) output(8,worse,62) output(8,worse,89) output(8,worse,66) output(8,worse,39) output(8,worse,61) output(42,worse,50) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(21,eq,58) output(58,eq,62) output(62,eq,89) output(42,eq,47) output(58,eq,89) output(21,eq,62) output(39,eq,66) output(61,eq,66) output(21,eq,89) output(18,eq,67) output(89,eq,66) output(62,eq,66) output(58,eq,66) output(21,eq,66) output(10,eq,50) output(62,eq,39) output(50,eq,84) output(67,eq,7) output(58,eq,39) output(21,eq,39) output(89,eq,61) output(62,eq,61) output(58,eq,61) output(21,eq,61) output(47,eq,32) output(42,eq,32) output(10,eq,84)
Optimization: 58 8
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(3))),8) preference(1,(1,2),1,for(atom(hasCost(4))),8) preference(1,(1,3),1,for(atom(hasCost(5))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(50,better,66) output(50,better,84) output(50,better,32) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,66) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(58,better,67) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,50) output(67,worse,50) output(42,worse,50) output(61,worse,50) output(47,worse,50) output(10,eq,21) output(21,eq,58) output(58,eq,62) output(84,eq,66) output(21,eq,8) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(42,eq,47) output(61,eq,67) output(47,eq,67) output(18,eq,47) output(58,eq,89) output(8,eq,89) output(21,eq,62) output(10,eq,8) output(39,eq,50) output(10,eq,58) output(62,eq,50) output(58,eq,50) output(8,eq,50) output(67,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(10,eq,89) output(42,eq,67) output(18,eq,67) output(47,eq,66) output(42,eq,66) output(18,eq,66) output(21,eq,50) output(10,eq,50) output(89,eq,50) output(62,eq,39) output(66,eq,32) output(47,eq,61) output(67,eq,7) output(42,eq,61) output(67,eq,84) output(58,eq,39) output(8,eq,39) output(21,eq,39) output(10,eq,39) output(47,eq,84) output(67,eq,32) output(47,eq,7) output(42,eq,7) output(47,eq,32) output(42,eq,32) output(42,eq,84)
Optimization: 56 5
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(4))),4) preference(1,(1,2),1,for(atom(hasCost(3))),2) preference(1,(1,3),1,for(atom(hasCost(4))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),8) preference(1,(1,6),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasCategory(2))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,14),1,for(atom(hasPrepTime(1))),8) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,50) output(10,better,67) output(10,better,7) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,50) output(50,better,32) output(67,better,50) output(67,better,7) output(67,better,84) output(67,better,32) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,7) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,67) output(61,better,50) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,32) output(66,better,32) output(89,better,47) output(89,better,7) output(89,better,32) output(21,better,47) output(21,better,7) output(21,better,32) output(47,better,7) output(47,better,32) output(58,better,47) output(58,better,7) output(58,better,32) output(18,worse,66) output(50,worse,66) output(67,worse,66) output(84,worse,66) output(8,worse,62) output(8,worse,66) output(8,worse,39) output(8,worse,61) output(42,worse,66) output(42,worse,61) output(89,worse,42) output(89,worse,67) output(89,worse,66) output(89,worse,18) output(89,worse,61) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,42) output(21,worse,66) output(21,worse,39) output(21,worse,18) output(21,worse,61) output(47,worse,67) output(47,worse,50) output(47,worse,66) output(47,worse,61) output(47,worse,84) output(58,worse,62) output(58,worse,67) output(58,worse,42) output(58,worse,66) output(58,worse,39) output(58,worse,18) output(58,worse,61) output(21,eq,58) output(58,eq,89) output(58,eq,50) output(39,eq,66) output(61,eq,66) output(10,eq,62) output(21,eq,89) output(62,eq,66) output(10,eq,66) output(21,eq,50) output(89,eq,50) output(62,eq,39) output(50,eq,84) output(10,eq,39) output(8,eq,18) output(62,eq,61) output(10,eq,61) output(58,eq,84) output(21,eq,84) output(89,eq,84)
Optimization: 55 8
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),7) preference(1,(1,4),1,for(atom(hasPrep(6))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasIngredient(4))),6) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasCost(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),2) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,67) output(50,better,66) output(50,better,84) output(50,better,32) output(8,better,67) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,32) output(8,better,84) output(42,better,47) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,67) output(61,better,66) output(62,better,67) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,67) output(21,better,39) output(21,better,18) output(47,better,67) output(47,better,66) output(47,better,84) output(58,better,39) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(8,worse,89) output(8,worse,50) output(8,worse,42) output(39,worse,67) output(39,worse,50) output(39,worse,66) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(62,worse,42) output(66,worse,32) output(21,worse,8) output(21,worse,62) output(21,worse,89) output(21,worse,47) output(21,worse,42) output(21,worse,66) output(21,worse,50) output(21,worse,7) output(21,worse,61) output(21,worse,32) output(21,worse,84) output(47,worse,50) output(47,worse,61) output(58,worse,62) output(58,worse,89) output(58,worse,67) output(58,worse,50) output(58,worse,42) output(58,worse,47) output(58,worse,66) output(58,worse,18) output(58,worse,7) output(58,worse,61) output(58,worse,32) output(58,worse,84) output(84,eq,66) output(8,eq,62) output(42,eq,50) output(47,eq,7) output(62,eq,61) output(8,eq,61) output(47,eq,32)
Optimization: 52 14
Answer: 18
preference(1,(1,1),1,for(atom(hasDifficulty(2))),2) preference(1,(1,2),1,for(atom(hasPrep(5))),7) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(3))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasIngredient(7))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),7) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,13),1,for(atom(hasIngredient(10))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,8) output(10,better,62) output(10,better,89) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(84,better,66) output(8,better,66) output(8,better,61) output(39,better,67) output(39,better,66) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(61,better,66) output(62,better,66) output(62,better,61) output(89,better,66) output(89,better,61) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,47) output(10,worse,18) output(18,worse,47) output(67,worse,50) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(8,worse,89) output(8,worse,67) output(8,worse,50) output(8,worse,42) output(8,worse,47) output(8,worse,39) output(8,worse,18) output(8,worse,7) output(8,worse,32) output(8,worse,84) output(39,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,32) output(42,worse,84) output(61,worse,67) output(61,worse,50) output(62,worse,89) output(62,worse,67) output(62,worse,50) output(62,worse,42) output(62,worse,47) output(62,worse,39) output(62,worse,18) output(62,worse,84) output(62,worse,7) output(62,worse,32) output(66,worse,32) output(89,worse,42) output(89,worse,47) output(89,worse,50) output(89,worse,18) output(89,worse,7) output(89,worse,84) output(89,worse,32) output(21,worse,47) output(21,worse,18) output(58,worse,47) output(58,worse,18) output(8,eq,62) output(10,eq,58) output(58,eq,50) output(89,eq,67) output(10,eq,50)
Optimization: 52 13
Answer: 19
preference(1,(1,1),1,for(atom(hasIngredient(7))),4) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasCost(2))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasCategory(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(10))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasIngredient(12))),5) preference(1,(1,10),1,for(atom(hasCategory(4))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),7) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,47) output(10,better,66) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,47) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,66) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,66) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,47) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,47) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(10,worse,42) output(10,worse,50) output(10,worse,67) output(18,worse,42) output(18,worse,67) output(18,worse,50) output(8,worse,89) output(8,worse,67) output(8,worse,50) output(8,worse,42) output(39,worse,67) output(39,worse,50) output(61,worse,67) output(61,worse,50) output(62,worse,89) output(62,worse,67) output(62,worse,50) output(62,worse,42) output(66,worse,32) output(89,worse,42) output(89,worse,67) output(89,worse,50) output(21,worse,8) output(21,worse,62) output(21,worse,67) output(21,worse,89) output(21,worse,42) output(21,worse,50) output(47,worse,67) output(47,worse,50) output(47,worse,84) output(58,worse,62) output(58,worse,89) output(58,worse,67) output(58,worse,50) output(58,worse,42) output(58,worse,47) output(58,worse,39) output(58,worse,18) output(58,worse,7) output(58,worse,61) output(58,worse,32) output(58,worse,84) output(8,eq,62) output(10,eq,89) output(58,eq,66)
Optimization: 46 14
Answer: 20
preference(1,(1,1),1,for(atom(hasCategory(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrep(6))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(9))),7) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasCost(3))),3) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,84) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,84) output(8,better,62) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,7) output(8,better,61) output(8,better,84) output(89,better,42) output(89,better,66) output(89,better,50) output(89,better,61) output(89,better,7) output(89,better,84) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,21) output(50,worse,32) output(67,worse,32) output(84,worse,66) output(8,worse,47) output(8,worse,18) output(39,worse,67) output(39,worse,50) output(39,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,66) output(42,worse,61) output(42,worse,7) output(42,worse,32) output(61,worse,67) output(62,worse,89) output(62,worse,67) output(62,worse,50) output(62,worse,47) output(62,worse,66) output(62,worse,18) output(62,worse,7) output(62,worse,61) output(62,worse,32) output(66,worse,32) output(89,worse,47) output(89,worse,18) output(89,worse,32) output(18,eq,47) output(50,eq,66) output(61,eq,50) output(61,eq,66) output(62,eq,42) output(89,eq,67) output(58,eq,47) output(62,eq,39) output(62,eq,84) output(58,eq,18) output(8,eq,32) output(42,eq,84)
Optimization: 42 14
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasPrep(5))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(4))),7) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,58) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,32) output(50,better,66) output(50,better,32) output(67,better,32) output(84,better,66) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(39,better,67) output(39,better,66) output(42,better,47) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,32) output(61,better,67) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,32) output(58,better,67) output(58,better,66) output(58,better,18) output(58,better,61) output(58,better,32) output(10,worse,21) output(10,worse,8) output(10,worse,62) output(10,worse,89) output(10,worse,50) output(10,worse,84) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(50,worse,84) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(8,worse,84) output(39,worse,50) output(42,worse,50) output(42,worse,84) output(61,worse,50) output(62,worse,84) output(89,worse,84) output(21,worse,84) output(47,worse,50) output(47,worse,84) output(47,worse,7) output(58,worse,62) output(58,worse,89) output(58,worse,50) output(58,worse,42) output(58,worse,7) output(58,worse,84) output(8,eq,62) output(62,eq,89) output(8,eq,89) output(61,eq,66) output(18,eq,67) output(58,eq,47) output(58,eq,39) output(42,eq,7)
Optimization: 40 14
Answer: 22
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasCost(3))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,58) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,32) output(18,better,67) output(50,better,66) output(50,better,32) output(67,better,32) output(84,better,66) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(39,better,67) output(39,better,66) output(42,better,67) output(42,better,32) output(61,better,67) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,42) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(10,worse,21) output(10,worse,8) output(10,worse,62) output(10,worse,89) output(10,worse,50) output(10,worse,84) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(50,worse,84) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(8,worse,84) output(39,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,66) output(42,worse,61) output(42,worse,84) output(61,worse,50) output(62,worse,84) output(89,worse,84) output(21,worse,84) output(47,worse,50) output(47,worse,84) output(58,worse,62) output(58,worse,89) output(58,worse,50) output(58,worse,84) output(8,eq,62) output(62,eq,89) output(18,eq,42) output(8,eq,89) output(61,eq,66) output(58,eq,47) output(58,eq,39) output(42,eq,7)
Optimization: 39 14
Answer: 23
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasCost(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,67) output(50,better,66) output(50,better,84) output(50,better,32) output(8,better,89) output(8,better,67) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,67) output(62,better,89) output(62,better,67) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,67) output(89,better,18) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,32) output(58,better,89) output(58,better,67) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,42) output(10,worse,50) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(8,worse,50) output(8,worse,42) output(39,worse,50) output(39,worse,66) output(61,worse,50) output(62,worse,50) output(62,worse,42) output(89,worse,42) output(89,worse,47) output(89,worse,50) output(89,worse,7) output(47,worse,50) output(47,worse,7) output(58,worse,62) output(58,worse,50) output(58,worse,42) output(58,worse,7) output(84,eq,66) output(8,eq,62) output(61,eq,66) output(58,eq,47) output(89,eq,66) output(89,eq,61) output(62,eq,7) output(8,eq,7) output(89,eq,84)
Optimization: 38 14
Answer: 24
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasCost(3))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,32) output(18,better,67) output(50,better,66) output(50,better,32) output(67,better,7) output(84,better,66) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(39,better,67) output(42,better,67) output(42,better,7) output(42,better,32) output(61,better,67) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(10,worse,21) output(10,worse,89) output(10,worse,50) output(10,worse,84) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(50,worse,84) output(67,worse,50) output(67,worse,66) output(67,worse,84) output(67,worse,32) output(8,worse,89) output(8,worse,50) output(8,worse,84) output(39,worse,50) output(39,worse,66) output(42,worse,47) output(42,worse,50) output(42,worse,84) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(62,worse,84) output(47,worse,50) output(47,worse,84) output(58,worse,62) output(58,worse,89) output(58,worse,50) output(58,worse,84) output(8,eq,62) output(61,eq,66) output(58,eq,47) output(42,eq,66) output(42,eq,61) output(89,eq,84)
Optimization: 37 14
Answer: 25
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,47) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,67) output(50,better,66) output(50,better,84) output(50,better,32) output(84,better,66) output(8,better,67) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(61,better,67) output(62,better,67) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,32) output(58,better,67) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,61) output(58,better,32) output(10,worse,21) output(10,worse,89) output(10,worse,42) output(10,worse,50) output(18,worse,42) output(18,worse,47) output(18,worse,66) output(18,worse,50) output(67,worse,50) output(67,worse,66) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(8,worse,89) output(8,worse,50) output(8,worse,42) output(39,worse,50) output(39,worse,66) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(62,worse,42) output(47,worse,50) output(47,worse,7) output(58,worse,62) output(58,worse,89) output(58,worse,50) output(58,worse,42) output(58,worse,7) output(8,eq,62) output(61,eq,66) output(58,eq,47) output(47,eq,84) output(62,eq,7) output(8,eq,7) output(58,eq,84)
Optimization: 36 14
Answer: 26
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,67) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(84,better,66) output(8,better,89) output(8,better,67) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,66) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(62,better,89) output(62,better,67) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,61) output(62,better,32) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,32) output(58,better,89) output(58,better,67) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,42) output(10,worse,50) output(18,worse,42) output(18,worse,47) output(18,worse,50) output(67,worse,50) output(67,worse,7) output(67,worse,84) output(67,worse,32) output(8,worse,50) output(8,worse,42) output(39,worse,50) output(61,worse,67) output(61,worse,50) output(62,worse,50) output(62,worse,42) output(66,worse,32) output(89,worse,42) output(89,worse,47) output(89,worse,50) output(89,worse,7) output(47,worse,50) output(47,worse,7) output(58,worse,62) output(58,worse,50) output(58,worse,42) output(58,worse,7) output(8,eq,62) output(61,eq,66) output(58,eq,47) output(62,eq,7) output(8,eq,7) output(89,eq,84)
Optimization: 34 14
Answer: 27
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasCost(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),5) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(0))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(67,better,7) output(67,better,84) output(67,better,32) output(84,better,66) output(8,better,89) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,66) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(62,better,89) output(62,better,67) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,42) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,89) output(58,better,67) output(58,better,42) output(58,better,66) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,21) output(10,worse,50) output(18,worse,47) output(18,worse,67) output(18,worse,50) output(67,worse,50) output(8,worse,50) output(39,worse,50) output(42,worse,47) output(42,worse,50) output(42,worse,67) output(42,worse,84) output(61,worse,67) output(61,worse,50) output(62,worse,50) output(66,worse,32) output(89,worse,47) output(89,worse,67) output(89,worse,50) output(47,worse,50) output(58,worse,62) output(58,worse,50) output(8,eq,62) output(18,eq,42) output(61,eq,66) output(58,eq,47) output(58,eq,39) output(89,eq,84)
Optimization: 28 14
Answer: 28
preference(1,(1,1),1,for(atom(hasIngredient(7))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),6) preference(1,(1,4),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),6) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,50) output(67,better,66) output(67,better,84) output(67,better,32) output(84,better,66) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,50) output(39,better,66) output(42,better,47) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,32) output(42,better,84) output(61,better,66) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,32) output(58,better,50) output(58,better,66) output(58,better,18) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,42) output(18,worse,47) output(18,worse,67) output(67,worse,7) output(42,worse,7) output(61,worse,67) output(61,worse,50) output(66,worse,32) output(89,worse,7) output(21,worse,8) output(21,worse,62) output(21,worse,7) output(47,worse,7) output(58,worse,62) output(58,worse,89) output(58,worse,42) output(58,worse,7) output(39,eq,67) output(8,eq,62) output(47,eq,67) output(58,eq,67) output(58,eq,47) output(18,eq,50) output(58,eq,39)
Optimization: 24 8
Answer: 29
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(6))),4) preference(1,(1,4),1,for(atom(hasPrep(3))),2) preference(1,(1,5),1,for(atom(hasCost(5))),6) preference(1,(1,6),1,for(atom(hasIngredient(7))),7) preference(1,(1,7),1,for(atom(hasCost(4))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasCategory(3))),5) preference(1,(1,12),1,for(atom(hasCost(3))),2) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),6) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(67,better,84) output(67,better,32) output(84,better,66) output(8,better,62) output(8,better,89) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,66) output(42,better,47) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(62,better,67) output(62,better,47) output(62,better,66) output(62,better,39) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,50) output(67,worse,50) output(67,worse,7) output(39,worse,67) output(39,worse,50) output(42,worse,50) output(61,worse,67) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(62,worse,42) output(62,worse,18) output(66,worse,32) output(89,worse,50) output(21,worse,58) output(47,worse,50) output(21,eq,8) output(10,eq,58) output(8,eq,50) output(61,eq,66) output(21,eq,50) output(89,eq,18) output(47,eq,7)
Optimization: 23 14
Answer: 30
preference(1,(1,1),1,for(atom(hasPrepTime(1))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasCost(3))),2) preference(1,(1,5),1,for(atom(hasPrep(3))),6) preference(1,(1,6),1,for(atom(hasIngredient(7))),7) preference(1,(1,7),1,for(atom(hasCost(4))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasCategory(3))),5) preference(1,(1,12),1,for(atom(hasIngredient(9))),1) preference(1,(1,13),1,for(atom(hasCost(2))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,47) output(18,better,67) output(18,better,66) output(50,better,66) output(50,better,84) output(50,better,32) output(67,better,66) output(67,better,84) output(67,better,32) output(84,better,66) output(8,better,62) output(8,better,89) output(8,better,67) output(8,better,42) output(8,better,47) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,66) output(42,better,47) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(42,better,84) output(62,better,67) output(62,better,66) output(62,better,39) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,62) output(58,better,89) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,47) output(58,better,66) output(58,better,39) output(58,better,18) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,50) output(67,worse,50) output(67,worse,7) output(39,worse,67) output(39,worse,50) output(42,worse,50) output(61,worse,67) output(61,worse,50) output(62,worse,89) output(62,worse,50) output(62,worse,42) output(62,worse,47) output(62,worse,18) output(66,worse,32) output(89,worse,50) output(21,worse,58) output(47,worse,50) output(21,eq,8) output(10,eq,58) output(8,eq,50) output(61,eq,66) output(21,eq,50)
Optimization: 22 14
Answer: 31
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasCost(3))),7) preference(1,(1,6),1,for(atom(hasPrep(2))),6) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasIngredient(7))),1) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasIngredient(10))),8) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,32) output(67,better,7) output(67,better,32) output(84,better,66) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,67) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,47) output(50,worse,84) output(67,worse,84) output(8,worse,89) output(42,worse,47) output(42,worse,84) output(62,worse,89) output(21,worse,8) output(21,worse,62) output(21,worse,89) output(21,worse,47) output(58,worse,62) output(58,worse,89) output(58,worse,47) output(67,eq,50) output(8,eq,62) output(50,eq,66) output(67,eq,66) output(62,eq,47) output(8,eq,47) output(58,eq,18)
Optimization: 21 13
Answer: 32
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(7))),4) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,32) output(84,better,66) output(8,better,89) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(39,better,67) output(39,better,50) output(39,better,66) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,89) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,89) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(18,worse,47) output(50,worse,84) output(67,worse,84) output(8,worse,84) output(42,worse,47) output(42,worse,84) output(62,worse,84) output(89,worse,47) output(89,worse,84) output(21,worse,84) output(47,worse,84) output(58,worse,62) output(58,worse,89) output(58,worse,47) output(58,worse,84) output(8,eq,62) output(50,eq,66) output(62,eq,47) output(8,eq,47) output(58,eq,18)
Optimization: 20 13
Answer: 33
preference(1,(1,1),1,for(atom(hasIngredient(12))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),6) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(10))),8) preference(1,(1,6),1,for(atom(hasCost(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasIngredient(7))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,32) output(84,better,66) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(10,worse,89) output(18,worse,47) output(50,worse,84) output(67,worse,84) output(8,worse,89) output(42,worse,47) output(62,worse,89) output(21,worse,89) output(58,worse,62) output(58,worse,89) output(58,worse,47) output(8,eq,62) output(50,eq,66) output(62,eq,47) output(8,eq,47) output(58,eq,18) output(42,eq,84)
Optimization: 17 13
Answer: 34
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),8) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasCost(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(4))),4) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasIngredient(10))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasPrepTime(2))),6) preference(1,less(weight)) output(10,better,21) output(10,better,8) output(10,better,58) output(10,better,62) output(10,better,89) output(10,better,47) output(10,better,42) output(10,better,66) output(10,better,50) output(10,better,67) output(10,better,39) output(10,better,7) output(10,better,61) output(10,better,18) output(10,better,84) output(10,better,32) output(18,better,42) output(18,better,67) output(18,better,66) output(18,better,50) output(50,better,32) output(67,better,50) output(67,better,66) output(67,better,7) output(67,better,32) output(84,better,66) output(8,better,67) output(8,better,50) output(8,better,42) output(8,better,66) output(8,better,39) output(8,better,18) output(8,better,7) output(8,better,61) output(8,better,32) output(8,better,84) output(39,better,67) output(39,better,50) output(39,better,66) output(42,better,50) output(42,better,67) output(42,better,66) output(42,better,61) output(42,better,7) output(42,better,32) output(61,better,67) output(61,better,50) output(61,better,66) output(62,better,67) output(62,better,50) output(62,better,42) output(62,better,66) output(62,better,39) output(62,better,18) output(62,better,84) output(62,better,7) output(62,better,61) output(62,better,32) output(66,better,32) output(89,better,42) output(89,better,47) output(89,better,67) output(89,better,66) output(89,better,50) output(89,better,18) output(89,better,61) output(89,better,7) output(89,better,84) output(89,better,32) output(21,better,58) output(21,better,8) output(21,better,62) output(21,better,67) output(21,better,47) output(21,better,42) output(21,better,66) output(21,better,50) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,61) output(21,better,32) output(21,better,84) output(47,better,67) output(47,better,50) output(47,better,66) output(47,better,61) output(47,better,84) output(47,better,7) output(47,better,32) output(58,better,67) output(58,better,50) output(58,better,42) output(58,better,66) output(58,better,39) output(58,better,7) output(58,better,61) output(58,better,32) output(58,better,84) output(18,worse,47) output(50,worse,84) output(67,worse,84) output(8,worse,89) output(42,worse,47) output(62,worse,89) output(21,worse,89) output(58,worse,62) output(58,worse,89) output(58,worse,47) output(8,eq,62) output(50,eq,66) output(62,eq,47) output(8,eq,47) output(58,eq,18) output(42,eq,84)
Optimization: 16 13
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.083 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 34+
  Optimum    : unknown
Optimization : 16 13
Calls        : 1
Time         : 597.483s (Solving: 593.46s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2374.781s
Threads      : 4        (Winner: 4)

Choices      : 20852977 (Domain: 477183)
Conflicts    : 10707872 (Analyzed: 10707872)
Restarts     : 12605    (Average: 849.49 Last: 508548)
Model-Level  : 175.1   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 10786007 (Deleted: 10245306)
  Binary     : 238      (Ratio:   0.00%)
  Ternary    : 2302     (Ratio:   0.02%)
  Conflict   : 10707872 (Average Length:  361.1 Ratio:  99.28%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 78135    (Average Length:   47.7 Ratio:   0.72%) 
  Distributed: 26633    (Ratio:   0.25% Average LBD: 3.74) 
  Integrated : 79899    (Ratio: 300.00% Unit: 80 Average Jumps: 29.68)
Backjumps    : 10707872 (Average:  1.83 Max: 798 Sum: 19547636)
  Executed   : 10707871 (Average:  1.83 Max: 798 Sum: 19547525 Ratio: 100.00%)
  Bounded    : 1        (Average: 111.00 Max: 111 Sum:    111 Ratio:   0.00%)

Rules        : 1185685 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21888   
Bodies       : 19794   
  Sum        : 230     
  Count      : 14      
Equivalences : 9875     (Atom=Atom: 1163 Body=Body: 474 Other: 8238)
Tight        : Yes
Variables    : 17395    (Eliminated:    0 Frozen: 8071)
Constraints  : 1200266  (Binary:  98.9% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(3)) ; 
  5 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(3)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCost(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(3)) ; 
  6 :: atom(hasCost(5)) ; 
  7 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(3)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  8 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) 
}.
