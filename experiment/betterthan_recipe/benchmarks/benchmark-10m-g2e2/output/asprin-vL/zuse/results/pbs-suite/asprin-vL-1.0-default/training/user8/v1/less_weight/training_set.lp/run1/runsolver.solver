asprin_vL version 1.0
Reading from stdin
-:1306:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1316:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1331:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1412:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1673:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1686:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1863:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1992:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2064:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2068:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2068:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2074:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2173:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2199:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2319:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2353:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2375:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1223:1-16: info: no atoms over signature occur in program:
  output/3

-:1215:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1216:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(7,eq,33) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(39,eq,4) output(4,eq,46) output(46,eq,60) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(76,eq,4) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(32,eq,4) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(4,eq,60) output(39,eq,46) output(76,eq,46) output(52,eq,4) output(32,eq,39) output(33,eq,52) output(92,eq,52) output(7,eq,32) output(78,eq,33) output(78,eq,32) output(41,eq,52) output(7,eq,52) output(78,eq,52) output(33,eq,39) output(92,eq,39) output(41,eq,39) output(7,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(33,eq,46) output(92,eq,46) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(32,eq,60) output(52,eq,60) output(41,eq,76) output(7,eq,76) output(78,eq,76) output(41,eq,4) output(7,eq,4) output(72,eq,37) output(4,eq,37) output(42,eq,60) output(72,eq,60) output(33,eq,60) output(92,eq,60) output(39,eq,37) output(76,eq,37) output(32,eq,37) output(52,eq,37) output(33,eq,37) output(92,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,4) output(41,eq,60) output(7,eq,60) output(78,eq,60) output(41,eq,46) output(7,eq,46) output(78,eq,46) output(78,eq,39) output(78,eq,37) output(60,eq,79) output(4,eq,72) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(46,eq,79) output(37,eq,79) output(4,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(52,eq,72) output(39,eq,42) output(76,eq,42) output(32,eq,42) output(52,eq,42) output(4,eq,18) output(39,eq,18) output(76,eq,18) output(32,eq,18) output(33,eq,18) output(92,eq,18) output(41,eq,18) output(52,eq,18) output(33,eq,42) output(92,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(92,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 109 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasIngredient(9))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(3))),4) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(46,better,60) output(46,better,79) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(39,worse,4) output(39,worse,46) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,60) output(7,worse,46) output(32,worse,4) output(32,worse,46) output(33,worse,4) output(33,worse,46) output(41,worse,92) output(41,worse,4) output(41,worse,46) output(52,worse,4) output(52,worse,46) output(78,worse,33) output(78,worse,32) output(78,worse,52) output(78,worse,76) output(78,worse,4) output(78,worse,60) output(78,worse,46) output(78,worse,39) output(78,worse,37) output(76,worse,4) output(76,worse,46) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(4,eq,46) output(32,eq,76) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(92,eq,46) output(39,eq,60) output(76,eq,60) output(32,eq,60) output(52,eq,60) output(41,eq,76) output(72,eq,37) output(42,eq,60) output(72,eq,60) output(33,eq,60) output(39,eq,37) output(76,eq,37) output(32,eq,37) output(52,eq,37) output(33,eq,37) output(41,eq,37) output(41,eq,60) output(60,eq,79) output(39,eq,72) output(76,eq,72) output(37,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(39,eq,42) output(76,eq,42) output(32,eq,42) output(52,eq,42) output(39,eq,18) output(76,eq,18) output(32,eq,18) output(33,eq,18) output(41,eq,18) output(52,eq,18) output(33,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 91 14
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasIngredient(9))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(46,better,79) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(39,better,60) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(32,better,60) output(33,better,60) output(41,better,60) output(52,better,60) output(78,better,60) output(76,better,60) output(60,worse,79) output(39,worse,4) output(39,worse,46) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,46) output(32,worse,4) output(32,worse,46) output(33,worse,4) output(33,worse,46) output(41,worse,92) output(41,worse,4) output(41,worse,46) output(52,worse,4) output(52,worse,46) output(78,worse,4) output(78,worse,46) output(76,worse,4) output(76,worse,46) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(32,eq,76) output(18,eq,37) output(42,eq,37) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(78,eq,33) output(78,eq,32) output(41,eq,52) output(78,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(41,eq,76) output(78,eq,76) output(72,eq,37) output(39,eq,37) output(76,eq,37) output(32,eq,37) output(52,eq,37) output(33,eq,37) output(41,eq,37) output(7,eq,60) output(78,eq,39) output(78,eq,37) output(39,eq,72) output(76,eq,72) output(37,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(39,eq,42) output(76,eq,42) output(32,eq,42) output(52,eq,42) output(39,eq,18) output(76,eq,18) output(32,eq,18) output(33,eq,18) output(41,eq,18) output(52,eq,18) output(33,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 78 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(0))),8) preference(1,(1,2),1,for(atom(hasIngredient(9))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasCategory(3))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),8) preference(1,(1,9),1,for(atom(hasPrep(6))),8) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasIngredient(7))),6) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(46,better,60) output(46,better,79) output(72,better,37) output(72,better,60) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(32,better,76) output(32,better,39) output(32,better,60) output(32,better,37) output(32,better,18) output(33,better,76) output(33,better,39) output(33,better,60) output(33,better,37) output(33,better,18) output(41,better,39) output(41,better,76) output(41,better,37) output(41,better,60) output(41,better,18) output(52,better,39) output(52,better,60) output(52,better,37) output(52,better,18) output(60,worse,79) output(37,worse,79) output(39,worse,4) output(39,worse,46) output(39,worse,72) output(39,worse,79) output(39,worse,42) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,4) output(7,worse,46) output(32,worse,4) output(32,worse,46) output(33,worse,4) output(33,worse,46) output(41,worse,92) output(41,worse,4) output(41,worse,46) output(52,worse,4) output(52,worse,46) output(78,worse,33) output(78,worse,32) output(78,worse,52) output(78,worse,4) output(78,worse,46) output(76,worse,4) output(76,worse,46) output(76,worse,72) output(76,worse,79) output(76,worse,42) output(33,eq,32) output(32,eq,52) output(4,eq,46) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(41,eq,32) output(33,eq,52) output(41,eq,52) output(7,eq,39) output(92,eq,4) output(92,eq,46) output(39,eq,60) output(76,eq,60) output(7,eq,76) output(78,eq,76) output(39,eq,37) output(76,eq,37) output(7,eq,37) output(7,eq,60) output(78,eq,60) output(78,eq,39) output(78,eq,37) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(32,eq,42) output(52,eq,42) output(39,eq,18) output(76,eq,18) output(33,eq,42) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(33,eq,79) output(41,eq,79) output(52,eq,79)
Optimization: 68 14
Answer: 5
preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasCategory(5))),8) preference(1,(1,6),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(92,better,32) output(92,better,76) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(33,better,32) output(33,better,76) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,32) output(78,better,76) output(78,better,60) output(78,better,46) output(78,better,37) output(7,worse,33) output(7,worse,52) output(7,worse,39) output(7,worse,4) output(32,worse,52) output(32,worse,4) output(32,worse,39) output(41,worse,92) output(41,worse,52) output(41,worse,39) output(41,worse,4) output(76,worse,4) output(52,eq,39) output(39,eq,4) output(46,eq,60) output(32,eq,76) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(41,eq,32) output(76,eq,46) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(7,eq,32) output(78,eq,33) output(78,eq,52) output(33,eq,39) output(92,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(76,eq,60) output(32,eq,60) output(41,eq,76) output(7,eq,76) output(72,eq,37) output(42,eq,60) output(72,eq,60) output(76,eq,37) output(32,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,4) output(41,eq,60) output(7,eq,60) output(41,eq,46) output(7,eq,46) output(78,eq,39) output(60,eq,79) output(76,eq,72) output(46,eq,79) output(37,eq,79) output(76,eq,79) output(32,eq,72) output(76,eq,42) output(32,eq,42) output(76,eq,18) output(32,eq,18) output(41,eq,18) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(41,eq,79)
Optimization: 65 5
Answer: 6
preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,6),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(92,better,32) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(33,better,32) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,32) output(78,better,60) output(78,better,46) output(78,better,37) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(7,worse,33) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(32,worse,52) output(32,worse,76) output(32,worse,4) output(32,worse,39) output(41,worse,92) output(41,worse,52) output(41,worse,39) output(41,worse,76) output(41,worse,4) output(52,eq,39) output(39,eq,4) output(46,eq,60) output(76,eq,4) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(42,eq,37) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(7,eq,32) output(78,eq,33) output(78,eq,52) output(33,eq,39) output(92,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(32,eq,60) output(78,eq,76) output(72,eq,37) output(42,eq,60) output(72,eq,60) output(32,eq,37) output(41,eq,37) output(7,eq,37) output(78,eq,4) output(41,eq,60) output(7,eq,60) output(41,eq,46) output(7,eq,46) output(78,eq,39) output(60,eq,79) output(46,eq,79) output(37,eq,79) output(32,eq,72) output(32,eq,42) output(32,eq,18) output(41,eq,18) output(41,eq,42) output(41,eq,72) output(32,eq,79) output(41,eq,79)
Optimization: 61 4
Answer: 7
preference(1,(1,11),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,79) output(42,better,37) output(42,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,79) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,79) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(78,better,52) output(78,better,76) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(39,worse,4) output(39,worse,72) output(39,worse,42) output(39,worse,18) output(52,worse,4) output(52,worse,72) output(52,worse,42) output(52,worse,18) output(76,worse,4) output(76,worse,72) output(76,worse,42) output(76,worse,18) output(7,eq,33) output(33,eq,32) output(52,eq,39) output(46,eq,60) output(41,eq,92) output(92,eq,32) output(37,eq,60) output(32,eq,4) output(41,eq,32) output(39,eq,46) output(76,eq,46) output(7,eq,32) output(78,eq,33) output(78,eq,32) output(33,eq,4) output(92,eq,4) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(52,eq,60) output(41,eq,4) output(7,eq,4) output(39,eq,37) output(76,eq,37) output(52,eq,37) output(78,eq,4) output(60,eq,79) output(4,eq,72) output(4,eq,42) output(46,eq,79) output(37,eq,79) output(39,eq,79) output(76,eq,79) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(32,eq,42) output(4,eq,18) output(32,eq,18) output(33,eq,18) output(92,eq,18) output(41,eq,18) output(33,eq,42) output(92,eq,42) output(41,eq,42) output(41,eq,72) output(52,eq,79)
Optimization: 59 3
Answer: 8
preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasIngredient(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasCategory(1))),8) preference(1,less(weight)) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(42,better,37) output(42,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,79) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,79) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,72) output(41,better,79) output(78,better,52) output(78,better,76) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(39,worse,4) output(39,worse,42) output(52,worse,4) output(52,worse,42) output(76,worse,4) output(76,worse,42) output(7,eq,33) output(33,eq,32) output(52,eq,39) output(46,eq,60) output(41,eq,92) output(92,eq,32) output(18,eq,37) output(37,eq,60) output(18,eq,60) output(32,eq,4) output(41,eq,32) output(39,eq,46) output(76,eq,46) output(7,eq,32) output(78,eq,33) output(78,eq,32) output(33,eq,4) output(92,eq,4) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(52,eq,60) output(41,eq,4) output(7,eq,4) output(72,eq,37) output(72,eq,60) output(39,eq,37) output(76,eq,37) output(52,eq,37) output(78,eq,4) output(60,eq,79) output(4,eq,42) output(39,eq,72) output(76,eq,72) output(46,eq,79) output(37,eq,79) output(39,eq,79) output(76,eq,79) output(52,eq,72) output(32,eq,42) output(39,eq,18) output(76,eq,18) output(52,eq,18) output(33,eq,42) output(92,eq,42) output(41,eq,42) output(52,eq,79)
Optimization: 53 4
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),3) preference(1,(1,2),1,for(atom(hasCategory(3))),6) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasDifficulty(2))),2) preference(1,(1,5),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),8) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasPrep(6))),8) preference(1,(1,13),1,for(atom(hasCost(1))),3) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,79) output(37,better,79) output(39,better,4) output(39,better,37) output(39,better,79) output(42,better,37) output(42,better,60) output(92,better,79) output(7,better,39) output(7,better,4) output(7,better,37) output(7,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,60) output(52,better,37) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(76,better,18) output(4,worse,46) output(4,worse,60) output(4,worse,37) output(4,worse,72) output(4,worse,42) output(4,worse,18) output(37,worse,60) output(39,worse,46) output(39,worse,60) output(39,worse,72) output(39,worse,42) output(39,worse,18) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,46) output(92,worse,60) output(92,worse,37) output(92,worse,72) output(92,worse,18) output(92,worse,42) output(7,worse,33) output(7,worse,32) output(7,worse,76) output(7,worse,46) output(33,worse,32) output(33,worse,46) output(33,worse,72) output(52,worse,46) output(52,worse,72) output(52,worse,18) output(76,worse,46) output(76,worse,72) output(33,eq,76) output(41,eq,32) output(7,eq,52) output(92,eq,4) output(32,eq,72) output(52,eq,42) output(41,eq,72)
Optimization: 41 13
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(3))),5) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasIngredient(3))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),3) preference(1,(1,6),1,for(atom(hasIngredient(7))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),4) preference(1,(1,9),1,for(atom(hasCost(2))),5) preference(1,(1,10),1,for(atom(hasPrepTime(1))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),3) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCost(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,37) output(4,better,79) output(39,better,46) output(39,better,37) output(42,better,37) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,37) output(92,better,79) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,46) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,42) output(46,worse,60) output(46,worse,79) output(4,worse,60) output(4,worse,72) output(4,worse,18) output(37,worse,60) output(37,worse,79) output(39,worse,4) output(39,worse,60) output(39,worse,72) output(39,worse,42) output(39,worse,18) output(42,worse,60) output(92,worse,32) output(92,worse,76) output(92,worse,60) output(92,worse,72) output(92,worse,18) output(32,worse,72) output(32,worse,18) output(33,worse,18) output(41,worse,18) output(52,worse,39) output(52,worse,4) output(52,worse,60) output(52,worse,72) output(52,worse,42) output(52,worse,18) output(52,worse,79) output(76,worse,72) output(76,worse,18) output(7,eq,33) output(32,eq,76) output(92,eq,4) output(52,eq,37) output(4,eq,42) output(39,eq,79) output(92,eq,42)
Optimization: 38 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(10))),6) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasCategory(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(3))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasDifficulty(2))),8) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasCategory(3))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,14),1,for(atom(hasPrepTime(3))),6) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,79) output(4,better,18) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,79) output(7,better,39) output(7,better,76) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,46) output(76,better,60) output(76,better,18) output(18,worse,37) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(39,worse,4) output(39,worse,37) output(39,worse,72) output(39,worse,79) output(39,worse,42) output(92,worse,32) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,4) output(32,worse,72) output(33,worse,72) output(52,worse,4) output(52,worse,72) output(52,worse,42) output(76,worse,4) output(76,worse,72) output(76,worse,42) output(33,eq,32) output(92,eq,4) output(76,eq,37) output(4,eq,42) output(37,eq,79) output(76,eq,79) output(92,eq,42)
Optimization: 30 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasCost(2))),5) preference(1,(1,4),1,for(atom(hasPrep(0))),4) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(7))),2) preference(1,(1,7),1,for(atom(hasIngredient(10))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),8) preference(1,(1,9),1,for(atom(hasCategory(3))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasCost(1))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasIngredient(3))),6) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,39) output(7,better,76) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,79) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(60,worse,79) output(4,worse,72) output(37,worse,79) output(39,worse,4) output(39,worse,46) output(39,worse,60) output(39,worse,37) output(39,worse,72) output(39,worse,79) output(39,worse,42) output(39,worse,18) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,4) output(32,worse,4) output(32,worse,72) output(52,worse,4) output(52,worse,72) output(78,worse,33) output(76,worse,4) output(76,worse,72) output(76,worse,42) output(76,worse,18) output(92,eq,4) output(41,eq,72)
Optimization: 27 14
Answer: 13
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasCost(1))),8) preference(1,(1,3),1,for(atom(hasIngredient(7))),6) preference(1,(1,4),1,for(atom(hasIngredient(3))),7) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),4) preference(1,(1,8),1,for(atom(hasPrep(0))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(1))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),7) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,79) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,60) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,79) output(76,better,18) output(18,worse,37) output(46,worse,79) output(60,worse,79) output(37,worse,79) output(39,worse,4) output(39,worse,72) output(39,worse,42) output(92,worse,52) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,37) output(7,worse,46) output(32,worse,52) output(32,worse,4) output(32,worse,72) output(32,worse,42) output(76,worse,4) output(76,worse,72) output(76,worse,42) output(33,eq,52) output(4,eq,42)
Optimization: 25 14
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(3))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),2) preference(1,(1,4),1,for(atom(hasPrep(0))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(46,better,60) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,18) output(18,worse,37) output(46,worse,79) output(60,worse,79) output(4,worse,42) output(4,worse,79) output(37,worse,79) output(39,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,42) output(92,worse,79) output(32,worse,52) output(32,worse,79) output(33,worse,79) output(41,worse,79) output(52,worse,79) output(76,worse,79) output(18,eq,60) output(92,eq,4) output(72,eq,37) output(39,eq,42) output(76,eq,42)
Optimization: 24 6
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(3))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,42) output(76,better,18) output(46,worse,79) output(60,worse,79) output(4,worse,42) output(4,worse,79) output(37,worse,79) output(39,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,42) output(92,worse,79) output(52,worse,79) output(76,worse,79) output(33,eq,32) output(52,eq,39) output(41,eq,32) output(92,eq,4) output(32,eq,79) output(33,eq,79) output(41,eq,79)
Optimization: 21 6
Answer: 16
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasIngredient(3))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,18) output(37,better,60) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,42) output(76,better,18) output(46,worse,79) output(60,worse,79) output(4,worse,42) output(4,worse,79) output(37,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,42) output(92,worse,79) output(33,eq,32) output(52,eq,39) output(41,eq,32) output(92,eq,4) output(39,eq,79) output(76,eq,79) output(52,eq,79)
Optimization: 18 6
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),5) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasCategory(1))),6) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasIngredient(9))),5) preference(1,(1,6),1,for(atom(hasCost(3))),3) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasCategory(3))),5) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasCost(1))),8) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),1) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(46,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,39) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(60,worse,79) output(39,worse,4) output(32,worse,52) output(33,worse,32) output(33,worse,76) output(33,worse,52) output(32,eq,76) output(18,eq,37) output(92,eq,52) output(33,eq,4) output(37,eq,79) output(39,eq,42)
Optimization: 12 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(3))),1) preference(1,(1,2),1,for(atom(hasCategory(5))),3) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,6),1,for(atom(hasCategory(4))),2) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(4,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(33,eq,32) output(46,eq,60) output(37,eq,60) output(41,eq,32) output(92,eq,4)
Optimization: 11 13
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(1))),8) preference(1,(1,2),1,for(atom(hasCost(3))),2) preference(1,(1,3),1,for(atom(hasDifficulty(1))),7) preference(1,(1,4),1,for(atom(hasCategory(5))),4) preference(1,(1,5),1,for(atom(hasPrep(2))),2) preference(1,(1,6),1,for(atom(hasIngredient(3))),1) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasIngredient(7))),1) preference(1,(1,14),1,for(atom(hasCategory(4))),2) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(46,worse,60) output(4,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(32,eq,52) output(37,eq,60) output(92,eq,4)
Optimization: 10 14
Answer: 20
preference(1,(1,1),1,for(atom(hasIngredient(3))),1) preference(1,(1,2),1,for(atom(hasCost(3))),2) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCategory(3))),4) preference(1,(1,5),1,for(atom(hasIngredient(7))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasCost(1))),2) preference(1,(1,8),1,for(atom(hasDifficulty(2))),5) preference(1,(1,9),1,for(atom(hasCategory(4))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),4) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(4,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(32,eq,52) output(37,eq,60) output(92,eq,4)
Optimization: 9 14
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasIngredient(9))),4) preference(1,(1,3),1,for(atom(hasIngredient(7))),2) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,10),1,for(atom(hasCost(3))),3) preference(1,(1,11),1,for(atom(hasIngredient(12))),1) preference(1,(1,13),1,for(atom(hasDifficulty(2))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),4) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,79) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,18) output(4,worse,42) output(39,worse,42) output(7,worse,33) output(32,worse,42) output(52,worse,42) output(76,worse,42) output(39,eq,4) output(92,eq,42)
Optimization: 8 13
Answer: 22
preference(1,(1,2),1,for(atom(hasPrepTime(3))),1) preference(1,(1,3),1,for(atom(hasCategory(1))),8) preference(1,(1,4),1,for(atom(hasCost(1))),7) preference(1,(1,5),1,for(atom(hasCategory(3))),6) preference(1,(1,6),1,for(atom(hasCategory(4))),2) preference(1,(1,7),1,for(atom(hasCost(3))),2) preference(1,(1,8),1,for(atom(hasIngredient(10))),2) preference(1,(1,10),1,for(atom(hasCost(4))),2) preference(1,(1,11),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(4))),2) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(33,eq,32) output(41,eq,32) output(92,eq,4)
Optimization: 7 12
Answer: 23
preference(1,(1,2),1,for(atom(hasCategory(3))),6) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasDifficulty(1))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),1) preference(1,(1,11),1,for(atom(hasCost(1))),7) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasIngredient(3))),6) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,76) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(4,worse,42) output(39,worse,42) output(92,worse,32) output(39,eq,4) output(92,eq,52) output(78,eq,33)
Optimization: 6 9
Answer: 24
preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasIngredient(3))),6) preference(1,(1,4),1,for(atom(hasCost(3))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasDifficulty(2))),8) preference(1,(1,8),1,for(atom(hasIngredient(4))),2) preference(1,(1,9),1,for(atom(hasCategory(5))),7) preference(1,(1,10),1,for(atom(hasCost(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(10))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(52,eq,39) output(41,eq,92) output(92,eq,32) output(41,eq,32) output(4,eq,42)
Optimization: 5 12
Answer: 25
preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(7))),5) preference(1,(1,5),1,for(atom(hasCategory(1))),8) preference(1,(1,7),1,for(atom(hasIngredient(4))),2) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasIngredient(3))),5) preference(1,(1,13),1,for(atom(hasCategory(3))),2) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,76) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(33,eq,32) output(32,eq,52) output(33,eq,52) output(4,eq,42)
Optimization: 4 11
Answer: 26
preference(1,(1,1),1,for(atom(hasCategory(3))),4) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasPrepTime(3))),5) preference(1,(1,6),1,for(atom(hasCategory(1))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),5) preference(1,(1,8),1,for(atom(hasIngredient(7))),2) preference(1,(1,9),1,for(atom(hasCost(1))),8) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasPrepTime(2))),3) preference(1,(1,13),1,for(atom(hasIngredient(3))),2) preference(1,(1,14),1,for(atom(hasCost(3))),5) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(32,worse,52) output(41,worse,92) output(4,eq,42)
Optimization: 3 12
Answer: 27
preference(1,(1,1),1,for(atom(hasCategory(3))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),2) preference(1,(1,4),1,for(atom(hasCost(3))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),5) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,11),1,for(atom(hasCost(4))),1) preference(1,(1,12),1,for(atom(hasIngredient(7))),2) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(7,worse,33) output(4,eq,42)
Optimization: 2 13
Answer: 28
preference(1,(1,1),1,for(atom(hasIngredient(12))),3) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasCost(3))),7) preference(1,(1,4),1,for(atom(hasIngredient(4))),4) preference(1,(1,5),1,for(atom(hasCategory(3))),8) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasCost(4))),4) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasCost(1))),5) preference(1,(1,11),1,for(atom(hasPrep(2))),7) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18) output(32,eq,52)
Optimization: 1 13
Answer: 29
preference(1,(1,1),1,for(atom(hasCategory(3))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),8) preference(1,(1,5),1,for(atom(hasIngredient(12))),2) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasCost(4))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCost(3))),5) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18)
Optimization: 0 14
Answer: 30
preference(1,(1,1),1,for(atom(hasCategory(3))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),1) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,5),1,for(atom(hasIngredient(12))),2) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasCost(1))),7) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),4) preference(1,(1,10),1,for(atom(hasPrepTime(3))),3) preference(1,(1,11),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasPrep(1))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasCost(3))),5) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(46,better,79) output(60,better,79) output(72,better,37) output(72,better,60) output(4,better,46) output(4,better,60) output(4,better,37) output(4,better,72) output(4,better,42) output(4,better,79) output(4,better,18) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,37) output(39,better,72) output(39,better,79) output(39,better,42) output(39,better,18) output(42,better,37) output(42,better,60) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,60) output(92,better,37) output(92,better,72) output(92,better,18) output(92,better,42) output(92,better,79) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,37) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,37) output(32,better,72) output(32,better,42) output(32,better,18) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,60) output(33,better,37) output(33,better,72) output(33,better,18) output(33,better,42) output(33,better,79) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,18) output(41,better,42) output(41,better,72) output(41,better,79) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,37) output(52,better,72) output(52,better,42) output(52,better,18) output(52,better,79) output(78,better,33) output(78,better,32) output(78,better,52) output(78,better,76) output(78,better,4) output(78,better,60) output(78,better,46) output(78,better,39) output(78,better,37) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,37) output(76,better,72) output(76,better,79) output(76,better,42) output(76,better,18)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Progression : 0 [ 2;13] (Error: 5.5)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 30+
  Optimum    : unknown
Optimization : 0 13
Calls        : 1
Time         : 597.501s (Solving: 593.65s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2376.283s
Threads      : 4        (Winner: 4)

Choices      : 12958218 (Domain: 470262)
Conflicts    : 9291641  (Analyzed: 9291639)
Restarts     : 8487     (Average: 1094.81 Last: 681607)
Model-Level  : 49.4    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 9375827  (Deleted: 9076085)
  Binary     : 616      (Ratio:   0.01%)
  Ternary    : 3753     (Ratio:   0.04%)
  Conflict   : 9291639  (Average Length:  403.2 Ratio:  99.10%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 84188    (Average Length:   51.8 Ratio:   0.90%) 
  Distributed: 28070    (Ratio:   0.30% Average LBD: 3.65) 
  Integrated : 84210    (Ratio: 300.00% Unit: 240 Average Jumps: 10.65)
Backjumps    : 9291639  (Average:  1.31 Max: 589 Sum: 12154835)
  Executed   : 9291638  (Average:  1.31 Max: 589 Sum: 12154767 Ratio: 100.00%)
  Bounded    : 1        (Average: 68.00 Max:  68 Sum:     68 Ratio:   0.00%)

Rules        : 1127591 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 21300   
Bodies       : 19728   
  Sum        : 218     
  Count      : 14      
Equivalences : 9665     (Atom=Atom: 1103 Body=Body: 450 Other: 8112)
Tight        : Yes
Variables    : 17371    (Eliminated:    0 Frozen: 8047)
Constraints  : 1142718  (Binary:  98.8% Ternary:   0.8% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(5)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCost(1)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCost(3)) ; 
  5 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCategory(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasCost(4)) ; 
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCategory(5)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(1)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(1)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(4)) ; 
  2 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(4)) ; 
  8 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasCost(2)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(3)) 
}.
