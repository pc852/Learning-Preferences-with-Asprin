asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1168:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1169:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1199:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(21,better,50) output(62,better,67) output(21,better,67) output(42,better,62) output(62,better,89) output(42,better,89) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(7,better,67) output(58,better,84) output(42,better,84) output(7,better,84) output(10,worse,39) output(50,worse,58) output(58,worse,62) output(8,worse,21) output(7,worse,42) output(50,worse,62) output(8,worse,58) output(21,worse,62) output(8,worse,62) output(50,worse,89) output(8,worse,89) output(67,eq,84) output(18,eq,47) output(8,eq,67) output(21,eq,58) output(8,eq,50) output(50,eq,67) output(8,eq,84) output(50,eq,84)
Optimization: 24 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(8))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),3,for(atom(hasCategory(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(21,better,50) output(62,better,67) output(21,better,67) output(42,better,62) output(62,better,89) output(42,better,89) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(8,better,50) output(7,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(10,worse,39) output(50,worse,58) output(58,worse,62) output(8,worse,21) output(18,worse,47) output(7,worse,42) output(50,worse,62) output(8,worse,58) output(21,worse,62) output(8,worse,62) output(50,worse,89) output(8,worse,89) output(67,eq,84) output(21,eq,58) output(50,eq,67) output(50,eq,84)
Optimization: 21 6
Answer: 3
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(8,better,21) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(42,better,67) output(50,better,62) output(8,better,50) output(8,better,58) output(8,better,62) output(7,better,67) output(8,better,84) output(42,better,84) output(7,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,worse,50) output(62,worse,67) output(66,worse,32) output(21,worse,67) output(62,worse,84) output(21,worse,84) output(58,worse,67) output(58,worse,84) output(67,eq,84) output(18,eq,47) output(7,eq,42) output(21,eq,58) output(50,eq,67) output(50,eq,84)
Optimization: 16 2
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(58,better,62) output(8,better,21) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(42,better,67) output(50,better,62) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(42,better,84) output(7,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,worse,50) output(62,worse,67) output(67,worse,84) output(66,worse,32) output(62,worse,84) output(21,worse,84) output(58,worse,84) output(21,eq,67) output(18,eq,47) output(7,eq,42) output(58,eq,67) output(21,eq,58) output(50,eq,84)
Optimization: 13 2
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(58,better,62) output(8,better,21) output(18,better,47) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(42,better,67) output(50,better,62) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(42,better,84) output(7,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,worse,50) output(62,worse,67) output(67,worse,84) output(66,worse,32) output(62,worse,84) output(21,worse,84) output(58,worse,84) output(21,eq,67) output(7,eq,42) output(58,eq,67) output(21,eq,58) output(50,eq,84)
Optimization: 12 2
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(62,better,67) output(66,better,32) output(21,better,67) output(18,better,47) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,eq,50) output(58,eq,62) output(7,eq,42)
Optimization: 9 3
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(62,better,67) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(67,worse,84) output(7,worse,42) output(21,eq,50) output(58,eq,62)
Optimization: 6 3
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(67,better,84) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(7,worse,42) output(21,eq,50) output(58,eq,62)
Optimization: 5 3
Progression : [1;5] (Error: 4)
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(atom(hasPrepTime(1))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(5))),()) preference(1,(1,1),3,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(58,better,62) output(62,better,67) output(67,better,84) output(8,better,21) output(21,better,67) output(18,better,47) output(7,better,42) output(42,better,62) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,eq,50)
Optimization: 4 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(2))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,(1,4),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasPrep(5))),()) preference(1,(1,1),3,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(10,better,39) output(21,better,50) output(58,better,62) output(62,better,67) output(67,better,84) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(7,better,42) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,39) output(21,better,50) output(50,better,58) output(58,better,62) output(62,better,67) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(7,better,42) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(67,worse,84)
Optimization: 1 5
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,2),3,for(atom(hasPrepTime(2))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(58,better,62) output(62,better,67) output(67,better,84) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(7,better,42) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,eq,50)
Optimization: 1 4
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(10,better,39) output(50,better,58) output(58,better,62) output(62,better,67) output(67,better,84) output(66,better,32) output(8,better,21) output(21,better,67) output(18,better,47) output(7,better,42) output(42,better,62) output(62,better,89) output(58,better,89) output(42,better,89) output(7,better,62) output(8,better,67) output(62,better,84) output(21,better,84) output(58,better,67) output(42,better,67) output(50,better,62) output(21,better,58) output(8,better,50) output(8,better,58) output(21,better,62) output(8,better,62) output(7,better,67) output(50,better,67) output(8,better,84) output(58,better,84) output(42,better,84) output(7,better,84) output(50,better,84) output(7,better,89) output(50,better,89) output(21,better,89) output(8,better,89) output(21,eq,50)
Optimization: 1 3
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 13.311s (Solving: 5.82s 1st Model: 0.47s Unsat: 3.94s)
CPU Time     : 30.599s
Threads      : 4        (Winner: 1)

Choices      : 130847   (Domain: 1768)
Conflicts    : 19507    (Analyzed: 19502)
Restarts     : 43       (Average: 453.53 Last: 2459)
Model-Level  : 463.3   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 36252    (Deleted: 1013)
  Binary     : 1869     (Ratio:   5.16%)
  Ternary    : 5879     (Ratio:  16.22%)
  Conflict   : 19502    (Average Length:  108.0 Ratio:  53.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 16750    (Average Length:   41.2 Ratio:  46.20%) 
  Distributed: 5667     (Ratio:  29.06% Average LBD: 3.11) 
  Integrated : 16998    (Ratio: 299.95% Unit: 178 Average Jumps: 70.02)
Backjumps    : 19502    (Average:  5.65 Max: 1539 Sum: 110159)
  Executed   : 19486    (Average:  5.63 Max: 1539 Sum: 109766 Ratio:  99.64%)
  Bounded    : 16       (Average: 24.56 Max:  37 Sum:    393 Ratio:   0.36%)

Rules        : 3655444 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 603804  
Bodies       : 742964  
  Count      : 1392    
Equivalences : 1834764  (Atom=Atom: 540218 Body=Body: 588759 Other: 705787)
Tight        : Yes
Variables    : 101569   (Eliminated:    0 Frozen: 36289)
Constraints  : 3212848  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(8)) >> not atom(hasCost(3))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCategory(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> not atom(hasPrep(6))  >> not atom(hasCategory(5))  || not atom(hasCategory(2))  ; 
  not atom(hasCategory(3))  >> atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasPrep(2)) >> not atom(hasCategory(5))  || not atom(hasCost(3))  ; 
  not atom(hasCategory(3))  >> atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasPrep(2)) >> not atom(hasCategory(2))  || not atom(hasCost(4))  ; 
  not atom(hasCategory(3))  >> atom(hasCost(2)) >> not atom(hasCategory(2))  || atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasPrepTime(3)) >> not atom(hasPrep(1))  || not atom(hasPrep(2))  ; 
  not atom(hasPrep(4))  >> not atom(hasIngredient(1))  >> not atom(hasDifficulty(4))  || atom(hasCategory(1)) ; 
  atom(hasCategory(2)) >> atom(hasCost(2)) >> not atom(hasPrep(1))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasPrepTime(2))  >> not atom(hasCategory(3))  || not atom(hasCategory(2))  ; 
  not atom(hasPrep(4))  >> not atom(hasIngredient(1))  >> not atom(hasDifficulty(4))  || atom(hasCategory(1)) ; 
  atom(hasPrep(2)) >> atom(hasIngredient(7)) >> not atom(hasPrep(1))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> not atom(hasPrepTime(2))  >> not atom(hasCategory(3))  || not atom(hasCategory(2))  ; 
  not atom(hasPrep(4))  >> not atom(hasIngredient(1))  >> not atom(hasDifficulty(4))  || atom(hasCategory(1)) ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(9)) >> atom(hasCost(1)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> atom(hasCategory(3)) || not atom(hasIngredient(9))  ; 
  atom(hasCategory(5)) >> atom(hasPrep(5)) >> atom(hasDifficulty(1)) || atom(hasPrepTime(1)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(3))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(7)) >> not atom(hasPrepTime(1))  || not atom(hasCost(3))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(5)) >> atom(hasCost(1)) || not atom(hasDifficulty(3))  ; 
  atom(hasCost(4)) >> not atom(hasDifficulty(4))  >> atom(hasCategory(3)) || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(12)) >> atom(hasCategory(3)) || not atom(hasIngredient(9))  ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(5)) >> atom(hasDifficulty(1)) || not atom(hasIngredient(10))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(12)) >> not atom(hasCategory(4))  || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(5)) >> atom(hasCost(1)) || not atom(hasDifficulty(3))  ; 
  atom(hasCost(4)) >> not atom(hasDifficulty(4))  >> atom(hasCategory(3)) || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(7)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(5)) >> atom(hasCategory(3)) >> atom(hasPrepTime(2)) || not atom(hasPrepTime(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(0)) >> not atom(hasIngredient(3))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(3)) >> not atom(hasPrep(1))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> atom(hasCategory(3)) >> atom(hasPrepTime(2)) || not atom(hasPrepTime(2))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(0)) >> atom(hasPrepTime(2)) || not atom(hasCategory(2))  ; 
  atom(hasCost(4)) >> atom(hasCost(2)) >> not atom(hasPrep(1))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasCost(2)) >> not atom(hasPrep(1))  || not atom(hasCost(4))  ; 
  atom(hasIngredient(12)) >> atom(hasPrep(0)) >> atom(hasPrepTime(2)) || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(3))  || not atom(hasCategory(2))  
}.
