asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1604:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(55,eq,52) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(8,eq,55) output(55,eq,91) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(51,eq,52) output(76,eq,67) output(8,eq,91) output(86,eq,55) output(57,eq,55) output(71,eq,8) output(55,eq,25) output(67,eq,25) output(8,eq,52) output(86,eq,94) output(57,eq,94) output(62,eq,78) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(57,eq,25) output(71,eq,55) output(86,eq,91) output(57,eq,91) output(71,eq,91) output(76,eq,52) output(71,eq,25)
Optimization: 40 0
Answer: 2
preference(1,(1,7),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(62,better,78) output(75,better,78) output(62,eq,75) output(86,eq,8) output(8,eq,94) output(55,eq,52) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(8,eq,55) output(55,eq,91) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(51,eq,52) output(76,eq,67) output(8,eq,91) output(86,eq,55) output(57,eq,55) output(71,eq,8) output(55,eq,25) output(67,eq,25) output(8,eq,52) output(86,eq,94) output(57,eq,94) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(57,eq,25) output(71,eq,55) output(86,eq,91) output(57,eq,91) output(71,eq,91) output(76,eq,52) output(71,eq,25)
Optimization: 38 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),2) preference(1,less(weight)) output(57,better,8) output(57,better,55) output(57,better,94) output(71,better,8) output(71,better,94) output(71,better,55) output(51,worse,67) output(51,worse,52) output(51,worse,25) output(8,worse,91) output(8,worse,52) output(8,worse,25) output(55,worse,52) output(55,worse,91) output(55,worse,25) output(86,worse,52) output(86,worse,25) output(86,worse,91) output(76,worse,67) output(76,worse,25) output(76,worse,52) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(52,eq,25) output(71,eq,57) output(8,eq,55) output(76,eq,51) output(67,eq,52) output(86,eq,55) output(67,eq,25) output(86,eq,94) output(62,eq,78) output(57,eq,52) output(71,eq,52) output(57,eq,25) output(57,eq,91) output(71,eq,91) output(71,eq,25)
Optimization: 34 14
Answer: 4
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(6))),5) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasCategory(3))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(8,better,94) output(8,better,55) output(8,better,91) output(57,better,55) output(57,better,94) output(57,better,91) output(71,better,94) output(71,better,55) output(71,better,91) output(86,better,55) output(86,better,94) output(86,better,91) output(55,worse,52) output(55,worse,25) output(62,worse,75) output(62,worse,78) output(75,eq,78) output(86,eq,8) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(55,eq,91) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(51,eq,52) output(76,eq,67) output(71,eq,8) output(67,eq,25) output(8,eq,52) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,25) output(8,eq,25) output(86,eq,25) output(57,eq,25) output(76,eq,52) output(71,eq,25)
Optimization: 28 12
Answer: 5
preference(1,(1,1),1,for(atom(hasCost(5))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),8) preference(1,(1,14),1,for(atom(hasCategory(2))),8) preference(1,less(weight)) output(62,better,78) output(57,better,8) output(57,better,55) output(57,better,91) output(71,better,8) output(71,better,55) output(71,better,91) output(75,better,78) output(86,better,8) output(86,better,55) output(86,better,91) output(76,better,51) output(76,better,67) output(51,worse,52) output(51,worse,25) output(67,worse,52) output(67,worse,25) output(8,worse,94) output(8,worse,52) output(8,worse,25) output(55,worse,52) output(55,worse,25) output(62,eq,75) output(52,eq,25) output(71,eq,57) output(8,eq,55) output(55,eq,91) output(51,eq,67) output(8,eq,91) output(86,eq,94) output(57,eq,94) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(76,eq,25) output(86,eq,25) output(57,eq,25) output(76,eq,52) output(71,eq,25)
Optimization: 27 5
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(6))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(67,better,25) output(8,better,25) output(55,better,25) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,25) output(71,better,8) output(71,better,94) output(71,better,55) output(71,better,25) output(86,better,25) output(76,better,51) output(76,better,25) output(51,worse,67) output(51,worse,52) output(51,worse,25) output(8,worse,91) output(8,worse,52) output(55,worse,52) output(55,worse,91) output(86,worse,52) output(86,worse,91) output(76,worse,67) output(76,worse,52) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(8,eq,94) output(71,eq,57) output(8,eq,55) output(67,eq,52) output(86,eq,55) output(86,eq,94) output(62,eq,78) output(57,eq,52) output(71,eq,52) output(57,eq,91) output(71,eq,91)
Optimization: 25 12
Answer: 7
preference(1,(1,10),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasPrep(2))),8) preference(1,(1,14),1,for(atom(hasCost(5))),8) preference(1,less(weight)) output(67,better,25) output(8,better,91) output(8,better,25) output(55,better,91) output(55,better,25) output(62,better,78) output(52,better,25) output(57,better,25) output(57,better,91) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,25) output(51,worse,67) output(51,worse,52) output(62,eq,75) output(86,eq,8) output(8,eq,94) output(55,eq,52) output(71,eq,57) output(57,eq,8) output(8,eq,55) output(67,eq,52) output(76,eq,67) output(86,eq,55) output(57,eq,55) output(71,eq,8) output(8,eq,52) output(86,eq,94) output(57,eq,94) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(71,eq,55) output(76,eq,52)
Optimization: 24 3
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(6))),5) preference(1,(1,9),1,for(atom(hasIngredient(9))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,25) output(55,better,25) output(52,better,25) output(57,better,55) output(57,better,94) output(57,better,25) output(57,better,91) output(71,better,25) output(86,better,55) output(86,better,94) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,25) output(51,worse,67) output(51,worse,52) output(55,worse,52) output(62,worse,78) output(71,worse,57) output(71,worse,8) output(71,worse,52) output(75,worse,78) output(62,eq,75) output(86,eq,8) output(57,eq,8) output(55,eq,91) output(67,eq,52) output(76,eq,67) output(8,eq,52) output(71,eq,94) output(86,eq,52) output(57,eq,52) output(51,eq,25) output(71,eq,55) output(71,eq,91) output(76,eq,52)
Optimization: 22 12
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),5) preference(1,(1,6),1,for(atom(hasPrep(3))),5) preference(1,(1,7),1,for(atom(hasIngredient(3))),5) preference(1,(1,8),1,for(atom(hasIngredient(6))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),2) preference(1,(1,10),1,for(atom(hasPrep(2))),3) preference(1,(1,13),1,for(atom(hasPrep(0))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,25) output(55,better,25) output(52,better,25) output(57,better,55) output(57,better,94) output(57,better,25) output(57,better,91) output(71,better,94) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,55) output(86,better,94) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,25) output(51,worse,67) output(51,worse,52) output(55,worse,52) output(62,worse,75) output(62,worse,78) output(75,eq,78) output(86,eq,8) output(71,eq,57) output(57,eq,8) output(55,eq,91) output(67,eq,52) output(76,eq,67) output(71,eq,8) output(8,eq,52) output(86,eq,52) output(57,eq,52) output(71,eq,52) output(51,eq,25) output(76,eq,52)
Optimization: 19 12
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(5))),8) preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasIngredient(12))),8) preference(1,(1,7),1,for(atom(hasCategory(3))),8) preference(1,(1,8),1,for(atom(hasCost(3))),8) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),8) preference(1,less(weight)) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,25) output(76,better,52) output(51,worse,67) output(62,eq,75) output(75,eq,78) output(86,eq,8) output(55,eq,52) output(52,eq,25) output(71,eq,57) output(57,eq,8) output(55,eq,91) output(51,eq,52) output(76,eq,67) output(71,eq,8) output(55,eq,25) output(62,eq,78) output(51,eq,25)
Optimization: 15 8
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasDifficulty(3))),6) preference(1,(1,6),1,for(atom(hasIngredient(9))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),7) preference(1,(1,8),1,for(atom(hasCategory(3))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasPrep(1))),3) preference(1,(1,11),1,for(atom(hasIngredient(10))),7) preference(1,(1,12),1,for(atom(hasDifficulty(2))),4) preference(1,(1,13),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(71,better,57) output(71,better,8) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(8,worse,94) output(62,worse,75) output(62,worse,78) output(52,worse,25) output(57,worse,8) output(57,worse,55) output(57,worse,94) output(57,worse,25) output(57,worse,91) output(71,worse,94) output(86,worse,8) output(86,worse,94) output(86,eq,55) output(57,eq,52)
Optimization: 14 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrepTime(1))),2) preference(1,(1,4),1,for(atom(hasCost(2))),1) preference(1,(1,5),1,for(atom(hasPrepTime(3))),1) preference(1,(1,6),1,for(atom(hasDifficulty(2))),7) preference(1,(1,7),1,for(atom(hasDifficulty(3))),6) preference(1,(1,8),1,for(atom(hasCategory(3))),5) preference(1,(1,9),1,for(atom(hasIngredient(7))),7) preference(1,(1,10),1,for(atom(hasIngredient(9))),2) preference(1,(1,11),1,for(atom(hasCategory(4))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),2) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(62,better,75) output(62,better,78) output(71,better,57) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,67) output(76,better,25) output(76,better,52) output(52,worse,25) output(57,worse,8) output(57,worse,55) output(57,worse,94) output(57,worse,25) output(57,worse,91) output(71,worse,8) output(86,worse,8) output(76,worse,51) output(57,eq,52)
Optimization: 10 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,2),1,for(atom(hasPrep(6))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),2) preference(1,(1,4),1,for(atom(hasCost(2))),5) preference(1,(1,5),1,for(atom(hasCategory(4))),6) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasCategory(3))),8) preference(1,(1,11),1,for(atom(hasDifficulty(3))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),1) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,25) output(76,better,52) output(51,worse,67) output(55,worse,91) output(62,worse,75) output(62,worse,78) output(52,worse,25) output(57,worse,8) output(71,worse,8) output(75,worse,78) output(76,worse,67) output(55,eq,25)
Optimization: 10 13
Answer: 14
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasIngredient(9))),4) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasCategory(3))),7) preference(1,(1,10),1,for(atom(hasCost(2))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasIngredient(12))),7) preference(1,(1,13),1,for(atom(hasDifficulty(3))),6) preference(1,(1,14),1,for(atom(hasDifficulty(2))),6) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(62,better,75) output(62,better,78) output(57,better,52) output(71,better,57) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(55,worse,25) output(52,worse,25) output(57,worse,8) output(57,worse,55) output(57,worse,94) output(57,worse,25) output(57,worse,91) output(71,worse,8) output(86,worse,8)
Optimization: 9 14
Answer: 15
preference(1,(1,1),1,for(atom(hasIngredient(10))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasIngredient(9))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasCategory(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasIngredient(3))),3) preference(1,less(weight)) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(55,better,91) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(51,worse,67) output(55,worse,25) output(62,worse,75) output(62,worse,78) output(52,worse,25) output(75,worse,78) output(55,eq,52) output(8,eq,25)
Optimization: 8 14
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(10))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasPrep(6))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),6) preference(1,(1,5),1,for(atom(hasPrep(1))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,7),1,for(atom(hasPrep(2))),6) preference(1,(1,8),1,for(atom(hasIngredient(9))),6) preference(1,(1,9),1,for(atom(hasDifficulty(2))),6) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,11),1,for(atom(hasCategory(3))),5) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasPrepTime(1))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(55,better,91) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(8,worse,52) output(55,worse,52) output(55,worse,25) output(62,worse,75) output(62,worse,78) output(75,worse,78) output(8,eq,25)
Optimization: 7 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasIngredient(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(9))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasCost(2))),7) preference(1,(1,10),1,for(atom(hasCategory(3))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),6) preference(1,(1,12),1,for(atom(hasCategory(4))),1) preference(1,(1,13),1,for(atom(hasIngredient(7))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(62,worse,75) output(62,worse,78) output(52,worse,25) output(75,worse,78) output(8,eq,94) output(8,eq,55)
Optimization: 6 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasIngredient(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(9))),1) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasCost(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(10))),6) preference(1,(1,11),1,for(atom(hasCategory(3))),6) preference(1,(1,12),1,for(atom(hasCategory(4))),1) preference(1,(1,13),1,for(atom(hasIngredient(7))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),7) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52) output(62,worse,75) output(62,worse,78) output(52,worse,25) output(75,worse,78) output(55,eq,25)
Optimization: 5 14
Answer: 19
preference(1,(1,1),1,for(atom(hasCategory(1))),7) preference(1,(1,2),1,for(atom(hasIngredient(4))),5) preference(1,(1,3),1,for(atom(hasPrep(2))),7) preference(1,(1,4),1,for(atom(hasPrepTime(3))),7) preference(1,(1,5),1,for(atom(hasCategory(4))),5) preference(1,(1,6),1,for(atom(hasCost(2))),1) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasIngredient(3))),6) preference(1,(1,9),1,for(atom(hasIngredient(12))),4) preference(1,(1,10),1,for(atom(hasPrep(6))),3) preference(1,(1,11),1,for(atom(hasIngredient(10))),6) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(3))),6) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(62,better,75) output(62,better,78) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 20
preference(1,(1,1),1,for(atom(hasIngredient(10))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),7) preference(1,(1,3),1,for(atom(hasPrepTime(1))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),6) preference(1,(1,8),1,for(atom(hasDifficulty(3))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(3))),6) preference(1,(1,11),1,for(atom(hasIngredient(12))),5) preference(1,(1,12),1,for(atom(hasCategory(3))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(62,better,75) output(62,better,78) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52)
Optimization: 0 13
Answer: 21
preference(1,(1,1),1,for(atom(hasCategory(3))),3) preference(1,(1,2),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasPrep(2))),5) preference(1,(1,4),1,for(atom(hasIngredient(9))),1) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasIngredient(3))),5) preference(1,(1,11),1,for(atom(hasIngredient(12))),7) preference(1,(1,12),1,for(atom(hasIngredient(4))),4) preference(1,(1,13),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(51,better,67) output(51,better,52) output(51,better,25) output(67,better,52) output(67,better,25) output(8,better,94) output(8,better,55) output(8,better,91) output(8,better,52) output(8,better,25) output(55,better,52) output(55,better,91) output(55,better,25) output(62,better,75) output(62,better,78) output(52,better,25) output(57,better,8) output(57,better,55) output(57,better,94) output(57,better,52) output(57,better,25) output(57,better,91) output(71,better,57) output(71,better,8) output(71,better,94) output(71,better,52) output(71,better,55) output(71,better,91) output(71,better,25) output(75,better,78) output(86,better,8) output(86,better,55) output(86,better,94) output(86,better,52) output(86,better,25) output(86,better,91) output(76,better,51) output(76,better,67) output(76,better,25) output(76,better,52)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.106 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 598.710s (Solving: 595.91s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2386.085s
Threads      : 4        (Winner: 4)

Choices      : 11208817 (Domain: 654242)
Conflicts    : 7435982  (Analyzed: 7435979)
Restarts     : 6699     (Average: 1110.01 Last: 249696)
Model-Level  : 94.9    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7450743  (Deleted: 7101278)
  Binary     : 2098     (Ratio:   0.03%)
  Ternary    : 2976     (Ratio:   0.04%)
  Conflict   : 7435979  (Average Length:  515.7 Ratio:  99.80%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 14764    (Average Length:   29.4 Ratio:   0.20%) 
  Distributed: 4926     (Ratio:   0.07% Average LBD: 3.32) 
  Integrated : 14778    (Ratio: 300.00% Unit: 17 Average Jumps: 5.53)
Backjumps    : 7435979  (Average:  1.38 Max: 1071 Sum: 10232724)
  Executed   : 7435978  (Average:  1.38 Max: 1071 Sum: 10232690 Ratio: 100.00%)
  Bounded    : 1        (Average: 34.00 Max:  34 Sum:     34 Ratio:   0.00%)

Rules        : 475638  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14522   
Bodies       : 18969   
  Sum        : 80      
  Count      : 14      
Equivalences : 7250     (Atom=Atom: 413 Body=Body: 174 Other: 6663)
Tight        : Yes
Variables    : 17079    (Eliminated:    0 Frozen: 7755)
Constraints  : 497028   (Binary:  97.4% Ternary:   1.9% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(6)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(6)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(3)) ; 
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(6)) ; 
  2 :: atom(hasCategory(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(5)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(0)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrep(2)) ; 
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(6)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasCategory(3)) ; 
  6 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(3)) 
}.
