asprin_vL version 1.0
Reading from stdin
-:1261:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1271:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1286:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1367:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1628:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1641:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1818:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1947:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2019:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2023:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2023:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2029:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2128:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2154:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2274:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1178:1-16: info: no atoms over signature occur in program:
  output/3

-:1170:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1171:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(79,eq,88) output(88,eq,49) output(49,eq,28) output(28,eq,86) output(86,eq,65) output(95,eq,98) output(50,eq,22) output(22,eq,19) output(19,eq,86) output(86,eq,68) output(68,eq,88) output(100,eq,28) output(86,eq,88) output(28,eq,68) output(19,eq,68) output(22,eq,86) output(50,eq,19) output(28,eq,65) output(19,eq,65) output(49,eq,86) output(100,eq,86) output(88,eq,28) output(79,eq,49) output(68,eq,49) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(79,eq,28) output(68,eq,28) output(86,eq,28) output(88,eq,86) output(79,eq,86) output(68,eq,86) output(22,eq,65) output(50,eq,65) output(49,eq,65) output(100,eq,65) output(88,eq,65) output(50,eq,86) output(22,eq,68) output(50,eq,68) output(49,eq,68) output(100,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(22,eq,88) output(49,eq,88) output(100,eq,88) output(88,eq,88) output(50,eq,88) output(79,eq,68) output(68,eq,68) output(79,eq,65) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(22,eq,28) output(50,eq,28) output(22,eq,49) output(50,eq,49) output(49,eq,49) output(100,eq,49)
Optimization: 64 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(50,better,22) output(95,better,98) output(22,worse,19) output(22,worse,86) output(22,worse,65) output(22,worse,68) output(22,worse,88) output(22,worse,28) output(22,worse,49) output(79,worse,88) output(79,worse,49) output(79,worse,28) output(79,worse,86) output(79,worse,68) output(79,worse,65) output(100,worse,28) output(100,worse,86) output(100,worse,65) output(100,worse,68) output(100,worse,88) output(100,worse,49) output(88,eq,49) output(49,eq,28) output(28,eq,86) output(86,eq,65) output(19,eq,86) output(86,eq,68) output(68,eq,88) output(86,eq,88) output(28,eq,68) output(19,eq,68) output(50,eq,19) output(28,eq,65) output(19,eq,65) output(49,eq,86) output(88,eq,28) output(68,eq,49) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(68,eq,28) output(86,eq,28) output(88,eq,86) output(68,eq,86) output(50,eq,65) output(49,eq,65) output(88,eq,65) output(50,eq,86) output(50,eq,68) output(49,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(49,eq,88) output(88,eq,88) output(50,eq,88) output(68,eq,68) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(50,eq,28) output(50,eq,49) output(49,eq,49)
Optimization: 62 14
Answer: 3
preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(50,better,22) output(50,better,68) output(50,better,88) output(19,better,68) output(19,better,88) output(28,better,68) output(28,better,88) output(100,better,68) output(100,better,88) output(49,better,68) output(49,better,88) output(86,better,68) output(86,better,88) output(22,worse,19) output(22,worse,86) output(22,worse,65) output(22,worse,28) output(22,worse,49) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(88,worse,65) output(79,worse,49) output(79,worse,28) output(79,worse,86) output(79,worse,65) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(68,worse,65) output(95,worse,98) output(79,eq,88) output(49,eq,28) output(28,eq,86) output(86,eq,65) output(19,eq,86) output(68,eq,88) output(100,eq,28) output(50,eq,19) output(28,eq,65) output(19,eq,65) output(49,eq,86) output(100,eq,86) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(86,eq,28) output(50,eq,65) output(49,eq,65) output(100,eq,65) output(50,eq,86) output(22,eq,68) output(88,eq,68) output(22,eq,88) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(50,eq,28) output(50,eq,49) output(49,eq,49) output(100,eq,49)
Optimization: 51 1
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),1) preference(1,(1,4),1,for(atom(hasIngredient(7))),3) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(12))),3) preference(1,(1,9),1,for(atom(hasCost(1))),2) preference(1,(1,10),1,for(atom(hasCategory(4))),2) preference(1,(1,11),1,for(atom(hasPrep(0))),2) preference(1,(1,12),1,for(atom(hasIngredient(3))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(4))),2) preference(1,less(weight)) output(50,better,22) output(50,better,19) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(19,better,68) output(19,better,49) output(19,better,88) output(19,better,28) output(100,better,28) output(100,better,68) output(100,better,88) output(100,better,49) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(22,worse,19) output(22,worse,86) output(22,worse,65) output(50,worse,65) output(50,worse,86) output(88,worse,86) output(88,worse,65) output(19,worse,86) output(19,worse,65) output(28,worse,86) output(28,worse,65) output(79,worse,86) output(79,worse,65) output(100,worse,86) output(100,worse,65) output(49,worse,86) output(49,worse,65) output(68,worse,86) output(68,worse,65) output(79,eq,88) output(88,eq,49) output(49,eq,28) output(86,eq,65) output(68,eq,88) output(28,eq,68) output(88,eq,28) output(79,eq,49) output(68,eq,49) output(28,eq,49) output(79,eq,28) output(68,eq,28) output(22,eq,68) output(49,eq,68) output(88,eq,68) output(28,eq,88) output(22,eq,88) output(49,eq,88) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(22,eq,28) output(22,eq,49) output(49,eq,49)
Optimization: 45 13
Progression : [ 6;45] (Error: 6.5)
Answer: 5
preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(50,better,22) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(19,better,68) output(19,better,65) output(19,better,88) output(19,better,28) output(100,better,28) output(100,better,65) output(100,better,68) output(100,better,88) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,28) output(22,worse,19) output(22,worse,86) output(22,worse,49) output(88,worse,49) output(88,worse,86) output(28,worse,86) output(28,worse,49) output(79,worse,49) output(79,worse,86) output(68,worse,49) output(68,worse,86) output(95,worse,98) output(79,eq,88) output(19,eq,86) output(68,eq,88) output(28,eq,68) output(50,eq,19) output(28,eq,65) output(49,eq,86) output(100,eq,86) output(88,eq,28) output(86,eq,49) output(19,eq,49) output(79,eq,28) output(68,eq,28) output(22,eq,65) output(88,eq,65) output(50,eq,86) output(22,eq,68) output(88,eq,68) output(28,eq,88) output(22,eq,88) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(79,eq,65) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(22,eq,28) output(50,eq,49) output(49,eq,49) output(100,eq,49)
Optimization: 43 3
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(3))),2) preference(1,(1,2),1,for(atom(hasCategory(4))),3) preference(1,(1,3),1,for(atom(hasPrep(6))),3) preference(1,(1,4),1,for(atom(hasIngredient(7))),3) preference(1,(1,5),1,for(atom(hasDifficulty(2))),3) preference(1,(1,6),1,for(atom(hasCategory(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasPrep(2))),3) preference(1,(1,14),1,for(atom(hasDifficulty(4))),1) preference(1,less(weight)) output(88,better,49) output(19,better,86) output(19,better,65) output(19,better,49) output(19,better,88) output(28,better,86) output(28,better,68) output(28,better,65) output(28,better,49) output(28,better,88) output(79,better,88) output(79,better,49) output(79,better,86) output(79,better,65) output(100,better,86) output(100,better,65) output(100,better,88) output(100,better,49) output(68,better,88) output(68,better,49) output(68,better,86) output(68,better,65) output(86,better,49) output(22,worse,19) output(22,worse,86) output(22,worse,65) output(22,worse,68) output(22,worse,88) output(22,worse,28) output(22,worse,49) output(50,worse,22) output(50,worse,19) output(50,worse,65) output(50,worse,86) output(50,worse,68) output(50,worse,88) output(50,worse,28) output(50,worse,49) output(88,worse,28) output(88,worse,68) output(19,worse,28) output(79,worse,28) output(100,worse,28) output(49,worse,28) output(49,worse,86) output(49,worse,65) output(49,worse,68) output(49,worse,88) output(68,worse,28) output(86,worse,68) output(86,worse,28) output(95,worse,98) output(86,eq,65) output(86,eq,88) output(19,eq,68) output(88,eq,86) output(88,eq,65) output(100,eq,68) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 41 14
Answer: 7
preference(1,(1,3),1,for(atom(hasCost(3))),8) preference(1,(1,4),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(12))),8) preference(1,(1,13),1,for(atom(hasCategory(4))),8) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(88,eq,49) output(49,eq,28) output(28,eq,86) output(86,eq,65) output(95,eq,98) output(50,eq,22) output(19,eq,86) output(86,eq,68) output(68,eq,88) output(86,eq,88) output(28,eq,68) output(19,eq,68) output(28,eq,65) output(19,eq,65) output(49,eq,86) output(88,eq,28) output(68,eq,49) output(86,eq,49) output(28,eq,49) output(19,eq,49) output(68,eq,28) output(86,eq,28) output(88,eq,86) output(68,eq,86) output(49,eq,65) output(88,eq,65) output(49,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(49,eq,88) output(88,eq,88) output(68,eq,68) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(49,eq,49)
Optimization: 38 4
Progression : [ 7;38] (Error: 4.42857)
Answer: 8
preference(1,(1,3),1,for(atom(hasCost(3))),8) preference(1,(1,8),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(22,better,19) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(88,worse,86) output(19,worse,86) output(28,worse,86) output(49,worse,86) output(68,worse,86) output(88,eq,49) output(49,eq,28) output(50,eq,22) output(68,eq,88) output(28,eq,68) output(19,eq,68) output(22,eq,86) output(28,eq,65) output(19,eq,65) output(100,eq,86) output(88,eq,28) output(68,eq,49) output(28,eq,49) output(19,eq,49) output(68,eq,28) output(79,eq,86) output(49,eq,65) output(88,eq,65) output(50,eq,86) output(49,eq,68) output(88,eq,68) output(28,eq,88) output(19,eq,88) output(49,eq,88) output(88,eq,88) output(68,eq,68) output(68,eq,65) output(86,eq,86) output(28,eq,28) output(19,eq,28) output(49,eq,49)
Optimization: 36 3
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasCategory(3))),7) preference(1,(1,3),1,for(atom(hasPrepTime(2))),7) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasPrep(1))),7) preference(1,(1,6),1,for(atom(hasCategory(1))),8) preference(1,(1,8),1,for(atom(hasPrep(0))),7) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasPrep(4))),7) preference(1,(1,11),1,for(atom(hasPrepTime(3))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(50,better,22) output(50,better,65) output(50,better,86) output(50,better,88) output(50,better,28) output(19,better,86) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,88) output(68,better,88) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(22,worse,19) output(22,worse,68) output(22,worse,49) output(50,worse,19) output(50,worse,68) output(88,worse,49) output(88,worse,68) output(28,worse,68) output(28,worse,49) output(49,worse,68) output(86,worse,68) output(86,worse,49) output(28,eq,86) output(86,eq,65) output(95,eq,98) output(86,eq,88) output(19,eq,68) output(22,eq,86) output(28,eq,65) output(88,eq,28) output(86,eq,28) output(88,eq,86) output(22,eq,65) output(88,eq,65) output(100,eq,68) output(28,eq,88) output(22,eq,88) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(22,eq,28) output(50,eq,49) output(49,eq,49)
Optimization: 35 13
Answer: 10
preference(1,(1,1),1,for(atom(hasCost(2))),8) preference(1,(1,2),1,for(atom(hasPrepTime(3))),7) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),7) preference(1,(1,5),1,for(atom(hasCost(1))),7) preference(1,(1,6),1,for(atom(hasCategory(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),7) preference(1,(1,9),1,for(atom(hasIngredient(9))),7) preference(1,(1,10),1,for(atom(hasPrep(7))),7) preference(1,(1,11),1,for(atom(hasDifficulty(3))),7) preference(1,(1,12),1,for(atom(hasIngredient(6))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(50,better,22) output(50,better,65) output(50,better,86) output(50,better,88) output(50,better,28) output(19,better,86) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,88) output(68,better,88) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(22,worse,19) output(22,worse,68) output(22,worse,49) output(50,worse,19) output(50,worse,68) output(88,worse,49) output(88,worse,68) output(28,worse,68) output(28,worse,49) output(49,worse,68) output(86,worse,68) output(86,worse,49) output(95,worse,98) output(28,eq,86) output(86,eq,65) output(86,eq,88) output(19,eq,68) output(22,eq,86) output(28,eq,65) output(88,eq,28) output(86,eq,28) output(88,eq,86) output(22,eq,65) output(88,eq,65) output(28,eq,88) output(22,eq,88) output(88,eq,88) output(79,eq,68) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(22,eq,28) output(50,eq,49) output(49,eq,49)
Optimization: 34 13
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(1))),2) preference(1,(1,2),1,for(atom(hasPrep(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(12))),4) preference(1,(1,4),1,for(atom(hasCost(3))),4) preference(1,(1,5),1,for(atom(hasCategory(2))),1) preference(1,(1,6),1,for(atom(hasCategory(5))),1) preference(1,(1,7),1,for(atom(hasCost(5))),1) preference(1,(1,8),1,for(atom(hasDifficulty(4))),1) preference(1,(1,9),1,for(atom(hasPrep(3))),1) preference(1,(1,10),1,for(atom(hasPrep(7))),1) preference(1,(1,11),1,for(atom(hasIngredient(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(22,better,19) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,65) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,88) output(68,better,88) output(68,better,49) output(68,better,28) output(68,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(22,worse,86) output(50,worse,22) output(50,worse,86) output(88,worse,49) output(88,worse,86) output(88,worse,65) output(88,worse,68) output(19,worse,86) output(28,worse,86) output(28,worse,68) output(28,worse,65) output(28,worse,49) output(100,worse,86) output(49,worse,86) output(49,worse,68) output(68,worse,86) output(19,eq,68) output(88,eq,28) output(79,eq,86) output(49,eq,65) output(100,eq,68) output(28,eq,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 27 13
Progression : [ 8;27] (Error: 2.375)
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasCategory(2))),7) preference(1,(1,3),1,for(atom(hasDifficulty(4))),7) preference(1,(1,4),1,for(atom(hasIngredient(9))),7) preference(1,(1,5),1,for(atom(hasCategory(4))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasPrep(7))),7) preference(1,(1,9),1,for(atom(hasIngredient(12))),8) preference(1,(1,10),1,for(atom(hasCost(5))),7) preference(1,(1,11),1,for(atom(hasIngredient(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(22,better,86) output(22,better,65) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,86) output(28,better,65) output(28,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(22,worse,19) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,68) output(49,worse,88) output(86,worse,68) output(86,worse,88) output(86,worse,28) output(95,worse,98) output(86,eq,65) output(68,eq,88) output(50,eq,19) output(49,eq,86) output(86,eq,49) output(49,eq,65) output(22,eq,68) output(88,eq,68) output(22,eq,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 24 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasCategory(5))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),7) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(2))),7) preference(1,(1,9),1,for(atom(hasIngredient(12))),8) preference(1,(1,10),1,for(atom(hasCost(5))),7) preference(1,(1,11),1,for(atom(hasDifficulty(4))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(22,better,86) output(22,better,65) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,86) output(28,better,65) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,86) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(22,worse,19) output(28,worse,68) output(28,worse,88) output(49,worse,68) output(49,worse,88) output(86,worse,68) output(86,worse,88) output(86,worse,49) output(86,worse,28) output(95,worse,98) output(49,eq,28) output(86,eq,65) output(68,eq,88) output(50,eq,19) output(28,eq,49) output(22,eq,68) output(88,eq,68) output(22,eq,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 23 10
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(3))),8) preference(1,(1,2),1,for(atom(hasIngredient(6))),7) preference(1,(1,3),1,for(atom(hasCategory(5))),7) preference(1,(1,4),1,for(atom(hasIngredient(2))),7) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,8),1,for(atom(hasIngredient(8))),7) preference(1,(1,9),1,for(atom(hasDifficulty(4))),7) preference(1,(1,10),1,for(atom(hasCost(5))),7) preference(1,(1,11),1,for(atom(hasPrep(3))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasIngredient(12))),8) preference(1,(1,14),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(19,better,86) output(19,better,65) output(19,better,49) output(19,better,28) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(86,better,49) output(86,better,28) output(95,better,98) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(86,worse,68) output(86,worse,88) output(49,eq,28) output(50,eq,22) output(68,eq,88) output(19,eq,68) output(28,eq,65) output(28,eq,49) output(49,eq,65) output(88,eq,68) output(19,eq,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 22 12
Progression : [ 9;22] (Error: 1.44444)
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(7))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasIngredient(12))),5) preference(1,(1,5),1,for(atom(hasDifficulty(1))),2) preference(1,(1,6),1,for(atom(hasCategory(4))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,8),1,for(atom(hasPrep(4))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasIngredient(9))),1) preference(1,(1,12),1,for(atom(hasCost(2))),5) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasDifficulty(3))),2) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,19) output(50,better,65) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,65) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(28,better,88) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,88) output(68,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(50,worse,22) output(88,worse,49) output(88,worse,28) output(88,worse,86) output(88,worse,68) output(19,worse,86) output(28,worse,86) output(28,worse,49) output(49,worse,86) output(68,worse,49) output(68,worse,86) output(28,eq,68) output(68,eq,28) output(50,eq,86) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 19 14
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(3))),2) preference(1,(1,2),1,for(atom(hasCost(3))),2) preference(1,(1,3),1,for(atom(hasPrep(0))),5) preference(1,(1,4),1,for(atom(hasPrep(7))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),7) preference(1,(1,8),1,for(atom(hasCategory(2))),3) preference(1,(1,9),1,for(atom(hasPrep(4))),2) preference(1,(1,10),1,for(atom(hasDifficulty(3))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasIngredient(12))),8) preference(1,(1,13),1,for(atom(hasPrep(5))),7) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,86) output(28,better,65) output(28,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,86) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(95,better,98) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,68) output(49,worse,88) output(86,worse,68) output(86,worse,88) output(86,worse,49) output(86,worse,28) output(68,eq,88) output(88,eq,68) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 16 14
Progression : [10;16] (Error: 0.6)
Progression : [11;16] (Error: 0.454545)
Progression : [12;16] (Error: 0.333333)
Progression : [13;16] (Error: 0.230769)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),3) preference(1,(1,3),1,for(atom(hasCategory(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(10))),3) preference(1,(1,5),1,for(atom(hasCategory(4))),6) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasDifficulty(3))),7) preference(1,(1,8),1,for(atom(hasCost(3))),5) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),1) preference(1,(1,13),1,for(atom(hasIngredient(12))),2) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,28) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,88) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(86,better,88) output(86,better,28) output(95,better,98) output(88,worse,49) output(88,worse,86) output(88,worse,68) output(28,worse,86) output(28,worse,68) output(28,worse,49) output(28,worse,88) output(68,worse,49) output(86,worse,68) output(86,worse,49) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 14
Progression : [14;15] (Error: 0.0714286)
Progression : [15;15] (Error: 0)
Progression : 15 [ 1;14] (Error: 13)
Answer: 18
preference(1,(1,1),1,for(atom(hasCost(3))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),5) preference(1,(1,5),1,for(atom(hasPrep(4))),5) preference(1,(1,6),1,for(atom(hasIngredient(7))),3) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasDifficulty(3))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,12),1,for(atom(hasCategory(4))),7) preference(1,(1,13),1,for(atom(hasPrep(1))),2) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(88,better,68) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,68) output(28,better,65) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,28) output(49,better,86) output(49,better,65) output(49,better,68) output(49,better,88) output(68,better,65) output(86,better,65) output(86,better,68) output(86,better,28) output(95,better,98) output(88,worse,49) output(28,worse,86) output(28,worse,49) output(28,worse,88) output(68,worse,88) output(68,worse,49) output(68,worse,28) output(68,worse,86) output(86,worse,88) output(86,worse,49) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 13
Progression : 15 [ 2;13] (Error: 5.5)
Answer: 19
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(3))),4) preference(1,(1,4),1,for(atom(hasIngredient(9))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),5) preference(1,(1,9),1,for(atom(hasCost(3))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrep(4))),2) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasIngredient(12))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(88,better,68) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(28,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(86,better,49) output(86,better,28) output(95,better,98) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(68,worse,88) output(86,worse,68) output(86,worse,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 12
Answer: 20
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasPrep(4))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasIngredient(9))),5) preference(1,(1,9),1,for(atom(hasCost(3))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(3))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasIngredient(12))),6) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,86) output(88,better,65) output(88,better,68) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(28,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,65) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(86,better,49) output(86,better,28) output(95,better,98) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(68,worse,88) output(86,worse,68) output(86,worse,88) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 11
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(2))),4) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasCost(3))),7) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasIngredient(7))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),3) preference(1,(1,11),1,for(atom(hasIngredient(12))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrepTime(3))),8) preference(1,(1,14),1,for(atom(hasDifficulty(2))),2) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,86) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,86) output(28,better,65) output(28,better,49) output(28,better,88) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,65) output(68,better,88) output(68,better,49) output(68,better,28) output(68,better,86) output(68,better,65) output(86,better,65) output(86,better,49) output(95,better,98) output(88,worse,28) output(88,worse,68) output(28,worse,68) output(49,worse,28) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(86,worse,68) output(86,worse,88) output(86,worse,28) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 10
Answer: 22
preference(1,(1,2),1,for(atom(hasIngredient(9))),1) preference(1,(1,3),1,for(atom(hasCategory(4))),5) preference(1,(1,4),1,for(atom(hasIngredient(12))),4) preference(1,(1,6),1,for(atom(hasCost(3))),7) preference(1,(1,8),1,for(atom(hasDifficulty(3))),5) preference(1,(1,11),1,for(atom(hasPrep(0))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasPrepTime(3))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(22,better,19) output(22,better,86) output(22,better,65) output(22,better,68) output(22,better,88) output(22,better,28) output(22,better,49) output(50,better,22) output(50,better,19) output(50,better,65) output(50,better,86) output(50,better,68) output(50,better,88) output(50,better,28) output(50,better,49) output(88,better,49) output(88,better,28) output(88,better,65) output(19,better,86) output(19,better,68) output(19,better,65) output(19,better,49) output(19,better,88) output(19,better,28) output(28,better,65) output(28,better,49) output(79,better,88) output(79,better,49) output(79,better,28) output(79,better,86) output(79,better,68) output(79,better,65) output(100,better,28) output(100,better,86) output(100,better,65) output(100,better,68) output(100,better,88) output(100,better,49) output(49,better,65) output(68,better,88) output(68,better,49) output(68,better,28) output(68,better,65) output(86,better,65) output(86,better,68) output(86,better,88) output(86,better,49) output(86,better,28) output(95,better,98) output(88,worse,86) output(88,worse,68) output(28,worse,86) output(28,worse,68) output(28,worse,88) output(49,worse,28) output(49,worse,86) output(49,worse,68) output(49,worse,88) output(68,worse,86) output(88,eq,88) output(68,eq,68) output(86,eq,86) output(28,eq,28) output(49,eq,49)
Optimization: 15 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.109 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 15 9
Bounds       : 15 [2;9]
Calls        : 1
Time         : 597.903s (Solving: 594.96s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2382.155s
Threads      : 4        (Winner: 4)

Choices      : 17422700 (Domain: 610501)
Conflicts    : 8982204  (Analyzed: 8982192)
Restarts     : 9991     (Average: 899.03 Last: 561664)
Model-Level  : 149.5   
Problems     : 19       (Average Length: 0.21 Splits: 0)
Lemmas       : 9005384  (Deleted: 8554267)
  Binary     : 698      (Ratio:   0.01%)
  Ternary    : 1861     (Ratio:   0.02%)
  Conflict   : 8982192  (Average Length:  351.9 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 23192    (Average Length:   28.7 Ratio:   0.26%) 
  Distributed: 7737     (Ratio:   0.09% Average LBD: 3.66) 
  Integrated : 23211    (Ratio: 300.00% Unit: 58 Average Jumps: 23.03)
Backjumps    : 8982192  (Average:  1.67 Max: 1051 Sum: 14987324)
  Executed   : 8982175  (Average:  1.67 Max: 1051 Sum: 14987181 Ratio: 100.00%)
  Bounded    : 17       (Average:  8.41 Max:  55 Sum:    143 Ratio:   0.00%)

Rules        : 699375  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 16858   
Bodies       : 19228   
  Sum        : 123     
  Count      : 14      
Equivalences : 14303    (Atom=Atom: 643 Body=Body: 275 Other: 13385)
Tight        : Yes
Variables    : 17149    (Eliminated:    0 Frozen: 7825)
Constraints  : 718555   (Binary:  98.2% Ternary:   1.3% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(6)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasIngredient(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(2)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(5)) ; 
  7 :: atom(hasIngredient(2)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(5)) ; 
  7 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(5)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(6)) ; 
  7 :: atom(hasCategory(5)) ; 
  7 :: atom(hasIngredient(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(5)) ; 
  7 :: atom(hasPrep(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCategory(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(4)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(4)) ; 
  1 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) ; 
  4 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(6)) 
}.
