asprin_vL version 1.0
Reading from stdin
-:1253:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1278:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1359:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1633:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1810:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2011:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2015:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2015:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2120:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2146:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2266:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2300:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2322:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1170:1-16: info: no atoms over signature occur in program:
  output/3

-:1162:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1163:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1164:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1165:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1195:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(14,better,51) output(82,better,73) output(14,better,16) output(20,better,50) output(20,better,73) output(14,better,100) output(57,better,73) output(57,better,50) output(14,better,17) output(51,worse,100) output(78,worse,20) output(50,worse,72) output(51,worse,16) output(17,worse,15) output(89,worse,5) output(78,worse,82) output(16,worse,15) output(88,worse,72) output(78,worse,72) output(51,worse,15) output(57,eq,20) output(20,eq,82) output(57,eq,82) output(78,eq,73) output(78,eq,50) output(14,eq,15)
Optimization: 25 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(14,better,51) output(82,better,73) output(14,better,16) output(20,better,50) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(14,better,17) output(51,worse,100) output(50,worse,72) output(51,worse,16) output(17,worse,15) output(89,worse,5) output(16,worse,15) output(88,worse,72) output(51,worse,15) output(14,worse,15) output(57,eq,20) output(20,eq,82) output(57,eq,82)
Optimization: 23 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(14,better,51) output(82,better,73) output(20,better,82) output(14,better,16) output(20,better,50) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(14,better,17) output(78,worse,20) output(50,worse,72) output(17,worse,15) output(57,worse,20) output(89,worse,5) output(16,worse,15) output(88,worse,72) output(51,worse,15) output(57,eq,82) output(14,eq,15)
Optimization: 22 6
Answer: 4
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(2))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(51,better,16) output(16,better,15) output(51,better,17) output(14,better,16) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(14,better,17) output(51,better,15) output(14,better,15) output(57,worse,20) output(57,worse,82) output(57,worse,88) output(57,worse,50) output(57,worse,72) output(14,eq,51) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(20,eq,82) output(89,eq,5) output(78,eq,82) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(78,eq,50) output(20,eq,72) output(78,eq,72)
Optimization: 21 3
Answer: 5
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(51,better,16) output(20,better,82) output(78,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(14,better,17) output(51,better,15) output(14,better,15) output(57,worse,20) output(89,worse,5) output(57,worse,88) output(57,worse,50) output(57,worse,72) output(14,eq,51) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(57,eq,82) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(78,eq,50) output(20,eq,72) output(78,eq,72)
Optimization: 19 3
Answer: 6
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(51,better,16) output(20,better,82) output(89,better,5) output(78,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(14,better,17) output(51,better,15) output(14,better,15) output(57,worse,20) output(57,worse,88) output(57,worse,50) output(57,worse,72) output(14,eq,51) output(78,eq,20) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(57,eq,82) output(88,eq,72) output(20,eq,50) output(78,eq,88) output(78,eq,50) output(20,eq,72) output(78,eq,72)
Optimization: 18 3
Answer: 7
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(88,better,50) output(51,better,16) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(20,better,50) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(14,better,17) output(51,better,15) output(14,better,15) output(50,worse,72) output(14,eq,51) output(78,eq,20) output(20,eq,88) output(57,eq,20) output(88,eq,72) output(78,eq,88) output(57,eq,88) output(20,eq,72) output(78,eq,72) output(57,eq,72)
Optimization: 13 3
Answer: 8
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(78,better,20) output(16,better,17) output(57,better,20) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15) output(51,worse,16) output(89,worse,5) output(14,worse,16) output(14,eq,51) output(20,eq,88) output(88,eq,50) output(50,eq,72) output(20,eq,82) output(88,eq,72) output(20,eq,50) output(20,eq,72)
Optimization: 12 3
Answer: 9
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),1,for(atom(hasPrep(3))),()) preference(1,aso) output(14,better,51) output(82,better,73) output(20,better,88) output(50,better,72) output(16,better,17) output(20,better,82) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(14,better,15) output(88,worse,50) output(51,worse,16) output(17,worse,15) output(51,eq,100) output(78,eq,20) output(57,eq,20) output(89,eq,5) output(14,eq,16) output(88,eq,72) output(51,eq,15)
Optimization: 10 3
Answer: 10
preference(1,(1,4),0,for(atom(hasIngredient(7))),()) preference(1,(1,5),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(88,better,50) output(50,better,72) output(16,better,17) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(88,better,72) output(20,better,50) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15) output(14,eq,51) output(78,eq,20) output(20,eq,88) output(51,eq,16) output(57,eq,20) output(14,eq,16) output(78,eq,88) output(57,eq,88)
Optimization: 9 3
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasCategory(5))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasCategory(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasPrep(7))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(51,better,16) output(17,better,15) output(57,better,20) output(89,better,5) output(57,better,82) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(14,better,100) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 8 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasPrep(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(6))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(10))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasCategory(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasCategory(3))),()) preference(1,(1,5),3,for(atom(hasPrep(2))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(88,better,50) output(51,better,16) output(17,better,15) output(57,better,20) output(89,better,5) output(78,better,82) output(57,better,82) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 7 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(2))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(2))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasDifficulty(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(51,better,100) output(78,better,20) output(20,better,88) output(88,better,50) output(51,better,16) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(51,better,15) output(14,better,15) output(14,worse,51)
Optimization: 6 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(51,better,16) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(51,better,17) output(14,better,16) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 5 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasPrep(7))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(51,better,16) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(51,better,17) output(14,better,16) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 4 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasDifficulty(2))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,2),3,for(atom(hasPrep(7))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(51,better,16) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 3 6
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasPrepTime(2))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasIngredient(5))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(50,better,72) output(16,better,17) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15) output(51,worse,16) output(14,worse,16)
Optimization: 2 6
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,4),3,for(atom(hasPrepTime(2))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(50,better,72) output(16,better,17) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 1 6
Progression : [1;1] (Error: 0)
Progression : 1 [1;6] (Error: 5)
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(50,better,72) output(51,better,16) output(16,better,17) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15) output(14,eq,51)
Optimization: 1 5
Answer: 20
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasCost(1))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,aso) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(50,better,72) output(51,better,16) output(16,better,17) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15) output(14,eq,51)
Optimization: 1 4
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasPrep(5))),()) preference(1,(1,5),3,for(atom(hasCost(4))),()) preference(1,aso) output(14,better,51) output(51,better,100) output(82,better,73) output(78,better,20) output(20,better,88) output(88,better,50) output(50,better,72) output(16,better,17) output(17,better,15) output(57,better,20) output(20,better,82) output(89,better,5) output(78,better,82) output(57,better,82) output(16,better,15) output(51,better,17) output(14,better,16) output(88,better,72) output(20,better,50) output(78,better,88) output(57,better,88) output(20,better,73) output(14,better,100) output(78,better,73) output(57,better,73) output(78,better,50) output(57,better,50) output(20,better,72) output(78,better,72) output(57,better,72) output(14,better,17) output(51,better,15) output(14,better,15)
Optimization: 1 3
Progression : 1 [2;3] (Error: 0.5)
OPTIMUM FOUND

Models       : 21
  Optimum    : yes
Optimization : 1 3
Calls        : 1
Time         : 19.835s (Solving: 13.34s 1st Model: 0.42s Unsat: 11.43s)
CPU Time     : 59.515s
Threads      : 4        (Winner: 3)

Choices      : 276289   (Domain: 5247)
Conflicts    : 65713    (Analyzed: 65708)
Restarts     : 95       (Average: 691.66 Last: 7998)
Model-Level  : 596.8   
Problems     : 11       (Average Length: 0.36 Splits: 0)
Lemmas       : 103184   (Deleted: 22391)
  Binary     : 3061     (Ratio:   2.97%)
  Ternary    : 12161    (Ratio:  11.79%)
  Conflict   : 65708    (Average Length:  213.7 Ratio:  63.68%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 37476    (Average Length:   68.9 Ratio:  36.32%) 
  Distributed: 12555    (Ratio:  19.11% Average LBD: 3.12) 
  Integrated : 37661    (Ratio: 299.97% Unit: 282 Average Jumps: 96.38)
Backjumps    : 65708    (Average:  3.50 Max: 1481 Sum: 229828)
  Executed   : 65688    (Average:  3.49 Max: 1481 Sum: 229414 Ratio:  99.82%)
  Bounded    : 20       (Average: 20.70 Max:  33 Sum:    414 Ratio:   0.18%)

Rules        : 3287484 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 548522  
Bodies       : 679713  
  Count      : 1248    
Equivalences : 1665059  (Atom=Atom: 489647 Body=Body: 532433 Other: 642979)
Tight        : Yes
Variables    : 98063    (Eliminated:    0 Frozen: 32831)
Constraints  : 2899472  (Binary:  96.7% Ternary:   3.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasPrep(0))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasPrep(0))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasCategory(1)) >> atom(hasCost(2)) >> atom(hasDifficulty(2)) || atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasIngredient(7)) >> atom(hasCost(2)) >> atom(hasPrep(6)) || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasIngredient(7)) >> atom(hasCost(2)) >> atom(hasPrep(6)) || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasIngredient(6)) >> atom(hasCost(2)) >> atom(hasPrep(6)) || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(6))  >> not atom(hasCategory(2))  || not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  >> not atom(hasPrepTime(3))  || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(5))  >> not atom(hasCost(5))  >> not atom(hasCategory(2))  || atom(hasIngredient(7)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCost(1))  || atom(hasIngredient(2)) ; 
  not atom(hasDifficulty(2))  >> not atom(hasCost(3))  >> not atom(hasPrepTime(3))  || not atom(hasPrep(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasDifficulty(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(1)) >> atom(hasCategory(3)) >> atom(hasCategory(2)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(6)) >> not atom(hasPrep(1))  >> not atom(hasPrep(5))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) >> not atom(hasPrepTime(3))  || not atom(hasIngredient(6))  ; 
  atom(hasCategory(5)) >> not atom(hasPrep(5))  >> atom(hasCategory(1)) || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(1))  >> atom(hasPrep(7)) || not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasPrep(1)) >> atom(hasDifficulty(2)) >> atom(hasCategory(3)) || not atom(hasCost(1))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(10)) >> not atom(hasPrep(5))  || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) >> not atom(hasPrepTime(3))  || not atom(hasIngredient(6))  ; 
  atom(hasPrep(6)) >> atom(hasCategory(2)) >> atom(hasPrep(2)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(3)) >> atom(hasCost(4)) || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(2))  >> atom(hasDifficulty(2)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(2))  >> not atom(hasPrep(5))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(2)) >> not atom(hasPrepTime(3))  || not atom(hasCategory(4))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) >> atom(hasIngredient(3)) || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(2)) >> not atom(hasCost(3))  || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasCategory(3)) >> atom(hasDifficulty(2)) >> atom(hasPrepTime(1)) || not atom(hasCategory(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(1))  >> atom(hasPrepTime(1)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCost(3))  >> atom(hasIngredient(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) >> atom(hasIngredient(3)) || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> atom(hasCost(4)) || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasCategory(3)) >> atom(hasDifficulty(2)) >> atom(hasPrep(7)) || not atom(hasCategory(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(1))  >> atom(hasPrepTime(1)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCost(3))  >> atom(hasIngredient(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) >> atom(hasIngredient(3)) || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> atom(hasCost(4)) || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasPrep(1))  ; 
  atom(hasCategory(3)) >> atom(hasDifficulty(2)) >> atom(hasPrep(7)) || not atom(hasCategory(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(3))  >> atom(hasPrepTime(1)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCost(3))  >> atom(hasIngredient(3)) || not atom(hasIngredient(6))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) >> atom(hasIngredient(3)) || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(3)) >> atom(hasCost(4)) || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(3))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(3))  ; 
  atom(hasIngredient(8)) >> not atom(hasPrep(1))  >> not atom(hasPrep(5))  || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(3))  >> atom(hasIngredient(5)) || not atom(hasIngredient(6))  ; 
  atom(hasCategory(4)) >> atom(hasIngredient(7)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  atom(hasPrepTime(2)) >> atom(hasCost(2)) >> atom(hasIngredient(3)) || not atom(hasIngredient(3))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(0))  >> atom(hasCost(4)) || not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(3))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(3))  ; 
  atom(hasPrep(3)) >> not atom(hasPrep(1))  >> not atom(hasPrep(5))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(3))  || not atom(hasCategory(5))  ; 
  atom(hasCategory(4)) >> atom(hasIngredient(7)) >> atom(hasPrepTime(2)) || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(3))  >> atom(hasCost(4)) || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(1)) >> not atom(hasIngredient(2))  || not atom(hasIngredient(6))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(3))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(3))  ; 
  atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(3))  || not atom(hasCategory(5))  ; 
  atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(3))  >> atom(hasCost(4)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> atom(hasCost(1)) >> not atom(hasIngredient(2))  || not atom(hasIngredient(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(3))  >> atom(hasCost(4)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> atom(hasCost(1)) >> not atom(hasIngredient(2))  || not atom(hasIngredient(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrepTime(1)) >> atom(hasPrep(5)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(3))  >> atom(hasCost(4)) || not atom(hasIngredient(6))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(1))  >> not atom(hasPrepTime(3))  || not atom(hasPrep(3))  
}.
