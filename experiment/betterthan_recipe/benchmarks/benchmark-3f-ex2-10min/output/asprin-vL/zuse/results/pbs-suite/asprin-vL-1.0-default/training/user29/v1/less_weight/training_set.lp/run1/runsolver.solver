asprin_vL version 1.0
Reading from stdin
-:1283:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1293:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1308:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1389:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1650:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1663:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1840:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1969:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2041:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2045:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2045:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2051:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2150:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2176:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2296:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2352:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1200:1-16: info: no atoms over signature occur in program:
  output/3

-:1192:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1193:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(53,eq,84) output(84,eq,22) output(46,eq,83) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(80,eq,46) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(52,eq,68) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(46,eq,66) output(39,eq,66) output(80,eq,39) output(60,eq,39) output(74,eq,46) output(52,eq,49) output(33,eq,71) output(66,eq,71) output(46,eq,33) output(39,eq,33) output(80,eq,83) output(60,eq,83) output(53,eq,22) output(74,eq,83) output(55,eq,83) output(80,eq,33) output(60,eq,33) output(74,eq,33) output(83,eq,71) output(46,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(74,eq,39) output(55,eq,39) output(80,eq,66) output(60,eq,66) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(80,eq,52) output(60,eq,52) output(83,eq,47) output(46,eq,47) output(39,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(46,eq,68) output(39,eq,68) output(80,eq,68) output(60,eq,68) output(74,eq,68) output(55,eq,68) output(80,eq,47) output(60,eq,47) output(74,eq,47) output(55,eq,47) output(74,eq,52) output(55,eq,52) output(55,eq,66) output(46,eq,49) output(39,eq,49) output(80,eq,49) output(60,eq,49) output(74,eq,49) output(55,eq,49) output(80,eq,71) output(60,eq,71) output(74,eq,71) output(55,eq,71) output(55,eq,33)
Optimization: 86 0
Answer: 2
preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(66,better,52) output(66,better,47) output(66,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,47) output(74,better,52) output(74,better,49) output(46,worse,66) output(46,worse,71) output(46,worse,68) output(60,worse,66) output(60,worse,68) output(60,worse,71) output(80,worse,66) output(80,worse,68) output(80,worse,71) output(39,worse,66) output(39,worse,71) output(39,worse,68) output(53,worse,84) output(53,worse,22) output(55,worse,74) output(55,worse,68) output(55,worse,66) output(55,worse,71) output(83,worse,66) output(83,worse,71) output(83,worse,68) output(33,worse,71) output(33,worse,68) output(47,worse,68) output(52,worse,71) output(52,worse,68) output(84,eq,22) output(46,eq,83) output(83,eq,33) output(80,eq,46) output(33,eq,52) output(60,eq,46) output(46,eq,39) output(52,eq,47) output(39,eq,83) output(55,eq,60) output(33,eq,47) output(83,eq,52) output(80,eq,39) output(60,eq,39) output(52,eq,49) output(66,eq,71) output(46,eq,33) output(39,eq,33) output(80,eq,83) output(60,eq,83) output(55,eq,83) output(80,eq,33) output(60,eq,33) output(33,eq,49) output(83,eq,49) output(55,eq,46) output(55,eq,39) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(80,eq,52) output(60,eq,52) output(83,eq,47) output(46,eq,47) output(39,eq,47) output(66,eq,68) output(74,eq,68) output(80,eq,47) output(60,eq,47) output(55,eq,47) output(55,eq,52) output(46,eq,49) output(39,eq,49) output(80,eq,49) output(60,eq,49) output(55,eq,49) output(74,eq,71) output(55,eq,33)
Optimization: 74 1
Answer: 3
preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,49) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,47) output(60,better,49) output(60,better,71) output(55,better,83) output(55,better,39) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,worse,46) output(80,worse,68) output(39,worse,68) output(66,worse,68) output(83,worse,68) output(33,worse,68) output(47,worse,68) output(52,worse,68) output(53,eq,84) output(84,eq,22) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(39,eq,66) output(80,eq,39) output(74,eq,46) output(52,eq,49) output(33,eq,71) output(66,eq,71) output(39,eq,33) output(80,eq,83) output(53,eq,22) output(80,eq,33) output(83,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(80,eq,66) output(39,eq,52) output(80,eq,52) output(83,eq,47) output(39,eq,47) output(46,eq,68) output(60,eq,68) output(74,eq,68) output(55,eq,68) output(80,eq,47) output(39,eq,49) output(80,eq,49) output(80,eq,71)
Optimization: 54 1
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(10))),4) preference(1,(1,2),1,for(atom(hasDifficulty(4))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),4) preference(1,(1,5),1,for(atom(hasCost(4))),4) preference(1,(1,6),1,for(atom(hasDifficulty(3))),4) preference(1,(1,7),1,for(atom(hasIngredient(1))),4) preference(1,(1,8),1,for(atom(hasCategory(1))),4) preference(1,(1,9),1,for(atom(hasCost(3))),4) preference(1,(1,10),1,for(atom(hasCost(5))),4) preference(1,(1,11),1,for(atom(hasCategory(5))),4) preference(1,(1,12),1,for(atom(hasPrep(4))),4) preference(1,less(weight)) output(80,better,46) output(80,better,39) output(80,better,33) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(53,better,84) output(53,better,22) output(55,better,60) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,49) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,52) output(83,better,49) output(83,better,47) output(83,better,68) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,33) output(74,better,39) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(46,worse,83) output(46,worse,66) output(46,worse,71) output(60,worse,83) output(60,worse,66) output(60,worse,71) output(39,worse,83) output(39,worse,66) output(39,worse,71) output(33,worse,71) output(52,worse,71) output(84,eq,22) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(46,eq,39) output(83,eq,66) output(52,eq,47) output(47,eq,68) output(52,eq,68) output(33,eq,47) output(60,eq,39) output(52,eq,49) output(66,eq,71) output(46,eq,33) output(39,eq,33) output(80,eq,83) output(74,eq,83) output(55,eq,83) output(60,eq,33) output(83,eq,71) output(33,eq,49) output(80,eq,66) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(60,eq,52) output(46,eq,47) output(39,eq,47) output(33,eq,68) output(46,eq,68) output(39,eq,68) output(60,eq,68) output(60,eq,47) output(55,eq,66) output(46,eq,49) output(39,eq,49) output(60,eq,49) output(80,eq,71) output(74,eq,71) output(55,eq,71)
Optimization: 51 12
Answer: 5
preference(1,(1,2),1,for(atom(hasIngredient(5))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),4) preference(1,(1,5),1,for(atom(hasCost(4))),4) preference(1,(1,6),1,for(atom(hasIngredient(4))),4) preference(1,(1,7),1,for(atom(hasPrep(4))),4) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasIngredient(10))),4) preference(1,(1,10),1,for(atom(hasCost(5))),4) preference(1,(1,11),1,for(atom(hasCategory(5))),4) preference(1,(1,12),1,for(atom(hasDifficulty(4))),4) preference(1,less(weight)) output(60,better,46) output(60,better,39) output(60,better,33) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(80,better,46) output(80,better,39) output(80,better,33) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(53,better,84) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,49) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,52) output(83,better,49) output(83,better,47) output(83,better,68) output(71,better,49) output(74,better,46) output(74,better,33) output(74,better,39) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(46,worse,83) output(46,worse,66) output(46,worse,71) output(84,worse,22) output(39,worse,83) output(39,worse,66) output(39,worse,71) output(33,worse,71) output(52,worse,71) output(33,eq,52) output(55,eq,74) output(46,eq,39) output(83,eq,66) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(55,eq,60) output(52,eq,68) output(33,eq,47) output(52,eq,49) output(66,eq,71) output(46,eq,33) output(39,eq,33) output(80,eq,83) output(60,eq,83) output(53,eq,22) output(74,eq,83) output(55,eq,83) output(83,eq,71) output(33,eq,49) output(80,eq,66) output(60,eq,66) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(46,eq,47) output(39,eq,47) output(33,eq,68) output(46,eq,68) output(39,eq,68) output(55,eq,66) output(46,eq,49) output(39,eq,49) output(80,eq,71) output(60,eq,71) output(74,eq,71) output(55,eq,71)
Optimization: 47 11
Answer: 6
preference(1,(1,2),1,for(atom(hasIngredient(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(8))),4) preference(1,(1,4),1,for(atom(hasIngredient(10))),4) preference(1,(1,5),1,for(atom(hasIngredient(11))),4) preference(1,(1,6),1,for(atom(hasPrep(4))),4) preference(1,(1,7),1,for(atom(hasDifficulty(3))),4) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasPrep(3))),4) preference(1,(1,10),1,for(atom(hasCost(5))),4) preference(1,(1,11),1,for(atom(hasIngredient(4))),4) preference(1,(1,12),1,for(atom(hasIngredient(3))),4) preference(1,less(weight)) output(60,better,46) output(60,better,39) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,46) output(80,better,39) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(53,better,84) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,49) output(55,better,71) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(74,better,46) output(74,better,39) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(46,worse,83) output(46,worse,66) output(46,worse,33) output(84,worse,22) output(39,worse,83) output(39,worse,66) output(39,worse,33) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(55,eq,74) output(46,eq,39) output(83,eq,66) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(55,eq,60) output(52,eq,68) output(52,eq,49) output(80,eq,83) output(60,eq,83) output(53,eq,22) output(74,eq,83) output(55,eq,83) output(80,eq,33) output(60,eq,33) output(74,eq,33) output(46,eq,71) output(39,eq,71) output(80,eq,66) output(60,eq,66) output(74,eq,66) output(46,eq,52) output(39,eq,52) output(46,eq,47) output(39,eq,47) output(46,eq,68) output(39,eq,68) output(55,eq,66) output(46,eq,49) output(39,eq,49) output(55,eq,33)
Optimization: 42 11
Answer: 7
preference(1,(1,2),1,for(atom(hasCost(4))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),4) preference(1,(1,4),1,for(atom(hasIngredient(8))),4) preference(1,(1,5),1,for(atom(hasIngredient(11))),4) preference(1,(1,6),1,for(atom(hasIngredient(6))),4) preference(1,(1,7),1,for(atom(hasCategory(5))),4) preference(1,(1,8),1,for(atom(hasCost(5))),4) preference(1,(1,9),1,for(atom(hasIngredient(2))),4) preference(1,(1,10),1,for(atom(hasDifficulty(4))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),4) preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,33) output(46,better,71) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(53,better,22) output(55,better,83) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,68) output(74,better,47) output(74,better,49) output(74,better,71) output(39,worse,66) output(39,worse,52) output(83,worse,66) output(83,worse,52) output(33,worse,52) output(53,eq,84) output(83,eq,33) output(71,eq,49) output(80,eq,46) output(55,eq,74) output(60,eq,46) output(66,eq,52) output(47,eq,68) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(33,eq,47) output(46,eq,66) output(74,eq,46) output(33,eq,71) output(39,eq,33) output(83,eq,71) output(39,eq,71) output(33,eq,49) output(83,eq,49) output(55,eq,46) output(80,eq,66) output(60,eq,66) output(74,eq,66) output(46,eq,52) output(80,eq,52) output(60,eq,52) output(83,eq,47) output(39,eq,47) output(33,eq,68) output(83,eq,68) output(39,eq,68) output(74,eq,52) output(55,eq,52) output(55,eq,66) output(39,eq,49)
Optimization: 41 11
Answer: 8
preference(1,(1,7),1,for(atom(hasCost(3))),4) preference(1,(1,8),1,for(atom(hasIngredient(12))),4) preference(1,(1,9),1,for(atom(hasIngredient(8))),4) preference(1,(1,10),1,for(atom(hasCost(5))),4) preference(1,(1,11),1,for(atom(hasPrep(3))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(53,better,22) output(55,better,83) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,49) output(74,better,71) output(39,worse,52) output(66,worse,52) output(83,worse,52) output(33,worse,52) output(53,eq,84) output(83,eq,33) output(71,eq,49) output(80,eq,46) output(55,eq,74) output(60,eq,46) output(83,eq,66) output(47,eq,68) output(74,eq,60) output(39,eq,83) output(55,eq,60) output(33,eq,47) output(66,eq,47) output(39,eq,66) output(74,eq,46) output(33,eq,71) output(66,eq,71) output(39,eq,33) output(83,eq,71) output(39,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(46,eq,52) output(80,eq,52) output(60,eq,52) output(83,eq,47) output(39,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68) output(39,eq,68) output(74,eq,52) output(55,eq,52) output(39,eq,49)
Optimization: 40 6
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,7),1,for(atom(hasCost(4))),4) preference(1,(1,8),1,for(atom(hasPrep(3))),4) preference(1,(1,9),1,for(atom(hasCategory(5))),4) preference(1,(1,10),1,for(atom(hasIngredient(8))),4) preference(1,(1,11),1,for(atom(hasCost(5))),4) preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,less(weight)) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(55,better,83) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(74,better,83) output(74,better,33) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(53,eq,84) output(84,eq,22) output(83,eq,33) output(52,eq,71) output(71,eq,49) output(80,eq,46) output(33,eq,52) output(55,eq,74) output(60,eq,46) output(46,eq,39) output(83,eq,66) output(66,eq,52) output(52,eq,47) output(47,eq,68) output(74,eq,60) output(55,eq,60) output(52,eq,68) output(33,eq,47) output(66,eq,47) output(83,eq,52) output(80,eq,39) output(60,eq,39) output(74,eq,46) output(52,eq,49) output(33,eq,71) output(66,eq,71) output(53,eq,22) output(83,eq,71) output(33,eq,49) output(66,eq,49) output(83,eq,49) output(55,eq,46) output(74,eq,39) output(55,eq,39) output(83,eq,47) output(33,eq,68) output(66,eq,68) output(83,eq,68)
Optimization: 38 7
Answer: 10
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasIngredient(7))),6) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasIngredient(3))),2) preference(1,(1,9),1,for(atom(hasCategory(1))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),5) preference(1,(1,11),1,for(atom(hasPrepTime(3))),5) preference(1,(1,12),1,for(atom(hasIngredient(9))),2) preference(1,(1,13),1,for(atom(hasCategory(4))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(46,better,39) output(46,better,66) output(46,better,71) output(46,better,47) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,39) output(80,better,66) output(80,better,47) output(80,better,71) output(39,better,71) output(39,better,47) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,47) output(66,better,71) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,47) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,68) output(52,better,71) output(52,better,47) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(46,worse,83) output(46,worse,33) output(46,worse,68) output(46,worse,49) output(80,worse,46) output(80,worse,83) output(80,worse,33) output(80,worse,52) output(80,worse,68) output(80,worse,49) output(39,worse,83) output(39,worse,33) output(39,worse,52) output(39,worse,68) output(39,worse,49) output(55,worse,74) output(55,worse,60) output(66,worse,52) output(66,worse,49) output(66,worse,68) output(83,worse,33) output(83,worse,49) output(47,worse,68) output(52,worse,68) output(52,worse,49) output(71,worse,49) output(74,worse,60) output(53,eq,84) output(84,eq,22) output(39,eq,66) output(53,eq,22) output(33,eq,49) output(46,eq,52) output(83,eq,68)
Optimization: 34 14
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(2))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),4) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasCost(3))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(3))),2) preference(1,(1,8),1,for(atom(hasIngredient(9))),2) preference(1,(1,9),1,for(atom(hasCost(2))),8) preference(1,(1,10),1,for(atom(hasPrepTime(1))),7) preference(1,(1,11),1,for(atom(hasCategory(1))),6) preference(1,(1,12),1,for(atom(hasPrep(5))),5) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(46,better,71) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,66) output(39,better,71) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,68) output(74,better,47) output(74,better,49) output(74,better,71) output(46,worse,83) output(46,worse,39) output(46,worse,33) output(46,worse,52) output(60,worse,83) output(80,worse,83) output(39,worse,83) output(39,worse,52) output(55,worse,83) output(66,worse,52) output(33,worse,52) output(47,worse,68) output(74,worse,60) output(74,worse,46) output(74,worse,83) output(74,worse,33) output(74,worse,39) output(74,worse,66) output(74,worse,52) output(46,eq,66) output(39,eq,33)
Optimization: 21 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasIngredient(3))),4) preference(1,(1,9),1,for(atom(hasCost(4))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasCategory(3))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasCategory(4))),7) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,83) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,49) output(33,better,68) output(47,better,68) output(71,better,49) output(74,better,68) output(74,better,52) output(74,better,49) output(80,worse,46) output(55,worse,60) output(52,worse,71) output(52,worse,47) output(74,worse,60) output(74,worse,46) output(74,worse,83) output(74,worse,39) output(74,worse,66) output(83,eq,66) output(39,eq,83) output(52,eq,68) output(33,eq,47) output(39,eq,66) output(52,eq,49) output(33,eq,71) output(74,eq,33) output(55,eq,46) output(74,eq,47) output(74,eq,71)
Optimization: 20 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),8) preference(1,(1,2),1,for(atom(hasCost(2))),5) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasPrep(1))),5) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,7),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),7) preference(1,(1,9),1,for(atom(hasCost(4))),7) preference(1,(1,10),1,for(atom(hasPrepTime(2))),5) preference(1,(1,11),1,for(atom(hasCategory(3))),4) preference(1,(1,12),1,for(atom(hasPrepTime(1))),6) preference(1,(1,13),1,for(atom(hasIngredient(3))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,33) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(55,better,74) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,49) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(80,worse,46) output(80,worse,39) output(80,worse,83) output(80,worse,66) output(53,worse,84) output(55,worse,60) output(52,worse,47) output(52,worse,68) output(74,worse,60) output(83,eq,66) output(39,eq,83) output(33,eq,47) output(39,eq,66) output(53,eq,22)
Optimization: 14 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),4) preference(1,(1,10),1,for(atom(hasIngredient(8))),8) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasIngredient(12))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,68) output(33,better,52) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,68) output(52,better,49) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(39,worse,47) output(66,worse,47) output(83,worse,47) output(33,worse,47) output(52,worse,47) output(74,worse,60) output(74,worse,46) output(84,eq,22) output(83,eq,33) output(71,eq,49) output(80,eq,46) output(83,eq,66) output(55,eq,60)
Optimization: 13 12
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(6))),1) preference(1,(1,2),1,for(atom(hasCost(3))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasIngredient(7))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),5) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),4) preference(1,(1,10),1,for(atom(hasIngredient(8))),7) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasIngredient(12))),5) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasPrepTime(1))),6) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,68) output(33,better,52) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(39,worse,47) output(66,worse,47) output(83,worse,47) output(33,worse,47) output(52,worse,47) output(74,worse,60) output(74,worse,46) output(84,eq,22) output(83,eq,33) output(80,eq,46) output(83,eq,66) output(55,eq,60)
Optimization: 12 12
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),5) preference(1,(1,4),1,for(atom(hasIngredient(12))),1) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasPrep(6))),8) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasPrep(5))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,10),1,for(atom(hasIngredient(9))),2) preference(1,(1,11),1,for(atom(hasIngredient(7))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),8) preference(1,(1,14),1,for(atom(hasPrep(1))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(33,worse,68) output(47,worse,68) output(52,worse,47) output(52,worse,68) output(74,worse,60) output(52,eq,71) output(71,eq,49) output(39,eq,83) output(52,eq,49) output(66,eq,68)
Optimization: 10 14
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasIngredient(8))),6) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasCategory(4))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasCost(3))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasCategory(3))),5) preference(1,(1,14),1,for(atom(hasPrep(3))),7) preference(1,less(weight)) output(46,better,83) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(80,better,46) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71) output(46,worse,39) output(60,worse,39) output(80,worse,39) output(74,worse,60) output(74,worse,39) output(84,eq,22) output(33,eq,52) output(83,eq,66) output(55,eq,39)
Optimization: 9 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(1))),6) preference(1,(1,4),1,for(atom(hasIngredient(8))),5) preference(1,(1,5),1,for(atom(hasCategory(3))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(10))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),1) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasCost(3))),8) preference(1,(1,12),1,for(atom(hasCost(5))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),4) preference(1,(1,14),1,for(atom(hasIngredient(3))),4) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 19
preference(1,(1,1),1,for(atom(hasCategory(4))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasCategory(1))),2) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasIngredient(8))),7) preference(1,(1,11),1,for(atom(hasIngredient(10))),3) preference(1,(1,12),1,for(atom(hasCost(5))),6) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71)
Optimization: 0 13
Answer: 20
preference(1,(1,1),1,for(atom(hasCategory(4))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasCost(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(10))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(8))),7) preference(1,(1,11),1,for(atom(hasCategory(1))),3) preference(1,(1,12),1,for(atom(hasCost(5))),6) preference(1,(1,13),1,for(atom(hasPrep(3))),1) preference(1,(1,14),1,for(atom(hasDifficulty(1))),1) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasPrepTime(1))),1) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasIngredient(9))),5) preference(1,(1,6),1,for(atom(hasCategory(1))),7) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71)
Optimization: 0 10
Answer: 22
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasIngredient(9))),5) preference(1,(1,6),1,for(atom(hasCategory(1))),7) preference(1,(1,7),1,for(atom(hasCost(3))),8) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(46,better,83) output(46,better,39) output(46,better,66) output(46,better,33) output(46,better,71) output(46,better,52) output(46,better,47) output(46,better,68) output(46,better,49) output(60,better,46) output(60,better,39) output(60,better,83) output(60,better,33) output(60,better,66) output(60,better,52) output(60,better,68) output(60,better,47) output(60,better,49) output(60,better,71) output(84,better,22) output(80,better,46) output(80,better,39) output(80,better,83) output(80,better,33) output(80,better,66) output(80,better,52) output(80,better,68) output(80,better,47) output(80,better,49) output(80,better,71) output(39,better,83) output(39,better,66) output(39,better,33) output(39,better,71) output(39,better,52) output(39,better,47) output(39,better,68) output(39,better,49) output(53,better,84) output(53,better,22) output(55,better,74) output(55,better,60) output(55,better,83) output(55,better,46) output(55,better,39) output(55,better,68) output(55,better,47) output(55,better,52) output(55,better,66) output(55,better,49) output(55,better,71) output(55,better,33) output(66,better,52) output(66,better,47) output(66,better,71) output(66,better,49) output(66,better,68) output(83,better,33) output(83,better,66) output(83,better,52) output(83,better,71) output(83,better,49) output(83,better,47) output(83,better,68) output(33,better,52) output(33,better,47) output(33,better,71) output(33,better,49) output(33,better,68) output(47,better,68) output(52,better,71) output(52,better,47) output(52,better,68) output(52,better,49) output(71,better,49) output(74,better,60) output(74,better,46) output(74,better,83) output(74,better,33) output(74,better,39) output(74,better,66) output(74,better,68) output(74,better,47) output(74,better,52) output(74,better,49) output(74,better,71)
Optimization: 0 9
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.120 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 22+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 597.925s (Solving: 594.51s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2381.029s
Threads      : 4        (Winner: 4)

Choices      : 9612827  (Domain: 556917)
Conflicts    : 6511122  (Analyzed: 6511119)
Restarts     : 6224     (Average: 1046.13 Last: 292828)
Model-Level  : 36.5    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6526522  (Deleted: 6187266)
  Binary     : 876      (Ratio:   0.01%)
  Ternary    : 1859     (Ratio:   0.03%)
  Conflict   : 6511119  (Average Length:  488.7 Ratio:  99.76%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 15403    (Average Length:   46.8 Ratio:   0.24%) 
  Distributed: 5137     (Ratio:   0.08% Average LBD: 3.52) 
  Integrated : 15411    (Ratio: 300.00% Unit: 22 Average Jumps: 7.64)
Backjumps    : 6511119  (Average:  1.34 Max: 669 Sum: 8709056)
  Executed   : 6511117  (Average:  1.34 Max: 669 Sum: 8708992 Ratio: 100.00%)
  Bounded    : 2        (Average: 32.00 Max:  63 Sum:     64 Ratio:   0.00%)

Rules        : 910684  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 19046   
Bodies       : 19475   
  Sum        : 172     
  Count      : 14      
Equivalences : 8860     (Atom=Atom: 873 Body=Body: 358 Other: 7629)
Tight        : Yes
Variables    : 17279    (Eliminated:    0 Frozen: 7955)
Constraints  : 927904   (Binary:  98.6% Ternary:   1.0% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasIngredient(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasPrep(4)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(1)) ; 
  4 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(11)) ; 
  4 :: atom(hasPrep(4)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasIngredient(11)) ; 
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasIngredient(2)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(6)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCost(2)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(8)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCost(3)) ; 
  7 :: atom(hasCost(5)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCost(5)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(5)) ; 
  1 :: atom(hasPrep(3)) ; 
  1 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(3)) 
}.
