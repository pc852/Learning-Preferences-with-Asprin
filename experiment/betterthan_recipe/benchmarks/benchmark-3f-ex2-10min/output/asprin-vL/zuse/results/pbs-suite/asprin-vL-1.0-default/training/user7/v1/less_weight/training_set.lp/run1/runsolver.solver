asprin_vL version 1.0
Reading from stdin
-:1334:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1344:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1359:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1440:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1701:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1714:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1891:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2020:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2092:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2096:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2096:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2102:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2201:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2227:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2347:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2381:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2403:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1251:1-16: info: no atoms over signature occur in program:
  output/3

-:1243:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1244:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Progression : [6;inf]
Answer: 1
preference(1,less(weight)) output(4,eq,78) output(52,eq,39) output(39,eq,32) output(32,eq,46) output(46,eq,33) output(33,eq,7) output(60,eq,79) output(78,eq,52) output(7,eq,60) output(4,eq,18) output(76,eq,41) output(41,eq,37) output(37,eq,60) output(60,eq,32) output(32,eq,72) output(42,eq,4) output(18,eq,76) output(72,eq,92) output(32,eq,92) output(4,eq,76) output(39,eq,72) output(60,eq,72) output(7,eq,32) output(37,eq,32) output(41,eq,60) output(76,eq,37) output(18,eq,41) output(42,eq,18) output(33,eq,60) output(4,eq,52) output(7,eq,79) output(37,eq,79) output(46,eq,7) output(32,eq,33) output(39,eq,46) output(60,eq,46) output(52,eq,32) output(78,eq,39) output(42,eq,78) output(4,eq,39) output(42,eq,39) output(78,eq,32) output(4,eq,32) output(7,eq,46) output(37,eq,46) output(41,eq,46) output(33,eq,46) output(52,eq,46) output(78,eq,46) output(39,eq,33) output(60,eq,33) output(7,eq,33) output(37,eq,33) output(52,eq,33) output(32,eq,7) output(39,eq,7) output(60,eq,7) output(41,eq,79) output(76,eq,79) output(33,eq,79) output(46,eq,79) output(42,eq,52) output(46,eq,60) output(32,eq,60) output(4,eq,41) output(42,eq,41) output(18,eq,37) output(4,eq,37) output(76,eq,60) output(18,eq,60) output(41,eq,32) output(76,eq,32) output(33,eq,32) output(46,eq,32) output(7,eq,72) output(37,eq,72) output(41,eq,72) output(33,eq,72) output(52,eq,72) output(78,eq,72) output(42,eq,76) output(39,eq,92) output(60,eq,92) output(7,eq,92) output(37,eq,92) output(52,eq,92) output(78,eq,92) output(4,eq,92) output(42,eq,92) output(41,eq,92) output(76,eq,92) output(18,eq,92) output(33,eq,92) output(46,eq,92) output(4,eq,72) output(42,eq,72) output(46,eq,72) output(76,eq,72) output(18,eq,72) output(32,eq,32) output(18,eq,32) output(42,eq,32) output(4,eq,60) output(42,eq,60) output(42,eq,37) output(39,eq,60) output(60,eq,60) output(52,eq,60) output(78,eq,60) output(32,eq,79) output(39,eq,79) output(52,eq,79) output(78,eq,79) output(18,eq,79) output(4,eq,79) output(42,eq,79) output(7,eq,7) output(37,eq,7) output(41,eq,7) output(76,eq,7) output(18,eq,7) output(52,eq,7) output(78,eq,7) output(4,eq,7) output(42,eq,7) output(78,eq,33) output(4,eq,33) output(42,eq,33) output(41,eq,33) output(76,eq,33) output(18,eq,33) output(33,eq,33) output(4,eq,46) output(42,eq,46) output(46,eq,46) output(76,eq,46) output(18,eq,46)
Optimization: 137 0
Answer: 2
preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasIngredient(9))),4) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,7) output(18,better,46) output(46,better,7) output(46,better,92) output(46,better,72) output(60,better,32) output(60,better,72) output(60,better,46) output(60,better,7) output(60,better,92) output(37,better,32) output(37,better,46) output(37,better,72) output(37,better,92) output(37,better,7) output(32,better,46) output(32,better,72) output(32,better,92) output(32,better,7) output(33,better,7) output(33,better,60) output(33,better,46) output(33,better,79) output(33,better,32) output(33,better,72) output(33,better,92) output(41,better,46) output(41,better,72) output(41,better,92) output(41,better,7) output(52,better,39) output(52,better,32) output(52,better,46) output(52,better,72) output(52,better,92) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,46) output(18,worse,79) output(18,worse,33) output(46,worse,33) output(46,worse,79) output(46,worse,60) output(46,worse,32) output(60,worse,79) output(60,worse,33) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,52) output(4,worse,32) output(4,worse,41) output(4,worse,37) output(4,worse,60) output(4,worse,79) output(4,worse,33) output(4,worse,46) output(37,worse,60) output(37,worse,79) output(37,worse,33) output(39,worse,32) output(39,worse,46) output(39,worse,33) output(39,worse,60) output(39,worse,79) output(42,worse,18) output(42,worse,78) output(42,worse,52) output(42,worse,41) output(42,worse,76) output(42,worse,32) output(42,worse,60) output(42,worse,37) output(42,worse,79) output(42,worse,33) output(42,worse,46) output(7,worse,60) output(7,worse,32) output(7,worse,79) output(7,worse,46) output(7,worse,33) output(32,worse,33) output(32,worse,60) output(32,worse,79) output(41,worse,37) output(41,worse,60) output(41,worse,79) output(41,worse,33) output(52,worse,33) output(52,worse,60) output(52,worse,79) output(76,worse,37) output(76,worse,79) output(76,worse,60) output(76,worse,33) output(76,eq,41) output(42,eq,4) output(72,eq,92) output(39,eq,72) output(4,eq,39) output(42,eq,39) output(39,eq,7) output(18,eq,60) output(41,eq,32) output(76,eq,32) output(7,eq,72) output(39,eq,92) output(7,eq,92) output(4,eq,92) output(42,eq,92) output(4,eq,72) output(42,eq,72) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(4,eq,7) output(42,eq,7) output(78,eq,33) output(33,eq,33) output(46,eq,46)
Optimization: 82 6
Answer: 3
preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasCost(3))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,46) output(46,better,7) output(46,better,92) output(46,better,72) output(60,better,79) output(60,better,32) output(60,better,72) output(60,better,46) output(60,better,7) output(60,better,92) output(37,better,32) output(37,better,46) output(37,better,72) output(37,better,92) output(37,better,7) output(39,better,72) output(39,better,46) output(39,better,7) output(39,better,92) output(32,better,46) output(32,better,72) output(32,better,92) output(32,better,7) output(33,better,7) output(33,better,60) output(33,better,46) output(33,better,79) output(33,better,32) output(33,better,72) output(33,better,92) output(41,better,46) output(41,better,72) output(41,better,92) output(41,better,7) output(52,better,39) output(52,better,32) output(52,better,46) output(52,better,72) output(52,better,92) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,46) output(18,worse,33) output(46,worse,33) output(46,worse,79) output(46,worse,60) output(46,worse,32) output(60,worse,33) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,52) output(4,worse,39) output(4,worse,32) output(4,worse,41) output(4,worse,37) output(4,worse,60) output(4,worse,79) output(4,worse,33) output(4,worse,46) output(37,worse,60) output(37,worse,33) output(39,worse,33) output(39,worse,60) output(39,worse,79) output(42,worse,18) output(42,worse,78) output(42,worse,39) output(42,worse,52) output(42,worse,41) output(42,worse,76) output(42,worse,32) output(42,worse,60) output(42,worse,37) output(42,worse,79) output(42,worse,33) output(42,worse,46) output(7,worse,60) output(7,worse,32) output(7,worse,79) output(7,worse,46) output(7,worse,33) output(32,worse,33) output(32,worse,60) output(32,worse,79) output(41,worse,37) output(41,worse,60) output(41,worse,79) output(41,worse,33) output(52,worse,33) output(52,worse,60) output(52,worse,79) output(76,worse,37) output(76,worse,79) output(76,worse,60) output(76,worse,33) output(39,eq,32) output(76,eq,41) output(42,eq,4) output(72,eq,92) output(37,eq,79) output(18,eq,60) output(41,eq,32) output(76,eq,32) output(7,eq,72) output(7,eq,92) output(4,eq,92) output(42,eq,92) output(4,eq,72) output(42,eq,72) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(4,eq,7) output(42,eq,7) output(78,eq,33) output(33,eq,33) output(46,eq,46)
Optimization: 76 6
Progression : [ 7;76] (Error: 9.85714)
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(7))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),4) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasPrep(0))),7) preference(1,(1,7),1,for(atom(hasIngredient(3))),8) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),4) preference(1,(1,10),1,for(atom(hasIngredient(10))),7) preference(1,(1,11),1,for(atom(hasPrepTime(1))),8) preference(1,(1,12),1,for(atom(hasDifficulty(1))),1) preference(1,(1,13),1,for(atom(hasCost(1))),8) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(18,better,79) output(46,better,7) output(46,better,79) output(46,better,92) output(60,better,79) output(60,better,7) output(60,better,92) output(72,better,92) output(4,better,79) output(37,better,79) output(37,better,92) output(37,better,7) output(39,better,46) output(39,better,7) output(39,better,92) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,18) output(42,better,78) output(42,better,39) output(42,better,52) output(42,better,76) output(42,better,92) output(42,better,72) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,46) output(7,better,79) output(32,better,46) output(32,better,72) output(32,better,92) output(32,better,33) output(32,better,7) output(32,better,60) output(32,better,79) output(33,better,7) output(33,better,60) output(33,better,46) output(33,better,79) output(33,better,72) output(33,better,92) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,72) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,46) output(52,better,92) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,46) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,92) output(76,better,7) output(76,better,46) output(18,worse,76) output(18,worse,41) output(18,worse,37) output(18,worse,60) output(18,worse,72) output(18,worse,32) output(18,worse,33) output(18,worse,46) output(46,worse,33) output(46,worse,32) output(46,worse,72) output(60,worse,32) output(60,worse,72) output(60,worse,33) output(4,worse,78) output(4,worse,76) output(4,worse,52) output(4,worse,39) output(4,worse,32) output(4,worse,41) output(4,worse,37) output(4,worse,72) output(4,worse,60) output(4,worse,33) output(4,worse,46) output(37,worse,32) output(37,worse,33) output(37,worse,72) output(39,worse,32) output(39,worse,72) output(39,worse,33) output(42,worse,41) output(42,worse,32) output(42,worse,33) output(7,worse,60) output(7,worse,32) output(7,worse,46) output(7,worse,33) output(7,worse,72) output(33,worse,32) output(52,worse,32) output(52,worse,33) output(52,worse,72) output(78,worse,32) output(78,worse,72) output(78,worse,33) output(76,worse,41) output(76,worse,32) output(76,worse,33) output(52,eq,39) output(78,eq,52) output(4,eq,18) output(37,eq,60) output(60,eq,46) output(78,eq,39) output(37,eq,46) output(46,eq,60) output(41,eq,32) output(7,eq,92) output(4,eq,92) output(18,eq,92) output(76,eq,72) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(18,eq,7) output(4,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 69 14
Progression : [ 8;69] (Error: 7.625)
Progression : [ 9;69] (Error: 6.66667)
Answer: 5
preference(1,(1,1),1,for(atom(hasCategory(3))),1) preference(1,(1,2),1,for(atom(hasIngredient(10))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasIngredient(7))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrep(0))),5) preference(1,(1,7),1,for(atom(hasCategory(4))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasPrep(7))),7) preference(1,(1,12),1,for(atom(hasPrep(5))),4) preference(1,(1,13),1,for(atom(hasCost(3))),3) preference(1,(1,14),1,for(atom(hasCategory(1))),5) preference(1,less(weight)) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,33) output(46,better,7) output(46,better,79) output(46,better,32) output(46,better,92) output(46,better,72) output(60,better,79) output(60,better,32) output(60,better,72) output(60,better,33) output(60,better,7) output(60,better,92) output(4,better,52) output(4,better,32) output(4,better,41) output(4,better,37) output(4,better,72) output(4,better,79) output(4,better,7) output(4,better,33) output(37,better,32) output(37,better,79) output(37,better,7) output(39,better,32) output(39,better,72) output(39,better,46) output(39,better,33) output(39,better,7) output(39,better,92) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,78) output(42,better,52) output(42,better,41) output(42,better,92) output(42,better,72) output(42,better,32) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,33) output(32,better,7) output(33,better,7) output(33,better,79) output(33,better,32) output(33,better,72) output(41,better,79) output(41,better,32) output(41,better,7) output(52,better,32) output(52,better,72) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,32) output(78,better,72) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,41) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,33) output(76,better,46) output(72,worse,92) output(4,worse,18) output(4,worse,76) output(4,worse,39) output(4,worse,60) output(4,worse,46) output(37,worse,60) output(37,worse,46) output(37,worse,33) output(37,worse,72) output(37,worse,92) output(42,worse,18) output(42,worse,39) output(42,worse,76) output(42,worse,60) output(42,worse,46) output(7,worse,60) output(7,worse,32) output(7,worse,79) output(7,worse,46) output(7,worse,33) output(7,worse,72) output(7,worse,92) output(32,worse,46) output(32,worse,72) output(32,worse,92) output(32,worse,33) output(32,worse,60) output(32,worse,79) output(33,worse,60) output(33,worse,46) output(33,worse,92) output(41,worse,60) output(41,worse,46) output(41,worse,72) output(41,worse,92) output(41,worse,33) output(52,worse,39) output(52,worse,46) output(52,worse,92) output(52,worse,60) output(78,worse,39) output(78,worse,46) output(78,worse,60) output(4,eq,78) output(41,eq,37) output(18,eq,76) output(60,eq,46) output(52,eq,33) output(46,eq,60) output(78,eq,92) output(4,eq,92) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 57 14
Progression : [10;57] (Error: 4.7)
Progression : [11;57] (Error: 4.18182)
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasIngredient(7))),2) preference(1,(1,12),1,for(atom(hasIngredient(12))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),5) preference(1,(1,14),1,for(atom(hasIngredient(3))),2) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,79) output(46,better,60) output(60,better,79) output(72,better,92) output(4,better,52) output(4,better,39) output(4,better,37) output(4,better,60) output(4,better,79) output(4,better,7) output(4,better,46) output(37,better,60) output(37,better,79) output(37,better,46) output(37,better,7) output(39,better,46) output(39,better,7) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,39) output(42,better,52) output(42,better,92) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,46) output(7,better,60) output(7,better,79) output(32,better,46) output(32,better,92) output(32,better,7) output(32,better,60) output(32,better,79) output(33,better,7) output(33,better,60) output(33,better,46) output(33,better,79) output(33,better,32) output(33,better,92) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,32) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,92) output(76,better,7) output(76,better,46) output(46,worse,33) output(46,worse,32) output(46,worse,92) output(46,worse,72) output(60,worse,32) output(60,worse,72) output(60,worse,46) output(60,worse,33) output(60,worse,7) output(60,worse,92) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,32) output(4,worse,41) output(4,worse,72) output(4,worse,33) output(37,worse,32) output(37,worse,33) output(37,worse,72) output(37,worse,92) output(39,worse,32) output(39,worse,72) output(39,worse,33) output(39,worse,92) output(42,worse,18) output(42,worse,78) output(42,worse,41) output(42,worse,72) output(42,worse,33) output(7,worse,32) output(7,worse,33) output(7,worse,72) output(7,worse,92) output(32,worse,72) output(32,worse,33) output(33,worse,72) output(52,worse,32) output(52,worse,33) output(52,worse,72) output(52,worse,92) output(76,worse,41) output(76,worse,72) output(76,worse,33) output(46,eq,7) output(7,eq,46) output(76,eq,32) output(41,eq,72) output(42,eq,76) output(4,eq,92) output(32,eq,32) output(42,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 56 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(2))),6) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasPrep(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasCost(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),3) preference(1,(1,7),1,for(atom(hasPrepTime(3))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasIngredient(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(7))),2) preference(1,(1,12),1,for(atom(hasIngredient(12))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),5) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,7) output(46,better,79) output(46,better,60) output(60,better,79) output(72,better,92) output(4,better,52) output(4,better,39) output(4,better,37) output(4,better,60) output(4,better,79) output(4,better,7) output(4,better,46) output(37,better,60) output(37,better,79) output(37,better,46) output(37,better,7) output(39,better,46) output(39,better,7) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,39) output(42,better,52) output(42,better,92) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,46) output(7,better,60) output(7,better,79) output(32,better,46) output(32,better,92) output(32,better,7) output(32,better,60) output(32,better,79) output(33,better,7) output(33,better,60) output(33,better,46) output(33,better,79) output(33,better,32) output(33,better,92) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,32) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,92) output(76,better,7) output(76,better,46) output(46,worse,33) output(46,worse,32) output(46,worse,92) output(46,worse,72) output(60,worse,32) output(60,worse,72) output(60,worse,46) output(60,worse,33) output(60,worse,7) output(60,worse,92) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,32) output(4,worse,41) output(4,worse,72) output(4,worse,33) output(37,worse,32) output(37,worse,33) output(37,worse,72) output(37,worse,92) output(39,worse,32) output(39,worse,72) output(39,worse,33) output(39,worse,92) output(42,worse,18) output(42,worse,78) output(42,worse,41) output(42,worse,72) output(42,worse,33) output(7,worse,32) output(7,worse,46) output(7,worse,33) output(7,worse,72) output(7,worse,92) output(32,worse,72) output(32,worse,33) output(33,worse,72) output(52,worse,32) output(52,worse,33) output(52,worse,72) output(52,worse,92) output(76,worse,41) output(76,worse,72) output(76,worse,33) output(76,eq,32) output(41,eq,72) output(42,eq,76) output(4,eq,92) output(32,eq,32) output(42,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 55 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),4) preference(1,(1,3),1,for(atom(hasCost(3))),2) preference(1,(1,4),1,for(atom(hasCost(1))),6) preference(1,(1,5),1,for(atom(hasCategory(1))),7) preference(1,(1,6),1,for(atom(hasDifficulty(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),5) preference(1,(1,8),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasIngredient(7))),2) preference(1,(1,10),1,for(atom(hasPrepTime(1))),6) preference(1,(1,11),1,for(atom(hasPrep(0))),8) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasIngredient(12))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,7) output(46,better,79) output(46,better,60) output(46,better,32) output(46,better,92) output(46,better,72) output(60,better,79) output(72,better,92) output(37,better,60) output(37,better,32) output(37,better,79) output(37,better,46) output(37,better,33) output(37,better,72) output(37,better,92) output(37,better,7) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,18) output(42,better,39) output(42,better,92) output(42,better,72) output(42,better,32) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,33) output(42,better,46) output(7,better,60) output(7,better,79) output(7,better,92) output(32,better,72) output(32,better,92) output(32,better,7) output(32,better,60) output(32,better,79) output(33,better,7) output(33,better,60) output(33,better,79) output(33,better,32) output(33,better,72) output(33,better,92) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,32) output(41,better,72) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,39) output(52,better,32) output(52,better,46) output(52,better,33) output(52,better,72) output(52,better,92) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,41) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,33) output(76,better,46) output(18,worse,76) output(18,worse,41) output(18,worse,37) output(18,worse,72) output(18,worse,32) output(18,worse,7) output(18,worse,33) output(18,worse,46) output(60,worse,32) output(60,worse,72) output(60,worse,46) output(60,worse,33) output(60,worse,7) output(60,worse,92) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,52) output(4,worse,39) output(4,worse,32) output(4,worse,41) output(4,worse,37) output(4,worse,92) output(4,worse,72) output(4,worse,60) output(4,worse,7) output(4,worse,33) output(4,worse,46) output(39,worse,32) output(39,worse,72) output(39,worse,46) output(39,worse,33) output(39,worse,7) output(39,worse,92) output(42,worse,76) output(7,worse,32) output(7,worse,46) output(7,worse,33) output(32,worse,46) output(32,worse,33) output(46,eq,33) output(78,eq,52) output(42,eq,78) output(33,eq,46) output(42,eq,52) output(42,eq,41) output(7,eq,72) output(18,eq,92) output(32,eq,32) output(60,eq,60) output(4,eq,79) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 54 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasCategory(4))),8) preference(1,(1,3),1,for(atom(hasPrep(0))),7) preference(1,(1,4),1,for(atom(hasPrepTime(2))),7) preference(1,(1,5),1,for(atom(hasCost(1))),4) preference(1,(1,6),1,for(atom(hasIngredient(10))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrepTime(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),6) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),1) preference(1,less(weight)) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,7) output(46,better,79) output(60,better,79) output(60,better,46) output(60,better,33) output(60,better,7) output(4,better,78) output(4,better,18) output(4,better,52) output(4,better,32) output(4,better,41) output(4,better,37) output(4,better,72) output(4,better,60) output(4,better,79) output(4,better,7) output(4,better,33) output(4,better,46) output(37,better,60) output(37,better,32) output(37,better,79) output(37,better,46) output(37,better,33) output(37,better,7) output(39,better,32) output(39,better,72) output(39,better,46) output(39,better,33) output(39,better,7) output(39,better,92) output(39,better,60) output(39,better,79) output(42,better,18) output(42,better,78) output(42,better,52) output(42,better,41) output(42,better,72) output(42,better,32) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,33) output(42,better,46) output(7,better,79) output(32,better,46) output(32,better,33) output(32,better,7) output(32,better,60) output(32,better,79) output(33,better,7) output(33,better,79) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,7) output(41,better,33) output(52,better,46) output(52,better,33) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,32) output(78,better,46) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,41) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,33) output(76,better,46) output(18,worse,76) output(18,worse,92) output(46,worse,60) output(46,worse,32) output(46,worse,92) output(46,worse,72) output(60,worse,32) output(60,worse,72) output(60,worse,92) output(72,worse,92) output(4,worse,76) output(4,worse,39) output(37,worse,72) output(37,worse,92) output(42,worse,39) output(42,worse,76) output(7,worse,60) output(7,worse,32) output(7,worse,46) output(7,worse,33) output(7,worse,72) output(7,worse,92) output(32,worse,72) output(32,worse,92) output(33,worse,60) output(33,worse,32) output(33,worse,72) output(33,worse,92) output(41,worse,37) output(41,worse,72) output(41,worse,92) output(52,worse,39) output(52,worse,72) output(52,worse,92) output(78,worse,39) output(78,worse,72) output(78,worse,92) output(46,eq,33) output(42,eq,4) output(52,eq,32) output(33,eq,46) output(41,eq,32) output(4,eq,92) output(42,eq,92) output(18,eq,72) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 50 12
Answer: 10
preference(1,(1,1),1,for(atom(hasDifficulty(1))),2) preference(1,(1,2),1,for(atom(hasIngredient(7))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),1) preference(1,(1,4),1,for(atom(hasCost(3))),4) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasCategory(3))),3) preference(1,(1,8),1,for(atom(hasCost(4))),2) preference(1,(1,9),1,for(atom(hasIngredient(10))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),7) preference(1,(1,11),1,for(atom(hasCategory(4))),7) preference(1,(1,12),1,for(atom(hasCategory(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),4) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,79) output(46,better,72) output(60,better,79) output(60,better,72) output(60,better,46) output(60,better,33) output(60,better,7) output(60,better,92) output(4,better,72) output(4,better,79) output(4,better,7) output(4,better,46) output(37,better,60) output(37,better,32) output(37,better,79) output(37,better,46) output(37,better,33) output(37,better,72) output(37,better,92) output(37,better,7) output(39,better,32) output(39,better,72) output(39,better,46) output(39,better,33) output(39,better,7) output(39,better,92) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,18) output(42,better,78) output(42,better,39) output(42,better,52) output(42,better,41) output(42,better,76) output(42,better,92) output(42,better,72) output(42,better,32) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,33) output(42,better,46) output(7,better,79) output(7,better,72) output(32,better,46) output(32,better,72) output(32,better,92) output(32,better,33) output(32,better,7) output(32,better,79) output(33,better,7) output(33,better,46) output(33,better,79) output(33,better,72) output(33,better,92) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,32) output(41,better,72) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,32) output(52,better,46) output(52,better,33) output(52,better,72) output(52,better,92) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,41) output(76,better,79) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,33) output(76,better,46) output(46,worse,33) output(46,worse,60) output(46,worse,32) output(46,worse,92) output(72,worse,92) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,52) output(4,worse,39) output(4,worse,32) output(4,worse,41) output(4,worse,37) output(4,worse,60) output(4,worse,33) output(7,worse,60) output(7,worse,32) output(7,worse,33) output(7,worse,92) output(33,worse,60) output(33,worse,32) output(41,worse,37) output(52,eq,39) output(60,eq,32) output(76,eq,37) output(46,eq,7) output(7,eq,46) output(32,eq,60) output(4,eq,92) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 34 14
Progression : [12;34] (Error: 1.83333)
Progression : [13;34] (Error: 1.61538)
Progression : [14;34] (Error: 1.42857)
Progression : [15;34] (Error: 1.26667)
Progression : [16;34] (Error: 1.125)
Progression : [17;34] (Error: 1)
Progression : [18;34] (Error: 0.888889)
Progression : [19;34] (Error: 0.789474)
Progression : [20;34] (Error: 0.7)
Progression : [21;34] (Error: 0.619048)
Progression : [22;34] (Error: 0.545455)
Progression : [23;34] (Error: 0.478261)
Progression : [24;34] (Error: 0.416667)
Progression : [25;34] (Error: 0.36)
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasCost(1))),1) preference(1,(1,9),1,for(atom(hasCost(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(7))),8) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasPrepTime(2))),7) preference(1,(1,13),1,for(atom(hasPrep(5))),5) preference(1,(1,14),1,for(atom(hasCost(2))),5) preference(1,less(weight)) output(18,better,76) output(18,better,41) output(18,better,37) output(18,better,60) output(18,better,92) output(18,better,72) output(18,better,32) output(18,better,79) output(18,better,7) output(18,better,33) output(18,better,46) output(46,better,7) output(46,better,79) output(46,better,60) output(46,better,32) output(46,better,72) output(60,better,79) output(60,better,32) output(60,better,72) output(60,better,7) output(4,better,32) output(4,better,72) output(4,better,60) output(4,better,79) output(4,better,7) output(4,better,33) output(4,better,46) output(37,better,60) output(37,better,32) output(37,better,79) output(37,better,46) output(37,better,33) output(37,better,72) output(37,better,7) output(39,better,32) output(39,better,72) output(39,better,46) output(39,better,33) output(39,better,7) output(39,better,92) output(39,better,60) output(39,better,79) output(42,better,4) output(42,better,18) output(42,better,78) output(42,better,39) output(42,better,52) output(42,better,41) output(42,better,76) output(42,better,92) output(42,better,72) output(42,better,32) output(42,better,60) output(42,better,37) output(42,better,79) output(42,better,7) output(42,better,33) output(42,better,46) output(7,better,32) output(7,better,79) output(7,better,72) output(32,better,79) output(33,better,7) output(33,better,60) output(33,better,79) output(33,better,32) output(33,better,72) output(41,better,37) output(41,better,60) output(41,better,46) output(41,better,79) output(41,better,32) output(41,better,72) output(41,better,92) output(41,better,7) output(41,better,33) output(52,better,39) output(52,better,32) output(52,better,46) output(52,better,33) output(52,better,72) output(52,better,92) output(52,better,60) output(52,better,79) output(52,better,7) output(78,better,52) output(78,better,39) output(78,better,32) output(78,better,46) output(78,better,72) output(78,better,92) output(78,better,60) output(78,better,79) output(78,better,7) output(78,better,33) output(76,better,37) output(76,better,79) output(76,better,60) output(76,better,32) output(76,better,92) output(76,better,72) output(76,better,7) output(76,better,33) output(76,better,46) output(46,worse,92) output(60,worse,46) output(60,worse,33) output(60,worse,92) output(72,worse,92) output(4,worse,78) output(4,worse,18) output(4,worse,76) output(4,worse,52) output(4,worse,39) output(4,worse,41) output(7,worse,60) output(7,worse,46) output(7,worse,33) output(7,worse,92) output(32,worse,46) output(32,worse,92) output(32,worse,33) output(32,worse,7) output(32,worse,60) output(33,worse,92) output(76,worse,41) output(46,eq,33) output(32,eq,72) output(33,eq,46) output(4,eq,37) output(37,eq,92) output(4,eq,92) output(32,eq,32) output(60,eq,60) output(7,eq,7) output(33,eq,33) output(46,eq,46)
Optimization: 33 14
Progression : [26;33] (Error: 0.269231)
Progression : [27;33] (Error: 0.222222)
Progression : [28;33] (Error: 0.178571)
Progression : [29;33] (Error: 0.137931)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.096 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 11+
  Optimum    : unknown
Optimization : 33 14
Bounds       : [29;33] [0;14]
Calls        : 1
Time         : 597.821s (Solving: 592.99s 1st Model: 0.04s Unsat: 0.00s)
CPU Time     : 2376.381s
Threads      : 4        (Winner: 4)

Choices      : 32632261 (Domain: 3435252)
Conflicts    : 25084542 (Analyzed: 25084518)
Restarts     : 32140    (Average: 780.48 Last: 919909)
Model-Level  : 96.5    
Problems     : 28       (Average Length: 0.14 Splits: 0)
Lemmas       : 25200994 (Deleted: 23863706)
  Binary     : 429      (Ratio:   0.00%)
  Ternary    : 4880     (Ratio:   0.02%)
  Conflict   : 25084518 (Average Length:  110.0 Ratio:  99.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 116476   (Average Length:   28.4 Ratio:   0.46%) 
  Distributed: 39006    (Ratio:   0.16% Average LBD: 3.71) 
  Integrated : 117018   (Ratio: 300.00% Unit: 120 Average Jumps: 13.62)
Backjumps    : 25084518 (Average:  1.26 Max: 1583 Sum: 31590247)
  Executed   : 25084487 (Average:  1.26 Max: 1583 Sum: 31589218 Ratio: 100.00%)
  Bounded    : 31       (Average: 33.19 Max: 105 Sum:   1029 Ratio:   0.00%)

Rules        : 1391364 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 24044   
Bodies       : 20031   
  Sum        : 269     
  Count      : 14      
Equivalences : 17369    (Atom=Atom: 1373 Body=Body: 567 Other: 15429)
Tight        : Yes
Variables    : 17473    (Eliminated:    0 Frozen: 8149)
Constraints  : 1403933  (Binary:  99.1% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCategory(1)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(4)) ; 
  1 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  6 :: atom(hasCost(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCost(1)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(2)) 
}.
