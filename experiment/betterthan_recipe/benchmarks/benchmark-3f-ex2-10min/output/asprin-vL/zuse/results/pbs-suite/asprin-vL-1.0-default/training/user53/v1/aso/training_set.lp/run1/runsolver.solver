asprin_vL version 1.0
Reading from stdin
-:1355:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1380:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1461:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1735:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1912:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2113:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2117:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2117:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2123:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2222:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2248:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2368:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2402:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2424:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1272:1-16: info: no atoms over signature occur in program:
  output/3

-:1264:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1265:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1266:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1267:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1297:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(2))),()) preference(1,aso) output(51,better,33) output(100,better,16) output(67,better,44) output(100,better,24) output(51,better,64) output(51,better,75) output(100,better,92) output(51,better,90) output(51,better,16) output(51,better,24) output(51,better,52) output(100,better,38) output(51,better,38) output(100,better,52) output(100,better,75) output(100,better,64) output(51,better,92) output(100,better,90) output(100,better,33) output(75,worse,51) output(90,worse,100) output(79,worse,67) output(38,worse,51) output(52,worse,84) output(58,worse,100) output(75,worse,84) output(92,worse,51) output(33,worse,100) output(9,worse,51) output(64,worse,51) output(75,worse,100) output(38,worse,100) output(24,worse,51) output(9,worse,84) output(64,worse,84) output(38,worse,84) output(92,worse,84) output(24,worse,84) output(90,worse,51) output(58,worse,51) output(33,worse,51) output(92,worse,100) output(24,worse,100) output(9,worse,100) output(64,worse,100) output(90,worse,84) output(58,worse,84) output(33,worse,84) output(9,eq,75) output(33,eq,90) output(24,eq,92) output(64,eq,75) output(75,eq,52) output(92,eq,38) output(24,eq,38) output(9,eq,52) output(64,eq,52) output(75,eq,64) output(38,eq,64) output(90,eq,24) output(58,eq,24) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(75,eq,33) output(38,eq,33) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(33,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(38,eq,52) output(51,eq,84) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(92,eq,52) output(24,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(100,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(24,eq,16) output(24,eq,90) output(90,eq,90) output(58,eq,90) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52)
Optimization: 117 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(51,better,33) output(24,better,92) output(51,better,64) output(58,better,100) output(92,better,38) output(24,better,38) output(51,better,75) output(75,better,64) output(51,better,90) output(24,better,33) output(51,better,100) output(51,better,24) output(58,better,92) output(92,better,64) output(24,better,64) output(9,better,64) output(51,better,52) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(24,better,75) output(58,better,75) output(100,better,64) output(90,better,64) output(58,better,64) output(33,better,64) output(51,better,92) output(24,better,100) output(24,better,90) output(58,better,90) output(58,better,33) output(75,worse,51) output(100,worse,16) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(64,worse,75) output(75,worse,52) output(9,worse,52) output(64,worse,52) output(92,worse,51) output(90,worse,24) output(79,worse,44) output(90,worse,16) output(58,worse,16) output(38,worse,33) output(9,worse,51) output(64,worse,51) output(64,worse,33) output(38,worse,90) output(64,worse,90) output(33,worse,16) output(38,worse,100) output(33,worse,24) output(24,worse,51) output(100,worse,51) output(38,worse,75) output(38,worse,52) output(64,worse,84) output(38,worse,84) output(92,worse,52) output(100,worse,52) output(90,worse,52) output(90,worse,51) output(58,worse,51) output(33,worse,51) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(9,worse,24) output(64,worse,24) output(64,worse,100) output(75,worse,16) output(38,worse,16) output(92,worse,16) output(9,worse,16) output(64,worse,16) output(24,worse,16) output(33,worse,52) output(33,eq,90) output(90,eq,100) output(38,eq,64) output(100,eq,92) output(58,eq,24) output(33,eq,100) output(51,eq,51) output(92,eq,33) output(9,eq,33) output(92,eq,90) output(9,eq,90) output(90,eq,92) output(33,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(64,eq,38) output(24,eq,52) output(58,eq,52) output(92,eq,92) output(9,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(9,eq,100) output(100,eq,90) output(90,eq,90) output(100,eq,33) output(90,eq,33) output(33,eq,33)
Optimization: 100 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(33,better,90) output(24,better,92) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,64) output(58,better,24) output(33,better,100) output(58,better,16) output(51,better,90) output(9,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(58,better,92) output(33,better,92) output(9,better,64) output(51,better,52) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(58,better,52) output(58,better,75) output(58,better,64) output(33,better,64) output(51,better,92) output(9,better,92) output(24,better,100) output(9,better,100) output(24,better,90) output(58,better,90) output(58,better,33) output(100,worse,16) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(64,worse,75) output(38,worse,64) output(92,worse,51) output(90,worse,24) output(79,worse,44) output(90,worse,16) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(38,worse,100) output(24,worse,51) output(100,worse,51) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(92,worse,52) output(100,worse,52) output(90,worse,52) output(90,worse,51) output(38,worse,92) output(38,worse,24) output(92,worse,24) output(38,worse,16) output(92,worse,16) output(100,worse,33) output(90,worse,33) output(90,eq,100) output(100,eq,92) output(51,eq,51) output(9,eq,33) output(92,eq,90) output(90,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(24,eq,52) output(92,eq,92) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(24,eq,16) output(100,eq,90) output(90,eq,90) output(33,eq,33)
Optimization: 98 6
Answer: 4
preference(1,(1,1),0,for(atom(hasCost(5))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(3)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,aso) output(9,better,75) output(100,better,16) output(67,better,44) output(79,better,67) output(100,better,24) output(38,better,51) output(64,better,75) output(9,better,52) output(64,better,52) output(92,better,51) output(90,better,24) output(79,better,44) output(90,better,16) output(38,better,33) output(9,better,51) output(64,better,51) output(92,better,33) output(9,better,33) output(64,better,33) output(38,better,90) output(92,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(33,better,24) output(100,better,51) output(38,better,75) output(92,better,75) output(38,better,52) output(9,better,84) output(64,better,84) output(38,better,84) output(92,better,84) output(100,better,84) output(92,better,52) output(100,better,52) output(90,better,52) output(100,better,75) output(90,better,75) output(33,better,75) output(90,better,51) output(33,better,51) output(38,better,24) output(92,better,24) output(9,better,24) output(64,better,24) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(100,better,90) output(100,better,33) output(33,better,52) output(51,worse,33) output(90,worse,100) output(24,worse,92) output(51,worse,64) output(52,worse,84) output(58,worse,100) output(24,worse,38) output(75,worse,84) output(75,worse,64) output(33,worse,100) output(51,worse,90) output(75,worse,33) output(24,worse,33) output(75,worse,90) output(51,worse,100) output(75,worse,100) output(90,worse,92) output(58,worse,92) output(33,worse,92) output(24,worse,64) output(51,worse,84) output(90,worse,38) output(58,worse,38) output(33,worse,38) output(51,worse,38) output(75,worse,38) output(24,worse,84) output(90,worse,64) output(58,worse,64) output(33,worse,64) output(51,worse,92) output(75,worse,92) output(24,worse,100) output(24,worse,90) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(75,eq,51) output(33,eq,90) output(75,eq,52) output(92,eq,38) output(51,eq,75) output(38,eq,64) output(100,eq,92) output(58,eq,24) output(58,eq,16) output(51,eq,51) output(51,eq,16) output(38,eq,100) output(51,eq,24) output(24,eq,51) output(92,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(51,eq,52) output(100,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(24,eq,52) output(58,eq,52) output(24,eq,75) output(58,eq,75) output(100,eq,64) output(58,eq,51) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(24,eq,16) output(90,eq,90) output(90,eq,33) output(33,eq,33) output(90,eq,84) output(33,eq,84)
Optimization: 83 2
Progression : [ 1;83] (Error: 82)
Progression : [ 2;83] (Error: 40.5)
Progression : [ 3;83] (Error: 26.6667)
Progression : [ 4;83] (Error: 19.75)
Progression : [ 5;83] (Error: 15.6)
Answer: 5
preference(1,(1,1),0,for(atom(hasIngredient(11))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(11))),()) preference(1,(1,4),0,for(atom(hasIngredient(5))),()) preference(1,(1,5),0,for(atom(hasPrep(2))),()) preference(1,(1,6),0,for(atom(hasCategory(4))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(33,better,90) output(38,better,51) output(75,better,52) output(9,better,52) output(64,better,52) output(38,better,64) output(92,better,51) output(51,better,90) output(75,better,33) output(38,better,33) output(9,better,51) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(75,better,90) output(38,better,90) output(92,better,90) output(9,better,90) output(64,better,90) output(38,better,100) output(24,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(38,better,75) output(92,better,75) output(51,better,52) output(38,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(92,better,100) output(24,better,100) output(9,better,100) output(38,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(90,worse,100) output(100,worse,24) output(100,worse,92) output(90,worse,24) output(58,worse,24) output(33,worse,100) output(90,worse,16) output(33,worse,16) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(58,worse,92) output(33,worse,92) output(100,worse,38) output(90,worse,38) output(58,worse,38) output(33,worse,38) output(51,worse,38) output(75,worse,38) output(64,worse,38) output(90,worse,52) output(90,worse,75) output(33,worse,75) output(90,worse,64) output(33,worse,64) output(90,worse,51) output(33,worse,51) output(51,worse,92) output(75,worse,92) output(64,worse,92) output(75,worse,24) output(64,worse,24) output(90,worse,33) output(90,worse,84) output(79,eq,67) output(24,eq,92) output(51,eq,64) output(92,eq,38) output(24,eq,38) output(58,eq,16) output(64,eq,51) output(51,eq,51) output(51,eq,100) output(100,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(9,eq,38) output(58,eq,75) output(100,eq,64) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(64,eq,100) output(75,eq,16) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 81 6
Answer: 6
preference(1,(1,1),0,for(atom(hasIngredient(11))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(11))),()) preference(1,(1,4),0,for(atom(hasIngredient(5))),()) preference(1,(1,5),0,for(atom(hasPrep(2))),()) preference(1,(1,6),0,for(atom(hasCategory(4))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasPrepTime(2))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(33,better,90) output(67,better,44) output(38,better,51) output(75,better,52) output(9,better,52) output(64,better,52) output(38,better,64) output(92,better,51) output(79,better,44) output(51,better,90) output(75,better,33) output(38,better,33) output(9,better,51) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(75,better,90) output(38,better,90) output(92,better,90) output(9,better,90) output(64,better,90) output(38,better,100) output(24,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(38,better,75) output(92,better,75) output(51,better,52) output(38,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(92,better,100) output(24,better,100) output(9,better,100) output(38,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(90,worse,100) output(100,worse,24) output(100,worse,92) output(90,worse,24) output(58,worse,24) output(33,worse,100) output(90,worse,16) output(33,worse,16) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(58,worse,92) output(33,worse,92) output(100,worse,38) output(90,worse,38) output(58,worse,38) output(33,worse,38) output(51,worse,38) output(75,worse,38) output(64,worse,38) output(90,worse,52) output(90,worse,75) output(33,worse,75) output(90,worse,64) output(33,worse,64) output(90,worse,51) output(33,worse,51) output(51,worse,92) output(75,worse,92) output(64,worse,92) output(75,worse,24) output(64,worse,24) output(90,worse,33) output(90,worse,84) output(79,eq,67) output(24,eq,92) output(51,eq,64) output(92,eq,38) output(24,eq,38) output(58,eq,16) output(64,eq,51) output(51,eq,51) output(51,eq,100) output(100,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(9,eq,38) output(58,eq,75) output(100,eq,64) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(64,eq,100) output(75,eq,16) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 79 6
Progression : [ 6;79] (Error: 12.1667)
Answer: 7
preference(1,(1,1),0,for(atom(hasCategory(1))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(atom(hasPrep(2))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),0,for(atom(hasPrep(5))),()) preference(1,(1,6),0,for(atom(hasCategory(4))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasDifficulty(2))),()) preference(1,(1,4),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(9,better,75) output(100,better,16) output(90,better,100) output(24,better,92) output(64,better,75) output(58,better,100) output(9,better,52) output(64,better,52) output(51,better,75) output(100,better,92) output(90,better,24) output(58,better,24) output(33,better,100) output(90,better,16) output(58,better,16) output(33,better,16) output(51,better,16) output(51,better,100) output(33,better,24) output(51,better,24) output(90,better,92) output(58,better,92) output(33,better,92) output(51,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(9,better,38) output(64,better,38) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(90,better,75) output(58,better,75) output(33,better,75) output(51,better,92) output(75,better,92) output(38,better,92) output(9,better,92) output(64,better,92) output(9,better,24) output(64,better,24) output(9,better,100) output(64,better,100) output(75,better,16) output(38,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(75,worse,51) output(38,worse,51) output(92,worse,38) output(75,worse,84) output(75,worse,64) output(38,worse,64) output(92,worse,51) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(24,worse,33) output(75,worse,90) output(38,worse,90) output(92,worse,90) output(24,worse,51) output(100,worse,51) output(92,worse,64) output(24,worse,64) output(92,worse,75) output(38,worse,84) output(92,worse,84) output(100,worse,64) output(92,worse,24) output(92,worse,100) output(24,worse,90) output(100,worse,90) output(100,worse,33) output(51,eq,33) output(33,eq,90) output(100,eq,24) output(51,eq,64) output(51,eq,90) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(9,eq,33) output(64,eq,33) output(9,eq,90) output(64,eq,90) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(75,eq,38) output(38,eq,38) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(92,eq,92) output(24,eq,24) output(24,eq,100) output(100,eq,100) output(92,eq,16) output(90,eq,90) output(58,eq,90) output(90,eq,33) output(58,eq,33) output(33,eq,33)
Optimization: 78 6
Progression : [ 7;78] (Error: 10.1429)
Progression : [ 8;78] (Error: 8.75)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(67,better,44) output(64,better,75) output(92,better,38) output(24,better,38) output(9,better,52) output(64,better,52) output(51,better,75) output(92,better,51) output(79,better,44) output(90,better,16) output(58,better,16) output(38,better,33) output(9,better,51) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(92,better,90) output(9,better,90) output(51,better,16) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(38,better,75) output(92,better,75) output(51,better,52) output(38,better,52) output(9,better,84) output(100,better,38) output(58,better,38) output(9,better,38) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(90,better,75) output(58,better,75) output(100,better,64) output(58,better,64) output(58,better,51) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(90,better,33) output(58,better,33) output(58,better,84) output(75,worse,51) output(33,worse,90) output(90,worse,100) output(52,worse,84) output(75,worse,84) output(75,worse,64) output(90,worse,24) output(33,worse,100) output(75,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(33,worse,92) output(33,worse,38) output(75,worse,38) output(33,worse,64) output(33,worse,51) output(51,worse,92) output(75,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(64,worse,24) output(64,worse,100) output(33,worse,84) output(79,eq,67) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(75,eq,52) output(58,eq,100) output(38,eq,64) output(100,eq,92) output(58,eq,24) output(51,eq,90) output(75,eq,33) output(64,eq,51) output(51,eq,51) output(38,eq,90) output(64,eq,90) output(33,eq,16) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(64,eq,84) output(51,eq,84) output(90,eq,38) output(51,eq,38) output(38,eq,38) output(64,eq,38) output(38,eq,84) output(33,eq,75) output(90,eq,64) output(90,eq,51) output(92,eq,92) output(9,eq,92) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(75,eq,16) output(90,eq,90) output(33,eq,33) output(33,eq,52) output(90,eq,84)
Optimization: 73 2
Progression : [ 9;73] (Error: 7.11111)
Progression : [10;73] (Error: 6.3)
Progression : [11;73] (Error: 5.63636)
Progression : [12;73] (Error: 5.08333)
Answer: 9
preference(1,(1,2),0,for(atom(hasPrep(1))),()) preference(1,(1,3),0,for(atom(hasCategory(3))),()) preference(1,(1,4),0,for(atom(hasCost(5))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(79,better,67) output(24,better,92) output(51,better,64) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(9,better,52) output(64,better,52) output(51,better,75) output(90,better,16) output(58,better,16) output(51,better,90) output(75,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(75,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(51,better,16) output(51,better,100) output(75,better,100) output(51,better,24) output(58,better,92) output(9,better,64) output(51,better,52) output(38,better,52) output(9,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(51,better,92) output(75,better,92) output(9,better,92) output(64,better,92) output(9,better,24) output(24,better,100) output(9,better,100) output(64,better,100) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(58,better,33) output(33,better,52) output(75,worse,51) output(67,worse,44) output(100,worse,24) output(38,worse,51) output(52,worse,84) output(38,worse,64) output(92,worse,51) output(90,worse,24) output(79,worse,44) output(38,worse,33) output(64,worse,51) output(38,worse,90) output(38,worse,100) output(33,worse,24) output(24,worse,51) output(100,worse,51) output(92,worse,64) output(38,worse,75) output(92,worse,75) output(38,worse,84) output(92,worse,84) output(100,worse,84) output(100,worse,75) output(90,worse,75) output(33,worse,75) output(100,worse,64) output(90,worse,64) output(33,worse,64) output(90,worse,51) output(58,worse,51) output(33,worse,51) output(38,worse,92) output(38,worse,24) output(92,worse,24) output(90,worse,84) output(33,worse,84) output(33,eq,90) output(90,eq,100) output(64,eq,75) output(75,eq,84) output(75,eq,64) output(100,eq,92) output(58,eq,24) output(33,eq,100) output(9,eq,51) output(51,eq,51) output(92,eq,33) output(92,eq,90) output(90,eq,92) output(33,eq,92) output(24,eq,64) output(64,eq,64) output(75,eq,75) output(64,eq,84) output(38,eq,38) output(24,eq,84) output(24,eq,75) output(58,eq,75) output(58,eq,64) output(92,eq,92) output(75,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(100,eq,90) output(90,eq,90) output(100,eq,33) output(90,eq,33) output(33,eq,33) output(58,eq,84)
Optimization: 71 4
Progression : [13;71] (Error: 4.46154)
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),0,for(atom(hasCategory(3))),()) preference(1,(1,4),0,for(atom(hasCost(5))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(5)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(24,better,92) output(51,better,64) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(64,better,52) output(51,better,75) output(90,better,16) output(58,better,16) output(51,better,90) output(75,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(75,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(51,better,16) output(51,better,100) output(75,better,100) output(51,better,24) output(58,better,92) output(9,better,64) output(51,better,52) output(38,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(24,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(51,better,92) output(75,better,92) output(9,better,92) output(64,better,92) output(9,better,24) output(24,better,100) output(9,better,100) output(64,better,100) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(58,better,33) output(33,better,52) output(58,better,84) output(75,worse,51) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(52,worse,84) output(38,worse,64) output(92,worse,51) output(90,worse,24) output(79,worse,44) output(38,worse,33) output(64,worse,51) output(38,worse,90) output(38,worse,100) output(33,worse,24) output(24,worse,51) output(100,worse,51) output(92,worse,64) output(38,worse,75) output(92,worse,75) output(38,worse,84) output(100,worse,75) output(90,worse,75) output(33,worse,75) output(100,worse,64) output(90,worse,64) output(33,worse,64) output(90,worse,51) output(58,worse,51) output(33,worse,51) output(38,worse,92) output(38,worse,24) output(92,worse,24) output(33,eq,90) output(67,eq,44) output(90,eq,100) output(64,eq,75) output(75,eq,64) output(100,eq,92) output(58,eq,24) output(33,eq,100) output(9,eq,51) output(51,eq,51) output(92,eq,33) output(92,eq,90) output(90,eq,92) output(33,eq,92) output(24,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(24,eq,75) output(58,eq,75) output(58,eq,64) output(92,eq,92) output(75,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(100,eq,100) output(100,eq,90) output(90,eq,90) output(100,eq,33) output(90,eq,33) output(33,eq,33)
Optimization: 68 4
Progression : [14;68] (Error: 3.85714)
Progression : [15;68] (Error: 3.53333)
Progression : [16;68] (Error: 3.25)
Progression : [17;68] (Error: 3)
Progression : [18;68] (Error: 2.77778)
Progression : [19;68] (Error: 2.57895)
Progression : [20;68] (Error: 2.4)
Progression : [21;68] (Error: 2.2381)
Answer: 11
preference(1,(1,1),0,for(atom(hasDifficulty(1))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasPrep(7))),()) preference(1,(1,6),3,for(atom(hasPrep(1))),()) preference(1,aso) output(9,better,75) output(33,better,90) output(100,better,16) output(79,better,67) output(51,better,64) output(75,better,52) output(52,better,84) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(33,better,100) output(79,better,44) output(90,better,16) output(58,better,16) output(51,better,90) output(9,better,51) output(92,better,33) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(33,better,16) output(51,better,16) output(51,better,100) output(75,better,100) output(24,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(92,better,75) output(51,better,52) output(9,better,84) output(51,better,84) output(100,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(92,better,84) output(24,better,84) output(92,better,52) output(24,better,52) output(58,better,52) output(24,better,75) output(58,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(58,better,51) output(92,better,100) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(67,worse,44) output(100,worse,24) output(38,worse,51) output(64,worse,75) output(100,worse,92) output(90,worse,24) output(38,worse,33) output(64,worse,51) output(64,worse,33) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(33,worse,92) output(100,worse,51) output(38,worse,75) output(100,worse,75) output(90,worse,75) output(90,worse,51) output(51,worse,92) output(75,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(64,worse,24) output(64,worse,100) output(100,worse,33) output(90,worse,33) output(75,eq,51) output(51,eq,33) output(24,eq,92) output(51,eq,75) output(38,eq,64) output(58,eq,24) output(75,eq,33) output(51,eq,51) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(64,eq,38) output(90,eq,52) output(33,eq,75) output(33,eq,51) output(92,eq,92) output(9,eq,92) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 67 3
Progression : [22;67] (Error: 2.04545)
Progression : [23;67] (Error: 1.91304)
Progression : [24;67] (Error: 1.79167)
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasIngredient(4))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,aso) output(75,better,51) output(33,better,90) output(100,better,16) output(79,better,67) output(24,better,92) output(38,better,51) output(75,better,52) output(58,better,100) output(24,better,38) output(75,better,84) output(9,better,52) output(64,better,52) output(75,better,64) output(92,better,51) output(58,better,24) output(33,better,100) output(90,better,16) output(58,better,16) output(9,better,51) output(64,better,51) output(75,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(75,better,100) output(33,better,24) output(58,better,92) output(33,better,92) output(24,better,51) output(9,better,64) output(38,better,52) output(9,better,84) output(64,better,84) output(58,better,38) output(33,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(75,better,92) output(9,better,92) output(64,better,92) output(75,better,24) output(9,better,24) output(24,better,100) output(9,better,100) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(67,worse,44) output(100,worse,24) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(79,worse,44) output(51,worse,90) output(38,worse,33) output(92,worse,33) output(24,worse,33) output(64,worse,33) output(51,worse,24) output(92,worse,64) output(38,worse,75) output(92,worse,75) output(51,worse,38) output(24,worse,75) output(100,worse,75) output(90,worse,75) output(90,worse,64) output(51,worse,92) output(38,worse,24) output(92,worse,24) output(100,worse,33) output(90,worse,33) output(9,eq,75) output(92,eq,38) output(75,eq,33) output(51,eq,51) output(9,eq,33) output(38,eq,90) output(92,eq,90) output(90,eq,92) output(64,eq,64) output(75,eq,75) output(51,eq,84) output(90,eq,38) output(38,eq,38) output(58,eq,75) output(33,eq,75) output(38,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(58,eq,33) output(33,eq,33)
Optimization: 66 6
Progression : [25;66] (Error: 1.64)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(10))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),0,for(atom(hasPrepTime(1))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasPrepTime(2))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(67,better,44) output(79,better,67) output(64,better,75) output(75,better,52) output(92,better,38) output(24,better,38) output(9,better,52) output(64,better,52) output(51,better,75) output(92,better,51) output(79,better,44) output(90,better,16) output(58,better,16) output(75,better,33) output(9,better,51) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(92,better,90) output(9,better,90) output(33,better,16) output(51,better,16) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(92,better,75) output(51,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(51,better,38) output(9,better,38) output(64,better,38) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(90,better,75) output(58,better,75) output(100,better,64) output(58,better,64) output(58,better,51) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(90,better,33) output(58,better,33) output(90,better,84) output(58,better,84) output(75,worse,51) output(33,worse,90) output(90,worse,100) output(38,worse,51) output(75,worse,64) output(38,worse,64) output(90,worse,24) output(33,worse,100) output(75,worse,90) output(38,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(33,worse,92) output(33,worse,75) output(33,worse,64) output(33,worse,51) output(51,worse,92) output(75,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(64,worse,24) output(64,worse,100) output(100,eq,24) output(24,eq,92) output(51,eq,64) output(58,eq,100) output(100,eq,92) output(58,eq,24) output(51,eq,90) output(64,eq,51) output(51,eq,51) output(64,eq,90) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(90,eq,64) output(90,eq,51) output(92,eq,92) output(9,eq,92) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 65 6
Answer: 14
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(10))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(67,better,44) output(79,better,67) output(51,better,64) output(64,better,75) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(9,better,52) output(64,better,52) output(51,better,75) output(79,better,44) output(90,better,16) output(58,better,16) output(51,better,90) output(75,better,33) output(38,better,33) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(92,better,90) output(9,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(92,better,64) output(24,better,64) output(9,better,64) output(92,better,75) output(51,better,52) output(38,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(51,better,38) output(9,better,38) output(64,better,38) output(92,better,84) output(24,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(24,better,75) output(90,better,75) output(58,better,75) output(58,better,64) output(51,better,92) output(92,better,100) output(24,better,100) output(9,better,100) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(100,better,33) output(90,better,33) output(58,better,33) output(90,better,84) output(58,better,84) output(75,worse,51) output(33,worse,90) output(100,worse,24) output(38,worse,51) output(75,worse,64) output(38,worse,64) output(92,worse,51) output(100,worse,92) output(90,worse,24) output(33,worse,100) output(9,worse,51) output(64,worse,51) output(75,worse,90) output(38,worse,90) output(38,worse,100) output(33,worse,24) output(90,worse,92) output(33,worse,92) output(24,worse,51) output(100,worse,51) output(33,worse,38) output(33,worse,75) output(33,worse,64) output(90,worse,51) output(58,worse,51) output(33,worse,51) output(75,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(64,worse,24) output(24,eq,92) output(58,eq,24) output(51,eq,51) output(64,eq,90) output(33,eq,16) output(58,eq,92) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(90,eq,64) output(92,eq,92) output(9,eq,92) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 64 6
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(10))),()) preference(1,(1,4),0,for(atom(hasPrep(2))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),1,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCategory(4))),()) preference(1,aso) output(9,better,75) output(51,better,33) output(100,better,16) output(67,better,44) output(79,better,67) output(24,better,92) output(51,better,64) output(64,better,75) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(9,better,52) output(64,better,52) output(51,better,75) output(79,better,44) output(90,better,16) output(58,better,16) output(51,better,90) output(75,better,33) output(38,better,33) output(92,better,33) output(24,better,33) output(9,better,33) output(64,better,33) output(92,better,90) output(9,better,90) output(51,better,16) output(51,better,100) output(58,better,92) output(92,better,64) output(24,better,64) output(9,better,64) output(92,better,75) output(51,better,52) output(38,better,52) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(51,better,38) output(9,better,38) output(64,better,38) output(92,better,84) output(24,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(90,better,52) output(58,better,52) output(24,better,75) output(90,better,75) output(58,better,75) output(58,better,64) output(51,better,92) output(92,better,100) output(24,better,100) output(9,better,100) output(75,better,16) output(38,better,16) output(92,better,16) output(9,better,16) output(64,better,16) output(24,better,16) output(24,better,90) output(58,better,90) output(100,better,33) output(90,better,33) output(58,better,33) output(90,better,84) output(58,better,84) output(75,worse,51) output(33,worse,90) output(100,worse,24) output(38,worse,51) output(75,worse,64) output(38,worse,64) output(92,worse,51) output(100,worse,92) output(90,worse,24) output(33,worse,100) output(9,worse,51) output(64,worse,51) output(75,worse,90) output(38,worse,90) output(38,worse,100) output(33,worse,24) output(90,worse,92) output(33,worse,92) output(100,worse,51) output(33,worse,38) output(33,worse,75) output(33,worse,64) output(90,worse,51) output(33,worse,51) output(75,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(9,worse,24) output(64,worse,24) output(58,eq,24) output(51,eq,51) output(64,eq,90) output(33,eq,16) output(51,eq,24) output(24,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(90,eq,64) output(58,eq,51) output(92,eq,92) output(9,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33) output(33,eq,52)
Optimization: 63 6
Progression : [26;63] (Error: 1.42308)
Progression : [27;63] (Error: 1.33333)
Progression : [28;63] (Error: 1.25)
Progression : [29;63] (Error: 1.17241)
Progression : [30;63] (Error: 1.1)
Progression : [31;63] (Error: 1.03226)
Progression : [32;63] (Error: 0.96875)
Progression : [33;63] (Error: 0.909091)
Progression : [34;63] (Error: 0.852941)
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(12))),()) preference(1,(1,5),2,for(atom(hasCost(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(51,better,64) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(51,better,90) output(9,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(58,better,51) output(33,better,51) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(64,worse,75) output(51,worse,75) output(90,worse,24) output(58,worse,24) output(79,worse,44) output(75,worse,33) output(38,worse,33) output(64,worse,51) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(90,worse,75) output(90,worse,51) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(9,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(90,worse,33) output(33,eq,100) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(75,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33)
Optimization: 62 6
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,(1,3),3,for(atom(hasCategory(2))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(9,better,51) output(64,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(58,worse,24) output(33,worse,100) output(79,worse,44) output(51,worse,90) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(90,worse,75) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(9,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(90,worse,33) output(51,eq,51) output(64,eq,90) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(38,eq,84) output(90,eq,64) output(75,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 61 6
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasPrep(7))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(75,better,52) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(9,better,51) output(64,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(58,worse,24) output(33,worse,100) output(79,worse,44) output(51,worse,90) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(90,worse,75) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(9,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(90,worse,33) output(51,eq,51) output(64,eq,90) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(90,eq,64) output(75,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 60 6
Answer: 19
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,4),1,for(atom(hasPrepTime(2))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(75,better,52) output(52,better,84) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(9,better,51) output(64,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(33,worse,100) output(79,worse,44) output(51,worse,90) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,16) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(51,worse,52) output(38,worse,52) output(90,worse,75) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(38,worse,16) output(90,worse,33) output(58,eq,24) output(51,eq,51) output(64,eq,90) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(90,eq,64) output(75,eq,92) output(92,eq,92) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 59 6
Answer: 20
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasPrep(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(75,better,52) output(52,better,84) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(9,better,51) output(64,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(33,worse,100) output(79,worse,44) output(51,worse,90) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(90,worse,75) output(90,worse,64) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(90,worse,33) output(58,eq,24) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(38,eq,38) output(75,eq,92) output(92,eq,92) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 58 6
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,aso) output(9,better,75) output(75,better,51) output(33,better,90) output(100,better,16) output(67,better,44) output(24,better,92) output(75,better,52) output(52,better,84) output(58,better,100) output(92,better,38) output(24,better,38) output(75,better,84) output(9,better,52) output(75,better,64) output(92,better,51) output(100,better,92) output(58,better,16) output(9,better,51) output(64,better,51) output(24,better,33) output(9,better,33) output(75,better,90) output(92,better,90) output(9,better,90) output(64,better,90) output(33,better,16) output(58,better,92) output(33,better,92) output(24,better,51) output(100,better,51) output(92,better,64) output(24,better,64) output(9,better,64) output(9,better,84) output(64,better,84) output(51,better,84) output(100,better,38) output(90,better,38) output(58,better,38) output(33,better,38) output(51,better,38) output(75,better,38) output(9,better,38) output(64,better,38) output(38,better,84) output(92,better,84) output(24,better,84) output(100,better,84) output(92,better,52) output(24,better,52) output(100,better,52) output(58,better,52) output(24,better,75) output(100,better,75) output(58,better,75) output(33,better,75) output(100,better,64) output(58,better,64) output(33,better,64) output(90,better,51) output(58,better,51) output(33,better,51) output(75,better,92) output(9,better,92) output(24,better,100) output(9,better,100) output(75,better,16) output(92,better,16) output(9,better,16) output(24,better,16) output(24,better,90) output(100,better,90) output(58,better,90) output(100,better,33) output(58,better,33) output(33,better,52) output(90,better,84) output(58,better,84) output(33,better,84) output(51,worse,33) output(90,worse,100) output(79,worse,67) output(100,worse,24) output(38,worse,51) output(51,worse,64) output(64,worse,75) output(51,worse,75) output(38,worse,64) output(90,worse,24) output(33,worse,100) output(79,worse,44) output(90,worse,16) output(51,worse,90) output(75,worse,33) output(38,worse,33) output(92,worse,33) output(64,worse,33) output(38,worse,90) output(51,worse,16) output(51,worse,100) output(75,worse,100) output(38,worse,100) output(33,worse,24) output(51,worse,24) output(90,worse,92) output(38,worse,75) output(92,worse,75) output(51,worse,52) output(38,worse,52) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(51,worse,92) output(38,worse,92) output(64,worse,92) output(75,worse,24) output(38,worse,24) output(92,worse,24) output(64,worse,24) output(92,worse,100) output(64,worse,100) output(38,worse,16) output(90,worse,33) output(58,eq,24) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(92,eq,92) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 57 6
Progression : [35;57] (Error: 0.628571)
Progression : [36;57] (Error: 0.583333)
Progression : [37;57] (Error: 0.540541)
Progression : [38;57] (Error: 0.5)
Progression : [39;57] (Error: 0.461538)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.070 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 57 6
Bounds       : [39;57] [0;6]
Calls        : 1
Time         : 597.797s (Solving: 573.34s 1st Model: 1.43s Unsat: 0.00s)
CPU Time     : 2316.762s
Threads      : 4        (Winner: 4)

Choices      : 10404324 (Domain: 487663)
Conflicts    : 3422468  (Analyzed: 3422429)
Restarts     : 2955     (Average: 1158.18 Last: 100381)
Model-Level  : 465.9   
Problems     : 44       (Average Length: 0.09 Splits: 0)
Lemmas       : 3818452  (Deleted: 3429447)
  Binary     : 30552    (Ratio:   0.80%)
  Ternary    : 137304   (Ratio:   3.60%)
  Conflict   : 3422427  (Average Length:  266.2 Ratio:  89.63%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 396025   (Average Length:   56.1 Ratio:  10.37%) 
  Distributed: 132157   (Ratio:   3.86% Average LBD: 3.16) 
  Integrated : 396471   (Ratio: 300.00% Unit: 1562 Average Jumps: 94.58)
Backjumps    : 3422429  (Average:  2.93 Max: 996 Sum: 10030627)
  Executed   : 3422267  (Average:  2.93 Max: 996 Sum: 10023470 Ratio:  99.93%)
  Bounded    : 162      (Average: 44.18 Max: 134 Sum:   7157 Ratio:   0.07%)

Rules        : 12944214
  Choice     : 25      
  Minimize   : 2       
Atoms        : 2095604 
Bodies       : 2455310 
  Count      : 4920    
Equivalences : 6431476  (Atom=Atom: 1906794 Body=Body: 2107847 Other: 2416835)
Tight        : Yes
Variables    : 185135   (Eliminated:    0 Frozen: 118679)
Constraints  : 10889858 (Binary:  98.3% Ternary:   1.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasCategory(2)) >> not atom(hasIngredient(6))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasIngredient(8))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(5)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(8))  >> not atom(hasPrep(3))  >> not atom(hasIngredient(6))  || atom(hasCost(5)) ; 
  atom(hasPrep(4)) >> not atom(hasIngredient(3))  >> not atom(hasIngredient(11))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(2))  >> not atom(hasIngredient(6))  || atom(hasIngredient(11)) ; 
  atom(hasCost(3)) >> not atom(hasIngredient(9))  || not atom(hasPrep(7))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(2))  || atom(hasIngredient(11)) ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasIngredient(1))  || atom(hasIngredient(5)) ; 
  atom(hasCost(3)) >> atom(hasPrepTime(2)) || atom(hasPrep(2)) ; 
  atom(hasCategory(3)) >> not atom(hasPrep(2))  >> not atom(hasCost(1))  || atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(2))  >> not atom(hasIngredient(6))  || atom(hasIngredient(11)) ; 
  atom(hasIngredient(8)) >> not atom(hasIngredient(9))  || not atom(hasPrep(7))  ; 
  not atom(hasCategory(1))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(2))  || atom(hasIngredient(11)) ; 
  not atom(hasIngredient(11))  >> not atom(hasIngredient(6))  >> not atom(hasIngredient(1))  || atom(hasIngredient(5)) ; 
  atom(hasCost(3)) >> atom(hasPrepTime(2)) || atom(hasPrep(2)) ; 
  atom(hasCategory(3)) >> not atom(hasPrep(2))  >> not atom(hasCost(1))  || atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  >> atom(hasDifficulty(2)) || atom(hasCategory(1)) ; 
  atom(hasDifficulty(1)) >> not atom(hasIngredient(12))  || not atom(hasPrep(2))  ; 
  not atom(hasCost(4))  >> not atom(hasIngredient(1))  >> not atom(hasIngredient(2))  || atom(hasPrep(2)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(10)) >> atom(hasIngredient(9)) || not atom(hasPrep(7))  ; 
  not atom(hasCost(5))  >> atom(hasCost(2)) >> not atom(hasCost(1))  || atom(hasPrep(5)) ; 
  atom(hasIngredient(9)) >> atom(hasIngredient(3)) || atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasPrep(6))  >> not atom(hasCategory(3))  || not atom(hasPrep(5))  ; 
  not atom(hasPrep(6))  >> not atom(hasCost(5))  || atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> not atom(hasPrep(6))  >> atom(hasIngredient(3)) || atom(hasPrep(1)) ; 
  atom(hasPrep(6)) || atom(hasCategory(3)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  || atom(hasCost(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(7)) >> not atom(hasDifficulty(3))  || not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(3)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(3)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(6)) || atom(hasCategory(3)) ; 
  not atom(hasCost(5))  >> not atom(hasCategory(2))  >> not atom(hasCategory(1))  || atom(hasCost(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(7)) >> not atom(hasDifficulty(3))  || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> not atom(hasPrep(6))  || atom(hasDifficulty(1)) ; 
  atom(hasCategory(3)) >> not atom(hasPrepTime(3))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(0))  >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasIngredient(5))  || not atom(hasCategory(3))  ; 
  not atom(hasCost(4))  >> not atom(hasIngredient(10))  || atom(hasIngredient(4)) ; 
  not atom(hasPrep(6))  >> atom(hasPrep(1)) || not atom(hasIngredient(12))  ; 
  atom(hasCost(3)) >> not atom(hasCost(4))  || not atom(hasPrep(7))  ; 
  not atom(hasIngredient(5))  >> not atom(hasCost(1))  >> not atom(hasCost(5))  || atom(hasIngredient(11)) ; 
  atom(hasIngredient(12)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(4))  >> not atom(hasPrep(2))  || not atom(hasIngredient(7))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(6))  >> not atom(hasCategory(3))  || not atom(hasPrep(7))  ; 
  not atom(hasPrep(3))  >> not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(10)) ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(12))  || atom(hasPrep(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  || not atom(hasIngredient(7))  ; 
  atom(hasPrepTime(2)) >> not atom(hasIngredient(12))  || atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> not atom(hasPrep(6))  >> not atom(hasCategory(3))  || not atom(hasPrep(7))  ; 
  not atom(hasPrep(3))  >> not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(10)) ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(12))  || atom(hasPrep(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  || not atom(hasIngredient(7))  ; 
  not atom(hasPrep(1))  >> not atom(hasIngredient(1))  || not atom(hasIngredient(7))  ; 
  atom(hasDifficulty(4)) >> not atom(hasIngredient(11))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> not atom(hasIngredient(5))  || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(4)) >> not atom(hasPrep(6))  >> atom(hasCategory(4)) || not atom(hasPrep(7))  ; 
  not atom(hasPrep(3))  >> not atom(hasDifficulty(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(10)) ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(12))  || atom(hasPrep(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasCategory(5))  || not atom(hasIngredient(7))  ; 
  not atom(hasPrep(1))  >> not atom(hasIngredient(1))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasIngredient(7)) >> atom(hasIngredient(3)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(6)) >> not atom(hasPrep(3))  || not atom(hasIngredient(11))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(12)) >> not atom(hasDifficulty(4))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(7)) >> atom(hasCost(4)) >> not atom(hasIngredient(4))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  || atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(3)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(6)) >> not atom(hasPrep(3))  || not atom(hasIngredient(11))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(5))  >> atom(hasCategory(2)) || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  || atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasDifficulty(2))  >> atom(hasIngredient(3)) || not atom(hasIngredient(12))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(6)) >> not atom(hasPrep(3))  || not atom(hasPrep(5))  ; 
  atom(hasPrep(7)) >> not atom(hasIngredient(10))  >> not atom(hasPrep(5))  || not atom(hasCost(4))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) >> not atom(hasIngredient(4))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  || atom(hasDifficulty(1)) ; 
  atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasIngredient(3)) >> atom(hasDifficulty(1)) || not atom(hasPrep(5))  ; 
  atom(hasCost(4)) >> atom(hasPrep(6)) >> not atom(hasPrep(5))  || not atom(hasPrep(7))  ; 
  not atom(hasPrep(5))  || not atom(hasIngredient(6))  ; 
  atom(hasPrepTime(2)) >> atom(hasPrep(0)) || not atom(hasPrepTime(1))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) >> not atom(hasPrep(5))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(3)) >> not atom(hasCost(2))  || atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(3)) >> atom(hasIngredient(10)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(5)) >> not atom(hasDifficulty(1))  >> not atom(hasIngredient(12))  || not atom(hasPrep(6))  ; 
  not atom(hasPrep(5))  || not atom(hasIngredient(6))  ; 
  atom(hasCategory(5)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(2))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(4)) >> not atom(hasPrep(5))  || not atom(hasDifficulty(3))  ; 
  atom(hasCost(4)) >> atom(hasPrep(6)) >> not atom(hasIngredient(4))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasPrep(4)) >> not atom(hasDifficulty(3))  || not atom(hasIngredient(4))  ; 
  atom(hasPrep(7)) >> atom(hasCost(3)) >> not atom(hasPrep(5))  || not atom(hasCost(4))  ; 
  not atom(hasPrep(5))  || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(12)) >> atom(hasCategory(4)) >> not atom(hasDifficulty(2))  || not atom(hasCategory(5))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(6)) >> not atom(hasIngredient(4))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrepTime(1)) >> not atom(hasCost(2))  || not atom(hasPrep(6))  
}.
