asprin_vL version 1.0
Reading from stdin
-:1267:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1292:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1373:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1647:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1824:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2025:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2029:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2029:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2035:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2134:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2160:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2280:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2314:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2336:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1184:1-16: info: no atoms over signature occur in program:
  output/3

-:1176:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1177:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1178:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1179:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1209:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(51,better,71) output(99,better,30) output(60,better,76) output(94,better,98) output(98,better,71) output(94,better,71) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(99,better,91) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(99,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(53,worse,99) output(30,worse,60) output(30,worse,76) output(76,worse,51) output(53,worse,55) output(30,worse,91) output(67,worse,51) output(30,worse,51) output(99,eq,55) output(71,eq,57) output(60,eq,51) output(30,eq,57) output(30,eq,71) output(53,eq,91)
Optimization: 24 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,55) output(51,better,71) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(99,better,91) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(99,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(53,worse,99) output(30,worse,60) output(30,worse,76) output(76,worse,51) output(53,worse,55) output(30,worse,91) output(67,worse,51) output(30,worse,51) output(53,worse,91) output(71,eq,57) output(30,eq,57) output(30,eq,71)
Optimization: 23 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),1,for(atom(hasIngredient(1))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(10))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasPrep(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(51,better,71) output(71,better,57) output(99,better,30) output(60,better,76) output(94,better,98) output(98,better,71) output(94,better,71) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(99,better,91) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(99,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(53,worse,99) output(30,worse,60) output(30,worse,76) output(76,worse,51) output(53,worse,55) output(30,worse,91) output(67,worse,51) output(30,worse,51) output(99,eq,55) output(60,eq,51) output(30,eq,71) output(53,eq,91)
Optimization: 22 6
Answer: 4
preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,aso) output(91,better,51) output(51,better,71) output(99,better,30) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(76,worse,91) output(30,worse,60) output(30,worse,76) output(67,worse,91) output(60,worse,91) output(30,worse,91) output(30,worse,51) output(99,eq,55) output(67,eq,76) output(71,eq,57) output(53,eq,99) output(60,eq,76) output(94,eq,98) output(76,eq,51) output(53,eq,55) output(99,eq,91) output(67,eq,51) output(60,eq,51) output(30,eq,57) output(30,eq,71) output(53,eq,91)
Optimization: 21 1
Answer: 5
preference(1,(1,4),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(atom(hasIngredient(4))),()) preference(1,aso) output(76,better,91) output(51,better,71) output(53,better,99) output(99,better,30) output(98,better,71) output(94,better,71) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(53,better,51) output(53,better,91) output(99,worse,55) output(30,worse,60) output(30,worse,76) output(99,worse,60) output(30,worse,91) output(30,worse,51) output(99,worse,76) output(67,eq,76) output(91,eq,51) output(71,eq,57) output(60,eq,76) output(94,eq,98) output(53,eq,55) output(99,eq,91) output(53,eq,60) output(53,eq,76) output(30,eq,57) output(30,eq,71) output(99,eq,51)
Optimization: 19 1
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,4),1,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasCategory(5))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(99,better,55) output(91,better,51) output(99,better,30) output(60,better,76) output(94,better,98) output(94,better,71) output(30,better,76) output(53,better,30) output(98,better,57) output(76,better,51) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(30,better,51) output(60,better,71) output(94,better,57) output(76,better,57) output(99,better,76) output(53,better,76) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(67,worse,76) output(30,worse,60) output(51,worse,57) output(67,worse,91) output(53,eq,99)
Optimization: 18 6
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),2,for(atom(hasIngredient(1))),()) preference(1,(1,4),2,for(atom(hasCategory(3))),()) preference(1,(1,5),2,for(atom(hasCategory(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(91,better,51) output(71,better,57) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(30,better,76) output(99,better,60) output(53,better,30) output(98,better,57) output(76,better,51) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(30,better,51) output(94,better,57) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(51,worse,71) output(53,worse,99) output(94,worse,98) output(76,worse,71)
Optimization: 17 5
Progression : [ 1;17] (Error: 16)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasCategory(3))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(67,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(30,worse,60) output(30,worse,91) output(53,eq,99) output(30,eq,71)
Optimization: 16 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(67,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(30,worse,60) output(94,worse,98) output(30,worse,91) output(53,eq,99)
Optimization: 15 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(91,better,51) output(99,better,30) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(30,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(76,better,57) output(99,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(71,worse,57) output(53,worse,99) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(51,worse,57) output(51,eq,71) output(60,eq,76) output(30,eq,91) output(94,eq,57) output(91,eq,57) output(53,eq,60) output(53,eq,76) output(30,eq,57)
Optimization: 14 2
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),0,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(99,better,30) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(67,better,91) output(60,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(91,worse,51) output(71,worse,57) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,worse,51) output(53,eq,99) output(60,eq,76) output(76,eq,51) output(30,eq,91) output(60,eq,51) output(91,eq,57) output(30,eq,57)
Optimization: 13 2
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(99,better,30) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(71,worse,57) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(53,eq,99) output(60,eq,76) output(30,eq,91) output(91,eq,57) output(30,eq,57)
Optimization: 12 2
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasCost(5))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasPrep(6))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(53,better,99) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(30,better,91) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(91,worse,51) output(71,worse,57) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,worse,51) output(91,worse,57) output(30,worse,57)
Optimization: 11 6
Answer: 14
preference(1,(1,4),0,for(atom(hasCost(3))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),1,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(7))),()) preference(1,(1,5),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasCategory(4))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(91,better,51) output(51,better,71) output(71,better,57) output(99,better,30) output(94,better,98) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(30,worse,60) output(30,worse,76) output(30,worse,91) output(30,worse,51) output(53,eq,99) output(60,eq,76) output(30,eq,71)
Optimization: 9 3
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,1),3,for(atom(hasPrep(3))),()) preference(1,(1,3),3,for(atom(hasIngredient(8))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(30,better,91) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(91,worse,51) output(53,worse,99) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,worse,51)
Optimization: 8 5
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(8))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(30,better,91) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(91,worse,51) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,worse,51) output(53,eq,99)
Optimization: 7 5
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),1,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(8))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(51,better,71) output(53,better,99) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(30,better,91) output(99,better,91) output(67,better,51) output(60,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(53,better,60) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(91,worse,51) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,worse,51)
Optimization: 6 5
Progression : [2;6] (Error: 2)
Progression : [3;6] (Error: 1)
Progression : [4;6] (Error: 0.5)
Progression : [5;6] (Error: 0.2)
Progression : [6;6] (Error: 0)
Progression : 6 [1;5] (Error: 4)
Progression : 6 [2;5] (Error: 1.5)
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(atom(hasPrep(1))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(6))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(99,better,55) output(67,better,76) output(76,better,91) output(91,better,51) output(51,better,71) output(71,better,57) output(99,better,30) output(60,better,76) output(98,better,71) output(94,better,71) output(99,better,60) output(53,better,30) output(51,better,57) output(98,better,57) output(91,better,71) output(76,better,51) output(67,better,91) output(60,better,91) output(53,better,55) output(99,better,91) output(67,better,51) output(60,better,51) output(30,better,51) output(76,better,71) output(67,better,71) output(60,better,71) output(94,better,57) output(91,better,57) output(76,better,57) output(99,better,76) output(53,better,76) output(67,better,57) output(60,better,57) output(30,better,57) output(99,better,57) output(53,better,57) output(30,better,71) output(99,better,71) output(53,better,71) output(99,better,51) output(53,better,51) output(53,better,91) output(53,worse,99) output(30,worse,60) output(94,worse,98) output(30,worse,76) output(30,eq,91) output(53,eq,60)
Optimization: 6 4
Progression : 6 [3;4] (Error: 0.333333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.023 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 18+
  Optimum    : unknown
Optimization : 6 4
Bounds       : 6 [3;4]
Calls        : 1
Time         : 598.531s (Solving: 588.74s 1st Model: 0.60s Unsat: 0.00s)
CPU Time     : 2364.183s
Threads      : 4        (Winner: 4)

Choices      : 4332082  (Domain: 136514)
Conflicts    : 1648964  (Analyzed: 1648955)
Restarts     : 1411     (Average: 1168.64 Last: 178194)
Model-Level  : 610.6   
Problems     : 17       (Average Length: 0.24 Splits: 0)
Lemmas       : 1959735  (Deleted: 1703044)
  Binary     : 13413    (Ratio:   0.68%)
  Ternary    : 70129    (Ratio:   3.58%)
  Conflict   : 1648955  (Average Length:  342.5 Ratio:  84.14%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 310780   (Average Length:   70.8 Ratio:  15.86%) 
  Distributed: 103957   (Ratio:   6.30% Average LBD: 3.32) 
  Integrated : 311871   (Ratio: 300.00% Unit: 936 Average Jumps: 49.10)
Backjumps    : 1648955  (Average:  2.52 Max: 1531 Sum: 4155571)
  Executed   : 1648925  (Average:  2.52 Max: 1531 Sum: 4154755 Ratio:  99.98%)
  Bounded    : 30       (Average: 27.20 Max:  47 Sum:    816 Ratio:   0.02%)

Rules        : 4611440 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 759700  
Bodies       : 923942  
  Count      : 1752    
Equivalences : 2316608  (Atom=Atom: 683602 Body=Body: 750043 Other: 882963)
Tight        : Yes
Variables    : 109953   (Eliminated:    0 Frozen: 44553)
Constraints  : 3995706  (Binary:  97.3% Ternary:   2.5% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(11)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasIngredient(11)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasIngredient(1)) >> not atom(hasCategory(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(10)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasCost(4)) >> atom(hasIngredient(10)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasIngredient(1)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasCategory(4))  >> not atom(hasCategory(2))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> not atom(hasCategory(4))  >> not atom(hasCategory(2))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> not atom(hasPrepTime(1))  >> atom(hasPrep(1)) || not atom(hasCost(1))  ; 
  atom(hasPrep(7)) >> not atom(hasPrep(7))  >> not atom(hasPrepTime(2))  || not atom(hasCategory(3))  ; 
  atom(hasCategory(5)) >> atom(hasCost(5)) >> not atom(hasPrep(0))  || not atom(hasDifficulty(1))  ; 
  not atom(hasPrep(3))  >> not atom(hasCategory(5))  >> not atom(hasCategory(1))  || not atom(hasIngredient(6))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(4)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(3))  ; 
  not atom(hasIngredient(9))  >> not atom(hasCost(2))  >> atom(hasPrep(4)) || not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(3)) || not atom(hasCost(1))  ; 
  atom(hasCost(1)) >> atom(hasCategory(3)) >> atom(hasCost(2)) || not atom(hasDifficulty(3))  ; 
  atom(hasCost(3)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  || not atom(hasDifficulty(1))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(9)) >> not atom(hasDifficulty(1))  || not atom(hasCost(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> not atom(hasIngredient(7))  >> not atom(hasCategory(3))  || not atom(hasCost(1))  ; 
  atom(hasCost(5)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) || not atom(hasCost(3))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(9))  || not atom(hasIngredient(4))  ; 
  atom(hasDifficulty(3)) >> atom(hasCategory(4)) >> atom(hasCategory(5)) || not atom(hasIngredient(6))  ; 
  atom(hasCost(3)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(2))  || not atom(hasPrep(5))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(3)) >> atom(hasCategory(4)) || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> not atom(hasIngredient(7))  >> not atom(hasCategory(3))  || not atom(hasCost(1))  ; 
  atom(hasCost(5)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) || not atom(hasCost(3))  ; 
  not atom(hasCost(2))  >> not atom(hasIngredient(9))  || not atom(hasIngredient(4))  ; 
  atom(hasDifficulty(3)) >> atom(hasCategory(4)) >> atom(hasCategory(5)) || not atom(hasIngredient(6))  ; 
  atom(hasCost(3)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(2))  || not atom(hasPrep(5))  ; 
  atom(hasPrepTime(3)) >> atom(hasPrepTime(2)) >> atom(hasCategory(4)) || atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasIngredient(7)) >> not atom(hasPrep(5))  || not atom(hasCost(3))  ; 
  atom(hasPrep(0)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(6)) || not atom(hasCost(3))  ; 
  not atom(hasIngredient(8))  >> not atom(hasCategory(5))  || atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(6)) || not atom(hasIngredient(12))  ; 
  atom(hasPrep(0)) >> not atom(hasCategory(5))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> not atom(hasIngredient(9))  >> atom(hasPrep(1)) || not atom(hasIngredient(12))  ; 
  atom(hasCategory(1)) >> atom(hasCost(5)) || not atom(hasCost(5))  ; 
  atom(hasPrep(7)) >> atom(hasPrepTime(3)) >> atom(hasPrep(6)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(6)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  || not atom(hasCost(3))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(10)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(4))  ; 
  atom(hasIngredient(4)) >> atom(hasCost(5)) >> not atom(hasPrepTime(2))  || atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(1))  >> not atom(hasIngredient(12))  >> not atom(hasIngredient(8))  || atom(hasCost(3)) ; 
  atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) || not atom(hasCategory(2))  ; 
  atom(hasIngredient(7)) >> not atom(hasDifficulty(2))  >> atom(hasCategory(4)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(3)) || not atom(hasCost(3))  ; 
  atom(hasCost(3)) >> atom(hasCost(5)) || not atom(hasCost(5))  ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> atom(hasIngredient(8)) || not atom(hasCost(3))  ; 
  atom(hasCost(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) ; 
  atom(hasCost(3)) >> not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(4)) >> not atom(hasIngredient(7))  || not atom(hasCost(3))  ; 
  atom(hasCost(3)) >> atom(hasCost(5)) || not atom(hasCost(5))  ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> atom(hasIngredient(8)) || not atom(hasCost(3))  ; 
  atom(hasCost(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(4)) >> not atom(hasIngredient(7))  || not atom(hasCost(3))  ; 
  not atom(hasPrep(6))  >> not atom(hasDifficulty(1))  >> atom(hasIngredient(8)) || not atom(hasCost(3))  ; 
  atom(hasIngredient(10)) >> atom(hasPrepTime(3)) >> atom(hasPrep(6)) ; 
  atom(hasCost(3)) >> atom(hasPrepTime(3)) >> atom(hasPrep(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasPrepTime(2))  >> atom(hasIngredient(6)) || not atom(hasIngredient(7))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(7)) >> not atom(hasPrep(5))  || not atom(hasIngredient(11))  ; 
  atom(hasCost(3)) >> atom(hasIngredient(4)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(10))  ; 
  not atom(hasCost(2))  >> not atom(hasPrepTime(2))  >> atom(hasPrep(3)) || atom(hasPrep(1)) 
}.
