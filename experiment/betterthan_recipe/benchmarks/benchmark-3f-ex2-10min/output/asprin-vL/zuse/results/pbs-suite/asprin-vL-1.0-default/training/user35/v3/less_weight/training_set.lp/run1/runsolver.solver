asprin_vL version 1.0
Reading from stdin
-:1271:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1281:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1296:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1377:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1638:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1651:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1828:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1957:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2029:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2033:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2033:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2039:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2138:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2164:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2284:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2318:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2340:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1188:1-16: info: no atoms over signature occur in program:
  output/3

-:1180:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1181:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(86,eq,52) output(52,eq,25) output(25,eq,78) output(62,eq,8) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(76,eq,67) output(67,eq,51) output(51,eq,52) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(62,eq,91) output(57,eq,91) output(52,eq,8) output(86,eq,57) output(51,eq,57) output(67,eq,52) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(62,eq,75) output(57,eq,75) output(52,eq,78) output(86,eq,25) output(51,eq,25) output(67,eq,25) output(76,eq,25) output(86,eq,78) output(51,eq,78) output(67,eq,78) output(52,eq,75) output(86,eq,75) output(51,eq,75) output(62,eq,94) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(62,eq,17) output(57,eq,17) output(76,eq,52) output(67,eq,57) output(76,eq,57) output(86,eq,8) output(51,eq,8) output(67,eq,8) output(52,eq,91) output(86,eq,91) output(51,eq,91) output(62,eq,55) output(57,eq,55) output(52,eq,55) output(86,eq,55) output(51,eq,55) output(67,eq,55) output(76,eq,55) output(67,eq,91) output(76,eq,91) output(76,eq,8) output(52,eq,17) output(86,eq,17) output(51,eq,17) output(67,eq,17) output(76,eq,17) output(86,eq,94) output(51,eq,94) output(67,eq,94) output(76,eq,94) output(67,eq,75) output(76,eq,75) output(76,eq,78)
Optimization: 74 0
Answer: 2
preference(1,(1,14),1,for(atom(hasCost(2))),4) preference(1,less(weight)) output(91,better,55) output(91,better,17) output(75,better,94) output(51,worse,78) output(51,worse,75) output(51,worse,91) output(67,worse,78) output(67,worse,91) output(67,worse,75) output(8,worse,75) output(8,worse,91) output(62,worse,91) output(62,worse,75) output(25,worse,78) output(52,worse,78) output(52,worse,75) output(52,worse,91) output(57,worse,91) output(57,worse,75) output(86,worse,78) output(86,worse,75) output(86,worse,91) output(76,worse,91) output(76,worse,75) output(76,worse,78) output(86,eq,52) output(52,eq,25) output(62,eq,8) output(55,eq,17) output(76,eq,67) output(67,eq,51) output(51,eq,52) output(52,eq,57) output(57,eq,8) output(8,eq,55) output(52,eq,8) output(86,eq,57) output(51,eq,57) output(67,eq,52) output(76,eq,51) output(8,eq,94) output(86,eq,25) output(51,eq,25) output(67,eq,25) output(76,eq,25) output(62,eq,94) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(62,eq,17) output(57,eq,17) output(76,eq,52) output(67,eq,57) output(76,eq,57) output(86,eq,8) output(51,eq,8) output(67,eq,8) output(62,eq,55) output(57,eq,55) output(52,eq,55) output(86,eq,55) output(51,eq,55) output(67,eq,55) output(76,eq,55) output(76,eq,8) output(52,eq,17) output(86,eq,17) output(51,eq,17) output(67,eq,17) output(76,eq,17) output(86,eq,94) output(51,eq,94) output(67,eq,94) output(76,eq,94)
Optimization: 71 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(51,better,57) output(67,better,57) output(52,better,57) output(86,better,57) output(76,better,57) output(57,worse,8) output(57,worse,91) output(57,worse,75) output(57,worse,94) output(57,worse,17) output(57,worse,55) output(86,eq,52) output(52,eq,25) output(25,eq,78) output(62,eq,8) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(76,eq,67) output(67,eq,51) output(51,eq,52) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(62,eq,91) output(52,eq,8) output(67,eq,52) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(62,eq,75) output(52,eq,78) output(86,eq,25) output(51,eq,25) output(67,eq,25) output(76,eq,25) output(86,eq,78) output(51,eq,78) output(67,eq,78) output(52,eq,75) output(86,eq,75) output(51,eq,75) output(62,eq,94) output(52,eq,94) output(8,eq,17) output(62,eq,17) output(76,eq,52) output(86,eq,8) output(51,eq,8) output(67,eq,8) output(52,eq,91) output(86,eq,91) output(51,eq,91) output(62,eq,55) output(52,eq,55) output(86,eq,55) output(51,eq,55) output(67,eq,55) output(76,eq,55) output(67,eq,91) output(76,eq,91) output(76,eq,8) output(52,eq,17) output(86,eq,17) output(51,eq,17) output(67,eq,17) output(76,eq,17) output(86,eq,94) output(51,eq,94) output(67,eq,94) output(76,eq,94) output(67,eq,75) output(76,eq,75) output(76,eq,78)
Optimization: 69 14
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),4) preference(1,(1,2),1,for(atom(hasIngredient(10))),4) preference(1,(1,3),1,for(atom(hasPrepTime(2))),4) preference(1,(1,4),1,for(atom(hasIngredient(7))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasCategory(3))),4) preference(1,(1,7),1,for(atom(hasDifficulty(1))),4) preference(1,(1,8),1,for(atom(hasCategory(4))),4) preference(1,(1,9),1,for(atom(hasPrep(5))),4) preference(1,(1,10),1,for(atom(hasIngredient(9))),4) preference(1,(1,11),1,for(atom(hasPrep(0))),4) preference(1,(1,12),1,for(atom(hasIngredient(4))),4) preference(1,(1,13),1,for(atom(hasCategory(5))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,worse,51) output(76,worse,51) output(86,eq,52) output(52,eq,25) output(25,eq,78) output(62,eq,8) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(76,eq,67) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(62,eq,91) output(57,eq,91) output(52,eq,8) output(86,eq,57) output(67,eq,52) output(91,eq,17) output(8,eq,94) output(62,eq,75) output(57,eq,75) output(52,eq,78) output(86,eq,25) output(67,eq,25) output(76,eq,25) output(86,eq,78) output(67,eq,78) output(52,eq,75) output(86,eq,75) output(62,eq,94) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(62,eq,17) output(57,eq,17) output(76,eq,52) output(67,eq,57) output(76,eq,57) output(86,eq,8) output(67,eq,8) output(52,eq,91) output(86,eq,91) output(62,eq,55) output(57,eq,55) output(52,eq,55) output(86,eq,55) output(67,eq,55) output(76,eq,55) output(67,eq,91) output(76,eq,91) output(76,eq,8) output(52,eq,17) output(86,eq,17) output(67,eq,17) output(76,eq,17) output(86,eq,94) output(67,eq,94) output(76,eq,94) output(67,eq,75) output(76,eq,75) output(76,eq,78)
Optimization: 64 14
Answer: 5
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),3) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasCategory(4))),2) preference(1,(1,6),1,for(atom(hasCategory(3))),3) preference(1,(1,7),1,for(atom(hasIngredient(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasIngredient(7))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,75) output(8,better,75) output(62,better,75) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,75) output(76,better,78) output(52,worse,8) output(52,worse,94) output(52,worse,91) output(52,worse,55) output(52,worse,17) output(57,worse,8) output(57,worse,91) output(57,worse,94) output(57,worse,17) output(57,worse,55) output(75,worse,94) output(86,worse,8) output(86,worse,91) output(86,worse,55) output(86,worse,17) output(86,worse,94) output(86,eq,52) output(52,eq,25) output(25,eq,78) output(62,eq,8) output(55,eq,17) output(76,eq,67) output(67,eq,51) output(52,eq,57) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(62,eq,91) output(86,eq,57) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(57,eq,75) output(52,eq,78) output(86,eq,25) output(86,eq,78) output(52,eq,75) output(86,eq,75) output(62,eq,94) output(8,eq,17) output(62,eq,17) output(51,eq,8) output(67,eq,8) output(51,eq,91) output(62,eq,55) output(51,eq,55) output(67,eq,55) output(76,eq,55) output(67,eq,91) output(76,eq,91) output(76,eq,8) output(51,eq,17) output(67,eq,17) output(76,eq,17) output(51,eq,94) output(67,eq,94) output(76,eq,94)
Optimization: 57 14
Answer: 6
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasIngredient(9))),3) preference(1,(1,3),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(2))),2) preference(1,(1,6),1,for(atom(hasCategory(3))),3) preference(1,(1,7),1,for(atom(hasIngredient(3))),3) preference(1,(1,8),1,for(atom(hasIngredient(10))),3) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasIngredient(7))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,91) output(51,better,17) output(8,better,91) output(8,better,17) output(55,better,17) output(62,better,91) output(62,better,17) output(86,better,52) output(86,better,57) output(86,better,91) output(86,better,17) output(76,better,67) output(76,better,52) output(76,better,57) output(76,better,91) output(76,better,17) output(67,worse,51) output(67,worse,25) output(67,worse,78) output(67,worse,8) output(67,worse,55) output(67,worse,94) output(67,worse,75) output(91,worse,55) output(52,worse,25) output(52,worse,8) output(52,worse,78) output(52,worse,75) output(52,worse,94) output(52,worse,55) output(57,worse,8) output(57,worse,75) output(57,worse,94) output(57,worse,55) output(25,eq,78) output(62,eq,8) output(8,eq,75) output(75,eq,94) output(52,eq,57) output(8,eq,55) output(57,eq,91) output(67,eq,52) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(62,eq,75) output(86,eq,25) output(51,eq,25) output(76,eq,25) output(86,eq,78) output(51,eq,78) output(86,eq,75) output(51,eq,75) output(62,eq,94) output(57,eq,17) output(67,eq,57) output(86,eq,8) output(51,eq,8) output(52,eq,91) output(62,eq,55) output(86,eq,55) output(51,eq,55) output(76,eq,55) output(67,eq,91) output(76,eq,8) output(52,eq,17) output(67,eq,17) output(86,eq,94) output(51,eq,94) output(76,eq,94) output(76,eq,75) output(76,eq,78)
Optimization: 56 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(3))),4) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),4) preference(1,(1,5),1,for(atom(hasCost(5))),4) preference(1,(1,6),1,for(atom(hasDifficulty(4))),4) preference(1,(1,7),1,for(atom(hasIngredient(12))),4) preference(1,(1,8),1,for(atom(hasCategory(2))),4) preference(1,(1,9),1,for(atom(hasIngredient(6))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(52,eq,25) output(25,eq,78) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(67,eq,51) output(51,eq,52) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(57,eq,91) output(52,eq,8) output(51,eq,57) output(67,eq,52) output(91,eq,17) output(8,eq,94) output(57,eq,75) output(52,eq,78) output(51,eq,25) output(67,eq,25) output(51,eq,78) output(67,eq,78) output(52,eq,75) output(51,eq,75) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(57,eq,17) output(67,eq,57) output(51,eq,8) output(67,eq,8) output(52,eq,91) output(51,eq,91) output(57,eq,55) output(52,eq,55) output(51,eq,55) output(67,eq,55) output(67,eq,91) output(52,eq,17) output(51,eq,17) output(67,eq,17) output(51,eq,94) output(67,eq,94) output(67,eq,75)
Optimization: 46 14
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(3))),4) preference(1,(1,3),1,for(atom(hasPrep(3))),4) preference(1,(1,4),1,for(atom(hasIngredient(6))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasIngredient(12))),4) preference(1,(1,8),1,for(atom(hasPrep(7))),4) preference(1,(1,9),1,for(atom(hasCategory(2))),4) preference(1,(1,10),1,for(atom(hasDifficulty(1))),4) preference(1,(1,11),1,for(atom(hasCost(5))),4) preference(1,(1,12),1,for(atom(hasCost(3))),4) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(67,worse,51) output(52,eq,25) output(25,eq,78) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(57,eq,91) output(52,eq,8) output(67,eq,52) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(57,eq,75) output(52,eq,78) output(67,eq,25) output(67,eq,78) output(52,eq,75) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(57,eq,17) output(67,eq,57) output(67,eq,8) output(52,eq,91) output(57,eq,55) output(52,eq,55) output(67,eq,55) output(67,eq,91) output(52,eq,17) output(67,eq,17) output(67,eq,94) output(67,eq,75)
Optimization: 37 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasDifficulty(4))),4) preference(1,(1,3),1,for(atom(hasCost(4))),4) preference(1,(1,4),1,for(atom(hasIngredient(6))),4) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),4) preference(1,(1,7),1,for(atom(hasIngredient(12))),4) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasCost(5))),4) preference(1,(1,10),1,for(atom(hasCategory(2))),4) preference(1,(1,11),1,for(atom(hasPrep(7))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasDifficulty(3))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(52,eq,25) output(25,eq,78) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(76,eq,67) output(51,eq,52) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(57,eq,91) output(52,eq,8) output(51,eq,57) output(91,eq,17) output(8,eq,94) output(57,eq,75) output(52,eq,78) output(51,eq,25) output(51,eq,78) output(52,eq,75) output(51,eq,75) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(57,eq,17) output(51,eq,8) output(52,eq,91) output(51,eq,91) output(57,eq,55) output(52,eq,55) output(51,eq,55) output(52,eq,17) output(51,eq,17) output(51,eq,94)
Optimization: 36 14
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(6))),4) preference(1,(1,2),1,for(atom(hasCost(1))),4) preference(1,(1,3),1,for(atom(hasCategory(2))),4) preference(1,(1,4),1,for(atom(hasPrepTime(1))),4) preference(1,(1,5),1,for(atom(hasPrep(3))),4) preference(1,(1,6),1,for(atom(hasPrep(4))),4) preference(1,(1,7),1,for(atom(hasPrep(7))),4) preference(1,(1,8),1,for(atom(hasCost(3))),4) preference(1,(1,9),1,for(atom(hasCost(5))),4) preference(1,(1,10),1,for(atom(hasDifficulty(3))),4) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasIngredient(12))),4) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(52,eq,25) output(25,eq,78) output(8,eq,75) output(75,eq,94) output(55,eq,17) output(76,eq,67) output(67,eq,51) output(52,eq,57) output(57,eq,8) output(8,eq,91) output(91,eq,55) output(8,eq,55) output(57,eq,91) output(52,eq,8) output(76,eq,51) output(91,eq,17) output(8,eq,94) output(57,eq,75) output(52,eq,78) output(52,eq,75) output(57,eq,94) output(52,eq,94) output(8,eq,17) output(57,eq,17) output(52,eq,91) output(57,eq,55) output(52,eq,55) output(52,eq,17)
Optimization: 28 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(7))),8) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasCost(5))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),4) preference(1,(1,5),1,for(atom(hasDifficulty(2))),2) preference(1,(1,6),1,for(atom(hasIngredient(9))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasPrep(2))),4) preference(1,(1,10),1,for(atom(hasPrep(0))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),6) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasCategory(3))),7) preference(1,(1,14),1,for(atom(hasCost(2))),3) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(25,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(86,better,52) output(86,better,57) output(86,better,75) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(67,worse,51) output(67,worse,25) output(55,worse,17) output(62,worse,8) output(62,worse,91) output(62,worse,75) output(62,worse,94) output(62,worse,17) output(62,worse,55) output(91,worse,55) output(91,worse,17) output(52,worse,25) output(52,worse,8) output(52,worse,78) output(57,worse,8) output(75,worse,94) output(86,worse,25) output(86,worse,78) output(76,worse,67) output(76,worse,51) output(76,worse,25) output(52,eq,57) output(86,eq,8)
Optimization: 23 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(3))),6) preference(1,(1,2),1,for(atom(hasDifficulty(2))),6) preference(1,(1,3),1,for(atom(hasCategory(4))),4) preference(1,(1,4),1,for(atom(hasIngredient(3))),4) preference(1,(1,5),1,for(atom(hasIngredient(10))),6) preference(1,(1,6),1,for(atom(hasCategory(2))),7) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasCost(2))),6) preference(1,(1,9),1,for(atom(hasPrep(5))),6) preference(1,(1,10),1,for(atom(hasIngredient(12))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),4) preference(1,(1,13),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,78) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,75) output(25,better,78) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(62,worse,8) output(62,worse,55) output(91,worse,55) output(75,worse,94) output(86,eq,52) output(52,eq,25) output(67,eq,51) output(51,eq,52) output(52,eq,57) output(62,eq,91) output(86,eq,57) output(51,eq,57) output(67,eq,52) output(91,eq,17) output(86,eq,25) output(51,eq,25) output(67,eq,25) output(62,eq,94) output(62,eq,17) output(67,eq,57)
Optimization: 20 14
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCategory(2))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(10))),1) preference(1,(1,6),1,for(atom(hasPrep(1))),6) preference(1,(1,7),1,for(atom(hasIngredient(9))),6) preference(1,(1,8),1,for(atom(hasDifficulty(1))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),8) preference(1,(1,11),1,for(atom(hasPrepTime(3))),8) preference(1,(1,12),1,for(atom(hasIngredient(7))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),6) preference(1,(1,14),1,for(atom(hasCost(2))),8) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(91,better,17) output(25,better,78) output(52,better,75) output(52,better,17) output(57,better,75) output(57,better,17) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(8,worse,55) output(62,worse,55) output(91,worse,55) output(52,worse,25) output(52,worse,8) output(52,worse,78) output(52,worse,55) output(57,worse,8) output(57,worse,55) output(75,worse,94) output(76,eq,67) output(67,eq,51) output(52,eq,57) output(57,eq,91) output(76,eq,51) output(57,eq,94) output(52,eq,94) output(52,eq,91)
Optimization: 18 13
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasIngredient(7))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasCategory(2))),8) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(25,better,78) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(67,worse,51) output(67,worse,25) output(8,worse,75) output(8,worse,91) output(8,worse,55) output(8,worse,17) output(91,worse,55) output(91,worse,17) output(52,worse,25) output(86,worse,25) output(76,worse,67) output(76,worse,51) output(76,worse,25) output(52,eq,57) output(8,eq,94) output(51,eq,25) output(62,eq,55)
Optimization: 17 13
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasIngredient(7))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasCategory(2))),5) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,91) output(8,better,94) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(25,better,78) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(67,worse,51) output(67,worse,25) output(8,worse,55) output(91,worse,55) output(91,worse,17) output(52,worse,25) output(86,worse,25) output(76,worse,67) output(76,worse,51) output(76,worse,25) output(8,eq,75) output(52,eq,57) output(51,eq,25) output(8,eq,17) output(62,eq,55)
Optimization: 15 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(3))),2) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasCategory(4))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasPrep(6))),5) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(12))),2) preference(1,(1,10),1,for(atom(hasIngredient(7))),7) preference(1,(1,11),1,for(atom(hasDifficulty(1))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasCategory(2))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,52) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(25,better,78) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(67,worse,51) output(67,worse,25) output(8,worse,55) output(91,worse,55) output(91,worse,17) output(52,worse,25) output(86,worse,25) output(76,worse,67) output(76,worse,51) output(76,worse,25) output(52,eq,57) output(51,eq,25) output(62,eq,55)
Optimization: 13 13
Answer: 17
preference(1,(1,1),1,for(atom(hasIngredient(7))),7) preference(1,(1,2),1,for(atom(hasPrep(6))),5) preference(1,(1,3),1,for(atom(hasPrepTime(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(9))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),4) preference(1,(1,6),1,for(atom(hasCost(2))),7) preference(1,(1,7),1,for(atom(hasPrepTime(2))),3) preference(1,(1,8),1,for(atom(hasIngredient(3))),3) preference(1,(1,9),1,for(atom(hasPrepTime(3))),6) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasDifficulty(3))),4) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(62,better,75) output(62,better,94) output(91,better,55) output(91,better,17) output(25,better,78) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78) output(55,worse,17) output(62,worse,8) output(62,worse,91) output(62,worse,17) output(62,worse,55) output(52,worse,25) output(76,worse,67) output(76,worse,51) output(52,eq,57) output(57,eq,8) output(52,eq,8)
Optimization: 11 14
Answer: 18
preference(1,(1,1),1,for(atom(hasCategory(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(6))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasIngredient(7))),8) preference(1,(1,5),1,for(atom(hasIngredient(12))),1) preference(1,(1,6),1,for(atom(hasPrep(7))),4) preference(1,(1,7),1,for(atom(hasIngredient(10))),5) preference(1,(1,8),1,for(atom(hasCategory(1))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasCategory(4))),2) preference(1,(1,12),1,for(atom(hasPrepTime(1))),7) preference(1,(1,13),1,for(atom(hasDifficulty(1))),4) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(91,better,55) output(91,better,17) output(25,better,78) output(52,better,25) output(52,better,57) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 19
preference(1,(1,1),1,for(atom(hasCategory(3))),1) preference(1,(1,2),1,for(atom(hasDifficulty(1))),7) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),7) preference(1,(1,5),1,for(atom(hasCategory(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasIngredient(6))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasIngredient(10))),3) preference(1,(1,10),1,for(atom(hasCategory(2))),6) preference(1,(1,11),1,for(atom(hasCategory(5))),4) preference(1,(1,13),1,for(atom(hasDifficulty(4))),1) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(91,better,55) output(91,better,17) output(25,better,78) output(52,better,25) output(52,better,57) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78)
Optimization: 0 13
Progression : 0 [ 2;13] (Error: 5.5)
Answer: 20
preference(1,(1,1),1,for(atom(hasCategory(5))),3) preference(1,(1,2),1,for(atom(hasPrep(0))),1) preference(1,(1,3),1,for(atom(hasDifficulty(1))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),4) preference(1,(1,5),1,for(atom(hasCategory(2))),5) preference(1,(1,6),1,for(atom(hasCategory(3))),3) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasPrep(6))),4) preference(1,(1,9),1,for(atom(hasCost(4))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),6) preference(1,(1,13),1,for(atom(hasIngredient(10))),2) preference(1,(1,14),1,for(atom(hasPrep(1))),2) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(91,better,55) output(91,better,17) output(25,better,78) output(52,better,25) output(52,better,57) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78)
Optimization: 0 12
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(9))),7) preference(1,(1,2),1,for(atom(hasIngredient(4))),3) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasPrep(6))),6) preference(1,(1,5),1,for(atom(hasCategory(1))),1) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrep(2))),4) preference(1,(1,12),1,for(atom(hasCategory(2))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),8) preference(1,(1,14),1,for(atom(hasCost(4))),8) preference(1,less(weight)) output(51,better,52) output(51,better,57) output(51,better,25) output(51,better,78) output(51,better,75) output(51,better,8) output(51,better,91) output(51,better,55) output(51,better,17) output(51,better,94) output(67,better,51) output(67,better,52) output(67,better,25) output(67,better,78) output(67,better,57) output(67,better,8) output(67,better,55) output(67,better,91) output(67,better,17) output(67,better,94) output(67,better,75) output(8,better,75) output(8,better,91) output(8,better,55) output(8,better,94) output(8,better,17) output(55,better,17) output(62,better,8) output(62,better,91) output(62,better,75) output(62,better,94) output(62,better,17) output(62,better,55) output(91,better,55) output(91,better,17) output(25,better,78) output(52,better,25) output(52,better,57) output(52,better,8) output(52,better,78) output(52,better,75) output(52,better,94) output(52,better,91) output(52,better,55) output(52,better,17) output(57,better,8) output(57,better,91) output(57,better,75) output(57,better,94) output(57,better,17) output(57,better,55) output(75,better,94) output(86,better,52) output(86,better,57) output(86,better,25) output(86,better,78) output(86,better,75) output(86,better,8) output(86,better,91) output(86,better,55) output(86,better,17) output(86,better,94) output(76,better,67) output(76,better,51) output(76,better,25) output(76,better,52) output(76,better,57) output(76,better,55) output(76,better,91) output(76,better,8) output(76,better,17) output(76,better,94) output(76,better,75) output(76,better,78)
Optimization: 0 11
Progression : 0 [ 3;11] (Error: 2.66667)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.105 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 11
Calls        : 1
Time         : 598.189s (Solving: 594.69s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2381.822s
Threads      : 4        (Winner: 4)

Choices      : 11038188 (Domain: 532527)
Conflicts    : 7357792  (Analyzed: 7357789)
Restarts     : 6852     (Average: 1073.82 Last: 127408)
Model-Level  : 34.0    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7380833  (Deleted: 7050066)
  Binary     : 560      (Ratio:   0.01%)
  Ternary    : 1845     (Ratio:   0.02%)
  Conflict   : 7357789  (Average Length:  478.3 Ratio:  99.69%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 23044    (Average Length:   54.0 Ratio:   0.31%) 
  Distributed: 7696     (Ratio:   0.10% Average LBD: 3.67) 
  Integrated : 23088    (Ratio: 300.00% Unit: 65 Average Jumps: 8.51)
Backjumps    : 7357789  (Average:  1.37 Max: 1193 Sum: 10047366)
  Executed   : 7357787  (Average:  1.37 Max: 1193 Sum: 10047307 Ratio: 100.00%)
  Bounded    : 2        (Average: 29.50 Max:  36 Sum:     59 Ratio:   0.00%)

Rules        : 795952  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 17854   
Bodies       : 19343   
  Sum        : 148     
  Count      : 14      
Equivalences : 8440     (Atom=Atom: 753 Body=Body: 310 Other: 7377)
Tight        : Yes
Variables    : 17215    (Eliminated:    0 Frozen: 7891)
Constraints  : 814248   (Binary:  98.4% Ternary:   1.2% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(1)) ; 
  4 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCategory(5)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(3)) ; 
  4 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(5)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(5)) ; 
  4 :: atom(hasCategory(4)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasCategory(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCategory(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrep(1)) ; 
  6 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(1)) ; 
  5 :: atom(hasPrep(6)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  7 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasIngredient(6)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(7)) ; 
  5 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasIngredient(6)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(2)) ; 
  4 :: atom(hasCategory(5)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(0)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  7 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrep(7)) ; 
  2 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(4)) 
}.
