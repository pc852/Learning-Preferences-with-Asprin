asprin_vL version 1.0
Reading from stdin
-:1277:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1287:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1302:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1383:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1644:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1657:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1834:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1963:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2035:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2039:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2039:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2045:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2144:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2170:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2290:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2324:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2346:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1194:1-16: info: no atoms over signature occur in program:
  output/3

-:1186:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1187:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(50,eq,47) output(47,eq,70) output(70,eq,10) output(10,eq,49) output(49,eq,29) output(29,eq,24) output(64,eq,50) output(23,eq,18) output(14,eq,70) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(18,eq,13) output(13,eq,25) output(65,eq,18) output(25,eq,10) output(13,eq,10) output(18,eq,25) output(23,eq,13) output(65,eq,13) output(51,eq,42) output(70,eq,48) output(47,eq,51) output(14,eq,51) output(49,eq,24) output(10,eq,29) output(70,eq,49) output(25,eq,49) output(47,eq,10) output(14,eq,10) output(50,eq,70) output(64,eq,47) output(64,eq,70) output(50,eq,10) output(64,eq,10) output(13,eq,49) output(18,eq,49) output(47,eq,49) output(14,eq,49) output(50,eq,49) output(70,eq,29) output(25,eq,29) output(13,eq,29) output(47,eq,29) output(14,eq,29) output(10,eq,24) output(70,eq,24) output(25,eq,24) output(50,eq,51) output(64,eq,51) output(47,eq,48) output(14,eq,48) output(50,eq,48) output(70,eq,42) output(47,eq,42) output(14,eq,42) output(23,eq,25) output(65,eq,25) output(18,eq,10) output(23,eq,10) output(65,eq,10) output(50,eq,42) output(64,eq,42) output(64,eq,48) output(13,eq,24) output(18,eq,24) output(23,eq,24) output(65,eq,24) output(47,eq,24) output(14,eq,24) output(50,eq,24) output(64,eq,24) output(50,eq,29) output(64,eq,29) output(18,eq,29) output(23,eq,29) output(65,eq,29) output(64,eq,49) output(23,eq,49) output(65,eq,49)
Optimization: 80 0
Answer: 2
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(3))),8) preference(1,less(weight)) output(50,better,47) output(64,better,47) output(47,worse,70) output(47,worse,51) output(47,worse,10) output(47,worse,49) output(47,worse,29) output(47,worse,48) output(47,worse,42) output(47,worse,24) output(70,eq,10) output(10,eq,49) output(49,eq,29) output(29,eq,24) output(64,eq,50) output(23,eq,18) output(14,eq,70) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(18,eq,13) output(13,eq,25) output(65,eq,18) output(25,eq,10) output(13,eq,10) output(18,eq,25) output(23,eq,13) output(65,eq,13) output(51,eq,42) output(70,eq,48) output(14,eq,51) output(49,eq,24) output(10,eq,29) output(70,eq,49) output(25,eq,49) output(14,eq,10) output(50,eq,70) output(64,eq,70) output(50,eq,10) output(64,eq,10) output(13,eq,49) output(18,eq,49) output(14,eq,49) output(50,eq,49) output(70,eq,29) output(25,eq,29) output(13,eq,29) output(14,eq,29) output(10,eq,24) output(70,eq,24) output(25,eq,24) output(50,eq,51) output(64,eq,51) output(14,eq,48) output(50,eq,48) output(70,eq,42) output(14,eq,42) output(23,eq,25) output(65,eq,25) output(18,eq,10) output(23,eq,10) output(65,eq,10) output(50,eq,42) output(64,eq,42) output(64,eq,48) output(13,eq,24) output(18,eq,24) output(23,eq,24) output(65,eq,24) output(14,eq,24) output(50,eq,24) output(64,eq,24) output(50,eq,29) output(64,eq,29) output(18,eq,29) output(23,eq,29) output(65,eq,29) output(64,eq,49) output(23,eq,49) output(65,eq,49)
Optimization: 78 14
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(9))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,48) output(50,better,42) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,10) output(13,better,29) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,42) output(64,better,48) output(64,better,29) output(25,better,10) output(25,better,29) output(49,better,29) output(10,worse,49) output(10,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(14,worse,51) output(14,worse,49) output(14,worse,24) output(29,worse,24) output(70,worse,51) output(70,worse,49) output(70,worse,24) output(23,worse,13) output(23,worse,25) output(23,worse,24) output(23,worse,49) output(47,worse,51) output(47,worse,49) output(47,worse,24) output(65,worse,13) output(65,worse,25) output(65,worse,24) output(65,worse,49) output(47,eq,70) output(70,eq,10) output(64,eq,50) output(23,eq,18) output(14,eq,70) output(48,eq,42) output(13,eq,25) output(65,eq,18) output(70,eq,48) output(49,eq,24) output(10,eq,29) output(25,eq,49) output(47,eq,10) output(14,eq,10) output(13,eq,49) output(50,eq,49) output(70,eq,29) output(47,eq,29) output(14,eq,29) output(25,eq,24) output(50,eq,51) output(64,eq,51) output(47,eq,48) output(14,eq,48) output(70,eq,42) output(47,eq,42) output(14,eq,42) output(18,eq,10) output(23,eq,10) output(65,eq,10) output(13,eq,24) output(50,eq,24) output(64,eq,24) output(18,eq,29) output(23,eq,29) output(65,eq,29) output(64,eq,49)
Optimization: 61 1
Answer: 4
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasIngredient(9))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(18,better,13) output(18,better,25) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,10) output(50,better,42) output(51,better,42) output(13,better,10) output(14,better,10) output(14,better,42) output(64,better,10) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,29) output(25,better,10) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,29) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(18,worse,49) output(50,worse,47) output(50,worse,70) output(50,worse,49) output(50,worse,48) output(50,worse,24) output(51,worse,48) output(13,worse,49) output(13,worse,24) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(14,worse,24) output(29,worse,24) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,51) output(64,worse,42) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,49) output(23,worse,18) output(23,worse,49) output(25,worse,49) output(25,worse,24) output(65,worse,18) output(65,worse,49) output(13,eq,25) output(47,eq,49) output(25,eq,29) output(13,eq,29) output(50,eq,51) output(23,eq,24) output(65,eq,24) output(50,eq,29)
Optimization: 43 14
Answer: 5
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasIngredient(9))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasPrep(7))),6) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(18,better,13) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,70) output(50,better,10) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,10) output(13,better,24) output(14,better,10) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,10) output(70,better,10) output(70,better,48) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,10) output(25,better,10) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,10) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(18,worse,25) output(18,worse,49) output(13,worse,25) output(13,worse,49) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,51) output(64,worse,42) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(70,worse,49) output(23,worse,18) output(23,worse,13) output(23,worse,25) output(23,worse,29) output(23,worse,49) output(65,worse,18) output(65,worse,25) output(65,worse,49) output(50,eq,47) output(47,eq,51) output(25,eq,49) output(47,eq,49) output(50,eq,49) output(13,eq,29) output(50,eq,51) output(23,eq,24)
Optimization: 39 14
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(7))),5) preference(1,(1,2),1,for(atom(hasCost(3))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),5) preference(1,(1,4),1,for(atom(hasDifficulty(3))),5) preference(1,(1,5),1,for(atom(hasPrep(5))),5) preference(1,(1,6),1,for(atom(hasCategory(5))),5) preference(1,(1,7),1,for(atom(hasCost(2))),5) preference(1,(1,8),1,for(atom(hasCategory(1))),5) preference(1,(1,9),1,for(atom(hasDifficulty(2))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),5) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasPrepTime(3))),5) preference(1,(1,13),1,for(atom(hasDifficulty(4))),5) preference(1,(1,14),1,for(atom(hasIngredient(3))),6) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,49) output(18,better,24) output(18,better,29) output(13,better,49) output(13,better,24) output(14,better,51) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,50) output(64,better,51) output(64,better,48) output(64,better,24) output(64,better,49) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,13) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,51) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(65,better,13) output(65,better,24) output(65,better,29) output(65,better,49) output(50,worse,47) output(50,worse,70) output(50,worse,10) output(50,worse,42) output(50,worse,29) output(51,worse,42) output(13,worse,25) output(13,worse,10) output(64,worse,47) output(64,worse,70) output(64,worse,10) output(48,worse,42) output(49,worse,29) output(47,eq,70) output(70,eq,10) output(23,eq,18) output(14,eq,70) output(51,eq,48) output(65,eq,18) output(25,eq,10) output(18,eq,25) output(49,eq,24) output(47,eq,10) output(14,eq,10) output(50,eq,49) output(13,eq,29) output(50,eq,51) output(50,eq,48) output(23,eq,25) output(65,eq,25) output(18,eq,10) output(23,eq,10) output(65,eq,10) output(64,eq,42) output(50,eq,24) output(64,eq,29)
Optimization: 36 14
Answer: 7
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(12))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,4),1,for(atom(hasCategory(3))),1) preference(1,(1,5),1,for(atom(hasPrep(6))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasIngredient(9))),1) preference(1,(1,9),1,for(atom(hasPrepTime(3))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasPrepTime(2))),2) preference(1,(1,12),1,for(atom(hasCost(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(3))),8) preference(1,(1,14),1,for(atom(hasCost(2))),1) preference(1,less(weight)) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,10) output(13,better,24) output(14,better,10) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,10) output(70,better,10) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,10) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(10,worse,49) output(10,worse,29) output(10,worse,24) output(18,worse,25) output(13,worse,25) output(13,worse,49) output(14,worse,70) output(14,worse,51) output(14,worse,49) output(14,worse,29) output(14,worse,48) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,51) output(64,worse,42) output(64,worse,48) output(64,worse,24) output(64,worse,29) output(64,worse,49) output(70,worse,51) output(23,worse,18) output(23,worse,13) output(23,worse,25) output(23,worse,29) output(23,worse,49) output(65,worse,18) output(65,worse,25) output(50,eq,47) output(47,eq,51) output(13,eq,29) output(50,eq,51) output(23,eq,24) output(65,eq,49)
Optimization: 34 14
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(3))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),7) preference(1,(1,3),1,for(atom(hasDifficulty(3))),7) preference(1,(1,4),1,for(atom(hasIngredient(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(7))),1) preference(1,(1,6),1,for(atom(hasPrepTime(3))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),2) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasDifficulty(2))),1) preference(1,(1,10),1,for(atom(hasPrep(6))),1) preference(1,(1,11),1,for(atom(hasCategory(3))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),1) preference(1,(1,13),1,for(atom(hasPrep(0))),2) preference(1,(1,14),1,for(atom(hasCategory(5))),7) preference(1,less(weight)) output(10,better,49) output(10,better,24) output(18,better,49) output(18,better,24) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(13,better,10) output(13,better,49) output(13,better,24) output(14,better,51) output(14,better,49) output(14,better,48) output(14,better,24) output(29,better,24) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,49) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,24) output(23,better,18) output(23,better,10) output(23,better,24) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,24) output(65,better,18) output(65,better,10) output(65,better,24) output(65,better,49) output(10,worse,29) output(18,worse,13) output(18,worse,25) output(18,worse,29) output(50,worse,29) output(51,worse,42) output(13,worse,25) output(13,worse,29) output(14,worse,29) output(64,worse,29) output(70,worse,29) output(23,worse,13) output(23,worse,25) output(23,worse,29) output(47,worse,29) output(48,worse,42) output(49,worse,29) output(65,worse,13) output(65,worse,25) output(65,worse,29) output(70,eq,10) output(14,eq,70) output(51,eq,48) output(14,eq,10) output(25,eq,29) output(70,eq,42) output(14,eq,42) output(18,eq,10)
Optimization: 28 14
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),7) preference(1,(1,4),1,for(atom(hasDifficulty(2))),7) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrepTime(2))),8) preference(1,(1,8),1,for(atom(hasIngredient(7))),6) preference(1,(1,9),1,for(atom(hasIngredient(12))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),1) preference(1,(1,11),1,for(atom(hasCost(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(3))),1) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasIngredient(3))),5) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,49) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,29) output(14,better,70) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,13) output(23,better,29) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(49,better,29) output(49,better,24) output(65,better,13) output(65,better,29) output(18,worse,25) output(50,worse,47) output(50,worse,10) output(50,worse,51) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(13,worse,24) output(14,worse,51) output(29,worse,24) output(64,worse,51) output(70,worse,10) output(70,worse,51) output(23,worse,18) output(23,worse,25) output(23,worse,10) output(23,worse,24) output(23,worse,49) output(47,worse,51) output(48,worse,42) output(65,worse,18) output(65,worse,25) output(65,worse,10) output(65,worse,24) output(65,worse,49) output(50,eq,70)
Optimization: 26 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,4),1,for(atom(hasIngredient(9))),2) preference(1,(1,5),1,for(atom(hasIngredient(12))),7) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasDifficulty(4))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasCost(3))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasIngredient(3))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasCategory(1))),2) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,49) output(13,better,24) output(14,better,49) output(14,better,48) output(14,better,24) output(29,better,24) output(64,better,48) output(64,better,24) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(18,worse,25) output(13,worse,25) output(13,worse,10) output(14,worse,70) output(14,worse,51) output(14,worse,10) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,10) output(64,worse,51) output(23,worse,25) output(48,worse,42) output(49,worse,29) output(49,worse,24) output(65,worse,25) output(50,eq,47) output(47,eq,70) output(65,eq,18) output(50,eq,70) output(13,eq,29) output(14,eq,29) output(14,eq,42) output(64,eq,42) output(64,eq,29)
Optimization: 25 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(3))),2) preference(1,(1,2),1,for(atom(hasPrepTime(1))),3) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,4),1,for(atom(hasIngredient(9))),2) preference(1,(1,5),1,for(atom(hasIngredient(12))),7) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasPrep(1))),3) preference(1,(1,8),1,for(atom(hasPrep(2))),2) preference(1,(1,9),1,for(atom(hasDifficulty(4))),8) preference(1,(1,10),1,for(atom(hasCost(3))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasIngredient(3))),4) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,(1,14),1,for(atom(hasCategory(1))),2) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(13,better,49) output(13,better,24) output(14,better,51) output(14,better,49) output(14,better,48) output(14,better,24) output(29,better,24) output(64,better,51) output(64,better,48) output(64,better,24) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(65,better,13) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(18,worse,25) output(51,worse,42) output(13,worse,25) output(13,worse,10) output(14,worse,70) output(14,worse,10) output(64,worse,50) output(64,worse,47) output(64,worse,70) output(64,worse,10) output(23,worse,25) output(48,worse,42) output(49,worse,29) output(49,worse,24) output(65,worse,25) output(50,eq,47) output(47,eq,70) output(65,eq,18) output(50,eq,70) output(13,eq,29) output(14,eq,29) output(14,eq,42) output(64,eq,42) output(64,eq,29)
Optimization: 24 14
Answer: 12
preference(1,(1,1),1,for(atom(hasCost(3))),3) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),3) preference(1,(1,8),1,for(atom(hasCategory(3))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),1) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,29) output(50,better,70) output(50,better,49) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,29) output(14,better,70) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(64,better,50) output(64,better,70) output(64,better,10) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,48) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,10) output(18,worse,24) output(50,worse,47) output(50,worse,10) output(50,worse,51) output(13,worse,25) output(13,worse,10) output(13,worse,49) output(13,worse,24) output(14,worse,51) output(14,worse,10) output(29,worse,24) output(64,worse,51) output(70,worse,10) output(70,worse,51) output(25,worse,10) output(47,worse,51) output(70,eq,49) output(64,eq,47)
Optimization: 22 14
Answer: 13
preference(1,(1,1),1,for(atom(hasCost(3))),3) preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),4) preference(1,(1,4),1,for(atom(hasPrep(2))),5) preference(1,(1,5),1,for(atom(hasPrepTime(2))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),3) preference(1,(1,8),1,for(atom(hasCategory(3))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasIngredient(3))),5) preference(1,(1,12),1,for(atom(hasDifficulty(2))),8) preference(1,(1,13),1,for(atom(hasPrepTime(1))),5) preference(1,(1,14),1,for(atom(hasIngredient(7))),1) preference(1,less(weight)) output(10,better,29) output(18,better,29) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,10) output(13,better,29) output(14,better,70) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(64,better,50) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,48) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49) output(10,worse,49) output(10,worse,24) output(18,worse,13) output(18,worse,25) output(18,worse,49) output(18,worse,24) output(50,worse,47) output(13,worse,25) output(13,worse,49) output(13,worse,24) output(14,worse,51) output(29,worse,24) output(70,worse,51) output(70,eq,49) output(64,eq,47) output(50,eq,51) output(18,eq,10)
Optimization: 17 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrepTime(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasCost(3))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasCategory(3))),2) preference(1,(1,7),1,for(atom(hasIngredient(9))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),6) preference(1,(1,9),1,for(atom(hasCategory(5))),4) preference(1,(1,10),1,for(atom(hasPrep(2))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),7) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,25) output(13,better,10) output(13,better,49) output(13,better,29) output(13,better,24) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 15
preference(1,(1,1),1,for(atom(hasCategory(5))),5) preference(1,(1,2),1,for(atom(hasCost(3))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasIngredient(3))),7) preference(1,(1,6),1,for(atom(hasDifficulty(4))),6) preference(1,(1,7),1,for(atom(hasIngredient(9))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),7) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasIngredient(10))),4) preference(1,(1,13),1,for(atom(hasPrepTime(1))),3) preference(1,(1,14),1,for(atom(hasPrep(2))),7) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,25) output(13,better,10) output(13,better,49) output(13,better,29) output(13,better,24) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49)
Optimization: 0 13
Progression : 0 [ 3;13] (Error: 3.33333)
Answer: 16
preference(1,(1,1),1,for(atom(hasCost(3))),6) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasIngredient(9))),6) preference(1,(1,5),1,for(atom(hasDifficulty(4))),3) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,8),1,for(atom(hasCategory(5))),7) preference(1,(1,9),1,for(atom(hasCategory(1))),2) preference(1,(1,10),1,for(atom(hasIngredient(10))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,(1,12),1,for(atom(hasPrep(2))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(10,better,49) output(10,better,29) output(10,better,24) output(18,better,13) output(18,better,25) output(18,better,49) output(18,better,10) output(18,better,24) output(18,better,29) output(50,better,47) output(50,better,70) output(50,better,10) output(50,better,49) output(50,better,51) output(50,better,48) output(50,better,42) output(50,better,24) output(50,better,29) output(51,better,48) output(51,better,42) output(13,better,25) output(13,better,10) output(13,better,49) output(13,better,29) output(13,better,24) output(14,better,70) output(14,better,51) output(14,better,10) output(14,better,49) output(14,better,29) output(14,better,48) output(14,better,42) output(14,better,24) output(29,better,24) output(64,better,50) output(64,better,47) output(64,better,70) output(64,better,10) output(64,better,51) output(64,better,42) output(64,better,48) output(64,better,24) output(64,better,29) output(64,better,49) output(70,better,10) output(70,better,51) output(70,better,48) output(70,better,49) output(70,better,29) output(70,better,24) output(70,better,42) output(23,better,18) output(23,better,13) output(23,better,25) output(23,better,10) output(23,better,24) output(23,better,29) output(23,better,49) output(25,better,10) output(25,better,49) output(25,better,29) output(25,better,24) output(47,better,70) output(47,better,51) output(47,better,10) output(47,better,49) output(47,better,29) output(47,better,48) output(47,better,42) output(47,better,24) output(48,better,42) output(49,better,29) output(49,better,24) output(65,better,18) output(65,better,13) output(65,better,25) output(65,better,10) output(65,better,24) output(65,better,29) output(65,better,49)
Optimization: 0 12
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.138 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 16+
  Optimum    : unknown
Optimization : 0 12
Calls        : 1
Time         : 598.012s (Solving: 594.15s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2379.988s
Threads      : 4        (Winner: 4)

Choices      : 10736122 (Domain: 331006)
Conflicts    : 7898100  (Analyzed: 7898097)
Restarts     : 7140     (Average: 1106.18 Last: 350479)
Model-Level  : 37.3    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7951287  (Deleted: 7612848)
  Binary     : 308      (Ratio:   0.00%)
  Ternary    : 2586     (Ratio:   0.03%)
  Conflict   : 7898097  (Average Length:  489.4 Ratio:  99.33%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 53190    (Average Length:   54.1 Ratio:   0.67%) 
  Distributed: 17743    (Ratio:   0.22% Average LBD: 3.72) 
  Integrated : 53229    (Ratio: 300.00% Unit: 79 Average Jumps: 5.77)
Backjumps    : 7898097  (Average:  1.26 Max: 869 Sum: 9970235)
  Executed   : 7898094  (Average:  1.26 Max: 869 Sum: 9970159 Ratio: 100.00%)
  Bounded    : 3        (Average: 25.33 Max:  52 Sum:     76 Ratio:   0.00%)

Rules        : 854942  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 18458   
Bodies       : 19409   
  Sum        : 160     
  Count      : 14      
Equivalences : 8650     (Atom=Atom: 813 Body=Body: 334 Other: 7503)
Tight        : Yes
Variables    : 17255    (Eliminated:    0 Frozen: 7931)
Constraints  : 872708   (Binary:  98.5% Ternary:   1.1% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(5)) ; 
  5 :: atom(hasCost(2)) ; 
  5 :: atom(hasCategory(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(2)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrep(6)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(3)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(3)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  5 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(4)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasPrep(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(3)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCategory(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(5)) ; 
  8 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(3)) ; 
  7 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(4)) ; 
  2 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) ; 
  4 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(7)) ; 
  6 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrep(6)) 
}.
