asprin_vL version 1.0
Reading from stdin
-:1259:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1284:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1365:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1639:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1816:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2017:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2021:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2021:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2027:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2126:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2152:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2272:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2328:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1176:1-16: info: no atoms over signature occur in program:
  output/3

-:1168:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1169:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1170:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1171:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1201:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCategory(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasPrep(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(4))),()) preference(1,aso) output(76,better,38) output(51,better,42) output(51,better,73) output(10,better,38) output(51,better,57) output(51,better,11) output(51,better,23) output(51,better,38) output(73,worse,57) output(11,worse,10) output(25,worse,62) output(11,worse,76) output(57,worse,10) output(5,worse,10) output(73,worse,11) output(42,worse,57) output(42,worse,11) output(73,worse,10) output(42,worse,10) output(57,worse,76) output(5,worse,76) output(73,worse,76) output(73,worse,38) output(42,worse,38) output(42,worse,76) output(57,eq,11) output(42,eq,73) output(73,eq,23) output(5,eq,11) output(25,eq,36) output(42,eq,23) output(11,eq,38) output(57,eq,38) output(5,eq,38) output(51,eq,10)
Optimization: 32 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(57,better,11) output(76,better,38) output(5,better,11) output(10,better,38) output(73,better,11) output(42,better,11) output(51,better,11) output(57,better,38) output(5,better,38) output(73,better,38) output(42,better,38) output(51,better,38) output(11,worse,10) output(10,worse,76) output(25,worse,62) output(22,worse,62) output(11,worse,76) output(57,worse,76) output(5,worse,76) output(73,worse,76) output(42,worse,76) output(51,worse,76) output(73,eq,57) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(25,eq,36) output(42,eq,23) output(51,eq,73) output(57,eq,10) output(5,eq,10) output(42,eq,57) output(51,eq,57) output(73,eq,10) output(42,eq,10) output(11,eq,38) output(51,eq,23) output(51,eq,10)
Optimization: 28 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(57,better,11) output(10,better,76) output(76,better,38) output(5,better,11) output(10,better,38) output(73,better,11) output(42,better,11) output(51,better,11) output(57,better,38) output(5,better,38) output(73,better,38) output(42,better,38) output(51,better,38) output(11,worse,10) output(73,worse,23) output(22,worse,25) output(22,worse,36) output(42,worse,23) output(22,worse,62) output(11,worse,76) output(57,worse,10) output(5,worse,10) output(73,worse,10) output(42,worse,10) output(51,worse,23) output(51,worse,10) output(73,eq,57) output(25,eq,62) output(51,eq,42) output(42,eq,73) output(25,eq,36) output(51,eq,73) output(42,eq,57) output(51,eq,57) output(57,eq,76) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(42,eq,76) output(51,eq,76)
Optimization: 27 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasPrep(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(57,better,11) output(10,better,76) output(76,better,38) output(25,better,62) output(5,better,11) output(10,better,38) output(73,better,11) output(42,better,11) output(51,better,11) output(57,better,38) output(5,better,38) output(73,better,38) output(42,better,38) output(51,better,38) output(11,worse,10) output(73,worse,23) output(22,worse,36) output(42,worse,23) output(11,worse,76) output(57,worse,10) output(5,worse,10) output(73,worse,10) output(42,worse,10) output(51,worse,10) output(73,eq,57) output(42,eq,73) output(42,eq,57) output(57,eq,76) output(5,eq,76) output(73,eq,76) output(11,eq,38) output(42,eq,76)
Optimization: 26 6
Answer: 5
preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(57,better,11) output(25,better,62) output(5,better,11) output(25,better,36) output(22,better,36) output(22,better,62) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(42,better,76) output(76,worse,38) output(51,worse,42) output(51,worse,73) output(10,worse,38) output(51,worse,57) output(11,worse,38) output(51,worse,23) output(51,worse,38) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(42,eq,73) output(73,eq,23) output(22,eq,25) output(42,eq,23) output(11,eq,76) output(42,eq,57) output(51,eq,11) output(57,eq,38) output(5,eq,38) output(73,eq,38) output(42,eq,38) output(51,eq,76) output(51,eq,10)
Optimization: 24 4
Answer: 6
preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(57,better,11) output(25,better,62) output(5,better,11) output(25,better,36) output(22,better,36) output(22,better,62) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(42,better,76) output(51,better,76) output(51,better,10) output(76,worse,38) output(10,worse,38) output(11,worse,38) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(22,eq,25) output(42,eq,23) output(51,eq,73) output(11,eq,76) output(42,eq,57) output(51,eq,57) output(57,eq,38) output(5,eq,38) output(51,eq,23) output(73,eq,38) output(42,eq,38) output(51,eq,38)
Optimization: 21 4
Answer: 7
preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(5,better,11) output(22,better,25) output(25,better,36) output(22,better,36) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(76,worse,38) output(25,worse,62) output(10,worse,38) output(11,worse,38) output(11,eq,10) output(10,eq,76) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(42,eq,23) output(51,eq,73) output(22,eq,62) output(11,eq,76) output(57,eq,38) output(5,eq,38) output(51,eq,23)
Optimization: 16 4
Answer: 8
preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(25,better,62) output(5,better,11) output(22,better,25) output(25,better,36) output(22,better,36) output(22,better,62) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(76,worse,38) output(10,worse,38) output(11,worse,38) output(11,eq,10) output(10,eq,76) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(42,eq,23) output(51,eq,73) output(11,eq,76) output(57,eq,38) output(5,eq,38) output(51,eq,23)
Optimization: 14 4
Answer: 9
preference(1,(1,2),0,for(atom(hasCost(5))),()) preference(1,(1,3),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(2))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,6),2,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(57,better,11) output(76,better,38) output(25,better,62) output(5,better,11) output(25,better,36) output(22,better,36) output(22,better,62) output(10,better,38) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(5,better,38) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(73,eq,57) output(11,eq,10) output(10,eq,76) output(51,eq,42) output(42,eq,73) output(73,eq,23) output(22,eq,25) output(42,eq,23) output(51,eq,73) output(11,eq,76) output(42,eq,57) output(51,eq,57) output(51,eq,23)
Optimization: 13 4
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasCost(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(10,better,76) output(76,better,38) output(73,better,23) output(22,better,25) output(42,better,23) output(22,better,62) output(10,better,38) output(57,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(51,eq,42) output(42,eq,73) output(51,eq,73) output(5,eq,38)
Optimization: 12 5
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(atom(hasCost(2))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),1,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(3))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(10,better,76) output(76,better,38) output(25,better,62) output(73,better,23) output(22,better,25) output(42,better,23) output(22,better,62) output(10,better,38) output(57,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(5,worse,11) output(5,worse,10) output(5,worse,76) output(51,eq,42) output(42,eq,73) output(51,eq,73) output(5,eq,38)
Optimization: 11 5
Progression : [ 1;11] (Error: 10)
Answer: 12
preference(1,(1,2),0,for(atom(hasCost(2))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(76,better,38) output(51,better,42) output(5,better,11) output(22,better,25) output(25,better,36) output(22,better,36) output(51,better,73) output(22,better,62) output(10,better,38) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(5,better,76) output(73,better,76) output(57,better,38) output(5,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(11,worse,10) output(25,worse,62) output(11,worse,76) output(10,eq,76) output(42,eq,73) output(73,eq,23) output(42,eq,23) output(57,eq,10) output(57,eq,76) output(11,eq,38)
Optimization: 10 2
Answer: 13
preference(1,(1,1),0,for(atom(hasIngredient(10))),()) preference(1,(1,2),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,4),0,for(atom(hasPrep(7))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(atom(hasIngredient(2))),()) preference(1,(1,2),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(10))),()) preference(1,(1,6),2,for(atom(hasCategory(5))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,(1,6),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(73,better,57) output(11,better,10) output(76,better,38) output(25,better,62) output(51,better,42) output(73,better,23) output(22,better,25) output(25,better,36) output(22,better,36) output(42,better,23) output(51,better,73) output(22,better,62) output(10,better,38) output(11,better,76) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(5,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10) output(10,eq,76) output(42,eq,73)
Optimization: 4 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),0,for(atom(hasDifficulty(1))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasCost(4))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(11,better,10) output(76,better,38) output(25,better,62) output(51,better,42) output(42,better,73) output(73,better,23) output(5,better,11) output(22,better,25) output(25,better,36) output(22,better,36) output(42,better,23) output(51,better,73) output(22,better,62) output(10,better,38) output(11,better,76) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(5,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),0,for(atom(hasDifficulty(1))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,1),2,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(3))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasDifficulty(1))),()) preference(1,(1,5),3,for(atom(hasCost(2))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(11,better,10) output(76,better,38) output(25,better,62) output(51,better,42) output(42,better,73) output(73,better,23) output(5,better,11) output(22,better,25) output(25,better,36) output(22,better,36) output(42,better,23) output(51,better,73) output(22,better,62) output(10,better,38) output(11,better,76) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(5,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10)
Optimization: 1 5
Progression : 1 [2;5] (Error: 1.5)
Answer: 16
preference(1,(1,2),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(2))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,4),1,for(atom(hasCost(4))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,2),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),3,for(atom(hasDifficulty(1))),()) preference(1,(1,4),3,for(atom(hasCost(2))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(73,better,57) output(57,better,11) output(11,better,10) output(10,better,76) output(76,better,38) output(25,better,62) output(51,better,42) output(42,better,73) output(73,better,23) output(22,better,25) output(25,better,36) output(22,better,36) output(42,better,23) output(51,better,73) output(22,better,62) output(10,better,38) output(11,better,76) output(57,better,10) output(5,better,10) output(73,better,11) output(42,better,57) output(51,better,57) output(42,better,11) output(51,better,11) output(73,better,10) output(42,better,10) output(57,better,76) output(5,better,76) output(73,better,76) output(11,better,38) output(57,better,38) output(5,better,38) output(51,better,23) output(73,better,38) output(42,better,38) output(51,better,38) output(42,better,76) output(51,better,76) output(51,better,10)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 16
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 22.913s (Solving: 15.03s 1st Model: 0.48s Unsat: 12.31s)
CPU Time     : 67.802s
Threads      : 4        (Winner: 1)

Choices      : 272153   (Domain: 3527)
Conflicts    : 50939    (Analyzed: 50933)
Restarts     : 78       (Average: 652.99 Last: 2520)
Model-Level  : 530.6   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 80548    (Deleted: 16389)
  Binary     : 4190     (Ratio:   5.20%)
  Ternary    : 10753    (Ratio:  13.35%)
  Conflict   : 50933    (Average Length:  168.5 Ratio:  63.23%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 29615    (Average Length:   47.3 Ratio:  36.77%) 
  Distributed: 9952     (Ratio:  19.54% Average LBD: 3.00) 
  Integrated : 29849    (Ratio: 299.93% Unit: 317 Average Jumps: 46.88)
Backjumps    : 50933    (Average:  4.72 Max: 1437 Sum: 240220)
  Executed   : 50910    (Average:  4.71 Max: 1437 Sum: 239661 Ratio:  99.77%)
  Bounded    : 23       (Average: 24.30 Max:  39 Sum:    559 Ratio:   0.23%)

Rules        : 3851046 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 636986  
Bodies       : 782182  
  Count      : 1464    
Equivalences : 1937790  (Atom=Atom: 571024 Body=Body: 624041 Other: 742725)
Tight        : Yes
Variables    : 103205   (Eliminated:    0 Frozen: 37901)
Constraints  : 3369296  (Binary:  97.0% Ternary:   2.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(1)) >> atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(4)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasCategory(2)) >> not atom(hasPrep(4))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(1)) >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(5)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(1)) >> atom(hasCategory(2)) >> not atom(hasCategory(2))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(5)) >> not atom(hasPrep(7))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(8)) >> atom(hasCategory(2)) ; 
  atom(hasIngredient(2)) >> atom(hasCategory(2)) ; 
  atom(hasCost(4)) >> atom(hasPrep(2)) >> not atom(hasCategory(2))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(10)) ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(4)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasCost(5)) ; 
  atom(hasCost(3)) >> atom(hasPrepTime(3)) || atom(hasCost(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  >> not atom(hasPrepTime(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasCost(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrepTime(3)) || atom(hasCost(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  >> not atom(hasPrepTime(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasCost(5)) ; 
  atom(hasIngredient(3)) >> not atom(hasPrepTime(3))  >> not atom(hasCategory(2))  || atom(hasCost(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  >> not atom(hasPrepTime(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasCost(5)) ; 
  atom(hasDifficulty(4)) >> not atom(hasPrepTime(3))  >> not atom(hasCategory(2))  || atom(hasCost(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  >> not atom(hasPrepTime(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasIngredient(11))  >> not atom(hasIngredient(5))  || atom(hasCost(5)) ; 
  atom(hasDifficulty(4)) >> atom(hasPrepTime(3)) >> not atom(hasDifficulty(2))  || atom(hasCost(2)) ; 
  not atom(hasIngredient(5))  >> not atom(hasIngredient(2))  >> not atom(hasPrepTime(1))  || atom(hasIngredient(2)) ; 
  atom(hasPrep(1)) >> atom(hasCost(2)) >> atom(hasPrep(0)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasCost(2)) || not atom(hasPrep(6))  ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) >> not atom(hasPrep(4))  || not atom(hasDifficulty(4))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(4))  >> not atom(hasCategory(4))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasIngredient(12))  >> not atom(hasIngredient(11))  || atom(hasCost(2)) ; 
  atom(hasCategory(1)) >> not atom(hasIngredient(3))  || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasCost(2)) || not atom(hasPrep(6))  ; 
  atom(hasCost(3)) >> atom(hasPrep(6)) >> not atom(hasPrep(4))  || not atom(hasDifficulty(4))  ; 
  not atom(hasIngredient(10))  >> not atom(hasIngredient(4))  >> not atom(hasCategory(4))  || atom(hasCategory(2)) ; 
  not atom(hasCategory(3))  >> not atom(hasIngredient(12))  >> not atom(hasIngredient(11))  || atom(hasCost(2)) ; 
  atom(hasIngredient(3)) >> not atom(hasPrepTime(2))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasCategory(3))  >> not atom(hasDifficulty(2))  || atom(hasCost(2)) ; 
  atom(hasCost(1)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(2))  || atom(hasIngredient(10)) ; 
  atom(hasDifficulty(4)) >> not atom(hasDifficulty(1))  >> atom(hasPrep(0)) || not atom(hasCost(3))  ; 
  atom(hasCost(1)) >> atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCategory(3))  >> not atom(hasDifficulty(2))  || atom(hasPrep(7)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(10)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(4))  ; 
  atom(hasPrep(0)) >> atom(hasCategory(5)) >> atom(hasDifficulty(1)) || atom(hasIngredient(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasCategory(4)) >> atom(hasCost(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(7)) >> not atom(hasDifficulty(2))  || not atom(hasDifficulty(4))  ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  >> atom(hasPrepTime(1)) || atom(hasDifficulty(1)) ; 
  not atom(hasCost(2))  >> atom(hasIngredient(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(6))  ; 
  atom(hasCost(1)) >> atom(hasCost(3)) >> atom(hasCost(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasPrepTime(1)) >> atom(hasCost(4)) >> atom(hasPrep(6)) || not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasCategory(4)) >> atom(hasCost(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(7)) >> not atom(hasDifficulty(2))  || not atom(hasDifficulty(4))  ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  >> atom(hasPrepTime(1)) || atom(hasDifficulty(1)) ; 
  not atom(hasCost(2))  >> atom(hasIngredient(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(6))  ; 
  atom(hasCost(1)) >> atom(hasCost(3)) >> atom(hasCost(2)) || not atom(hasDifficulty(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> atom(hasPrepTime(3)) >> atom(hasDifficulty(1)) || not atom(hasDifficulty(4))  ; 
  atom(hasDifficulty(4)) >> atom(hasPrep(6)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(10))  ; 
  atom(hasCost(4)) >> not atom(hasCost(2))  >> atom(hasCost(2)) || not atom(hasDifficulty(4))  ; 
  atom(hasCategory(1)) >> atom(hasIngredient(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(6))  
}.
