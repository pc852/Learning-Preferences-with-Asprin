asprin_vL version 1.0
Reading from stdin
-:1261:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1286:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1367:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1641:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1818:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2019:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2023:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2023:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2029:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2128:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2154:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2274:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2308:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2330:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1178:1-16: info: no atoms over signature occur in program:
  output/3

-:1170:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1171:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1172:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1173:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1203:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasCategory(5))),()) preference(1,aso) output(86,better,55) output(71,better,51) output(67,better,8) output(86,better,57) output(71,better,55) output(86,better,52) output(75,better,55) output(25,better,55) output(86,better,62) output(86,better,78) output(75,worse,86) output(55,worse,52) output(55,worse,57) output(76,worse,67) output(51,worse,57) output(55,worse,62) output(51,worse,52) output(25,worse,86) output(51,worse,62) output(55,worse,78) output(51,worse,78) output(25,eq,75) output(51,eq,55) output(57,eq,52) output(52,eq,78) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(57,eq,78) output(71,eq,57) output(75,eq,57) output(25,eq,57) output(71,eq,78) output(75,eq,78) output(25,eq,78)
Optimization: 32 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(86,better,55) output(71,better,51) output(86,better,57) output(71,better,55) output(86,better,52) output(75,better,55) output(25,better,55) output(75,better,52) output(86,better,62) output(86,better,78) output(75,better,57) output(75,better,78) output(25,worse,75) output(55,worse,52) output(55,worse,57) output(51,worse,57) output(55,worse,62) output(51,worse,52) output(25,worse,86) output(51,worse,62) output(55,worse,78) output(51,worse,78) output(51,eq,55) output(57,eq,52) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(52,eq,78) output(71,eq,52) output(25,eq,52) output(57,eq,78) output(71,eq,57) output(25,eq,57) output(71,eq,78) output(25,eq,78)
Optimization: 30 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(6))),()) preference(1,aso) output(86,better,55) output(71,better,51) output(86,better,57) output(71,better,55) output(86,better,52) output(75,better,55) output(25,better,55) output(75,better,52) output(86,better,62) output(86,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(75,better,78) output(25,worse,75) output(55,worse,52) output(57,worse,52) output(55,worse,62) output(51,worse,52) output(25,worse,86) output(51,worse,62) output(55,worse,78) output(57,worse,78) output(51,worse,78) output(51,eq,55) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(52,eq,78) output(71,eq,52) output(25,eq,52) output(71,eq,78) output(25,eq,78)
Optimization: 28 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasPrep(4))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(86,better,55) output(71,better,51) output(67,better,8) output(76,better,8) output(86,better,57) output(71,better,55) output(86,better,52) output(75,better,55) output(25,better,55) output(75,better,52) output(86,better,62) output(86,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(75,better,78) output(25,worse,75) output(55,worse,52) output(57,worse,52) output(51,worse,52) output(25,worse,86) output(55,worse,78) output(57,worse,78) output(51,worse,78) output(51,eq,55) output(76,eq,67) output(52,eq,78) output(71,eq,52) output(25,eq,52) output(71,eq,78) output(25,eq,78)
Optimization: 26 6
Answer: 5
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasCost(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasPrepTime(2))),()) preference(1,aso) output(86,better,55) output(71,better,51) output(76,better,67) output(86,better,57) output(71,better,55) output(86,better,52) output(75,better,55) output(25,better,55) output(71,better,52) output(75,better,52) output(25,better,52) output(86,better,62) output(86,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(75,better,78) output(25,worse,75) output(67,worse,8) output(52,worse,78) output(55,worse,62) output(25,worse,86) output(51,worse,62) output(55,worse,78) output(57,worse,78) output(51,worse,78) output(51,eq,55) output(57,eq,52) output(76,eq,8) output(71,eq,78) output(25,eq,78)
Optimization: 25 6
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(atom(hasCategory(2))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(75,better,86) output(52,better,62) output(62,better,78) output(67,better,8) output(52,better,78) output(55,better,62) output(57,better,62) output(25,better,86) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(51,better,78) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(86,worse,55) output(76,worse,67) output(86,worse,57) output(86,worse,52) output(86,worse,62) output(25,eq,75) output(55,eq,52) output(71,eq,51) output(51,eq,55) output(55,eq,57) output(57,eq,52) output(76,eq,8) output(51,eq,57) output(71,eq,55) output(51,eq,52) output(75,eq,55) output(25,eq,55) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(86,eq,78) output(71,eq,57) output(75,eq,57) output(25,eq,57)
Optimization: 24 2
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(atom(hasCost(4))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(75,better,86) output(52,better,62) output(62,better,78) output(67,better,8) output(52,better,78) output(55,better,62) output(57,better,62) output(25,better,86) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(86,worse,55) output(76,worse,67) output(86,worse,57) output(86,worse,52) output(86,worse,62) output(25,eq,75) output(55,eq,52) output(71,eq,51) output(51,eq,55) output(55,eq,57) output(57,eq,52) output(76,eq,8) output(51,eq,57) output(71,eq,55) output(51,eq,52) output(75,eq,55) output(25,eq,55) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(71,eq,57) output(75,eq,57) output(25,eq,57)
Optimization: 23 2
Answer: 8
preference(1,(1,1),0,for(atom(hasIngredient(7))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(75,better,86) output(52,better,62) output(62,better,78) output(51,better,55) output(67,better,8) output(71,better,55) output(52,better,78) output(55,better,62) output(57,better,62) output(75,better,55) output(25,better,86) output(25,better,55) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(86,worse,55) output(55,worse,52) output(55,worse,57) output(76,worse,67) output(86,worse,57) output(86,worse,52) output(25,eq,75) output(71,eq,51) output(57,eq,52) output(76,eq,8) output(51,eq,57) output(51,eq,52) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(86,eq,62) output(71,eq,57) output(75,eq,57) output(25,eq,57)
Optimization: 19 2
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(75,better,86) output(52,better,62) output(62,better,78) output(51,better,55) output(67,better,8) output(76,better,8) output(71,better,55) output(52,better,78) output(55,better,62) output(57,better,62) output(75,better,55) output(25,better,86) output(25,better,55) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(86,worse,55) output(55,worse,52) output(55,worse,57) output(86,worse,57) output(86,worse,52) output(25,eq,75) output(71,eq,51) output(57,eq,52) output(76,eq,67) output(51,eq,57) output(51,eq,52) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(86,eq,62) output(71,eq,57) output(75,eq,57) output(25,eq,57)
Optimization: 18 2
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(75,better,86) output(55,better,52) output(52,better,62) output(62,better,78) output(55,better,57) output(76,better,67) output(67,better,8) output(76,better,8) output(52,better,78) output(55,better,62) output(57,better,62) output(25,better,86) output(75,better,52) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(75,better,57) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(25,worse,75) output(86,worse,55) output(51,worse,55) output(86,worse,57) output(71,worse,55) output(86,worse,52) output(25,worse,55) output(71,eq,51) output(57,eq,52) output(51,eq,57) output(51,eq,52) output(75,eq,55) output(71,eq,52) output(25,eq,52) output(86,eq,62) output(71,eq,57) output(25,eq,57)
Optimization: 17 2
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),0,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,aso) output(75,better,86) output(55,better,52) output(52,better,62) output(62,better,78) output(55,better,57) output(67,better,8) output(51,better,57) output(52,better,78) output(55,better,62) output(57,better,62) output(51,better,52) output(25,better,86) output(75,better,52) output(25,better,52) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(75,better,57) output(25,better,57) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(86,worse,55) output(71,worse,51) output(76,worse,67) output(86,worse,57) output(71,worse,55) output(86,worse,52) output(25,eq,75) output(51,eq,55) output(57,eq,52) output(76,eq,8) output(75,eq,55) output(25,eq,55) output(71,eq,52) output(86,eq,62) output(71,eq,57)
Optimization: 15 2
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,aso) output(75,better,86) output(52,better,62) output(51,better,55) output(67,better,8) output(76,better,8) output(51,better,57) output(71,better,55) output(55,better,62) output(57,better,62) output(51,better,52) output(75,better,55) output(25,better,86) output(25,better,55) output(71,better,52) output(75,better,52) output(25,better,52) output(86,better,62) output(51,better,62) output(71,better,62) output(75,better,62) output(51,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62) output(62,worse,78) output(25,eq,75) output(86,eq,55) output(55,eq,52) output(71,eq,51) output(55,eq,57) output(57,eq,52) output(76,eq,67) output(86,eq,57) output(52,eq,78) output(86,eq,52) output(55,eq,78) output(57,eq,78) output(86,eq,78)
Optimization: 14 1
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(1))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasPrepTime(1))),()) preference(1,(1,4),1,for(atom(hasIngredient(8))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,1),3,for(atom(hasCategory(2))),()) preference(1,(1,2),3,for(atom(hasCost(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(12))),()) preference(1,(1,5),3,for(atom(hasPrep(6))),()) preference(1,(1,6),3,for(atom(hasPrep(6))),()) preference(1,aso) output(25,better,75) output(75,better,86) output(86,better,55) output(55,better,52) output(52,better,62) output(62,better,78) output(71,better,51) output(51,better,55) output(55,better,57) output(57,better,52) output(76,better,67) output(67,better,8) output(76,better,8) output(86,better,57) output(51,better,57) output(71,better,55) output(52,better,78) output(55,better,62) output(57,better,62) output(86,better,52) output(51,better,52) output(75,better,55) output(25,better,86) output(25,better,55) output(71,better,52) output(75,better,52) output(25,better,52) output(86,better,62) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasPrepTime(1))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasIngredient(10))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasCost(4))),()) preference(1,(1,4),3,for(atom(hasCost(4))),()) preference(1,(1,5),3,for(atom(hasDifficulty(3))),()) preference(1,(1,6),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(25,better,75) output(75,better,86) output(86,better,55) output(55,better,52) output(52,better,62) output(62,better,78) output(71,better,51) output(51,better,55) output(55,better,57) output(57,better,52) output(76,better,67) output(67,better,8) output(76,better,8) output(86,better,57) output(51,better,57) output(71,better,55) output(52,better,78) output(55,better,62) output(57,better,62) output(86,better,52) output(51,better,52) output(75,better,55) output(25,better,86) output(25,better,55) output(71,better,52) output(75,better,52) output(25,better,52) output(86,better,62) output(51,better,62) output(71,better,62) output(75,better,62) output(55,better,78) output(57,better,78) output(86,better,78) output(51,better,78) output(71,better,57) output(75,better,57) output(25,better,57) output(71,better,78) output(75,better,78) output(25,better,78) output(25,better,62)
Optimization: 0 5
Progression : 0 [2;5] (Error: 1.5)
Progression : 0 [3;5] (Error: 0.666667)
OPTIMUM FOUND

Models       : 14
  Optimum    : yes
Optimization : 0 5
Calls        : 1
Time         : 12.515s (Solving: 4.58s 1st Model: 0.52s Unsat: 2.09s)
CPU Time     : 25.956s
Threads      : 4        (Winner: 0)

Choices      : 136280   (Domain: 713)
Conflicts    : 13886    (Analyzed: 13882)
Restarts     : 36       (Average: 385.61 Last: 431)
Model-Level  : 679.1   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 26115    (Deleted: 1254)
  Binary     : 1238     (Ratio:   4.74%)
  Ternary    : 3998     (Ratio:  15.31%)
  Conflict   : 13882    (Average Length:  103.6 Ratio:  53.16%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12233    (Average Length:   44.2 Ratio:  46.84%) 
  Distributed: 4271     (Ratio:  30.77% Average LBD: 2.98) 
  Integrated : 12803    (Ratio: 299.77% Unit: 429 Average Jumps: 52.77)
Backjumps    : 13882    (Average:  7.64 Max: 1551 Sum: 106058)
  Executed   : 13864    (Average:  7.61 Max: 1551 Sum: 105628 Ratio:  99.59%)
  Bounded    : 18       (Average: 23.89 Max:  40 Sum:    430 Ratio:   0.41%)

Rules        : 4038920 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 666550  
Bodies       : 815507  
  Count      : 1536    
Equivalences : 2028161  (Atom=Atom: 598591 Body=Body: 654517 Other: 775053)
Tight        : Yes
Variables    : 104601   (Eliminated:    0 Frozen: 39273)
Constraints  : 3525036  (Binary:  97.1% Ternary:   2.7% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(5)) >> not atom(hasCategory(4))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> not atom(hasPrep(5))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasPrep(4)) >> atom(hasIngredient(6)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasPrep(4)) >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(1)) >> not atom(hasCost(3))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(5))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(2)) >> atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(9)) >> atom(hasIngredient(7)) || not atom(hasDifficulty(1))  ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasCategory(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(9)) >> atom(hasIngredient(7)) || not atom(hasDifficulty(1))  ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(7))  >> atom(hasPrep(7)) >> not atom(hasCost(3))  || atom(hasIngredient(7)) ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(7))  >> atom(hasPrep(7)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(4))  ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(1))  || not atom(hasCategory(5))  ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> not atom(hasIngredient(7))  >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasCost(2)) >> atom(hasCategory(4)) || atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(1)) >> atom(hasIngredient(4)) >> atom(hasCategory(2)) || not atom(hasCategory(5))  ; 
  atom(hasDifficulty(1)) >> atom(hasIngredient(3)) >> atom(hasCost(4)) || not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasPrep(1)) >> atom(hasIngredient(12)) || not atom(hasCost(3))  ; 
  atom(hasPrep(7)) >> atom(hasPrep(1)) >> atom(hasPrep(6)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(1)) >> atom(hasIngredient(3)) >> atom(hasPrep(6)) || atom(hasIngredient(7)) ; 
  atom(hasPrepTime(1)) >> atom(hasCost(3)) >> not atom(hasIngredient(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(5)) >> atom(hasCost(3)) >> not atom(hasDifficulty(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(3)) >> atom(hasCost(4)) || not atom(hasCost(3))  ; 
  atom(hasPrepTime(1)) >> atom(hasPrep(1)) >> atom(hasDifficulty(3)) || not atom(hasPrep(7))  ; 
  not atom(hasIngredient(7))  >> atom(hasIngredient(10)) >> atom(hasCost(4)) ; 
  atom(hasIngredient(8)) >> atom(hasPrep(1)) >> atom(hasDifficulty(3)) 
}.
