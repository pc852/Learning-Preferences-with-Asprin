asprin_vL version 1.0
Reading from stdin
-:1319:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1329:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1344:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1425:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1686:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1699:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1876:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2005:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2077:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2081:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2081:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2087:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2186:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2212:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2332:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2366:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2388:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1236:1-16: info: no atoms over signature occur in program:
  output/3

-:1228:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1229:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(69,eq,61) output(61,eq,39) output(18,eq,30) output(30,eq,32) output(17,eq,7) output(7,eq,71) output(84,eq,69) output(39,eq,18) output(32,eq,17) output(8,eq,67) output(61,eq,47) output(47,eq,7) output(7,eq,42) output(42,eq,18) output(18,eq,89) output(89,eq,62) output(21,eq,61) output(18,eq,62) output(39,eq,89) output(42,eq,89) output(7,eq,18) output(17,eq,42) output(47,eq,42) output(61,eq,7) output(69,eq,47) output(21,eq,47) output(30,eq,17) output(61,eq,18) output(17,eq,71) output(47,eq,71) output(32,eq,7) output(18,eq,32) output(39,eq,30) output(42,eq,30) output(69,eq,39) output(21,eq,39) output(84,eq,61) output(84,eq,39) output(7,eq,30) output(17,eq,30) output(47,eq,30) output(61,eq,30) output(69,eq,30) output(21,eq,30) output(39,eq,32) output(42,eq,32) output(7,eq,32) output(61,eq,32) output(30,eq,7) output(18,eq,7) output(61,eq,71) output(69,eq,71) output(21,eq,71) output(32,eq,71) output(30,eq,71) output(69,eq,18) output(21,eq,18) output(84,eq,18) output(18,eq,17) output(39,eq,17) output(42,eq,17) output(84,eq,47) output(69,eq,7) output(21,eq,7) output(84,eq,7) output(61,eq,42) output(69,eq,42) output(21,eq,42) output(32,eq,42) output(30,eq,42) output(17,eq,18) output(47,eq,18) output(32,eq,18) output(7,eq,89) output(17,eq,89) output(47,eq,89) output(61,eq,89) output(69,eq,89) output(21,eq,89) output(39,eq,62) output(42,eq,62) output(7,eq,62) output(61,eq,62) output(69,eq,62) output(21,eq,62) output(84,eq,62) output(17,eq,62) output(47,eq,62) output(32,eq,62) output(30,eq,62) output(84,eq,89) output(32,eq,89) output(30,eq,89) output(30,eq,18) output(18,eq,18) output(18,eq,42) output(39,eq,42) output(42,eq,42) output(84,eq,42) output(7,eq,17) output(17,eq,17) output(47,eq,17) output(61,eq,17) output(69,eq,17) output(21,eq,17) output(84,eq,17) output(18,eq,71) output(39,eq,71) output(42,eq,71) output(84,eq,71) output(39,eq,7) output(42,eq,7) output(7,eq,7) output(69,eq,32) output(21,eq,32) output(84,eq,32) output(17,eq,32) output(47,eq,32) output(32,eq,32) output(84,eq,30) output(32,eq,30) output(30,eq,30)
Optimization: 122 0
Answer: 2
preference(1,(1,14),1,for(atom(hasPrep(4))),3) preference(1,less(weight)) output(84,better,69) output(69,worse,61) output(69,worse,47) output(69,worse,39) output(69,worse,30) output(69,worse,71) output(69,worse,18) output(69,worse,7) output(69,worse,42) output(69,worse,89) output(69,worse,62) output(69,worse,17) output(69,worse,32) output(61,eq,39) output(18,eq,30) output(30,eq,32) output(17,eq,7) output(7,eq,71) output(39,eq,18) output(32,eq,17) output(8,eq,67) output(61,eq,47) output(47,eq,7) output(7,eq,42) output(42,eq,18) output(18,eq,89) output(89,eq,62) output(21,eq,61) output(18,eq,62) output(39,eq,89) output(42,eq,89) output(7,eq,18) output(17,eq,42) output(47,eq,42) output(61,eq,7) output(21,eq,47) output(30,eq,17) output(61,eq,18) output(17,eq,71) output(47,eq,71) output(32,eq,7) output(18,eq,32) output(39,eq,30) output(42,eq,30) output(21,eq,39) output(84,eq,61) output(84,eq,39) output(7,eq,30) output(17,eq,30) output(47,eq,30) output(61,eq,30) output(21,eq,30) output(39,eq,32) output(42,eq,32) output(7,eq,32) output(61,eq,32) output(30,eq,7) output(18,eq,7) output(61,eq,71) output(21,eq,71) output(32,eq,71) output(30,eq,71) output(21,eq,18) output(84,eq,18) output(18,eq,17) output(39,eq,17) output(42,eq,17) output(84,eq,47) output(21,eq,7) output(84,eq,7) output(61,eq,42) output(21,eq,42) output(32,eq,42) output(30,eq,42) output(17,eq,18) output(47,eq,18) output(32,eq,18) output(7,eq,89) output(17,eq,89) output(47,eq,89) output(61,eq,89) output(21,eq,89) output(39,eq,62) output(42,eq,62) output(7,eq,62) output(61,eq,62) output(21,eq,62) output(84,eq,62) output(17,eq,62) output(47,eq,62) output(32,eq,62) output(30,eq,62) output(84,eq,89) output(32,eq,89) output(30,eq,89) output(30,eq,18) output(18,eq,18) output(18,eq,42) output(39,eq,42) output(42,eq,42) output(84,eq,42) output(7,eq,17) output(17,eq,17) output(47,eq,17) output(61,eq,17) output(21,eq,17) output(84,eq,17) output(18,eq,71) output(39,eq,71) output(42,eq,71) output(84,eq,71) output(39,eq,7) output(42,eq,7) output(7,eq,7) output(21,eq,32) output(84,eq,32) output(17,eq,32) output(47,eq,32) output(32,eq,32) output(84,eq,30) output(32,eq,30) output(30,eq,30)
Optimization: 121 1
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(8))),3) preference(1,less(weight)) output(18,better,71) output(84,better,71) output(39,better,71) output(42,better,71) output(61,better,71) output(69,better,71) output(7,better,71) output(21,better,71) output(30,better,71) output(32,better,71) output(47,better,71) output(17,better,71) output(69,eq,61) output(61,eq,39) output(18,eq,30) output(30,eq,32) output(17,eq,7) output(84,eq,69) output(39,eq,18) output(32,eq,17) output(8,eq,67) output(61,eq,47) output(47,eq,7) output(7,eq,42) output(42,eq,18) output(18,eq,89) output(89,eq,62) output(21,eq,61) output(18,eq,62) output(39,eq,89) output(42,eq,89) output(7,eq,18) output(17,eq,42) output(47,eq,42) output(61,eq,7) output(69,eq,47) output(21,eq,47) output(30,eq,17) output(61,eq,18) output(32,eq,7) output(18,eq,32) output(39,eq,30) output(42,eq,30) output(69,eq,39) output(21,eq,39) output(84,eq,61) output(84,eq,39) output(7,eq,30) output(17,eq,30) output(47,eq,30) output(61,eq,30) output(69,eq,30) output(21,eq,30) output(39,eq,32) output(42,eq,32) output(7,eq,32) output(61,eq,32) output(30,eq,7) output(18,eq,7) output(69,eq,18) output(21,eq,18) output(84,eq,18) output(18,eq,17) output(39,eq,17) output(42,eq,17) output(84,eq,47) output(69,eq,7) output(21,eq,7) output(84,eq,7) output(61,eq,42) output(69,eq,42) output(21,eq,42) output(32,eq,42) output(30,eq,42) output(17,eq,18) output(47,eq,18) output(32,eq,18) output(7,eq,89) output(17,eq,89) output(47,eq,89) output(61,eq,89) output(69,eq,89) output(21,eq,89) output(39,eq,62) output(42,eq,62) output(7,eq,62) output(61,eq,62) output(69,eq,62) output(21,eq,62) output(84,eq,62) output(17,eq,62) output(47,eq,62) output(32,eq,62) output(30,eq,62) output(84,eq,89) output(32,eq,89) output(30,eq,89) output(30,eq,18) output(18,eq,18) output(18,eq,42) output(39,eq,42) output(42,eq,42) output(84,eq,42) output(7,eq,17) output(17,eq,17) output(47,eq,17) output(61,eq,17) output(69,eq,17) output(21,eq,17) output(84,eq,17) output(39,eq,7) output(42,eq,7) output(7,eq,7) output(69,eq,32) output(21,eq,32) output(84,eq,32) output(17,eq,32) output(47,eq,32) output(32,eq,32) output(84,eq,30) output(32,eq,30) output(30,eq,30)
Optimization: 110 1
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasCost(4))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(84,better,18) output(84,better,30) output(39,better,18) output(39,better,30) output(42,better,18) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(61,better,18) output(61,better,30) output(69,better,30) output(69,better,18) output(89,better,62) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(7,better,17) output(21,better,61) output(21,better,30) output(21,better,18) output(32,better,17) output(32,better,18) output(32,better,62) output(32,better,30) output(47,better,30) output(47,better,18) output(47,better,62) output(47,better,17) output(17,better,30) output(17,better,18) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,69) output(84,worse,61) output(84,worse,39) output(84,worse,47) output(84,worse,7) output(84,worse,62) output(84,worse,89) output(84,worse,42) output(84,worse,17) output(84,worse,71) output(84,worse,32) output(39,worse,89) output(39,worse,32) output(39,worse,42) output(39,worse,71) output(39,worse,7) output(42,worse,89) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,32) output(61,worse,71) output(61,worse,42) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,39) output(69,worse,71) output(69,worse,7) output(69,worse,42) output(69,worse,89) output(69,worse,62) output(69,worse,17) output(69,worse,32) output(21,worse,47) output(21,worse,71) output(21,worse,7) output(21,worse,42) output(21,worse,89) output(21,worse,32) output(30,worse,32) output(30,worse,17) output(30,worse,7) output(30,worse,71) output(30,worse,42) output(30,worse,62) output(30,worse,89) output(32,worse,7) output(32,worse,71) output(32,worse,42) output(32,worse,89) output(47,worse,7) output(47,worse,42) output(47,worse,71) output(47,worse,89) output(17,worse,7) output(17,worse,42) output(17,worse,71) output(17,worse,89) output(17,worse,32) output(69,eq,61) output(18,eq,30) output(8,eq,67) output(21,eq,39) output(39,eq,17) output(39,eq,62) output(21,eq,62) output(17,eq,62) output(30,eq,18) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(21,eq,17) output(42,eq,71) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 87 10
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasCost(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasCost(4))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(84,better,18) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,30) output(42,better,18) output(42,better,89) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(61,better,18) output(61,better,30) output(69,better,30) output(69,better,18) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(7,better,17) output(21,better,61) output(21,better,30) output(21,better,18) output(21,better,89) output(32,better,17) output(32,better,18) output(32,better,62) output(32,better,89) output(32,better,30) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(17,better,30) output(17,better,18) output(17,better,89) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,69) output(84,worse,61) output(84,worse,39) output(84,worse,47) output(84,worse,7) output(84,worse,62) output(84,worse,89) output(84,worse,42) output(84,worse,17) output(84,worse,71) output(84,worse,32) output(39,worse,32) output(39,worse,42) output(39,worse,71) output(39,worse,7) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,32) output(61,worse,71) output(61,worse,42) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,39) output(69,worse,71) output(69,worse,7) output(69,worse,42) output(69,worse,62) output(69,worse,17) output(69,worse,32) output(89,worse,62) output(21,worse,47) output(21,worse,71) output(21,worse,7) output(21,worse,42) output(21,worse,32) output(30,worse,32) output(30,worse,17) output(30,worse,7) output(30,worse,71) output(30,worse,42) output(30,worse,62) output(30,worse,89) output(32,worse,7) output(32,worse,71) output(32,worse,42) output(47,worse,7) output(47,worse,42) output(47,worse,71) output(17,worse,7) output(17,worse,42) output(17,worse,71) output(17,worse,32) output(69,eq,61) output(18,eq,30) output(8,eq,67) output(21,eq,39) output(39,eq,17) output(61,eq,89) output(69,eq,89) output(39,eq,62) output(21,eq,62) output(17,eq,62) output(30,eq,18) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(21,eq,17) output(42,eq,71) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 82 11
Progression : [ 7;82] (Error: 10.7143)
Answer: 6
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasIngredient(8))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasCost(4))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(84,better,18) output(84,better,71) output(84,better,30) output(39,better,18) output(39,better,30) output(39,better,71) output(42,better,18) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(42,better,71) output(61,better,18) output(61,better,30) output(61,better,71) output(69,better,30) output(69,better,71) output(69,better,18) output(89,better,62) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(7,better,17) output(21,better,61) output(21,better,30) output(21,better,71) output(21,better,18) output(32,better,17) output(32,better,71) output(32,better,18) output(32,better,62) output(32,better,30) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,62) output(47,better,17) output(17,better,71) output(17,better,30) output(17,better,18) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(84,worse,69) output(84,worse,61) output(84,worse,39) output(84,worse,47) output(84,worse,7) output(84,worse,62) output(84,worse,89) output(84,worse,42) output(84,worse,17) output(84,worse,32) output(39,worse,89) output(39,worse,32) output(39,worse,42) output(39,worse,7) output(42,worse,89) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,32) output(61,worse,42) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,39) output(69,worse,7) output(69,worse,42) output(69,worse,89) output(69,worse,62) output(69,worse,17) output(69,worse,32) output(21,worse,47) output(21,worse,7) output(21,worse,42) output(21,worse,89) output(21,worse,32) output(30,worse,32) output(30,worse,17) output(30,worse,7) output(30,worse,42) output(30,worse,62) output(30,worse,89) output(32,worse,7) output(32,worse,42) output(32,worse,89) output(47,worse,7) output(47,worse,42) output(47,worse,89) output(17,worse,7) output(17,worse,42) output(17,worse,89) output(17,worse,32) output(69,eq,61) output(18,eq,30) output(8,eq,67) output(21,eq,39) output(30,eq,71) output(39,eq,17) output(39,eq,62) output(21,eq,62) output(17,eq,62) output(30,eq,18) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(21,eq,17) output(18,eq,71) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 78 11
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasPrepTime(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),5) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),8) preference(1,(1,10),1,for(atom(hasCost(4))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasPrep(0))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),3) preference(1,less(weight)) output(84,better,18) output(84,better,71) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,30) output(39,better,71) output(42,better,18) output(42,better,89) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(42,better,71) output(61,better,18) output(61,better,30) output(61,better,71) output(69,better,30) output(69,better,71) output(69,better,18) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(7,better,17) output(21,better,61) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,89) output(32,better,17) output(32,better,71) output(32,better,18) output(32,better,62) output(32,better,89) output(32,better,30) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(84,worse,69) output(84,worse,61) output(84,worse,39) output(84,worse,47) output(84,worse,7) output(84,worse,62) output(84,worse,89) output(84,worse,42) output(84,worse,17) output(84,worse,32) output(39,worse,32) output(39,worse,42) output(39,worse,7) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,32) output(61,worse,42) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,39) output(69,worse,7) output(69,worse,42) output(69,worse,62) output(69,worse,17) output(69,worse,32) output(89,worse,62) output(21,worse,47) output(21,worse,7) output(21,worse,42) output(21,worse,32) output(30,worse,32) output(30,worse,17) output(30,worse,7) output(30,worse,42) output(30,worse,62) output(30,worse,89) output(32,worse,7) output(32,worse,42) output(47,worse,7) output(47,worse,42) output(17,worse,7) output(17,worse,42) output(17,worse,32) output(69,eq,61) output(18,eq,30) output(8,eq,67) output(21,eq,39) output(30,eq,71) output(39,eq,17) output(61,eq,89) output(69,eq,89) output(39,eq,62) output(21,eq,62) output(17,eq,62) output(30,eq,18) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(21,eq,17) output(18,eq,71) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 73 11
Answer: 8
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasDifficulty(3))),3) preference(1,(1,3),1,for(atom(hasIngredient(8))),3) preference(1,(1,4),1,for(atom(hasCategory(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(4))),3) preference(1,(1,6),1,for(atom(hasPrep(7))),3) preference(1,(1,12),1,for(atom(hasCost(4))),3) preference(1,less(weight)) output(84,better,61) output(84,better,18) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,71) output(39,better,18) output(39,better,89) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(69,better,61) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(21,better,61) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(30,better,7) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,7) output(32,better,71) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,18) output(47,better,89) output(47,better,62) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,18) output(17,better,89) output(17,better,62) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(8,worse,67) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(61,worse,39) output(61,worse,47) output(61,worse,30) output(61,worse,32) output(61,worse,17) output(7,worse,30) output(7,worse,32) output(7,worse,17) output(30,eq,32) output(7,eq,71) output(84,eq,69) output(32,eq,17) output(7,eq,42) output(42,eq,18) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(42,eq,89) output(7,eq,18) output(61,eq,7) output(69,eq,47) output(21,eq,47) output(30,eq,17) output(61,eq,18) output(39,eq,30) output(69,eq,39) output(21,eq,39) output(84,eq,39) output(17,eq,30) output(47,eq,30) output(69,eq,30) output(21,eq,30) output(39,eq,32) output(18,eq,7) output(61,eq,71) output(39,eq,17) output(84,eq,47) output(61,eq,42) output(7,eq,89) output(61,eq,89) output(42,eq,62) output(7,eq,62) output(61,eq,62) output(18,eq,18) output(18,eq,42) output(42,eq,42) output(17,eq,17) output(47,eq,17) output(69,eq,17) output(21,eq,17) output(84,eq,17) output(18,eq,71) output(42,eq,71) output(42,eq,7) output(7,eq,7) output(69,eq,32) output(21,eq,32) output(84,eq,32) output(17,eq,32) output(47,eq,32) output(32,eq,32) output(84,eq,30) output(32,eq,30) output(30,eq,30)
Optimization: 71 7
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(3))),3) preference(1,(1,3),1,for(atom(hasIngredient(8))),3) preference(1,(1,4),1,for(atom(hasCategory(2))),3) preference(1,(1,5),1,for(atom(hasDifficulty(4))),3) preference(1,(1,6),1,for(atom(hasIngredient(2))),3) preference(1,(1,12),1,for(atom(hasCost(4))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),3) preference(1,less(weight)) output(84,better,61) output(84,better,18) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,71) output(84,better,32) output(39,better,18) output(39,better,89) output(39,better,32) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(69,better,61) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(21,better,61) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,32) output(30,better,32) output(30,better,7) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,17) output(8,worse,67) output(42,worse,30) output(42,worse,17) output(61,worse,39) output(61,worse,47) output(61,worse,30) output(61,worse,17) output(7,worse,30) output(7,worse,17) output(32,worse,17) output(32,worse,30) output(7,eq,71) output(84,eq,69) output(7,eq,42) output(42,eq,18) output(18,eq,89) output(89,eq,62) output(18,eq,62) output(42,eq,89) output(7,eq,18) output(61,eq,7) output(69,eq,47) output(21,eq,47) output(30,eq,17) output(61,eq,18) output(32,eq,7) output(18,eq,32) output(39,eq,30) output(69,eq,39) output(21,eq,39) output(84,eq,39) output(17,eq,30) output(47,eq,30) output(69,eq,30) output(21,eq,30) output(42,eq,32) output(7,eq,32) output(61,eq,32) output(18,eq,7) output(61,eq,71) output(32,eq,71) output(39,eq,17) output(84,eq,47) output(61,eq,42) output(32,eq,42) output(32,eq,18) output(7,eq,89) output(61,eq,89) output(42,eq,62) output(7,eq,62) output(61,eq,62) output(32,eq,62) output(32,eq,89) output(18,eq,18) output(18,eq,42) output(42,eq,42) output(17,eq,17) output(47,eq,17) output(69,eq,17) output(21,eq,17) output(84,eq,17) output(18,eq,71) output(42,eq,71) output(42,eq,7) output(7,eq,7) output(32,eq,32) output(84,eq,30) output(30,eq,30)
Optimization: 70 8
Progression : [ 8;70] (Error: 7.75)
Progression : [ 9;70] (Error: 6.77778)
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(7))),2) preference(1,(1,2),1,for(atom(hasPrep(0))),6) preference(1,(1,3),1,for(atom(hasPrepTime(3))),6) preference(1,(1,4),1,for(atom(hasIngredient(12))),6) preference(1,(1,5),1,for(atom(hasIngredient(9))),6) preference(1,(1,6),1,for(atom(hasCost(2))),5) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasDifficulty(2))),7) preference(1,(1,9),1,for(atom(hasDifficulty(1))),2) preference(1,(1,10),1,for(atom(hasPrepTime(2))),6) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasCategory(1))),6) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(18,better,30) output(18,better,62) output(18,better,32) output(18,better,7) output(18,better,17) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(42,better,18) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,62) output(61,better,17) output(69,better,39) output(69,better,7) output(69,better,62) output(69,better,17) output(69,better,32) output(89,better,62) output(7,better,62) output(21,better,39) output(21,better,62) output(30,better,32) output(30,better,17) output(30,better,7) output(30,better,62) output(32,better,62) output(47,better,7) output(47,better,71) output(47,better,30) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,62) output(17,better,32) output(18,worse,89) output(18,worse,42) output(8,worse,67) output(39,worse,18) output(39,worse,89) output(39,worse,30) output(39,worse,32) output(39,worse,17) output(39,worse,62) output(39,worse,42) output(39,worse,71) output(39,worse,7) output(42,worse,89) output(61,worse,89) output(69,worse,61) output(69,worse,47) output(69,worse,18) output(69,worse,42) output(69,worse,89) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,89) output(7,worse,17) output(21,worse,61) output(21,worse,47) output(21,worse,30) output(21,worse,71) output(21,worse,18) output(21,worse,7) output(21,worse,42) output(21,worse,89) output(21,worse,17) output(21,worse,32) output(30,worse,42) output(30,worse,89) output(30,worse,18) output(32,worse,17) output(32,worse,71) output(32,worse,42) output(32,worse,18) output(32,worse,89) output(32,worse,30) output(47,worse,42) output(47,worse,89) output(17,worse,42) output(17,worse,71) output(17,worse,30) output(17,worse,18) output(17,worse,89) output(32,eq,7) output(69,eq,30) output(7,eq,32) output(69,eq,71) output(30,eq,71) output(47,eq,18) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 63 14
Progression : [10;63] (Error: 5.3)
Progression : [11;63] (Error: 4.72727)
Answer: 11
preference(1,(1,1),1,for(atom(hasCategory(3))),1) preference(1,(1,2),1,for(atom(hasCost(2))),6) preference(1,(1,3),1,for(atom(hasIngredient(10))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),6) preference(1,(1,5),1,for(atom(hasIngredient(3))),7) preference(1,(1,10),1,for(atom(hasCost(3))),2) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,13),1,for(atom(hasCost(4))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),8) preference(1,less(weight)) output(18,better,62) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(39,better,18) output(39,better,62) output(39,better,42) output(39,better,7) output(42,better,62) output(61,better,18) output(61,better,42) output(61,better,62) output(69,better,61) output(69,better,39) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(89,better,62) output(7,better,42) output(7,better,18) output(7,better,62) output(21,better,61) output(21,better,39) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(30,better,32) output(30,better,7) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,7) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,89) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,71) output(84,worse,69) output(84,worse,47) output(84,worse,17) output(84,worse,71) output(84,worse,32) output(84,worse,30) output(8,worse,67) output(39,worse,30) output(39,worse,32) output(39,worse,17) output(39,worse,71) output(42,worse,89) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,71) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,30) output(61,worse,32) output(61,worse,71) output(61,worse,89) output(61,worse,17) output(69,worse,47) output(69,worse,30) output(69,worse,71) output(69,worse,17) output(7,worse,71) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,17) output(21,worse,47) output(21,worse,30) output(21,worse,71) output(21,worse,17) output(21,worse,32) output(32,worse,17) output(32,worse,71) output(32,worse,30) output(42,eq,18) output(39,eq,89) output(61,eq,7) output(30,eq,17) output(17,eq,71) output(17,eq,30) output(30,eq,71) output(18,eq,18) output(18,eq,42) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 61 9
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(0))),4) preference(1,(1,2),1,for(atom(hasPrepTime(2))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),2) preference(1,(1,4),1,for(atom(hasIngredient(9))),1) preference(1,(1,5),1,for(atom(hasDifficulty(2))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasCost(2))),7) preference(1,(1,8),1,for(atom(hasCost(1))),8) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasCategory(4))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),7) preference(1,(1,12),1,for(atom(hasIngredient(10))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),2) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,62) output(18,better,32) output(18,better,7) output(18,better,17) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,89) output(39,better,30) output(39,better,32) output(39,better,17) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,32) output(42,better,62) output(42,better,7) output(61,better,7) output(69,better,61) output(69,better,30) output(69,better,7) output(69,better,42) output(69,better,62) output(69,better,32) output(89,better,62) output(21,better,61) output(21,better,30) output(21,better,71) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,7) output(30,better,62) output(32,better,7) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,30) output(17,better,62) output(17,better,32) output(84,worse,39) output(84,worse,18) output(84,worse,47) output(8,worse,67) output(39,worse,18) output(42,worse,18) output(42,worse,89) output(42,worse,17) output(42,worse,71) output(61,worse,39) output(61,worse,47) output(61,worse,18) output(61,worse,30) output(61,worse,71) output(61,worse,42) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,39) output(69,worse,71) output(69,worse,18) output(69,worse,89) output(69,worse,17) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,62) output(7,worse,17) output(21,worse,47) output(21,worse,18) output(30,worse,17) output(30,worse,71) output(30,worse,89) output(30,worse,18) output(32,worse,17) output(32,worse,71) output(32,worse,42) output(32,worse,18) output(32,worse,62) output(32,worse,89) output(32,worse,30) output(17,worse,71) output(17,worse,18) output(17,worse,89) output(42,eq,30) output(21,eq,39) output(61,eq,32) output(30,eq,42) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 58 14
Answer: 13
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),2) preference(1,(1,3),1,for(atom(hasCost(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(4))),3) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,11),1,for(atom(hasCategory(5))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,32) output(39,better,62) output(39,better,42) output(42,better,18) output(61,better,18) output(69,better,61) output(69,better,39) output(69,better,30) output(69,better,18) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(89,better,62) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,42) output(32,better,18) output(32,better,62) output(47,better,7) output(47,better,42) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,47) output(84,worse,17) output(84,worse,71) output(8,worse,67) output(39,worse,17) output(39,worse,71) output(39,worse,7) output(42,worse,89) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,71) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,30) output(61,worse,32) output(61,worse,71) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,71) output(69,worse,17) output(7,worse,71) output(7,worse,17) output(30,worse,17) output(30,worse,7) output(30,worse,71) output(32,worse,17) output(32,worse,7) output(32,worse,71) output(32,worse,30) output(47,worse,71) output(17,worse,71) output(84,eq,69) output(39,eq,30) output(69,eq,7) output(84,eq,7) output(61,eq,42) output(32,eq,89) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 57 14
Answer: 14
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),2) preference(1,(1,3),1,for(atom(hasCost(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(4))),3) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasIngredient(8))),4) preference(1,(1,11),1,for(atom(hasCategory(5))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,32) output(39,better,62) output(39,better,42) output(42,better,18) output(61,better,18) output(69,better,61) output(69,better,39) output(69,better,30) output(69,better,18) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(89,better,62) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,47) output(84,worse,7) output(84,worse,17) output(84,worse,71) output(8,worse,67) output(39,worse,17) output(39,worse,71) output(39,worse,7) output(42,worse,89) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,71) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,30) output(61,worse,32) output(61,worse,71) output(61,worse,42) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,71) output(69,worse,7) output(69,worse,17) output(7,worse,71) output(7,worse,17) output(30,worse,17) output(30,worse,7) output(30,worse,71) output(32,worse,17) output(32,worse,7) output(32,worse,71) output(32,worse,30) output(84,eq,69) output(17,eq,71) output(39,eq,30) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 55 14
Answer: 15
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),2) preference(1,(1,3),1,for(atom(hasCost(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(4))),3) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasIngredient(8))),8) preference(1,(1,11),1,for(atom(hasCategory(5))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,32) output(39,better,62) output(39,better,42) output(39,better,71) output(42,better,18) output(61,better,18) output(69,better,61) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(89,better,62) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,89) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,47) output(84,worse,7) output(84,worse,17) output(8,worse,67) output(39,worse,17) output(39,worse,7) output(42,worse,89) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,71) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,30) output(61,worse,32) output(61,worse,71) output(61,worse,42) output(61,worse,89) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,7) output(69,worse,17) output(7,worse,17) output(30,worse,17) output(30,worse,7) output(32,worse,17) output(32,worse,7) output(32,worse,30) output(84,eq,69) output(39,eq,30) output(32,eq,71) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 49 14
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),2) preference(1,(1,3),1,for(atom(hasCost(4))),4) preference(1,(1,4),1,for(atom(hasPrepTime(2))),8) preference(1,(1,5),1,for(atom(hasIngredient(4))),3) preference(1,(1,6),1,for(atom(hasCost(1))),7) preference(1,(1,7),1,for(atom(hasIngredient(12))),3) preference(1,(1,8),1,for(atom(hasCategory(1))),1) preference(1,(1,9),1,for(atom(hasCategory(3))),5) preference(1,(1,10),1,for(atom(hasDifficulty(1))),8) preference(1,(1,11),1,for(atom(hasCategory(5))),1) preference(1,(1,12),1,for(atom(hasPrepTime(1))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),7) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(18,better,89) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,32) output(39,better,62) output(39,better,42) output(39,better,71) output(42,better,18) output(42,better,89) output(61,better,18) output(61,better,89) output(69,better,61) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,32) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,30) output(7,better,32) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(18,worse,42) output(18,worse,71) output(84,worse,47) output(84,worse,7) output(84,worse,17) output(8,worse,67) output(39,worse,17) output(39,worse,7) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,71) output(42,worse,7) output(61,worse,39) output(61,worse,47) output(61,worse,7) output(61,worse,30) output(61,worse,32) output(61,worse,71) output(61,worse,42) output(61,worse,62) output(61,worse,17) output(69,worse,47) output(69,worse,7) output(69,worse,17) output(89,worse,62) output(7,worse,17) output(30,worse,17) output(30,worse,7) output(32,worse,17) output(32,worse,7) output(32,worse,30) output(84,eq,69) output(39,eq,30) output(32,eq,71) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 47 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrep(0))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(9))),7) preference(1,(1,4),1,for(atom(hasPrepTime(1))),6) preference(1,(1,5),1,for(atom(hasPrep(6))),2) preference(1,(1,6),1,for(atom(hasIngredient(4))),5) preference(1,(1,8),1,for(atom(hasDifficulty(2))),1) preference(1,(1,9),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasPrep(5))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(18,better,30) output(18,better,32) output(18,better,7) output(18,better,42) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(8,better,67) output(39,better,18) output(39,better,30) output(39,better,32) output(39,better,17) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,61) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,7) output(30,better,42) output(32,better,7) output(32,better,42) output(47,better,7) output(47,better,42) output(47,better,30) output(47,better,18) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,30) output(17,better,18) output(17,better,32) output(18,worse,89) output(18,worse,62) output(18,worse,17) output(18,worse,71) output(84,worse,69) output(39,worse,89) output(39,worse,62) output(42,worse,18) output(42,worse,89) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,71) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,62) output(7,worse,17) output(30,worse,17) output(30,worse,71) output(30,worse,62) output(30,worse,89) output(30,worse,18) output(32,worse,17) output(32,worse,71) output(32,worse,18) output(32,worse,62) output(32,worse,89) output(32,worse,30) output(47,worse,71) output(47,worse,89) output(47,worse,62) output(47,worse,17) output(17,worse,89) output(17,worse,62) output(89,eq,62) output(17,eq,71) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 47 11
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasCategory(3))),3) preference(1,(1,3),1,for(atom(hasIngredient(9))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),3) preference(1,(1,5),1,for(atom(hasIngredient(7))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),7) preference(1,(1,7),1,for(atom(hasPrepTime(3))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasCategory(4))),6) preference(1,(1,10),1,for(atom(hasPrepTime(2))),4) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasIngredient(8))),4) preference(1,(1,14),1,for(atom(hasPrep(0))),6) preference(1,less(weight)) output(18,better,30) output(18,better,62) output(18,better,7) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,62) output(39,better,7) output(42,better,30) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,62) output(69,better,32) output(89,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,7) output(30,better,62) output(32,better,7) output(32,better,71) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,30) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,62) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,62) output(17,better,32) output(18,worse,89) output(18,worse,32) output(18,worse,17) output(8,worse,67) output(39,worse,18) output(39,worse,89) output(39,worse,30) output(39,worse,32) output(39,worse,17) output(39,worse,42) output(39,worse,71) output(42,worse,18) output(42,worse,89) output(42,worse,32) output(42,worse,17) output(61,worse,89) output(69,worse,61) output(69,worse,89) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,17) output(30,worse,32) output(30,worse,17) output(30,worse,42) output(30,worse,89) output(30,worse,18) output(32,worse,17) output(32,worse,89) output(47,worse,89) output(47,worse,17) output(47,worse,32) output(17,worse,89) output(30,eq,71) output(47,eq,18) output(7,eq,62) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(69,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 46 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(7))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(1))),5) preference(1,(1,6),1,for(atom(hasPrep(4))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasIngredient(3))),2) preference(1,(1,9),1,for(atom(hasIngredient(8))),4) preference(1,(1,10),1,for(atom(hasPrepTime(2))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,62) output(18,better,7) output(18,better,17) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,89) output(39,better,30) output(39,better,17) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,30) output(42,better,17) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,7) output(61,better,30) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,71) output(69,better,7) output(69,better,62) output(69,better,17) output(89,better,62) output(7,better,71) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,17) output(30,better,7) output(30,better,71) output(30,better,62) output(32,better,17) output(32,better,7) output(32,better,71) output(32,better,42) output(32,better,62) output(32,better,89) output(32,better,30) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,89) output(47,better,62) output(47,better,17) output(17,better,71) output(17,better,62) output(8,worse,67) output(39,worse,18) output(39,worse,32) output(42,worse,18) output(42,worse,32) output(69,worse,61) output(69,worse,47) output(69,worse,39) output(69,worse,18) output(69,worse,42) output(69,worse,89) output(69,worse,32) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(30,worse,32) output(30,worse,42) output(30,worse,89) output(30,worse,18) output(17,worse,42) output(17,worse,30) output(17,worse,18) output(17,worse,89) output(17,worse,32) output(17,eq,7) output(61,eq,47) output(42,eq,89) output(61,eq,18) output(18,eq,32) output(69,eq,30) output(61,eq,32) output(47,eq,18) output(32,eq,18) output(18,eq,18) output(42,eq,42) output(7,eq,17) output(17,eq,17) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 43 14
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(6))),3) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(7))),4) preference(1,(1,4),1,for(atom(hasPrep(0))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),6) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasIngredient(8))),4) preference(1,(1,10),1,for(atom(hasIngredient(3))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,12),1,for(atom(hasCost(3))),7) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,62) output(18,better,7) output(18,better,17) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,89) output(39,better,30) output(39,better,17) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,30) output(42,better,17) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,7) output(61,better,30) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,30) output(69,better,71) output(69,better,7) output(69,better,62) output(69,better,17) output(89,better,62) output(7,better,71) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,17) output(30,better,7) output(30,better,71) output(30,better,62) output(32,better,17) output(32,better,7) output(32,better,71) output(32,better,42) output(32,better,62) output(32,better,89) output(32,better,30) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,89) output(47,better,62) output(47,better,17) output(17,better,71) output(17,better,62) output(8,worse,67) output(39,worse,18) output(39,worse,32) output(42,worse,18) output(42,worse,32) output(69,worse,61) output(69,worse,47) output(69,worse,39) output(69,worse,18) output(69,worse,32) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(30,worse,32) output(30,worse,42) output(30,worse,89) output(30,worse,18) output(17,worse,42) output(17,worse,30) output(17,worse,18) output(17,worse,89) output(17,worse,32) output(17,eq,7) output(61,eq,47) output(42,eq,89) output(61,eq,18) output(18,eq,32) output(61,eq,32) output(69,eq,42) output(47,eq,18) output(32,eq,18) output(69,eq,89) output(18,eq,18) output(42,eq,42) output(7,eq,17) output(17,eq,17) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 42 14
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(9))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasCategory(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasIngredient(8))),7) preference(1,(1,10),1,for(atom(hasCost(4))),3) preference(1,(1,11),1,for(atom(hasIngredient(3))),6) preference(1,(1,12),1,for(atom(hasDifficulty(3))),3) preference(1,(1,13),1,for(atom(hasCost(3))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,62) output(18,better,32) output(18,better,7) output(18,better,42) output(18,better,71) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,62) output(39,better,71) output(39,better,7) output(42,better,89) output(42,better,30) output(42,better,32) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(89,better,62) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,32) output(30,better,32) output(30,better,7) output(30,better,71) output(30,better,62) output(30,better,89) output(32,better,7) output(32,better,71) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,71) output(47,better,89) output(47,better,62) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,17) output(8,worse,67) output(39,worse,18) output(39,worse,89) output(39,worse,30) output(39,worse,32) output(39,worse,17) output(39,worse,42) output(42,worse,18) output(42,worse,17) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,62) output(7,worse,17) output(21,worse,61) output(21,worse,17) output(30,worse,17) output(30,worse,42) output(30,worse,18) output(32,worse,17) output(32,worse,42) output(32,worse,18) output(32,worse,30) output(47,worse,42) output(47,worse,18) output(47,worse,17) output(69,eq,61) output(84,eq,69) output(84,eq,61) output(47,eq,30) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(32,eq,32) output(30,eq,30)
Optimization: 40 14
Answer: 22
preference(1,(1,1),1,for(atom(hasIngredient(10))),8) preference(1,(1,2),1,for(atom(hasCategory(4))),6) preference(1,(1,3),1,for(atom(hasIngredient(9))),4) preference(1,(1,4),1,for(atom(hasPrep(5))),4) preference(1,(1,5),1,for(atom(hasIngredient(4))),7) preference(1,(1,6),1,for(atom(hasCategory(3))),3) preference(1,(1,7),1,for(atom(hasDifficulty(2))),5) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasIngredient(8))),7) preference(1,(1,10),1,for(atom(hasCost(4))),3) preference(1,(1,11),1,for(atom(hasPrepTime(1))),6) preference(1,(1,12),1,for(atom(hasDifficulty(3))),3) preference(1,(1,13),1,for(atom(hasCost(3))),1) preference(1,(1,14),1,for(atom(hasPrep(1))),5) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,62) output(18,better,32) output(18,better,7) output(18,better,17) output(18,better,42) output(18,better,71) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,89) output(39,better,30) output(39,better,32) output(39,better,17) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,89) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(89,better,62) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,32) output(30,better,17) output(30,better,7) output(30,better,71) output(30,better,62) output(30,better,89) output(32,better,7) output(32,better,71) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,71) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,71) output(17,better,89) output(17,better,62) output(8,worse,67) output(42,worse,18) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,62) output(7,worse,17) output(21,worse,61) output(30,worse,42) output(30,worse,18) output(32,worse,42) output(32,worse,18) output(32,worse,30) output(47,worse,42) output(47,worse,18) output(17,worse,42) output(17,worse,30) output(17,worse,18) output(69,eq,61) output(84,eq,69) output(39,eq,18) output(32,eq,17) output(84,eq,61) output(47,eq,30) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(17,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 34 14
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasCategory(5))),3) preference(1,(1,3),1,for(atom(hasDifficulty(1))),6) preference(1,(1,4),1,for(atom(hasIngredient(8))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,7),1,for(atom(hasCategory(4))),7) preference(1,(1,8),1,for(atom(hasIngredient(9))),4) preference(1,(1,9),1,for(atom(hasPrep(0))),3) preference(1,(1,10),1,for(atom(hasCost(2))),8) preference(1,(1,11),1,for(atom(hasIngredient(7))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(18,better,30) output(18,better,89) output(18,better,32) output(18,better,7) output(18,better,17) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,30) output(39,better,32) output(39,better,17) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,18) output(42,better,89) output(42,better,30) output(42,better,32) output(42,better,17) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,61) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,7) output(30,better,71) output(32,better,7) output(32,better,71) output(32,better,89) output(32,better,30) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(47,better,32) output(17,better,7) output(17,better,71) output(17,better,30) output(17,better,89) output(18,worse,42) output(8,worse,67) output(89,worse,62) output(7,worse,71) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,89) output(7,worse,62) output(7,worse,17) output(30,worse,32) output(30,worse,17) output(30,worse,42) output(30,worse,62) output(30,worse,89) output(30,worse,18) output(32,worse,42) output(32,worse,18) output(32,worse,62) output(17,worse,42) output(17,worse,18) output(17,worse,62) output(32,eq,17) output(18,eq,62) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(17,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 32 14
Answer: 24
preference(1,(1,1),1,for(atom(hasPrep(6))),5) preference(1,(1,2),1,for(atom(hasCost(3))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),8) preference(1,(1,5),1,for(atom(hasPrepTime(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(10))),4) preference(1,(1,7),1,for(atom(hasIngredient(7))),8) preference(1,(1,8),1,for(atom(hasDifficulty(1))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasCategory(1))),4) preference(1,(1,11),1,for(atom(hasPrep(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(4))),4) preference(1,less(weight)) output(18,better,89) output(18,better,62) output(18,better,7) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(39,better,18) output(39,better,89) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,18) output(42,better,89) output(42,better,62) output(42,better,71) output(42,better,7) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(7,better,71) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,7) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,17) output(32,better,7) output(32,better,71) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(32,better,30) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,17) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(18,worse,30) output(18,worse,32) output(18,worse,17) output(18,worse,42) output(8,worse,67) output(39,worse,32) output(39,worse,17) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(69,worse,61) output(89,worse,62) output(7,worse,42) output(7,worse,18) output(7,worse,30) output(7,worse,32) output(7,worse,62) output(7,worse,17) output(30,worse,32) output(30,worse,17) output(17,worse,32) output(21,eq,61) output(39,eq,30) output(7,eq,89) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(7,eq,7) output(47,eq,32) output(32,eq,32) output(30,eq,30)
Optimization: 31 13
Answer: 25
preference(1,(1,1),1,for(atom(hasCategory(5))),3) preference(1,(1,2),1,for(atom(hasIngredient(3))),7) preference(1,(1,3),1,for(atom(hasCost(4))),1) preference(1,(1,4),1,for(atom(hasIngredient(9))),2) preference(1,(1,5),1,for(atom(hasIngredient(10))),3) preference(1,(1,6),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(4))),8) preference(1,(1,11),1,for(atom(hasCategory(1))),3) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasDifficulty(1))),8) preference(1,(1,14),1,for(atom(hasPrep(6))),4) preference(1,less(weight)) output(18,better,89) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(8,better,67) output(39,better,18) output(39,better,89) output(39,better,30) output(39,better,32) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,89) output(42,better,71) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,71) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,62) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(42,worse,18) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,7) output(89,worse,62) output(7,worse,17) output(30,worse,17) output(32,worse,17) output(69,eq,61) output(30,eq,32) output(32,eq,7) output(7,eq,30) output(7,eq,32) output(30,eq,7) output(39,eq,17) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(47,eq,17) output(7,eq,7) output(32,eq,32) output(32,eq,30) output(30,eq,30)
Optimization: 30 14
Answer: 26
preference(1,(1,1),1,for(atom(hasCost(4))),6) preference(1,(1,2),1,for(atom(hasIngredient(3))),7) preference(1,(1,3),1,for(atom(hasIngredient(9))),2) preference(1,(1,4),1,for(atom(hasCategory(3))),4) preference(1,(1,5),1,for(atom(hasIngredient(10))),3) preference(1,(1,6),1,for(atom(hasCost(3))),5) preference(1,(1,7),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasCategory(5))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),7) preference(1,(1,10),1,for(atom(hasIngredient(4))),8) preference(1,(1,11),1,for(atom(hasCost(5))),4) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrep(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),8) preference(1,less(weight)) output(18,better,89) output(18,better,62) output(18,better,42) output(18,better,71) output(84,better,69) output(84,better,61) output(84,better,39) output(84,better,18) output(84,better,47) output(84,better,7) output(84,better,62) output(84,better,89) output(84,better,42) output(84,better,17) output(84,better,71) output(84,better,32) output(84,better,30) output(8,better,67) output(39,better,18) output(39,better,89) output(39,better,30) output(39,better,32) output(39,better,62) output(39,better,42) output(39,better,71) output(39,better,7) output(42,better,89) output(42,better,71) output(61,better,39) output(61,better,47) output(61,better,7) output(61,better,18) output(61,better,30) output(61,better,32) output(61,better,71) output(61,better,42) output(61,better,89) output(61,better,62) output(61,better,17) output(69,better,47) output(69,better,39) output(69,better,30) output(69,better,71) output(69,better,18) output(69,better,7) output(69,better,42) output(69,better,89) output(69,better,62) output(69,better,17) output(69,better,32) output(7,better,71) output(7,better,42) output(7,better,18) output(7,better,89) output(7,better,62) output(21,better,61) output(21,better,47) output(21,better,39) output(21,better,30) output(21,better,71) output(21,better,18) output(21,better,7) output(21,better,42) output(21,better,89) output(21,better,62) output(21,better,17) output(21,better,32) output(30,better,71) output(30,better,42) output(30,better,62) output(30,better,89) output(30,better,18) output(32,better,71) output(32,better,42) output(32,better,18) output(32,better,62) output(32,better,89) output(47,better,7) output(47,better,42) output(47,better,71) output(47,better,30) output(47,better,18) output(47,better,89) output(47,better,62) output(47,better,32) output(17,better,7) output(17,better,42) output(17,better,71) output(17,better,30) output(17,better,18) output(17,better,89) output(17,better,62) output(17,better,32) output(18,worse,30) output(18,worse,32) output(18,worse,7) output(18,worse,17) output(42,worse,18) output(42,worse,30) output(42,worse,32) output(42,worse,17) output(42,worse,62) output(42,worse,7) output(89,worse,62) output(7,worse,17) output(30,worse,17) output(32,worse,17) output(69,eq,61) output(30,eq,32) output(32,eq,7) output(7,eq,30) output(7,eq,32) output(30,eq,7) output(39,eq,17) output(18,eq,18) output(42,eq,42) output(17,eq,17) output(47,eq,17) output(7,eq,7) output(32,eq,32) output(32,eq,30) output(30,eq,30)
Optimization: 29 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.061 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 26+
  Optimum    : unknown
Optimization : 29 14
Bounds       : [11;29] [0;14]
Calls        : 1
Time         : 597.753s (Solving: 593.65s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2378.175s
Threads      : 4        (Winner: 4)

Choices      : 19407984 (Domain: 747176)
Conflicts    : 10237084 (Analyzed: 10237079)
Restarts     : 14229    (Average: 719.45 Last: 503783)
Model-Level  : 367.2   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 10295913 (Deleted: 9738615)
  Binary     : 331      (Ratio:   0.00%)
  Ternary    : 3793     (Ratio:   0.04%)
  Conflict   : 10237079 (Average Length:  389.7 Ratio:  99.43%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 58834    (Average Length:   34.3 Ratio:   0.57%) 
  Distributed: 19811    (Ratio:   0.19% Average LBD: 3.70) 
  Integrated : 59433    (Ratio: 300.00% Unit: 101 Average Jumps: 30.48)
Backjumps    : 10237079 (Average:  1.66 Max: 1181 Sum: 16943737)
  Executed   : 10237067 (Average:  1.66 Max: 1181 Sum: 16943080 Ratio: 100.00%)
  Bounded    : 12       (Average: 54.75 Max: 113 Sum:    657 Ratio:   0.00%)

Rules        : 1251054 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 22574   
Bodies       : 19865   
  Sum        : 238     
  Count      : 14      
Equivalences : 16730    (Atom=Atom: 1221 Body=Body: 508 Other: 15001)
Tight        : Yes
Variables    : 17411    (Eliminated:    0 Frozen: 8087)
Constraints  : 1264986  (Binary:  99.0% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCategory(2)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCategory(2)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  3 :: atom(hasIngredient(2)) ; 
  3 :: atom(hasCost(4)) ; 
  3 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(1)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  6 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrep(5)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(3)) ; 
  6 :: atom(hasCost(2)) ; 
  5 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(1)) ; 
  6 :: atom(hasCost(3)) ; 
  2 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCategory(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrepTime(3)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(9)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasPrep(6)) ; 
  5 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasPrep(4)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) ; 
  4 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrep(6)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrep(4)) ; 
  7 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCost(4)) ; 
  6 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  6 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(5)) ; 
  7 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(8)) ; 
  3 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasCategory(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(8)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  4 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrep(6)) ; 
  1 :: atom(hasCost(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  5 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(5)) ; 
  7 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(4)) ; 
  7 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasCategory(5)) ; 
  7 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(5)) ; 
  2 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(1)) 
}.
