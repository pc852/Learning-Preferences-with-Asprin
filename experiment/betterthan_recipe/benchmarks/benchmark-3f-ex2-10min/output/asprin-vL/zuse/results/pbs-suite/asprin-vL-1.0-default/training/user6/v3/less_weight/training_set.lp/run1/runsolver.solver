asprin_vL version 1.0
Reading from stdin
-:1235:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1245:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1260:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1341:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1602:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1615:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1792:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1921:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1993:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1997:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1997:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2003:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2102:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2128:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2248:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2282:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1152:1-16: info: no atoms over signature occur in program:
  output/3

-:1144:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1145:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(46,eq,60) output(78,eq,52) output(52,eq,33) output(33,eq,32) output(7,eq,39) output(39,eq,79) output(18,eq,7) output(42,eq,90) output(90,eq,51) output(51,eq,78) output(78,eq,31) output(31,eq,79) output(72,eq,23) output(78,eq,79) output(51,eq,31) output(90,eq,78) output(42,eq,51) output(7,eq,79) output(18,eq,39) output(52,eq,32) output(78,eq,33) output(51,eq,52) output(90,eq,52) output(42,eq,52) output(51,eq,33) output(90,eq,33) output(78,eq,32) output(51,eq,32) output(18,eq,79) output(42,eq,78) output(90,eq,31) output(42,eq,31) output(51,eq,79) output(90,eq,79) output(42,eq,79) output(90,eq,32) output(42,eq,32) output(42,eq,33)
Optimization: 38 0
Answer: 2
preference(1,(1,14),1,for(atom(hasCost(1))),4) preference(1,less(weight)) output(18,better,79) output(46,better,60) output(51,better,31) output(51,better,79) output(39,better,79) output(42,better,31) output(42,better,79) output(7,better,79) output(78,better,31) output(78,better,79) output(90,better,31) output(90,better,79) output(78,eq,52) output(52,eq,33) output(33,eq,32) output(7,eq,39) output(18,eq,7) output(42,eq,90) output(90,eq,51) output(51,eq,78) output(31,eq,79) output(72,eq,23) output(90,eq,78) output(42,eq,51) output(18,eq,39) output(52,eq,32) output(78,eq,33) output(51,eq,52) output(90,eq,52) output(42,eq,52) output(51,eq,33) output(90,eq,33) output(78,eq,32) output(51,eq,32) output(42,eq,78) output(90,eq,32) output(42,eq,32) output(42,eq,33)
Optimization: 26 1
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,79) output(72,better,23) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,33) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(33,worse,32) output(52,worse,32) output(78,worse,32) output(46,eq,60) output(78,eq,52) output(52,eq,33) output(7,eq,39) output(39,eq,79) output(18,eq,7) output(42,eq,90) output(90,eq,51) output(78,eq,31) output(31,eq,79) output(78,eq,79) output(42,eq,51) output(7,eq,79) output(18,eq,39) output(78,eq,33) output(51,eq,32) output(18,eq,79) output(90,eq,32) output(42,eq,32)
Optimization: 22 14
Answer: 4
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(1))),6) preference(1,(1,3),1,for(atom(hasIngredient(4))),8) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasIngredient(9))),2) preference(1,(1,6),1,for(atom(hasIngredient(10))),4) preference(1,(1,7),1,for(atom(hasIngredient(3))),4) preference(1,(1,8),1,for(atom(hasPrep(5))),7) preference(1,(1,9),1,for(atom(hasPrep(1))),2) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrep(7))),8) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasCost(4))),6) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(72,better,23) output(31,better,79) output(39,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(7,better,39) output(7,better,79) output(33,better,32) output(52,better,33) output(52,better,32) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32)
Optimization: 0 13
Progression : 0 [ 1;13] (Error: 12)
Answer: 5
preference(1,(1,2),1,for(atom(hasIngredient(3))),4) preference(1,(1,3),1,for(atom(hasDifficulty(1))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),4) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),5) preference(1,(1,11),1,for(atom(hasIngredient(12))),1) preference(1,(1,12),1,for(atom(hasCategory(4))),8) preference(1,(1,13),1,for(atom(hasCost(1))),7) preference(1,(1,14),1,for(atom(hasPrepTime(2))),3) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(72,better,23) output(31,better,79) output(39,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(7,better,39) output(7,better,79) output(33,better,32) output(52,better,33) output(52,better,32) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32)
Optimization: 0 12
Progression : 0 [ 2;12] (Error: 5)
Answer: 6
preference(1,(1,1),1,for(atom(hasIngredient(10))),5) preference(1,(1,2),1,for(atom(hasDifficulty(4))),4) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(5))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasCost(4))),6) preference(1,(1,9),1,for(atom(hasIngredient(12))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),2) preference(1,(1,11),1,for(atom(hasDifficulty(1))),8) preference(1,(1,13),1,for(atom(hasIngredient(7))),6) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(72,better,23) output(31,better,79) output(39,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(7,better,39) output(7,better,79) output(33,better,32) output(52,better,33) output(52,better,32) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32)
Optimization: 0 11
Answer: 7
preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,3),1,for(atom(hasPrep(5))),5) preference(1,(1,4),1,for(atom(hasCost(4))),4) preference(1,(1,5),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasPrep(7))),8) preference(1,(1,9),1,for(atom(hasIngredient(3))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),2) preference(1,(1,11),1,for(atom(hasIngredient(10))),1) preference(1,(1,13),1,for(atom(hasCategory(4))),1) preference(1,less(weight)) output(18,better,7) output(18,better,39) output(18,better,79) output(46,better,60) output(51,better,78) output(51,better,31) output(51,better,52) output(51,better,33) output(51,better,32) output(51,better,79) output(72,better,23) output(31,better,79) output(39,better,79) output(42,better,90) output(42,better,51) output(42,better,52) output(42,better,78) output(42,better,31) output(42,better,79) output(42,better,32) output(42,better,33) output(7,better,39) output(7,better,79) output(33,better,32) output(52,better,33) output(52,better,32) output(78,better,52) output(78,better,31) output(78,better,79) output(78,better,33) output(78,better,32) output(90,better,51) output(90,better,78) output(90,better,52) output(90,better,33) output(90,better,31) output(90,better,79) output(90,better,32)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.068 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 597.801s (Solving: 595.05s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2381.367s
Threads      : 4        (Winner: 4)

Choices      : 10408587 (Domain: 626812)
Conflicts    : 7140920  (Analyzed: 7140918)
Restarts     : 7341     (Average: 972.74 Last: 527489)
Model-Level  : 65.0    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 7152992  (Deleted: 6887241)
  Binary     : 1007     (Ratio:   0.01%)
  Ternary    : 1597     (Ratio:   0.02%)
  Conflict   : 7140918  (Average Length:  513.8 Ratio:  99.83%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 12074    (Average Length:   73.1 Ratio:   0.17%) 
  Distributed: 4026     (Ratio:   0.06% Average LBD: 3.50) 
  Integrated : 12078    (Ratio: 300.00% Unit: 10 Average Jumps: 2.80)
Backjumps    : 7140918  (Average:  1.33 Max: 838 Sum: 9502532)
  Executed   : 7140917  (Average:  1.33 Max: 838 Sum: 9502505 Ratio: 100.00%)
  Bounded    : 1        (Average: 27.00 Max:  27 Sum:     27 Ratio:   0.00%)

Rules        : 457580  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14334   
Bodies       : 18947   
  Sum        : 76      
  Count      : 14      
Equivalences : 7180     (Atom=Atom: 393 Body=Body: 166 Other: 6621)
Tight        : Yes
Variables    : 17079    (Eliminated:    0 Frozen: 7755)
Constraints  : 479160   (Binary:  97.3% Ternary:   2.0% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasCost(4)) ; 
  1 :: atom(hasCost(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCost(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasIngredient(4)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  2 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasDifficulty(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCost(4)) ; 
  1 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCost(1)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(4)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasCategory(4)) 
}.
