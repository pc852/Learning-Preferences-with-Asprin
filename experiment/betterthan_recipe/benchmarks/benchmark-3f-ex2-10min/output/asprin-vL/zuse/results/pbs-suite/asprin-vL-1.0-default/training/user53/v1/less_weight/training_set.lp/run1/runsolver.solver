asprin_vL version 1.0
Reading from stdin
-:1333:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1343:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1358:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1439:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1700:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1713:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1890:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2019:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2091:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2095:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2095:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2101:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2200:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2226:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2346:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2380:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2402:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1250:1-16: info: no atoms over signature occur in program:
  output/3

-:1242:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1243:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(100,eq,16) output(67,eq,44) output(90,eq,100) output(79,eq,67) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(24,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(90,eq,24) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(51,eq,16) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(24,eq,51) output(100,eq,51) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(24,eq,84) output(100,eq,84) output(92,eq,52) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(24,eq,16) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 136 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(4))),3) preference(1,less(weight)) output(79,better,67) output(67,worse,44) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(100,eq,16) output(90,eq,100) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(24,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(90,eq,24) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(90,eq,16) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(33,eq,16) output(51,eq,16) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(24,eq,51) output(100,eq,51) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(24,eq,84) output(100,eq,84) output(92,eq,52) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(75,eq,16) output(38,eq,16) output(92,eq,16) output(9,eq,16) output(64,eq,16) output(24,eq,16) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 135 1
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(8))),3) preference(1,less(weight)) output(51,better,16) output(9,better,16) output(38,better,16) output(64,better,16) output(92,better,16) output(100,better,16) output(33,better,16) output(58,better,16) output(75,better,16) output(90,better,16) output(24,better,16) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(67,eq,44) output(90,eq,100) output(79,eq,67) output(100,eq,24) output(24,eq,92) output(38,eq,51) output(51,eq,64) output(64,eq,75) output(75,eq,52) output(52,eq,84) output(58,eq,100) output(92,eq,38) output(24,eq,38) output(75,eq,84) output(9,eq,52) output(64,eq,52) output(51,eq,75) output(75,eq,64) output(38,eq,64) output(92,eq,51) output(100,eq,92) output(90,eq,24) output(58,eq,24) output(33,eq,100) output(79,eq,44) output(51,eq,90) output(75,eq,33) output(38,eq,33) output(9,eq,51) output(64,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(64,eq,33) output(75,eq,90) output(38,eq,90) output(92,eq,90) output(9,eq,90) output(64,eq,90) output(51,eq,100) output(75,eq,100) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(58,eq,92) output(33,eq,92) output(24,eq,51) output(100,eq,51) output(92,eq,64) output(24,eq,64) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,75) output(92,eq,75) output(51,eq,52) output(38,eq,52) output(9,eq,84) output(64,eq,84) output(51,eq,84) output(100,eq,38) output(90,eq,38) output(58,eq,38) output(33,eq,38) output(51,eq,38) output(75,eq,38) output(38,eq,38) output(9,eq,38) output(64,eq,38) output(38,eq,84) output(92,eq,84) output(24,eq,84) output(100,eq,84) output(92,eq,52) output(24,eq,52) output(100,eq,52) output(90,eq,52) output(58,eq,52) output(24,eq,75) output(100,eq,75) output(90,eq,75) output(58,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,64) output(58,eq,64) output(33,eq,64) output(90,eq,51) output(58,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(38,eq,92) output(92,eq,92) output(9,eq,92) output(64,eq,92) output(75,eq,24) output(38,eq,24) output(92,eq,24) output(9,eq,24) output(64,eq,24) output(24,eq,24) output(92,eq,100) output(24,eq,100) output(100,eq,100) output(9,eq,100) output(64,eq,100) output(24,eq,90) output(100,eq,90) output(90,eq,90) output(58,eq,90) output(100,eq,33) output(90,eq,33) output(58,eq,33) output(33,eq,33) output(33,eq,52) output(90,eq,84) output(58,eq,84) output(33,eq,84)
Optimization: 125 1
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,2),1,for(atom(hasPrep(1))),5) preference(1,(1,3),1,for(atom(hasDifficulty(4))),1) preference(1,(1,4),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasPrepTime(1))),1) preference(1,(1,6),1,for(atom(hasCost(2))),2) preference(1,(1,7),1,for(atom(hasIngredient(10))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),3) preference(1,(1,10),1,for(atom(hasIngredient(12))),1) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasCategory(5))),2) preference(1,(1,13),1,for(atom(hasCost(3))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),2) preference(1,less(weight)) output(51,better,64) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(51,better,38) output(67,better,44) output(9,better,52) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,100) output(9,better,16) output(38,better,84) output(64,better,84) output(92,better,38) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,100) output(92,better,16) output(100,better,84) output(33,better,100) output(33,better,16) output(33,better,38) output(33,better,64) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,38) output(58,better,64) output(58,better,84) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,100) output(75,better,38) output(75,better,16) output(90,better,100) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,64) output(90,better,84) output(24,better,38) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(38,worse,51) output(38,worse,33) output(38,worse,90) output(38,worse,75) output(38,worse,52) output(38,worse,92) output(38,worse,24) output(38,worse,16) output(64,worse,75) output(64,worse,52) output(64,worse,51) output(64,worse,33) output(64,worse,90) output(64,worse,92) output(64,worse,24) output(64,worse,16) output(79,worse,67) output(79,worse,44) output(100,worse,16) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,52) output(100,worse,75) output(100,worse,90) output(100,worse,33) output(58,worse,24) output(58,worse,92) output(58,worse,75) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(9,eq,75) output(75,eq,51) output(51,eq,33) output(33,eq,90) output(24,eq,92) output(51,eq,75) output(38,eq,64) output(92,eq,51) output(90,eq,24) output(58,eq,16) output(51,eq,90) output(75,eq,33) output(9,eq,51) output(51,eq,51) output(92,eq,33) output(24,eq,33) output(9,eq,33) output(75,eq,90) output(92,eq,90) output(9,eq,90) output(38,eq,100) output(33,eq,24) output(51,eq,24) output(90,eq,92) output(33,eq,92) output(24,eq,51) output(64,eq,64) output(75,eq,75) output(92,eq,75) output(100,eq,38) output(38,eq,38) output(64,eq,38) output(58,eq,52) output(24,eq,75) output(90,eq,75) output(33,eq,75) output(100,eq,64) output(90,eq,51) output(33,eq,51) output(51,eq,92) output(75,eq,92) output(92,eq,92) output(9,eq,92) output(75,eq,24) output(92,eq,24) output(9,eq,24) output(24,eq,24) output(100,eq,100) output(64,eq,100) output(24,eq,90) output(90,eq,90) output(90,eq,33) output(33,eq,33)
Optimization: 85 14
Progression : [10;85] (Error: 7.5)
Progression : [11;85] (Error: 6.72727)
Answer: 5
preference(1,(1,1),1,for(atom(hasIngredient(3))),6) preference(1,(1,2),1,for(atom(hasCost(2))),8) preference(1,(1,3),1,for(atom(hasPrep(1))),8) preference(1,(1,4),1,for(atom(hasCategory(3))),5) preference(1,(1,5),1,for(atom(hasIngredient(12))),3) preference(1,(1,6),1,for(atom(hasPrep(2))),5) preference(1,(1,7),1,for(atom(hasIngredient(9))),7) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasCategory(4))),6) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(51,better,33) output(51,better,16) output(51,better,38) output(51,better,92) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,38) output(9,better,92) output(9,better,16) output(38,better,33) output(38,better,16) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,38) output(64,better,92) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,33) output(92,better,16) output(100,better,16) output(100,better,92) output(100,better,51) output(100,better,38) output(100,better,52) output(100,better,75) output(100,better,64) output(100,better,90) output(100,better,33) output(75,better,51) output(75,better,52) output(75,better,33) output(75,better,90) output(75,better,38) output(75,better,92) output(75,better,16) output(90,better,16) output(90,better,92) output(90,better,38) output(90,better,33) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,64) output(51,worse,75) output(51,worse,100) output(51,worse,24) output(51,worse,84) output(9,worse,84) output(9,worse,24) output(9,worse,100) output(38,worse,51) output(38,worse,64) output(38,worse,90) output(38,worse,100) output(38,worse,75) output(38,worse,52) output(38,worse,84) output(38,worse,24) output(64,worse,84) output(64,worse,24) output(64,worse,100) output(92,worse,51) output(92,worse,90) output(92,worse,64) output(92,worse,75) output(92,worse,84) output(92,worse,52) output(92,worse,24) output(92,worse,100) output(100,worse,24) output(100,worse,84) output(33,worse,90) output(33,worse,100) output(33,worse,16) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,75) output(33,worse,64) output(33,worse,51) output(33,worse,52) output(33,worse,84) output(52,worse,84) output(58,worse,100) output(58,worse,24) output(58,worse,16) output(58,worse,92) output(58,worse,38) output(58,worse,52) output(58,worse,75) output(58,worse,64) output(58,worse,51) output(58,worse,90) output(58,worse,33) output(58,worse,84) output(75,worse,84) output(75,worse,100) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,75) output(90,worse,64) output(90,worse,84) output(24,worse,84) output(64,eq,75) output(92,eq,38) output(75,eq,64) output(51,eq,90) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(51,eq,52) output(38,eq,38) output(90,eq,52) output(90,eq,51) output(38,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 79 10
Progression : [12;79] (Error: 5.58333)
Progression : [13;79] (Error: 5.07692)
Answer: 6
preference(1,(1,1),1,for(atom(hasDifficulty(2))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),6) preference(1,(1,3),1,for(atom(hasPrep(2))),4) preference(1,(1,4),1,for(atom(hasCategory(3))),6) preference(1,(1,5),1,for(atom(hasCost(2))),2) preference(1,(1,6),1,for(atom(hasPrep(0))),6) preference(1,(1,10),1,for(atom(hasIngredient(9))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasCost(4))),3) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasIngredient(3))),3) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,52) output(51,better,84) output(9,better,52) output(9,better,90) output(9,better,16) output(38,better,51) output(38,better,64) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(64,better,52) output(64,better,90) output(64,better,16) output(79,better,67) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,84) output(92,better,52) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,52) output(100,better,64) output(100,better,90) output(33,better,90) output(33,better,16) output(33,better,64) output(33,better,52) output(58,better,100) output(58,better,24) output(58,better,16) output(58,better,92) output(58,better,38) output(58,better,52) output(58,better,64) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,51) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,33) output(75,better,90) output(75,better,100) output(75,better,38) output(75,better,92) output(75,better,24) output(75,better,16) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,75) output(51,worse,24) output(51,worse,38) output(67,worse,44) output(9,worse,75) output(9,worse,51) output(9,worse,33) output(9,worse,84) output(9,worse,38) output(9,worse,92) output(9,worse,24) output(9,worse,100) output(38,worse,75) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,84) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(79,worse,44) output(92,worse,38) output(92,worse,75) output(92,worse,24) output(100,worse,24) output(100,worse,92) output(100,worse,51) output(100,worse,38) output(100,worse,75) output(33,worse,24) output(33,worse,92) output(33,worse,38) output(33,worse,75) output(33,worse,51) output(52,worse,84) output(58,worse,75) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,52) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,75) output(92,eq,51) output(33,eq,100) output(51,eq,51) output(9,eq,64) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(100,eq,84) output(51,eq,92) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(100,eq,33) output(33,eq,33) output(33,eq,84)
Optimization: 66 11
Progression : [14;66] (Error: 3.71429)
Progression : [15;66] (Error: 3.4)
Progression : [16;66] (Error: 3.125)
Progression : [17;66] (Error: 2.88235)
Progression : [18;66] (Error: 2.66667)
Progression : [19;66] (Error: 2.47368)
Answer: 7
preference(1,(1,1),1,for(atom(hasCategory(4))),5) preference(1,(1,2),1,for(atom(hasPrep(0))),4) preference(1,(1,3),1,for(atom(hasPrep(1))),1) preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),3) preference(1,(1,6),1,for(atom(hasCategory(1))),3) preference(1,(1,7),1,for(atom(hasIngredient(4))),6) preference(1,(1,8),1,for(atom(hasPrep(4))),5) preference(1,(1,9),1,for(atom(hasCost(4))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),3) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(51,better,33) output(51,better,64) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,100) output(51,better,24) output(51,better,52) output(51,better,84) output(51,better,38) output(51,better,92) output(9,better,52) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,92) output(9,better,100) output(9,better,16) output(38,better,64) output(38,better,33) output(38,better,90) output(38,better,100) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,92) output(38,better,16) output(64,better,52) output(64,better,90) output(79,better,67) output(92,better,90) output(92,better,64) output(92,better,52) output(92,better,16) output(100,better,16) output(100,better,92) output(100,better,52) output(100,better,64) output(100,better,90) output(33,better,90) output(33,better,100) output(33,better,16) output(33,better,92) output(33,better,75) output(33,better,64) output(33,better,52) output(33,better,84) output(58,better,100) output(58,better,16) output(58,better,92) output(58,better,52) output(58,better,64) output(58,better,90) output(58,better,84) output(75,better,52) output(75,better,84) output(75,better,64) output(75,better,90) output(75,better,100) output(75,better,92) output(75,better,16) output(90,better,52) output(24,better,92) output(24,better,38) output(24,better,33) output(24,better,64) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(67,worse,44) output(9,worse,75) output(9,worse,51) output(9,worse,33) output(9,worse,38) output(9,worse,24) output(38,worse,51) output(38,worse,24) output(64,worse,75) output(64,worse,51) output(64,worse,33) output(64,worse,84) output(64,worse,38) output(64,worse,92) output(64,worse,24) output(64,worse,100) output(79,worse,44) output(92,worse,38) output(92,worse,51) output(92,worse,33) output(92,worse,75) output(92,worse,84) output(92,worse,24) output(92,worse,100) output(100,worse,24) output(100,worse,51) output(100,worse,38) output(100,worse,75) output(100,worse,33) output(33,worse,24) output(33,worse,38) output(33,worse,51) output(52,worse,84) output(58,worse,24) output(58,worse,38) output(58,worse,75) output(58,worse,51) output(58,worse,33) output(75,worse,51) output(75,worse,33) output(75,worse,38) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,16) output(90,worse,92) output(90,worse,38) output(90,worse,75) output(90,worse,64) output(90,worse,51) output(90,worse,33) output(90,worse,84) output(24,worse,51) output(51,eq,51) output(64,eq,64) output(75,eq,75) output(38,eq,38) output(100,eq,84) output(92,eq,92) output(24,eq,24) output(100,eq,100) output(64,eq,16) output(90,eq,90) output(33,eq,33)
Optimization: 64 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(2))),4) preference(1,(1,2),1,for(atom(hasCost(3))),3) preference(1,(1,3),1,for(atom(hasPrep(5))),2) preference(1,(1,4),1,for(atom(hasDifficulty(1))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),2) preference(1,(1,6),1,for(atom(hasCategory(3))),7) preference(1,(1,7),1,for(atom(hasCost(4))),7) preference(1,(1,8),1,for(atom(hasIngredient(3))),8) preference(1,(1,9),1,for(atom(hasPrep(2))),6) preference(1,(1,10),1,for(atom(hasPrepTime(1))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),7) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasPrep(4))),3) preference(1,(1,14),1,for(atom(hasCategory(4))),5) preference(1,less(weight)) output(51,better,33) output(51,better,75) output(51,better,90) output(51,better,16) output(51,better,52) output(51,better,84) output(51,better,38) output(67,better,44) output(9,better,75) output(9,better,52) output(9,better,51) output(9,better,33) output(9,better,90) output(9,better,64) output(9,better,84) output(9,better,38) output(9,better,24) output(9,better,100) output(9,better,16) output(38,better,75) output(38,better,52) output(38,better,84) output(38,better,16) output(64,better,75) output(64,better,52) output(64,better,51) output(64,better,33) output(64,better,90) output(64,better,84) output(64,better,38) output(64,better,24) output(64,better,100) output(64,better,16) output(79,better,67) output(79,better,44) output(92,better,38) output(92,better,51) output(92,better,33) output(92,better,90) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,24) output(92,better,100) output(92,better,16) output(100,better,16) output(100,better,38) output(100,better,84) output(100,better,52) output(100,better,75) output(100,better,90) output(100,better,33) output(33,better,16) output(33,better,75) output(33,better,52) output(33,better,84) output(52,better,84) output(58,better,100) output(58,better,16) output(58,better,38) output(58,better,52) output(58,better,75) output(58,better,51) output(58,better,90) output(58,better,33) output(58,better,84) output(75,better,84) output(75,better,16) output(90,better,16) output(90,better,38) output(90,better,52) output(90,better,75) output(90,better,33) output(90,better,84) output(24,better,38) output(24,better,33) output(24,better,51) output(24,better,84) output(24,better,52) output(24,better,75) output(24,better,100) output(24,better,16) output(24,better,90) output(51,worse,64) output(51,worse,24) output(51,worse,92) output(38,worse,51) output(38,worse,64) output(38,worse,90) output(38,worse,100) output(38,worse,92) output(38,worse,24) output(64,worse,92) output(100,worse,24) output(100,worse,92) output(100,worse,64) output(33,worse,90) output(33,worse,100) output(33,worse,24) output(33,worse,92) output(33,worse,64) output(33,worse,51) output(58,worse,92) output(58,worse,64) output(75,worse,51) output(75,worse,64) output(75,worse,33) output(75,worse,90) output(75,worse,100) output(75,worse,38) output(75,worse,92) output(75,worse,24) output(90,worse,100) output(90,worse,24) output(90,worse,92) output(90,worse,64) output(90,worse,51) output(24,worse,92) output(24,worse,64) output(75,eq,52) output(58,eq,24) output(38,eq,33) output(51,eq,51) output(51,eq,100) output(100,eq,51) output(64,eq,64) output(75,eq,75) output(33,eq,38) output(38,eq,38) output(92,eq,92) output(9,eq,92) output(24,eq,24) output(100,eq,100) output(90,eq,90) output(33,eq,33)
Optimization: 52 14
Progression : [20;52] (Error: 1.6)
Progression : [21;52] (Error: 1.47619)
Progression : [22;52] (Error: 1.36364)
Progression : [23;52] (Error: 1.26087)
Progression : [24;52] (Error: 1.16667)
Progression : [25;52] (Error: 1.08)
Progression : [26;52] (Error: 1)
Progression : [27;52] (Error: 0.925926)
Progression : [28;52] (Error: 0.857143)
Progression : [29;52] (Error: 0.793103)
Progression : [30;52] (Error: 0.733333)
Progression : [31;52] (Error: 0.677419)
Progression : [32;52] (Error: 0.625)
Progression : [33;52] (Error: 0.575758)
Progression : [34;52] (Error: 0.529412)
Progression : [35;52] (Error: 0.485714)
Progression : [36;52] (Error: 0.444444)
Progression : [37;52] (Error: 0.405405)
Progression : [38;52] (Error: 0.368421)
Progression : [39;52] (Error: 0.333333)
Progression : [40;52] (Error: 0.3)
Progression : [41;52] (Error: 0.268293)
Progression : [42;52] (Error: 0.238095)
Progression : [43;52] (Error: 0.209302)
Progression : [44;52] (Error: 0.181818)
Progression : [45;52] (Error: 0.155556)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.055 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 8+
  Optimum    : unknown
Optimization : 52 14
Bounds       : [45;52] [0;14]
Calls        : 1
Time         : 597.225s (Solving: 592.90s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2375.255s
Threads      : 4        (Winner: 4)

Choices      : 34187761 (Domain: 1603963)
Conflicts    : 26957689 (Analyzed: 26957653)
Restarts     : 35172    (Average: 766.45 Last: 549256)
Model-Level  : 109.8   
Problems     : 40       (Average Length: 0.10 Splits: 0)
Lemmas       : 27027006 (Deleted: 25167019)
  Binary     : 387      (Ratio:   0.00%)
  Ternary    : 3017     (Ratio:   0.01%)
  Conflict   : 26957653 (Average Length:  148.5 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 69353    (Average Length:   21.9 Ratio:   0.26%) 
  Distributed: 23141    (Ratio:   0.09% Average LBD: 3.71) 
  Integrated : 69423    (Ratio: 300.00% Unit: 67 Average Jumps: 38.22)
Backjumps    : 26957653 (Average:  1.21 Max: 2864 Sum: 32511761)
  Executed   : 26957600 (Average:  1.21 Max: 2864 Sum: 32510046 Ratio:  99.99%)
  Bounded    : 53       (Average: 32.36 Max:  94 Sum:   1715 Ratio:   0.01%)

Rules        : 1381931 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 23946   
Bodies       : 20016   
  Sum        : 263     
  Count      : 14      
Equivalences : 17291    (Atom=Atom: 1355 Body=Body: 567 Other: 15369)
Tight        : Yes
Variables    : 17461    (Eliminated:    0 Frozen: 8137)
Constraints  : 1394583  (Binary:  99.0% Ternary:   0.7% Other:   0.3%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasCategory(5)) ; 
  3 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(1)) ; 
  5 :: atom(hasCategory(3)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasCategory(4)) ; 
  5 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasPrep(2)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrep(0)) ; 
  2 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasPrep(5)) ; 
  3 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCost(4)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasCost(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  1 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(4)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCategory(4)) 
}.
