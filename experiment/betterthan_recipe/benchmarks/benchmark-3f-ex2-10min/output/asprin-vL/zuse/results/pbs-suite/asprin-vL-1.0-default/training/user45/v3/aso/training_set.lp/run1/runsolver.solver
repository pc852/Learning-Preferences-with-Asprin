asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1168:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1169:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1199:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(5))),()) preference(1,aso) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(79,better,16) output(92,better,77) output(92,better,10) output(79,better,22) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(58,better,67) output(90,worse,33) output(33,worse,79) output(90,worse,65) output(90,worse,79) output(58,worse,65) output(58,worse,79) output(90,worse,16) output(90,worse,22) output(9,eq,100) output(77,eq,10) output(33,eq,16) output(58,eq,33) output(90,eq,51) output(90,eq,67) output(58,eq,16)
Optimization: 21 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasIngredient(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasIngredient(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(79,better,16) output(92,better,77) output(77,better,10) output(92,better,10) output(79,better,22) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,67) output(90,worse,33) output(33,worse,79) output(90,worse,65) output(90,worse,79) output(58,worse,65) output(58,worse,79) output(90,worse,16) output(9,eq,100) output(33,eq,16) output(58,eq,33) output(58,eq,16)
Optimization: 18 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),2,for(atom(hasCategory(2))),()) preference(1,(1,4),2,for(atom(hasIngredient(5))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(2))),()) preference(1,(1,2),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(9,better,100) output(33,better,79) output(44,better,16) output(58,better,90) output(65,better,79) output(44,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(44,better,67) output(33,better,51) output(65,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(58,better,22) output(58,better,67) output(90,worse,33) output(79,worse,51) output(16,worse,67) output(90,worse,65) output(16,worse,22) output(77,worse,10) output(92,worse,10) output(79,worse,22) output(58,worse,65) output(79,worse,67) output(79,eq,16) output(92,eq,77) output(58,eq,33) output(90,eq,51) output(90,eq,67) output(90,eq,22)
Optimization: 16 6
Answer: 4
preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasPrep(3))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(12))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,5),3,for(atom(hasDifficulty(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(90,better,33) output(44,better,16) output(65,better,79) output(92,better,77) output(92,better,10) output(44,better,22) output(65,better,16) output(90,better,79) output(44,better,67) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(9,worse,100) output(90,worse,65) output(79,worse,16) output(77,worse,10) output(58,worse,65) output(79,eq,51) output(58,eq,90)
Optimization: 15 6
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(atom(hasIngredient(3))),()) preference(1,(1,4),0,for(atom(hasDifficulty(3))),()) preference(1,(1,5),0,for(atom(hasPrep(4))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(90,better,33) output(79,better,51) output(16,better,67) output(79,better,16) output(16,better,22) output(92,better,77) output(79,better,22) output(65,better,16) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(9,worse,100) output(33,worse,79) output(44,worse,16) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(33,eq,16) output(90,eq,79) output(58,eq,65) output(58,eq,79)
Optimization: 14 5
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,3),0,for(atom(hasIngredient(3))),()) preference(1,(1,4),0,for(atom(hasDifficulty(3))),()) preference(1,(1,5),0,for(atom(hasPrep(4))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,4),1,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(5)))),()) preference(1,(1,3),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(90,better,33) output(79,better,51) output(16,better,67) output(79,better,16) output(16,better,22) output(77,better,10) output(92,better,10) output(79,better,22) output(65,better,16) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(9,worse,100) output(33,worse,79) output(44,worse,16) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(92,eq,77) output(33,eq,16) output(90,eq,79) output(58,eq,65) output(58,eq,79)
Optimization: 13 5
Answer: 7
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasIngredient(9))),()) preference(1,aso) output(9,better,100) output(79,better,51) output(44,better,16) output(16,better,67) output(79,better,16) output(92,better,77) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(77,worse,10) output(92,worse,10) output(90,eq,33) output(33,eq,79) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(16,eq,22) output(90,eq,79) output(58,eq,65) output(58,eq,33) output(58,eq,79)
Optimization: 12 1
Answer: 8
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,aso) output(9,better,100) output(79,better,51) output(44,better,16) output(16,better,67) output(79,better,16) output(16,better,22) output(92,better,77) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(77,worse,10) output(92,worse,10) output(90,eq,33) output(33,eq,79) output(58,eq,90) output(90,eq,65) output(65,eq,79) output(90,eq,79) output(58,eq,65) output(58,eq,33) output(58,eq,79)
Optimization: 11 1
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,aso) output(9,better,100) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(16,better,22) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,33) output(90,worse,65) output(77,worse,10) output(92,worse,10) output(79,eq,16) output(92,eq,77) output(90,eq,79) output(58,eq,65) output(58,eq,33) output(90,eq,16)
Optimization: 10 1
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,aso) output(9,better,100) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(65,better,79) output(16,better,22) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(77,worse,10) output(92,worse,10) output(90,eq,33) output(58,eq,90) output(90,eq,65) output(79,eq,16) output(92,eq,77) output(58,eq,65) output(58,eq,33)
Optimization: 9 1
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasPrep(6))),()) preference(1,aso) output(9,better,100) output(90,better,33) output(79,better,51) output(44,better,16) output(16,better,67) output(65,better,79) output(16,better,22) output(92,better,77) output(44,better,22) output(79,better,22) output(65,better,16) output(90,better,79) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(77,worse,10) output(92,worse,10) output(33,eq,79) output(58,eq,90) output(90,eq,65) output(79,eq,16) output(33,eq,16) output(58,eq,65)
Optimization: 8 1
Progression : [1;8] (Error: 7)
Answer: 12
preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(4))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(9,better,100) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(79,better,16) output(92,better,77) output(92,better,10) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,33) output(90,worse,65) output(90,worse,79) output(58,eq,65) output(58,eq,33)
Optimization: 7 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasCategory(5))),()) preference(1,(1,3),1,for(atom(hasCost(3))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,2),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasPrepTime(1))),()) preference(1,(1,4),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasCost(1))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasIngredient(4))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasDifficulty(4))),()) preference(1,aso) output(9,better,100) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(79,better,16) output(92,better,77) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(58,better,65) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,33) output(90,worse,65) output(90,eq,79)
Optimization: 6 6
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),2,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(9,better,100) output(90,better,33) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(16,better,22) output(92,better,77) output(44,better,22) output(79,better,22) output(65,better,16) output(90,better,79) output(58,better,65) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,65) output(79,worse,16) output(77,worse,10) output(92,worse,10) output(33,worse,16)
Optimization: 5 6
Answer: 15
preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(7))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasCategory(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(8))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,(1,4),3,for(atom(hasPrep(1))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(90,better,33) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(65,better,79) output(79,better,16) output(16,better,22) output(92,better,77) output(77,better,10) output(92,better,10) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(9,worse,100) output(58,eq,65)
Optimization: 4 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,2),3,for(atom(hasCategory(1))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(9,better,100) output(90,better,33) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(65,better,79) output(79,better,16) output(16,better,22) output(92,better,77) output(77,better,10) output(92,better,10) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(58,eq,65)
Optimization: 3 6
Progression : [2;3] (Error: 0.5)
Progression : [3;3] (Error: 0)
Progression : 3 [1;6] (Error: 5)
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasCost(3))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,5),2,for(atom(hasCost(3))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,aso) output(9,better,100) output(90,better,33) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(79,better,16) output(16,better,22) output(92,better,77) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(58,better,65) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,65)
Optimization: 3 5
Answer: 18
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(2))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,(1,2),2,for(atom(hasCost(3))),()) preference(1,(1,5),2,for(atom(hasPrep(0))),()) preference(1,(1,5),3,for(atom(hasCategory(1))),()) preference(1,aso) output(9,better,100) output(90,better,33) output(33,better,79) output(79,better,51) output(44,better,16) output(16,better,67) output(58,better,90) output(65,better,79) output(79,better,16) output(16,better,22) output(92,better,77) output(44,better,22) output(79,better,22) output(33,better,16) output(65,better,16) output(90,better,79) output(58,better,65) output(44,better,67) output(79,better,67) output(33,better,51) output(65,better,51) output(58,better,33) output(90,better,51) output(58,better,51) output(33,better,67) output(65,better,67) output(90,better,67) output(58,better,79) output(90,better,16) output(58,better,16) output(33,better,22) output(65,better,22) output(90,better,22) output(58,better,22) output(58,better,67) output(90,worse,65) output(77,worse,10) output(92,worse,10)
Optimization: 3 4
Progression : 3 [2;4] (Error: 1)
Progression : 3 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 18
  Optimum    : yes
Optimization : 3 4
Calls        : 1
Time         : 109.967s (Solving: 101.49s 1st Model: 0.48s Unsat: 90.30s)
CPU Time     : 414.214s
Threads      : 4        (Winner: 1)

Choices      : 915785   (Domain: 30818)
Conflicts    : 308941   (Analyzed: 308933)
Restarts     : 296      (Average: 1043.69 Last: 41671)
Model-Level  : 587.6   
Problems     : 14       (Average Length: 0.29 Splits: 0)
Lemmas       : 416491   (Deleted: 277607)
  Binary     : 8562     (Ratio:   2.06%)
  Ternary    : 24717    (Ratio:   5.93%)
  Conflict   : 308933   (Average Length:  219.7 Ratio:  74.18%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 107558   (Average Length:   72.1 Ratio:  25.82%) 
  Distributed: 35877    (Ratio:  11.61% Average LBD: 3.19) 
  Integrated : 107631   (Ratio: 300.00% Unit: 467 Average Jumps: 66.33)
Backjumps    : 308933   (Average:  2.75 Max: 990 Sum: 850582)
  Executed   : 308906   (Average:  2.75 Max: 990 Sum: 850005 Ratio:  99.93%)
  Bounded    : 27       (Average: 21.37 Max:  37 Sum:    577 Ratio:   0.07%)

Rules        : 3659422 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 605520  
Bodies       : 746135  
  Count      : 1392    
Equivalences : 1841187  (Atom=Atom: 541763 Body=Body: 591273 Other: 708151)
Tight        : Yes
Variables    : 101779   (Eliminated:    0 Frozen: 36499)
Constraints  : 3213274  (Binary:  96.9% Ternary:   2.9% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> not atom(hasCost(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasIngredient(6)) >> not atom(hasCost(1))  ; 
  atom(hasCategory(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasCategory(5)) >> not atom(hasIngredient(12))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(2)) ; 
  atom(hasCost(5)) >> atom(hasCategory(2)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasPrep(0)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(12)) >> atom(hasDifficulty(1)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(0)) >> atom(hasCost(3)) >> atom(hasIngredient(4)) || not atom(hasPrepTime(3))  ; 
  atom(hasPrep(5)) >> atom(hasPrep(3)) >> not atom(hasCategory(4))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(2)) >> not atom(hasCost(3))  ; 
  atom(hasIngredient(2)) >> not atom(hasCategory(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  ; 
  not atom(hasCategory(5))  >> not atom(hasCost(4))  >> not atom(hasCost(5))  || atom(hasIngredient(3)) ; 
  not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  not atom(hasCategory(5))  >> not atom(hasCost(3))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasCategory(3))  ; 
  not atom(hasCategory(5))  >> not atom(hasCost(4))  >> not atom(hasCost(5))  || atom(hasIngredient(3)) ; 
  not atom(hasDifficulty(3))  >> not atom(hasIngredient(11))  || atom(hasDifficulty(3)) ; 
  not atom(hasIngredient(5))  || atom(hasPrep(4)) ; 
  not atom(hasCategory(5))  >> not atom(hasCost(3))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasIngredient(9)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> not atom(hasCategory(1))  >> not atom(hasCategory(2))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasPrep(0)) >> not atom(hasCategory(4))  || not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasCost(3)) >> atom(hasCategory(1)) || not atom(hasCost(3))  ; 
  atom(hasPrep(0)) >> atom(hasCost(1)) >> atom(hasDifficulty(4)) || not atom(hasPrep(5))  ; 
  atom(hasCategory(3)) >> atom(hasDifficulty(3)) >> not atom(hasIngredient(12))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(5)) >> not atom(hasCategory(2))  ; 
  atom(hasCost(3)) >> atom(hasPrepTime(1)) >> atom(hasIngredient(4)) ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(12))  >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasCost(4)) >> not atom(hasIngredient(12))  || not atom(hasPrep(4))  ; 
  atom(hasCategory(3)) >> atom(hasCost(3)) >> atom(hasCategory(1)) || not atom(hasCost(3))  ; 
  atom(hasPrep(0)) >> atom(hasCost(1)) >> atom(hasDifficulty(4)) || not atom(hasPrep(5))  ; 
  atom(hasCategory(5)) >> atom(hasIngredient(5)) >> not atom(hasCategory(2))  ; 
  atom(hasCost(3)) >> atom(hasPrepTime(1)) >> atom(hasIngredient(4)) ; 
  atom(hasIngredient(11)) >> atom(hasCost(3)) >> not atom(hasIngredient(12))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(3))  >> not atom(hasCost(4))  || not atom(hasPrep(7))  ; 
  atom(hasDifficulty(3)) >> atom(hasCost(3)) >> not atom(hasPrep(7))  || not atom(hasPrep(4))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCost(2))  >> atom(hasCategory(1)) || not atom(hasCost(3))  ; 
  atom(hasDifficulty(3)) >> not atom(hasCategory(4))  || not atom(hasPrep(4))  ; 
  not atom(hasIngredient(7))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> not atom(hasPrep(7))  >> atom(hasPrep(0)) || not atom(hasPrep(4))  ; 
  atom(hasIngredient(7)) >> atom(hasCategory(1)) >> atom(hasPrep(1)) || not atom(hasPrep(1))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(8)) >> not atom(hasCategory(4))  || not atom(hasPrep(4))  ; 
  not atom(hasIngredient(7))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(1)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(2)) >> atom(hasPrep(0)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(12)) >> atom(hasPrep(1)) >> not atom(hasPrep(0))  || not atom(hasPrep(2))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(0)) >> atom(hasCategory(1)) || not atom(hasCost(4))  ; 
  atom(hasIngredient(11)) >> not atom(hasCategory(4))  || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(7))  >> atom(hasCategory(4)) >> atom(hasPrep(5)) || not atom(hasPrep(7))  ; 
  atom(hasIngredient(2)) >> not atom(hasPrep(7))  >> atom(hasPrep(0)) ; 
  atom(hasIngredient(6)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(6)) >> atom(hasCost(3)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(12))  || not atom(hasCategory(3))  ; 
  atom(hasCost(3)) >> atom(hasPrep(0)) >> atom(hasCategory(1)) || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(3)) >> atom(hasCost(3)) >> atom(hasCategory(1)) || not atom(hasCost(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasPrep(6)) >> not atom(hasCategory(4))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(6)) >> atom(hasCost(3)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(12))  || not atom(hasCategory(3))  ; 
  atom(hasCategory(2)) >> atom(hasPrep(0)) >> atom(hasCategory(1)) || not atom(hasDifficulty(3))  
}.
