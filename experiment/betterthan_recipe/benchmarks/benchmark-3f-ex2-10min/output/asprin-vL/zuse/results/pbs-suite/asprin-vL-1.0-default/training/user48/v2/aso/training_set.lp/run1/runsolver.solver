asprin_vL version 1.0
Reading from stdin
-:1251:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1276:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1357:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1631:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1808:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2009:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2013:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2013:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2118:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2144:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2264:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2298:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1168:1-16: info: no atoms over signature occur in program:
  output/3

-:1160:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1161:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1162:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1163:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1193:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,1),3,for(atom(hasCategory(2))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(72,better,52) output(67,better,64) output(10,better,65) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(42,worse,67) output(13,worse,67) output(48,worse,67) output(70,worse,67) output(52,eq,65) output(65,eq,24) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(42,eq,25) output(18,eq,51) output(13,eq,25) output(48,eq,42) output(70,eq,13) output(42,eq,64) output(52,eq,24) output(13,eq,64) output(48,eq,64) output(70,eq,42) output(48,eq,25) output(70,eq,25) output(70,eq,64)
Optimization: 23 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(48,better,13) output(48,better,42) output(70,better,13) output(48,better,67) output(70,better,67) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(52,worse,65) output(18,worse,51) output(52,worse,24) output(72,worse,65) output(69,worse,65) output(72,worse,24) output(69,worse,24) output(69,eq,72) output(72,eq,52) output(65,eq,24) output(42,eq,67) output(67,eq,64) output(10,eq,65) output(70,eq,48) output(13,eq,42) output(42,eq,25) output(13,eq,25) output(42,eq,64) output(13,eq,67) output(10,eq,24) output(69,eq,52) output(13,eq,64)
Optimization: 22 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCategory(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCategory(2))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(69,better,72) output(42,better,67) output(70,better,48) output(42,better,25) output(13,better,25) output(70,better,13) output(13,better,67) output(69,better,52) output(48,better,67) output(70,better,67) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(52,worse,65) output(67,worse,64) output(18,worse,51) output(52,worse,24) output(72,worse,65) output(72,worse,24) output(72,eq,52) output(65,eq,24) output(10,eq,65) output(13,eq,42) output(42,eq,64) output(10,eq,24) output(13,eq,64)
Optimization: 18 6
Answer: 4
preference(1,(1,1),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(5))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasPrep(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasCost(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(69,better,72) output(65,better,24) output(70,better,48) output(13,better,42) output(13,better,25) output(48,better,42) output(70,better,13) output(13,better,67) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(72,worse,52) output(52,worse,65) output(10,worse,65) output(72,worse,65) output(69,worse,65) output(72,worse,24) output(42,eq,67) output(67,eq,64) output(42,eq,25) output(42,eq,64) output(10,eq,24) output(69,eq,52)
Optimization: 16 6
Answer: 5
preference(1,(1,1),0,for(atom(hasIngredient(8))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(9))),()) preference(1,aso) output(69,better,72) output(65,better,24) output(42,better,67) output(42,better,25) output(18,better,51) output(13,better,25) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(48,better,25) output(70,better,25) output(70,better,64) output(72,worse,52) output(72,worse,65) output(52,eq,65) output(67,eq,64) output(10,eq,65) output(70,eq,48) output(48,eq,13) output(13,eq,42) output(48,eq,42) output(70,eq,13) output(69,eq,52) output(69,eq,65) output(70,eq,42)
Optimization: 13 2
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(12))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasDifficulty(4))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(10,better,65) output(70,better,48) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(70,better,13) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(70,better,67) output(13,better,64) output(70,better,42) output(70,better,25) output(70,better,64) output(65,eq,24)
Optimization: 12 6
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),0,for(atom(hasDifficulty(2))),()) preference(1,(1,3),0,for(atom(hasPrepTime(2))),()) preference(1,(1,4),0,for(atom(hasIngredient(12))),()) preference(1,(1,5),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasPrep(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasDifficulty(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(6))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasIngredient(10))),()) preference(1,(1,6),3,for(atom(hasDifficulty(4))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(70,better,13) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(65,eq,24) output(70,eq,48)
Optimization: 8 6
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,2),3,for(atom(hasCost(2))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(72,better,52) output(52,better,65) output(65,better,24) output(42,better,67) output(10,better,65) output(48,better,13) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(70,better,13) output(42,better,64) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(69,worse,72) output(70,eq,48) output(69,eq,52)
Optimization: 7 6
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(0))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasCost(2))),()) preference(1,(1,2),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,5),2,for(atom(hasPrep(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasIngredient(7))),()) preference(1,(1,4),3,for(atom(hasCategory(2))),()) preference(1,(1,5),3,for(atom(hasIngredient(11))),()) preference(1,aso) output(72,better,52) output(52,better,65) output(65,better,24) output(42,better,67) output(67,better,64) output(10,better,65) output(48,better,13) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(70,better,13) output(42,better,64) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(69,worse,72) output(70,eq,48) output(69,eq,52)
Optimization: 6 6
Progression : [1;6] (Error: 5)
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),2,for(atom(hasPrepTime(2))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasPrep(5))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasIngredient(9))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(52,better,65) output(65,better,24) output(67,better,64) output(10,better,65) output(48,better,13) output(18,better,51) output(13,better,25) output(48,better,42) output(70,better,13) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(70,eq,48)
Optimization: 5 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(4))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(69,better,72) output(52,better,65) output(65,better,24) output(42,better,67) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(72,worse,52) output(70,worse,48) output(70,worse,13)
Optimization: 4 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),3,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasPrepTime(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(4))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,5),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasDifficulty(1))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(69,better,72) output(52,better,65) output(65,better,24) output(42,better,67) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(70,better,13) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(72,worse,52) output(67,worse,64)
Optimization: 3 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,6),0,for(atom(hasPrep(0))),()) preference(1,(1,1),1,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,3),1,for(atom(hasPrep(6))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,(1,4),2,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,4),3,for(atom(hasIngredient(7))),()) preference(1,(1,5),3,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(52,better,65) output(65,better,24) output(42,better,67) output(67,better,64) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(70,worse,48) output(70,eq,13)
Optimization: 2 6
Progression : [2;2] (Error: 0)
Progression : 2 [1;6] (Error: 5)
Progression : 2 [2;6] (Error: 2)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,2),1,for(atom(hasIngredient(2))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasPrep(0))),()) preference(1,(1,2),3,for(atom(hasIngredient(7))),()) preference(1,(1,3),3,for(atom(hasDifficulty(3))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(52,better,65) output(65,better,24) output(42,better,67) output(67,better,64) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(70,worse,48) output(70,eq,13)
Optimization: 2 5
Answer: 15
preference(1,(1,1),0,for(neg(atom(hasPrep(7)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasCategory(1))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(9))),()) preference(1,(1,3),2,for(atom(hasIngredient(4))),()) preference(1,(1,4),2,for(atom(hasPrep(6))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(69,better,72) output(72,better,52) output(52,better,65) output(65,better,24) output(42,better,67) output(67,better,64) output(10,better,65) output(48,better,13) output(13,better,42) output(42,better,25) output(18,better,51) output(13,better,25) output(48,better,42) output(42,better,64) output(13,better,67) output(52,better,24) output(10,better,24) output(72,better,65) output(69,better,52) output(69,better,65) output(72,better,24) output(69,better,24) output(48,better,67) output(70,better,67) output(13,better,64) output(48,better,64) output(70,better,42) output(48,better,25) output(70,better,25) output(70,better,64) output(70,worse,48) output(70,eq,13)
Optimization: 2 4
Progression : 2 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 15
  Optimum    : yes
Optimization : 2 4
Calls        : 1
Time         : 64.196s (Solving: 57.81s 1st Model: 0.41s Unsat: 52.50s)
CPU Time     : 235.941s
Threads      : 4        (Winner: 1)

Choices      : 682650   (Domain: 14985)
Conflicts    : 190422   (Analyzed: 190415)
Restarts     : 202      (Average: 942.65 Last: 16037)
Model-Level  : 898.1   
Problems     : 13       (Average Length: 0.31 Splits: 0)
Lemmas       : 271850   (Deleted: 147437)
  Binary     : 7951     (Ratio:   2.92%)
  Ternary    : 24249    (Ratio:   8.92%)
  Conflict   : 190415   (Average Length:  261.6 Ratio:  70.04%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 81435    (Average Length:   80.6 Ratio:  29.96%) 
  Distributed: 27300    (Ratio:  14.34% Average LBD: 3.13) 
  Integrated : 81900    (Ratio: 300.00% Unit: 395 Average Jumps: 59.10)
Backjumps    : 190415   (Average:  3.29 Max: 1265 Sum: 626379)
  Executed   : 190395   (Average:  3.29 Max: 1265 Sum: 625999 Ratio:  99.94%)
  Bounded    : 20       (Average: 19.00 Max:  31 Sum:    380 Ratio:   0.06%)

Rules        : 3093184 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 515622  
Bodies       : 641417  
  Count      : 1176    
Equivalences : 1562841  (Atom=Atom: 459977 Body=Body: 499341 Other: 603523)
Tight        : Yes
Variables    : 96181    (Eliminated:    0 Frozen: 30973)
Constraints  : 2742058  (Binary:  96.6% Ternary:   3.2% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasCost(1)) >> atom(hasCategory(2)) ; 
  atom(hasCategory(2)) >> atom(hasIngredient(8)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasPrep(4))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCategory(2)) >> not atom(hasDifficulty(4))  ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasCategory(2)) >> not atom(hasPrepTime(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasCategory(2)) >> not atom(hasCategory(3))  ; 
  atom(hasCategory(2)) >> atom(hasCost(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(8)) >> not atom(hasPrepTime(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(11)) >> atom(hasCost(5)) >> not atom(hasPrep(6))  ; 
  atom(hasIngredient(2)) >> atom(hasCost(1)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(5)) >> atom(hasCost(1)) ; 
  atom(hasCost(1)) >> atom(hasCategory(2)) >> not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(2)) >> not atom(hasCost(1))  >> not atom(hasCategory(1))  || atom(hasIngredient(8)) ; 
  atom(hasIngredient(9)) >> not atom(hasCategory(5))  >> not atom(hasIngredient(6))  || not atom(hasPrep(6))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasPrep(6)) >> atom(hasPrep(0)) >> atom(hasIngredient(10)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) >> not atom(hasPrepTime(2))  || atom(hasPrepTime(2)) ; 
  not atom(hasCost(3))  >> not atom(hasIngredient(7))  >> not atom(hasIngredient(9))  || atom(hasIngredient(12)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(7)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(4)) >> atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasPrep(6)) >> atom(hasPrep(0)) >> atom(hasIngredient(10)) || atom(hasDifficulty(2)) ; 
  atom(hasPrep(6)) >> atom(hasDifficulty(1)) >> not atom(hasPrepTime(2))  || atom(hasPrepTime(2)) ; 
  not atom(hasCost(3))  >> atom(hasIngredient(6)) >> not atom(hasIngredient(12))  || atom(hasIngredient(12)) ; 
  atom(hasPrep(4)) >> atom(hasIngredient(7)) >> not atom(hasCategory(1))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(12)) >> atom(hasIngredient(4)) >> atom(hasDifficulty(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasCost(2)) >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(0)) >> atom(hasCost(2)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  >> atom(hasIngredient(4)) || not atom(hasPrepTime(3))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasIngredient(1)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> not atom(hasPrep(5))  >> atom(hasIngredient(4)) || not atom(hasPrep(7))  ; 
  atom(hasPrep(6)) >> atom(hasCategory(5)) >> atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(0)) >> atom(hasCost(2)) >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> atom(hasPrep(7)) >> not atom(hasDifficulty(2))  || not atom(hasIngredient(9))  ; 
  atom(hasPrep(2)) >> not atom(hasPrepTime(2))  >> atom(hasCategory(2)) || not atom(hasPrepTime(3))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasIngredient(11)) || not atom(hasPrep(6))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> atom(hasPrepTime(2)) >> atom(hasIngredient(7)) || not atom(hasCategory(1))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasPrep(5))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCost(2))  >> atom(hasPrep(5)) >> not atom(hasPrep(6))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(7)) >> not atom(hasCost(3))  >> atom(hasIngredient(9)) || not atom(hasPrep(6))  ; 
  atom(hasIngredient(4)) >> atom(hasDifficulty(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> not atom(hasPrepTime(1))  >> not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasPrep(4))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasPrep(5))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCost(2))  >> atom(hasIngredient(4)) >> not atom(hasPrep(6))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(4)) >> atom(hasDifficulty(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(4)) >> atom(hasPrep(0)) >> not atom(hasPrep(1))  || not atom(hasCategory(3))  ; 
  atom(hasIngredient(2)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasPrep(4))  ; 
  atom(hasPrepTime(3)) >> atom(hasCategory(1)) >> not atom(hasPrep(5))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrepTime(3)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(6))  ; 
  atom(hasIngredient(4)) >> atom(hasDifficulty(1)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(12))  ; 
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasPrepTime(2))  >> atom(hasPrep(0)) >> atom(hasCost(3)) || not atom(hasCost(3))  ; 
  atom(hasCategory(3)) >> not atom(hasCost(3))  >> atom(hasIngredient(7)) || not atom(hasIngredient(4))  ; 
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(9)) >> atom(hasPrep(1)) >> atom(hasIngredient(7)) || not atom(hasPrep(6))  ; 
  atom(hasCost(4)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasPrep(4))  ; 
  not atom(hasCategory(4))  >> atom(hasIngredient(9)) >> atom(hasCost(2)) || atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(2)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) || not atom(hasPrep(4))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasDifficulty(3)) || not atom(hasCategory(3))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(0)) >> not atom(hasPrepTime(2))  || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(4)) >> not atom(hasIngredient(11))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(6)) >> atom(hasIngredient(9)) >> not atom(hasCost(3))  || not atom(hasPrep(7))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(4)) >> atom(hasDifficulty(1)) || not atom(hasPrep(6))  ; 
  atom(hasCategory(1)) >> atom(hasPrep(6)) >> atom(hasCategory(5)) || not atom(hasCategory(3))  ; 
  atom(hasPrep(4)) >> not atom(hasPrep(7))  >> atom(hasIngredient(7)) 
}.
