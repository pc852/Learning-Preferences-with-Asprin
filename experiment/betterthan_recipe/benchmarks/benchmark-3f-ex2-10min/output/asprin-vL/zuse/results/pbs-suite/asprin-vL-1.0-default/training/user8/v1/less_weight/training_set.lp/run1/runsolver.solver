asprin_vL version 1.0
Reading from stdin
-:1271:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1281:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1296:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1377:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1638:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1651:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1828:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1957:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2029:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2033:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2033:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2039:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2138:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2164:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2284:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2318:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2340:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1188:1-16: info: no atoms over signature occur in program:
  output/3

-:1180:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1181:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(39,eq,4) output(4,eq,46) output(46,eq,60) output(60,eq,79) output(7,eq,33) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(76,eq,4) output(4,eq,72) output(37,eq,60) output(18,eq,37) output(18,eq,60) output(39,eq,72) output(76,eq,72) output(32,eq,4) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(46,eq,79) output(37,eq,79) output(4,eq,60) output(39,eq,46) output(76,eq,46) output(52,eq,4) output(32,eq,39) output(33,eq,52) output(92,eq,52) output(7,eq,32) output(41,eq,52) output(7,eq,52) output(33,eq,39) output(92,eq,39) output(41,eq,39) output(7,eq,39) output(33,eq,4) output(92,eq,4) output(32,eq,46) output(33,eq,46) output(92,eq,46) output(52,eq,46) output(39,eq,60) output(76,eq,60) output(32,eq,60) output(52,eq,60) output(18,eq,79) output(4,eq,79) output(39,eq,79) output(76,eq,79) output(41,eq,76) output(7,eq,76) output(41,eq,4) output(7,eq,4) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(52,eq,72) output(41,eq,72) output(7,eq,72) output(32,eq,79) output(33,eq,79) output(92,eq,79) output(41,eq,79) output(7,eq,79) output(52,eq,79) output(33,eq,60) output(92,eq,60) output(41,eq,60) output(7,eq,60) output(41,eq,46) output(7,eq,46)
Optimization: 74 0
Answer: 2
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasCost(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,79) output(92,better,60) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(39,eq,4) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(76,eq,4) output(4,eq,72) output(39,eq,72) output(76,eq,72) output(32,eq,4) output(33,eq,76) output(92,eq,76) output(41,eq,32) output(52,eq,4) output(32,eq,39) output(33,eq,52) output(92,eq,52) output(41,eq,52) output(33,eq,39) output(92,eq,39) output(41,eq,39) output(33,eq,4) output(92,eq,4) output(41,eq,76) output(41,eq,4) output(32,eq,72) output(33,eq,72) output(92,eq,72) output(52,eq,72) output(41,eq,72)
Optimization: 44 4
Answer: 3
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,79) output(92,better,60) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,4) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,4) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(32,eq,76) output(18,eq,37) output(39,eq,72) output(76,eq,72) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(41,eq,76) output(32,eq,72) output(33,eq,72) output(52,eq,72) output(41,eq,72)
Optimization: 38 4
Answer: 4
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,79) output(92,better,60) output(32,better,52) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,4) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(39,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(33,worse,32) output(33,worse,76) output(33,worse,72) output(52,worse,72) output(52,eq,39) output(39,eq,4) output(32,eq,76) output(18,eq,37) output(76,eq,72) output(41,eq,32) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(33,eq,39) output(92,eq,39) output(33,eq,4) output(92,eq,4) output(41,eq,76) output(32,eq,72) output(41,eq,72)
Optimization: 37 5
Answer: 5
preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),3) preference(1,less(weight)) output(4,better,46) output(4,better,72) output(4,better,60) output(37,better,60) output(39,better,72) output(39,better,46) output(39,better,60) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,60) output(7,better,72) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(33,better,46) output(33,better,72) output(33,better,60) output(41,better,52) output(41,better,39) output(41,better,4) output(41,better,72) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,72) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(18,worse,37) output(18,worse,79) output(46,worse,79) output(60,worse,79) output(4,worse,79) output(37,worse,79) output(39,worse,79) output(7,worse,32) output(7,worse,76) output(7,worse,79) output(33,worse,32) output(33,worse,76) output(33,worse,79) output(52,worse,79) output(52,eq,39) output(39,eq,4) output(46,eq,60) output(7,eq,33) output(41,eq,92) output(92,eq,32) output(32,eq,76) output(18,eq,60) output(92,eq,76) output(41,eq,32) output(52,eq,4) output(33,eq,52) output(7,eq,52) output(33,eq,39) output(7,eq,39) output(33,eq,4) output(76,eq,79) output(41,eq,76) output(7,eq,4) output(32,eq,79) output(92,eq,79) output(41,eq,79)
Optimization: 36 2
Answer: 6
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),3) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,79) output(92,better,60) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(18,worse,79) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(33,eq,32) output(32,eq,52) output(52,eq,39) output(32,eq,76) output(33,eq,76) output(41,eq,32) output(32,eq,39) output(33,eq,52) output(41,eq,52) output(33,eq,39) output(41,eq,39) output(92,eq,4) output(41,eq,76)
Optimization: 33 5
Answer: 7
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasIngredient(3))),2) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,79) output(92,better,60) output(32,better,52) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,4) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(39,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(52,worse,72) output(33,eq,32) output(52,eq,39) output(32,eq,76) output(18,eq,37) output(76,eq,72) output(33,eq,76) output(41,eq,32) output(92,eq,4) output(41,eq,76) output(32,eq,72) output(33,eq,72) output(41,eq,72)
Optimization: 32 5
Answer: 8
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrep(0))),4) preference(1,(1,13),1,for(atom(hasCost(2))),2) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(4,worse,72) output(39,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,39) output(92,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(52,worse,72) output(76,worse,72) output(33,eq,32) output(52,eq,39) output(18,eq,37) output(41,eq,32) output(92,eq,4) output(4,eq,79) output(32,eq,72) output(33,eq,72) output(41,eq,72) output(92,eq,79)
Optimization: 31 5
Answer: 9
preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,76) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,39) output(41,better,76) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(37,worse,79) output(39,worse,4) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(76,worse,4) output(33,eq,32) output(32,eq,52) output(41,eq,92) output(92,eq,32) output(39,eq,72) output(76,eq,72) output(32,eq,4) output(41,eq,32) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(41,eq,52) output(33,eq,4) output(92,eq,4) output(41,eq,4)
Optimization: 30 6
Answer: 10
preference(1,(1,2),1,for(atom(hasIngredient(3))),5) preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(39,better,46) output(39,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(32,better,52) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(37,worse,79) output(39,worse,4) output(39,worse,72) output(39,worse,79) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(52,worse,4) output(52,worse,72) output(76,worse,4) output(33,eq,32) output(41,eq,92) output(92,eq,32) output(76,eq,72) output(32,eq,4) output(41,eq,32) output(33,eq,4) output(92,eq,4) output(41,eq,4) output(52,eq,79)
Optimization: 29 7
Answer: 11
preference(1,(1,2),1,for(atom(hasIngredient(3))),5) preference(1,(1,4),1,for(atom(hasIngredient(10))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(32,better,52) output(32,better,76) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(39,worse,4) output(39,worse,72) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(52,worse,4) output(52,worse,72) output(76,worse,4) output(33,eq,32) output(41,eq,92) output(92,eq,32) output(76,eq,72) output(32,eq,4) output(41,eq,32) output(33,eq,4) output(92,eq,4) output(39,eq,79) output(41,eq,4)
Optimization: 27 8
Answer: 12
preference(1,(1,2),1,for(atom(hasIngredient(3))),5) preference(1,(1,4),1,for(atom(hasCost(4))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),4) preference(1,(1,6),1,for(atom(hasPrepTime(1))),2) preference(1,(1,7),1,for(atom(hasPrep(2))),5) preference(1,(1,8),1,for(atom(hasCost(3))),2) preference(1,(1,9),1,for(atom(hasPrepTime(3))),4) preference(1,(1,10),1,for(atom(hasCost(1))),3) preference(1,(1,12),1,for(atom(hasIngredient(9))),5) preference(1,(1,13),1,for(atom(hasCategory(1))),4) preference(1,(1,14),1,for(atom(hasDifficulty(3))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(39,better,46) output(39,better,60) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,79) output(46,worse,79) output(60,worse,79) output(37,worse,79) output(39,worse,4) output(39,worse,72) output(39,worse,79) output(92,worse,32) output(92,worse,76) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,79) output(7,worse,60) output(7,worse,46) output(33,eq,32) output(37,eq,60) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(92,eq,4)
Optimization: 25 11
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),3) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(10))),6) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,79) output(7,better,60) output(32,better,60) output(32,better,79) output(33,better,32) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(39,worse,4) output(92,worse,76) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,46) output(32,worse,52) output(32,worse,76) output(32,worse,4) output(32,worse,39) output(32,worse,72) output(33,worse,76) output(39,eq,72) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(33,eq,4) output(92,eq,4) output(32,eq,46)
Optimization: 24 14
Answer: 14
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasPrepTime(1))),4) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(10))),6) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,79) output(7,better,60) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,32) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(39,worse,4) output(92,worse,76) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(7,worse,46) output(32,worse,52) output(32,worse,76) output(32,worse,4) output(32,worse,39) output(32,worse,72) output(33,worse,76) output(39,eq,72) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(33,eq,4) output(92,eq,4)
Optimization: 23 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrep(1))),2) preference(1,(1,2),1,for(atom(hasIngredient(7))),8) preference(1,(1,3),1,for(atom(hasCost(2))),2) preference(1,(1,4),1,for(atom(hasIngredient(3))),2) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),7) preference(1,(1,8),1,for(atom(hasPrep(6))),3) preference(1,(1,9),1,for(atom(hasCategory(1))),5) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasCategory(3))),2) preference(1,(1,12),1,for(atom(hasPrep(5))),2) preference(1,(1,13),1,for(atom(hasPrepTime(2))),6) preference(1,(1,14),1,for(atom(hasIngredient(10))),6) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,39) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,32) output(33,better,39) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(39,worse,4) output(92,worse,76) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,39) output(7,worse,76) output(7,worse,4) output(7,worse,72) output(32,worse,52) output(32,worse,76) output(32,worse,4) output(32,worse,39) output(32,worse,72) output(33,worse,76) output(46,eq,60) output(39,eq,72) output(52,eq,4) output(33,eq,52) output(92,eq,52) output(33,eq,4) output(92,eq,4)
Optimization: 22 13
Answer: 16
preference(1,(1,1),1,for(atom(hasCategory(5))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasIngredient(4))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasDifficulty(1))),7) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,4) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,52) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(4,worse,46) output(92,worse,32) output(92,worse,76) output(92,worse,39) output(92,worse,46) output(32,worse,76) output(32,worse,39) output(32,worse,46) output(33,worse,76) output(41,worse,39) output(41,worse,76) output(41,worse,46) output(52,worse,39) output(52,worse,46) output(60,eq,79) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(33,eq,39) output(92,eq,4)
Optimization: 21 14
Answer: 17
preference(1,(1,1),1,for(atom(hasCategory(5))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasIngredient(4))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasIngredient(10))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,52) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,39) output(32,worse,76) output(32,worse,39) output(33,worse,76) output(41,worse,39) output(41,worse,76) output(52,worse,39) output(41,eq,32) output(46,eq,79) output(52,eq,4) output(92,eq,52) output(33,eq,39) output(92,eq,4) output(18,eq,79)
Optimization: 18 14
Answer: 18
preference(1,(1,1),1,for(atom(hasCategory(5))),3) preference(1,(1,2),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasIngredient(4))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),1) preference(1,(1,5),1,for(atom(hasCost(1))),2) preference(1,(1,6),1,for(atom(hasPrep(1))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),6) preference(1,(1,8),1,for(atom(hasIngredient(7))),3) preference(1,(1,9),1,for(atom(hasIngredient(10))),5) preference(1,(1,10),1,for(atom(hasCost(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(2))),4) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,(1,13),1,for(atom(hasPrepTime(2))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(18,better,60) output(46,better,60) output(46,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,4) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,52) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,39) output(32,worse,76) output(32,worse,39) output(33,worse,76) output(41,worse,39) output(41,worse,76) output(52,worse,39) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(33,eq,39) output(92,eq,4) output(18,eq,79)
Optimization: 17 14
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasIngredient(3))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),5) preference(1,(1,5),1,for(atom(hasCategory(3))),4) preference(1,(1,6),1,for(atom(hasCost(1))),4) preference(1,(1,7),1,for(atom(hasIngredient(4))),4) preference(1,(1,9),1,for(atom(hasPrep(7))),5) preference(1,(1,10),1,for(atom(hasPrep(2))),1) preference(1,(1,11),1,for(atom(hasIngredient(12))),5) preference(1,(1,12),1,for(atom(hasDifficulty(1))),2) preference(1,(1,13),1,for(atom(hasPrepTime(1))),2) preference(1,(1,14),1,for(atom(hasIngredient(10))),3) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,60) output(39,better,79) output(92,better,39) output(92,better,46) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,79) output(76,better,4) output(76,better,46) output(76,better,60) output(76,better,79) output(4,worse,72) output(39,worse,4) output(39,worse,72) output(39,worse,46) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(92,worse,72) output(52,worse,72) output(76,worse,72) output(33,eq,32) output(41,eq,32) output(92,eq,4) output(32,eq,72) output(33,eq,72) output(41,eq,72)
Optimization: 16 13
Answer: 20
preference(1,(1,1),1,for(atom(hasPrep(5))),2) preference(1,(1,2),1,for(atom(hasPrep(2))),7) preference(1,(1,3),1,for(atom(hasCategory(1))),8) preference(1,(1,4),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasIngredient(7))),5) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasIngredient(12))),5) preference(1,(1,9),1,for(atom(hasCategory(3))),6) preference(1,(1,10),1,for(atom(hasPrep(6))),2) preference(1,(1,11),1,for(atom(hasPrepTime(2))),4) preference(1,(1,12),1,for(atom(hasCost(2))),1) preference(1,(1,13),1,for(atom(hasPrepTime(3))),4) preference(1,(1,14),1,for(atom(hasIngredient(3))),5) preference(1,less(weight)) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,39) output(7,better,4) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(18,worse,37) output(60,worse,79) output(4,worse,72) output(39,worse,72) output(92,worse,32) output(92,worse,76) output(92,worse,52) output(7,worse,33) output(7,worse,32) output(7,worse,52) output(7,worse,76) output(7,worse,72) output(33,eq,32) output(39,eq,4) output(46,eq,79)
Optimization: 15 13
Answer: 21
preference(1,(1,1),1,for(atom(hasCost(1))),6) preference(1,(1,3),1,for(atom(hasCategory(1))),5) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasPrepTime(2))),2) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(46,worse,79) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,39) output(52,worse,39) output(33,eq,32) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(92,eq,4)
Optimization: 11 5
Answer: 22
preference(1,(1,1),1,for(atom(hasPrepTime(2))),2) preference(1,(1,3),1,for(atom(hasCategory(1))),5) preference(1,(1,11),1,for(atom(hasCost(1))),8) preference(1,(1,12),1,for(atom(hasCost(2))),3) preference(1,(1,13),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79) output(60,worse,79) output(92,worse,32) output(92,worse,76) output(92,worse,39) output(52,worse,39) output(33,eq,32) output(41,eq,32) output(52,eq,4) output(92,eq,52) output(92,eq,4)
Optimization: 10 5
Answer: 23
preference(1,(1,1),1,for(atom(hasCost(3))),5) preference(1,(1,2),1,for(atom(hasIngredient(12))),5) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasIngredient(7))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),1) preference(1,(1,6),1,for(atom(hasCategory(4))),1) preference(1,(1,7),1,for(atom(hasDifficulty(2))),1) preference(1,(1,8),1,for(atom(hasPrepTime(2))),3) preference(1,(1,9),1,for(atom(hasCategory(3))),6) preference(1,(1,10),1,for(atom(hasIngredient(3))),2) preference(1,(1,11),1,for(atom(hasPrep(5))),5) preference(1,(1,12),1,for(atom(hasCost(2))),6) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Progression : 0 [ 3;14] (Error: 3.66667)
Answer: 24
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(10))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasCategory(2))),4) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(12))),2) preference(1,(1,12),1,for(atom(hasPrep(7))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79)
Optimization: 0 13
Answer: 25
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(10))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,9),1,for(atom(hasPrep(7))),2) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(12))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79)
Optimization: 0 12
Answer: 26
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasCost(1))),7) preference(1,(1,4),1,for(atom(hasPrep(7))),2) preference(1,(1,5),1,for(atom(hasCost(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(10))),3) preference(1,(1,7),1,for(atom(hasDifficulty(1))),8) preference(1,(1,8),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasCost(3))),1) preference(1,(1,11),1,for(atom(hasIngredient(12))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),3) preference(1,(1,14),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79)
Optimization: 0 11
Answer: 27
preference(1,(1,1),1,for(atom(hasCost(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),2) preference(1,(1,7),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),3) preference(1,(1,11),1,for(atom(hasIngredient(10))),3) preference(1,(1,12),1,for(atom(hasCost(2))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,less(weight)) output(18,better,37) output(18,better,60) output(18,better,79) output(46,better,60) output(46,better,79) output(60,better,79) output(4,better,46) output(4,better,72) output(4,better,60) output(4,better,79) output(37,better,60) output(37,better,79) output(39,better,4) output(39,better,72) output(39,better,46) output(39,better,60) output(39,better,79) output(92,better,32) output(92,better,76) output(92,better,52) output(92,better,39) output(92,better,4) output(92,better,46) output(92,better,72) output(92,better,79) output(92,better,60) output(7,better,33) output(7,better,32) output(7,better,52) output(7,better,39) output(7,better,76) output(7,better,4) output(7,better,72) output(7,better,79) output(7,better,60) output(7,better,46) output(32,better,52) output(32,better,76) output(32,better,4) output(32,better,39) output(32,better,46) output(32,better,60) output(32,better,72) output(32,better,79) output(33,better,32) output(33,better,76) output(33,better,52) output(33,better,39) output(33,better,4) output(33,better,46) output(33,better,72) output(33,better,79) output(33,better,60) output(41,better,92) output(41,better,32) output(41,better,52) output(41,better,39) output(41,better,76) output(41,better,4) output(41,better,72) output(41,better,79) output(41,better,60) output(41,better,46) output(52,better,39) output(52,better,4) output(52,better,46) output(52,better,60) output(52,better,72) output(52,better,79) output(76,better,4) output(76,better,72) output(76,better,46) output(76,better,60) output(76,better,79)
Optimization: 0 10
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.232 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 27+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 598.646s (Solving: 595.18s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2376.690s
Threads      : 4        (Winner: 4)

Choices      : 11838921 (Domain: 540559)
Conflicts    : 6534027  (Analyzed: 6534024)
Restarts     : 5875     (Average: 1112.17 Last: 450621)
Model-Level  : 262.8   
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6550737  (Deleted: 6242513)
  Binary     : 512      (Ratio:   0.01%)
  Ternary    : 1720     (Ratio:   0.03%)
  Conflict   : 6534024  (Average Length:  438.8 Ratio:  99.74%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 16713    (Average Length:   52.3 Ratio:   0.26%) 
  Distributed: 5577     (Ratio:   0.09% Average LBD: 3.63) 
  Integrated : 16731    (Ratio: 300.00% Unit: 89 Average Jumps: 26.42)
Backjumps    : 6534024  (Average:  1.60 Max: 910 Sum: 10479298)
  Executed   : 6534023  (Average:  1.60 Max: 910 Sum: 10479271 Ratio: 100.00%)
  Bounded    : 1        (Average: 27.00 Max:  27 Sum:     27 Ratio:   0.00%)

Rules        : 796288  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 17854   
Bodies       : 19343   
  Sum        : 148     
  Count      : 14      
Equivalences : 8440     (Atom=Atom: 753 Body=Body: 310 Other: 7377)
Tight        : Yes
Variables    : 17215    (Eliminated:    0 Frozen: 7891)
Constraints  : 814584   (Binary:  98.4% Ternary:   1.2% Other:   0.5%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasCost(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  4 :: atom(hasPrep(6)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  2 :: atom(hasCost(2)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(4)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasPrep(2)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(1)) ; 
  8 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasCost(2)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(5)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(2)) ; 
  4 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  8 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(2)) ; 
  5 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasCategory(1)) ; 
  4 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(2)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCost(3)) ; 
  5 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCategory(4)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(2)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasCost(1)) ; 
  2 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCost(2)) ; 
  3 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(3)) ; 
  2 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(5)) ; 
  1 :: atom(hasPrep(0)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(0)) ; 
  3 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(10)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(1)) 
}.
