asprin_vL version 1.0
Reading from stdin
-:1257:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1282:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1363:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1637:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1814:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2015:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2019:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2019:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2025:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2124:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2150:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2270:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2304:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2326:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1174:1-16: info: no atoms over signature occur in program:
  output/3

-:1166:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1167:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1168:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1169:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1199:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasPrep(3))),()) preference(1,(1,2),1,for(atom(hasPrep(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasPrep(3))),()) preference(1,aso) output(22,better,83) output(84,better,33) output(22,better,10) output(74,better,65) output(80,better,82) output(80,better,33) output(84,better,53) output(80,better,53) output(74,better,82) output(84,better,82) output(74,better,33) output(74,better,53) output(49,worse,84) output(53,worse,80) output(65,worse,80) output(33,worse,80) output(82,worse,80) output(49,worse,80) output(71,eq,46) output(33,eq,53) output(82,eq,33) output(68,eq,88) output(53,eq,82) output(65,eq,82) output(82,eq,53) output(49,eq,33) output(53,eq,53) output(65,eq,53) output(49,eq,53) output(80,eq,80) output(33,eq,82) output(82,eq,82) output(53,eq,33) output(65,eq,33) output(33,eq,33) output(49,eq,82)
Optimization: 26 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasPrep(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(1))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(2))),()) preference(1,aso) output(22,better,83) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(80,better,82) output(65,better,82) output(84,better,53) output(80,better,53) output(65,better,53) output(49,better,53) output(74,better,82) output(33,better,82) output(84,better,82) output(74,better,33) output(49,better,82) output(74,better,53) output(49,worse,84) output(53,worse,80) output(82,worse,33) output(82,worse,80) output(53,worse,33) output(71,eq,46) output(68,eq,88) output(53,eq,82) output(82,eq,53) output(49,eq,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(65,eq,33) output(33,eq,33)
Optimization: 21 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(11))),()) preference(1,(1,4),1,for(atom(hasDifficulty(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasCost(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(6))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasDifficulty(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(22,better,83) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(80,better,82) output(80,better,33) output(65,better,82) output(84,better,53) output(80,better,53) output(65,better,53) output(49,better,53) output(74,better,82) output(33,better,82) output(84,better,82) output(74,better,33) output(49,better,82) output(74,better,53) output(49,worse,84) output(53,worse,80) output(65,worse,80) output(82,worse,33) output(33,worse,80) output(82,worse,80) output(49,worse,80) output(53,worse,33) output(71,eq,46) output(68,eq,88) output(53,eq,82) output(82,eq,53) output(49,eq,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(65,eq,33) output(33,eq,33)
Optimization: 20 6
Progression : [ 1;20] (Error: 19)
Progression : [ 2;20] (Error: 9)
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasCost(4))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(84,better,33) output(53,better,80) output(65,better,80) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(65,better,53) output(49,better,53) output(84,better,80) output(82,better,80) output(49,better,80) output(74,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(22,worse,10) output(80,worse,82) output(80,worse,33) output(80,worse,53) output(74,eq,65) output(68,eq,88) output(53,eq,82) output(82,eq,53) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 18 5
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(3))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,4),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasDifficulty(2))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(84,better,33) output(53,better,80) output(22,better,10) output(74,better,65) output(65,better,80) output(82,better,33) output(68,better,88) output(65,better,82) output(74,better,80) output(84,better,53) output(65,better,53) output(84,better,80) output(82,better,80) output(74,better,82) output(84,better,82) output(53,better,33) output(65,better,33) output(74,better,33) output(74,better,53) output(49,worse,84) output(33,worse,53) output(80,worse,82) output(80,worse,53) output(33,worse,82) output(80,eq,33) output(53,eq,82) output(33,eq,80) output(82,eq,53) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 17 5
Progression : [ 3;17] (Error: 4.66667)
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(3))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),1,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),1,for(atom(hasPrep(5))),()) preference(1,(1,6),1,for(atom(hasPrepTime(3))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(84,better,33) output(33,better,53) output(53,better,80) output(22,better,10) output(74,better,65) output(65,better,80) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(65,better,53) output(84,better,80) output(82,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(74,better,53) output(49,worse,84) output(80,worse,82) output(82,worse,33) output(80,worse,33) output(49,worse,33) output(80,worse,53) output(53,worse,33) output(53,eq,82) output(82,eq,53) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 16 5
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasCategory(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasPrep(7))),()) preference(1,(1,6),2,for(atom(hasPrep(3))),()) preference(1,(1,6),3,for(atom(hasIngredient(10))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(84,better,33) output(53,better,80) output(74,better,65) output(65,better,80) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(49,better,33) output(65,better,53) output(49,better,53) output(84,better,80) output(82,better,80) output(49,better,80) output(74,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(22,worse,10) output(80,worse,82) output(80,worse,33) output(80,worse,53) output(33,eq,53) output(82,eq,33) output(53,eq,82) output(82,eq,53) output(53,eq,53) output(80,eq,80) output(33,eq,82) output(82,eq,82) output(53,eq,33) output(33,eq,33)
Optimization: 15 5
Progression : [ 4;15] (Error: 2.75)
Progression : [ 5;15] (Error: 2)
Progression : [ 6;15] (Error: 1.5)
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,1),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),3,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasIngredient(3))),()) preference(1,(1,2),1,for(atom(hasPrepTime(3))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasPrepTime(3))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasPrep(5))),()) preference(1,(1,3),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasPrep(5))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(22,better,10) output(74,better,65) output(65,better,80) output(68,better,88) output(53,better,82) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(49,better,33) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(82,worse,33) output(80,worse,33) output(82,worse,53) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 13 6
Progression : [ 7;13] (Error: 0.857143)
Progression : [ 8;13] (Error: 0.625)
Answer: 9
preference(1,(1,2),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(65,better,80) output(80,better,82) output(68,better,88) output(53,better,82) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(49,better,33) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(82,worse,33) output(80,worse,33) output(82,worse,53) output(82,worse,80) output(53,worse,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 12 6
Answer: 10
preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(5)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,2),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasIngredient(3))),()) preference(1,(1,4),1,for(atom(hasIngredient(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(7))),()) preference(1,(1,2),2,for(atom(hasPrep(7))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,2),3,for(atom(hasPrep(0))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(53,better,80) output(22,better,10) output(74,better,65) output(65,better,80) output(68,better,88) output(53,better,82) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(49,better,33) output(49,better,53) output(84,better,80) output(82,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(53,better,33) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(33,worse,53) output(80,worse,82) output(82,worse,33) output(80,worse,33) output(82,worse,53) output(80,worse,53) output(53,eq,53) output(65,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 11 4
Progression : [ 9;11] (Error: 0.222222)
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(4)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,2),2,for(atom(hasPrep(0))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(65,better,80) output(80,better,82) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(82,better,53) output(49,better,33) output(80,better,53) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(53,worse,80) output(82,worse,33) output(80,worse,33) output(53,worse,82) output(82,worse,80) output(53,worse,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 10 6
Progression : [10;10] (Error: 0)
Progression : 10 [1;6] (Error: 5)
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasPrepTime(3))),()) preference(1,(1,3),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(65,better,80) output(80,better,82) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(82,better,53) output(49,better,33) output(80,better,53) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(53,worse,80) output(82,worse,33) output(80,worse,33) output(53,worse,82) output(82,worse,80) output(53,worse,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 10 5
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(7)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasCategory(4))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCost(4))),()) preference(1,(1,1),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(1))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(65,better,80) output(80,better,82) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(82,better,53) output(49,better,33) output(80,better,53) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(53,worse,80) output(82,worse,33) output(80,worse,33) output(53,worse,82) output(82,worse,80) output(53,worse,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 10 4
Progression : 10 [2;4] (Error: 1)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,1),1,for(atom(hasPrep(5))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(12))),()) preference(1,(1,1),2,for(atom(hasPrep(7))),()) preference(1,(1,1),3,for(atom(hasDifficulty(2))),()) preference(1,(1,6),3,for(atom(hasCategory(3))),()) preference(1,aso) output(22,better,83) output(71,better,46) output(49,better,84) output(84,better,33) output(33,better,53) output(22,better,10) output(74,better,65) output(65,better,80) output(80,better,82) output(68,better,88) output(65,better,82) output(74,better,80) output(33,better,80) output(84,better,53) output(82,better,53) output(49,better,33) output(80,better,53) output(65,better,53) output(49,better,53) output(84,better,80) output(49,better,80) output(74,better,82) output(33,better,82) output(84,better,82) output(65,better,33) output(74,better,33) output(49,better,82) output(74,better,53) output(53,worse,80) output(82,worse,33) output(80,worse,33) output(53,worse,82) output(82,worse,80) output(53,worse,33) output(53,eq,53) output(80,eq,80) output(82,eq,82) output(33,eq,33)
Optimization: 10 3
OPTIMUM FOUND

Models       : 14
  Optimum    : yes
Optimization : 10 3
Calls        : 1
Time         : 33.295s (Solving: 24.58s 1st Model: 0.47s Unsat: 20.82s)
CPU Time     : 106.831s
Threads      : 4        (Winner: 1)

Choices      : 489551   (Domain: 3743)
Conflicts    : 49161    (Analyzed: 49147)
Restarts     : 91       (Average: 540.08 Last: 3506)
Model-Level  : 694.1   
Problems     : 19       (Average Length: 0.21 Splits: 0)
Lemmas       : 78738    (Deleted: 13937)
  Binary     : 3685     (Ratio:   4.68%)
  Ternary    : 12507    (Ratio:  15.88%)
  Conflict   : 49146    (Average Length:  201.6 Ratio:  62.42%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 29592    (Average Length:   41.1 Ratio:  37.58%) 
  Distributed: 9887     (Ratio:  20.12% Average LBD: 2.94) 
  Integrated : 29658    (Ratio: 299.97% Unit: 362 Average Jumps: 111.39)
Backjumps    : 49147    (Average:  8.78 Max: 988 Sum: 431273)
  Executed   : 49091    (Average:  8.75 Max: 988 Sum: 430276 Ratio:  99.77%)
  Bounded    : 56       (Average: 17.80 Max:  40 Sum:    997 Ratio:   0.23%)

Rules        : 3665824 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 608682  
Bodies       : 744912  
  Count      : 1392    
Equivalences : 1846750  (Atom=Atom: 546544 Body=Body: 593145 Other: 707061)
Tight        : Yes
Variables    : 100579   (Eliminated:    0 Frozen: 35299)
Constraints  : 3209866  (Binary:  96.9% Ternary:   2.8% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> not atom(hasCost(1))  ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasPrep(3)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(6)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasPrep(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(1))  ; 
  atom(hasIngredient(1)) >> atom(hasPrep(4)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(1)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasCost(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasCost(1))  ; 
  atom(hasIngredient(6)) >> atom(hasCost(5)) >> not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasDifficulty(4)) ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasCost(4)) >> not atom(hasIngredient(10))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(4)) >> not atom(hasPrep(4))  || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(3)) >> not atom(hasIngredient(9))  || not atom(hasCost(1))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasIngredient(10)) || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrep(0)) || not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(7))  || not atom(hasCost(1))  ; 
  not atom(hasIngredient(12))  >> not atom(hasIngredient(10))  || atom(hasIngredient(3)) ; 
  atom(hasCost(3)) >> atom(hasDifficulty(2)) || not atom(hasDifficulty(1))  ; 
  not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(1))  >> atom(hasPrep(0)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(5)) >> not atom(hasCategory(2))  >> not atom(hasPrep(3))  || not atom(hasDifficulty(1))  ; 
  not atom(hasIngredient(12))  >> not atom(hasIngredient(10))  || atom(hasIngredient(3)) ; 
  atom(hasPrepTime(3)) >> atom(hasIngredient(12)) >> not atom(hasCategory(4))  || not atom(hasCost(1))  ; 
  not atom(hasCategory(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> not atom(hasIngredient(10))  || not atom(hasPrepTime(3))  ; 
  atom(hasIngredient(3)) >> atom(hasPrep(7)) >> not atom(hasPrepTime(3))  || not atom(hasIngredient(8))  ; 
  atom(hasCategory(4)) >> not atom(hasIngredient(9))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(11)) >> atom(hasPrep(3)) >> atom(hasIngredient(10)) || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(3)) >> not atom(hasDifficulty(2))  >> atom(hasPrep(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasPrepTime(3)) >> not atom(hasCost(3))  >> not atom(hasPrep(6))  || not atom(hasPrep(5))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(7)) >> not atom(hasPrepTime(3))  || not atom(hasPrep(5))  ; 
  atom(hasPrepTime(3)) >> not atom(hasIngredient(9))  >> not atom(hasCategory(1))  || not atom(hasIngredient(8))  ; 
  atom(hasCategory(4)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(5)) || not atom(hasIngredient(9))  ; 
  atom(hasPrep(5)) >> not atom(hasIngredient(6))  >> not atom(hasIngredient(7))  || not atom(hasIngredient(8))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> not atom(hasCategory(4))  || not atom(hasIngredient(3))  ; 
  atom(hasPrep(5)) >> atom(hasCost(1)) >> not atom(hasIngredient(3))  || not atom(hasIngredient(8))  ; 
  atom(hasCategory(4)) >> not atom(hasPrep(1))  >> not atom(hasCost(4))  || not atom(hasDifficulty(1))  ; 
  atom(hasCategory(4)) >> not atom(hasPrepTime(2))  || not atom(hasCategory(2))  ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(9))  >> atom(hasCategory(3)) || not atom(hasDifficulty(1))  ; 
  atom(hasPrep(5)) >> atom(hasPrepTime(3)) >> not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrep(7)) >> atom(hasPrep(0)) || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(3)) >> atom(hasCost(1)) >> not atom(hasDifficulty(4))  || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(7)) >> not atom(hasCost(5))  || not atom(hasCost(3))  ; 
  atom(hasIngredient(7)) >> not atom(hasCategory(4))  || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) >> not atom(hasDifficulty(3))  || not atom(hasPrep(5))  ; 
  atom(hasIngredient(10)) >> atom(hasPrep(0)) || not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(1)) >> not atom(hasPrep(4))  || not atom(hasIngredient(3))  ; 
  atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasCost(4))  || not atom(hasCost(1))  ; 
  not atom(hasCost(2))  >> atom(hasIngredient(7)) || not atom(hasCategory(2))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(4))  >> atom(hasCategory(3)) || not atom(hasDifficulty(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasPrepTime(3)) >> not atom(hasDifficulty(3))  || not atom(hasPrep(5))  ; 
  atom(hasIngredient(8)) >> atom(hasCost(1)) >> not atom(hasPrep(4))  || not atom(hasIngredient(3))  ; 
  atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCost(1))  ; 
  not atom(hasCost(2))  >> atom(hasIngredient(7)) || not atom(hasCategory(2))  ; 
  atom(hasCost(4)) >> not atom(hasCategory(4))  >> atom(hasCategory(3)) || not atom(hasDifficulty(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> atom(hasCost(3)) >> not atom(hasDifficulty(3))  || not atom(hasPrepTime(3))  ; 
  atom(hasCategory(4)) >> atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCost(1))  ; 
  atom(hasCost(1)) >> not atom(hasDifficulty(1))  || not atom(hasIngredient(3))  ; 
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasCategory(4))  || not atom(hasDifficulty(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(5)) >> atom(hasPrep(7)) >> atom(hasDifficulty(2)) || not atom(hasIngredient(3))  ; 
  atom(hasIngredient(3)) >> not atom(hasCategory(3))  >> not atom(hasPrepTime(1))  || not atom(hasIngredient(8))  ; 
  atom(hasIngredient(12)) >> not atom(hasIngredient(7))  >> atom(hasCategory(3)) || not atom(hasIngredient(8))  
}.
