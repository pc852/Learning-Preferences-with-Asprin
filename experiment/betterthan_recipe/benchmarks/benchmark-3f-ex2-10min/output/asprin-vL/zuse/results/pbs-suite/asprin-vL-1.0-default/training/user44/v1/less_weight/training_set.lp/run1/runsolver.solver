asprin_vL version 1.0
Reading from stdin
-:1298:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1308:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1323:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1404:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1665:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1678:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1855:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1984:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2056:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2060:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2060:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2066:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2165:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2191:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2311:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2345:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2367:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1215:1-16: info: no atoms over signature occur in program:
  output/3

-:1207:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1208:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(9,eq,100) output(100,eq,33) output(33,eq,75) output(75,eq,51) output(51,eq,16) output(44,eq,67) output(67,eq,79) output(16,eq,44) output(64,eq,100) output(100,eq,58) output(51,eq,38) output(38,eq,52) output(52,eq,84) output(92,eq,64) output(58,eq,75) output(84,eq,24) output(52,eq,24) output(100,eq,75) output(38,eq,84) output(51,eq,52) output(75,eq,38) output(9,eq,58) output(64,eq,58) output(92,eq,100) output(51,eq,44) output(44,eq,79) output(16,eq,67) output(75,eq,16) output(33,eq,51) output(58,eq,51) output(9,eq,33) output(64,eq,33) output(92,eq,33) output(100,eq,51) output(9,eq,51) output(64,eq,51) output(33,eq,16) output(58,eq,16) output(100,eq,16) output(51,eq,67) output(75,eq,67) output(16,eq,79) output(51,eq,79) output(75,eq,44) output(33,eq,44) output(58,eq,44) output(92,eq,58) output(33,eq,38) output(58,eq,38) output(100,eq,38) output(75,eq,52) output(33,eq,52) output(58,eq,52) output(51,eq,84) output(75,eq,84) output(9,eq,75) output(64,eq,75) output(92,eq,75) output(38,eq,24) output(51,eq,24) output(75,eq,24) output(33,eq,24) output(58,eq,24) output(100,eq,24) output(9,eq,24) output(64,eq,24) output(33,eq,84) output(58,eq,84) output(100,eq,84) output(9,eq,84) output(64,eq,84) output(92,eq,84) output(100,eq,52) output(9,eq,52) output(64,eq,52) output(92,eq,52) output(9,eq,38) output(64,eq,38) output(92,eq,38) output(100,eq,44) output(9,eq,44) output(64,eq,44) output(92,eq,44) output(75,eq,79) output(33,eq,79) output(58,eq,79) output(100,eq,79) output(9,eq,79) output(64,eq,79) output(33,eq,67) output(58,eq,67) output(100,eq,67) output(9,eq,67) output(64,eq,67) output(92,eq,67) output(9,eq,16) output(64,eq,16) output(92,eq,16) output(92,eq,51) output(92,eq,79) output(92,eq,24)
Optimization: 101 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),5) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,24) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,52) output(9,better,44) output(9,better,16) output(38,better,52) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,52) output(64,better,44) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,52) output(92,better,16) output(100,better,58) output(75,better,38) output(75,better,16) output(75,better,44) output(75,better,52) output(67,worse,79) output(9,worse,51) output(9,worse,75) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(38,worse,84) output(38,worse,24) output(64,worse,51) output(64,worse,75) output(64,worse,24) output(64,worse,84) output(64,worse,38) output(64,worse,79) output(64,worse,67) output(92,worse,64) output(92,worse,75) output(92,worse,84) output(92,worse,38) output(92,worse,67) output(92,worse,51) output(92,worse,79) output(92,worse,24) output(100,worse,75) output(100,worse,51) output(100,worse,16) output(100,worse,38) output(100,worse,24) output(100,worse,84) output(100,worse,52) output(100,worse,44) output(100,worse,79) output(100,worse,67) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(33,worse,75) output(33,worse,51) output(33,worse,16) output(33,worse,44) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(100,eq,33) output(75,eq,67) output(51,eq,84) output(92,eq,44)
Optimization: 70 9
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),5) preference(1,(1,11),1,for(atom(hasIngredient(4))),1) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,24) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,52) output(9,better,44) output(9,better,16) output(38,better,52) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,52) output(64,better,44) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,52) output(92,better,16) output(100,better,58) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,52) output(67,worse,79) output(9,worse,51) output(9,worse,75) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(38,worse,84) output(38,worse,24) output(64,worse,51) output(64,worse,75) output(64,worse,24) output(64,worse,84) output(64,worse,38) output(64,worse,79) output(64,worse,67) output(92,worse,64) output(92,worse,75) output(92,worse,84) output(92,worse,38) output(92,worse,67) output(92,worse,51) output(92,worse,79) output(92,worse,24) output(100,worse,75) output(100,worse,51) output(100,worse,16) output(100,worse,38) output(100,worse,24) output(100,worse,84) output(100,worse,52) output(100,worse,44) output(100,worse,79) output(100,worse,67) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(33,worse,75) output(33,worse,51) output(33,worse,16) output(33,worse,44) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(100,eq,33) output(51,eq,84) output(92,eq,44)
Optimization: 69 10
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(1))),7) preference(1,(1,2),1,for(atom(hasPrep(7))),6) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasDifficulty(2))),8) preference(1,(1,7),1,for(atom(hasPrep(4))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),5) preference(1,(1,11),1,for(atom(hasIngredient(4))),7) preference(1,(1,12),1,for(atom(hasCost(4))),4) preference(1,(1,13),1,for(atom(hasIngredient(12))),3) preference(1,(1,14),1,for(atom(hasCategory(3))),2) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,24) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,52) output(9,better,44) output(9,better,67) output(9,better,16) output(38,better,52) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,52) output(64,better,44) output(64,better,67) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,52) output(92,better,16) output(100,better,58) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,52) output(67,worse,79) output(9,worse,51) output(9,worse,75) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(38,worse,84) output(38,worse,24) output(64,worse,51) output(64,worse,75) output(64,worse,24) output(64,worse,84) output(64,worse,38) output(64,worse,79) output(92,worse,64) output(92,worse,75) output(92,worse,84) output(92,worse,38) output(92,worse,51) output(92,worse,79) output(92,worse,24) output(100,worse,75) output(100,worse,51) output(100,worse,16) output(100,worse,38) output(100,worse,24) output(100,worse,84) output(100,worse,52) output(100,worse,44) output(100,worse,79) output(100,worse,67) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(33,worse,75) output(33,worse,51) output(33,worse,16) output(33,worse,44) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(100,eq,33) output(44,eq,67) output(51,eq,84) output(92,eq,44) output(92,eq,67)
Optimization: 67 10
Answer: 5
preference(1,(1,13),1,for(atom(hasIngredient(7))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),4) preference(1,less(weight)) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(9,better,58) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,79) output(9,better,67) output(38,better,84) output(38,better,24) output(92,better,64) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,67) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,24) output(100,better,84) output(100,better,79) output(100,better,67) output(16,better,67) output(16,better,79) output(33,better,75) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(64,worse,100) output(64,worse,33) output(64,worse,51) output(64,worse,52) output(64,worse,38) output(64,worse,44) output(64,worse,16) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,44) output(75,worse,52) output(9,eq,100) output(100,eq,33) output(51,eq,16) output(67,eq,79) output(16,eq,44) output(51,eq,38) output(38,eq,52) output(58,eq,75) output(84,eq,24) output(51,eq,52) output(64,eq,58) output(92,eq,100) output(51,eq,44) output(33,eq,51) output(9,eq,33) output(92,eq,33) output(100,eq,51) output(9,eq,51) output(33,eq,16) output(100,eq,16) output(75,eq,67) output(33,eq,44) output(33,eq,38) output(100,eq,38) output(33,eq,52) output(75,eq,84) output(64,eq,75) output(75,eq,24) output(58,eq,24) output(64,eq,24) output(58,eq,84) output(64,eq,84) output(100,eq,52) output(9,eq,52) output(92,eq,52) output(9,eq,38) output(92,eq,38) output(100,eq,44) output(9,eq,44) output(92,eq,44) output(75,eq,79) output(58,eq,79) output(64,eq,79) output(58,eq,67) output(64,eq,67) output(9,eq,16) output(92,eq,16) output(92,eq,51)
Optimization: 65 2
Answer: 6
preference(1,(1,13),1,for(atom(hasPrep(5))),4) preference(1,(1,14),1,for(atom(hasDifficulty(1))),4) preference(1,less(weight)) output(51,better,38) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,38) output(9,better,79) output(9,better,67) output(92,better,64) output(92,better,75) output(92,better,84) output(92,better,38) output(92,better,67) output(92,better,79) output(92,better,24) output(100,better,75) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,79) output(100,better,67) output(16,better,67) output(16,better,79) output(33,better,75) output(33,better,38) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,75) output(58,better,38) output(58,better,24) output(58,better,84) output(58,better,79) output(58,better,67) output(38,worse,52) output(64,worse,100) output(64,worse,58) output(64,worse,33) output(64,worse,51) output(64,worse,52) output(64,worse,44) output(64,worse,16) output(75,worse,51) output(75,worse,16) output(75,worse,44) output(75,worse,52) output(9,eq,100) output(100,eq,33) output(51,eq,16) output(67,eq,79) output(16,eq,44) output(100,eq,58) output(84,eq,24) output(38,eq,84) output(51,eq,52) output(75,eq,38) output(9,eq,58) output(92,eq,100) output(51,eq,44) output(33,eq,51) output(58,eq,51) output(9,eq,33) output(92,eq,33) output(100,eq,51) output(9,eq,51) output(33,eq,16) output(58,eq,16) output(100,eq,16) output(75,eq,67) output(33,eq,44) output(58,eq,44) output(92,eq,58) output(33,eq,52) output(58,eq,52) output(75,eq,84) output(64,eq,75) output(38,eq,24) output(75,eq,24) output(64,eq,24) output(64,eq,84) output(100,eq,52) output(9,eq,52) output(92,eq,52) output(64,eq,38) output(100,eq,44) output(9,eq,44) output(92,eq,44) output(75,eq,79) output(64,eq,79) output(64,eq,67) output(9,eq,16) output(92,eq,16) output(92,eq,51)
Optimization: 59 2
Answer: 7
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasIngredient(3))),7) preference(1,(1,6),1,for(atom(hasIngredient(4))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasIngredient(7))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(84,better,24) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,52) output(100,better,44) output(100,better,67) output(33,better,75) output(33,better,51) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,44) output(51,worse,67) output(51,worse,79) output(51,worse,84) output(51,worse,24) output(67,worse,79) output(9,worse,100) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(64,worse,38) output(100,worse,38) output(100,worse,84) output(100,worse,79) output(16,worse,67) output(16,worse,79) output(33,worse,16) output(33,worse,44) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,67) output(75,worse,44) output(75,worse,52) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(16,eq,44) output(58,eq,75) output(9,eq,52) output(92,eq,38) output(9,eq,44) output(9,eq,16)
Optimization: 57 14
Answer: 8
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasIngredient(3))),7) preference(1,(1,6),1,for(atom(hasIngredient(4))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(3))),2) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(84,better,24) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,44) output(38,better,52) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,52) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,52) output(100,better,44) output(100,better,67) output(16,better,44) output(33,better,75) output(33,better,51) output(33,better,44) output(58,better,75) output(58,better,51) output(58,better,44) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(51,worse,79) output(51,worse,84) output(51,worse,24) output(67,worse,79) output(9,worse,100) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(38,worse,84) output(92,worse,64) output(92,worse,84) output(92,worse,79) output(100,worse,38) output(100,worse,24) output(100,worse,84) output(100,worse,79) output(16,worse,67) output(16,worse,79) output(33,worse,16) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,38) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,38) output(75,worse,16) output(75,worse,67) output(75,worse,52) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(75,eq,51) output(9,eq,58) output(51,eq,44) output(58,eq,16) output(75,eq,44) output(58,eq,52) output(9,eq,52) output(92,eq,38) output(9,eq,16)
Optimization: 56 14
Answer: 9
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasIngredient(3))),7) preference(1,(1,6),1,for(atom(hasIngredient(4))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasCost(3))),6) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(51,better,44) output(84,better,24) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,44) output(38,better,52) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,52) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,52) output(100,better,44) output(100,better,67) output(16,better,44) output(33,better,75) output(33,better,51) output(33,better,44) output(58,better,75) output(58,better,51) output(58,better,44) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(51,worse,79) output(51,worse,84) output(51,worse,24) output(67,worse,79) output(9,worse,100) output(9,worse,24) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(38,worse,84) output(92,worse,64) output(92,worse,84) output(92,worse,79) output(100,worse,38) output(100,worse,84) output(100,worse,79) output(16,worse,67) output(16,worse,79) output(33,worse,16) output(33,worse,38) output(33,worse,52) output(33,worse,24) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,38) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,67) output(75,worse,52) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(9,eq,58) output(58,eq,16) output(75,eq,44) output(58,eq,52) output(9,eq,52) output(92,eq,38) output(9,eq,16)
Optimization: 54 14
Answer: 10
preference(1,(1,1),1,for(atom(hasCategory(4))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasPrepTime(3))),3) preference(1,(1,4),1,for(atom(hasPrep(6))),5) preference(1,(1,5),1,for(atom(hasIngredient(3))),7) preference(1,(1,6),1,for(atom(hasIngredient(4))),7) preference(1,(1,7),1,for(atom(hasCategory(1))),5) preference(1,(1,8),1,for(atom(hasPrep(5))),2) preference(1,(1,9),1,for(atom(hasDifficulty(3))),8) preference(1,(1,10),1,for(atom(hasCost(2))),4) preference(1,(1,11),1,for(atom(hasCost(4))),8) preference(1,(1,12),1,for(atom(hasCategory(3))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),4) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(51,better,44) output(84,better,24) output(9,better,33) output(9,better,51) output(9,better,24) output(9,better,44) output(38,better,52) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,52) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,52) output(100,better,44) output(100,better,67) output(16,better,44) output(33,better,51) output(33,better,44) output(52,better,24) output(58,better,51) output(58,better,44) output(58,better,24) output(75,better,51) output(75,better,44) output(75,better,24) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(51,worse,79) output(51,worse,84) output(51,worse,24) output(67,worse,79) output(9,worse,100) output(9,worse,84) output(9,worse,38) output(9,worse,79) output(9,worse,67) output(38,worse,84) output(92,worse,64) output(92,worse,84) output(92,worse,79) output(100,worse,38) output(100,worse,84) output(100,worse,79) output(16,worse,67) output(16,worse,79) output(33,worse,75) output(33,worse,16) output(33,worse,38) output(33,worse,52) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(58,worse,38) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,38) output(75,worse,67) output(75,worse,84) output(75,worse,79) output(58,eq,75) output(9,eq,58) output(75,eq,16) output(58,eq,16) output(75,eq,52) output(58,eq,52) output(9,eq,75) output(33,eq,24) output(9,eq,52) output(92,eq,38) output(9,eq,16)
Optimization: 51 14
Answer: 11
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(3))),5) preference(1,(1,11),1,for(atom(hasCost(4))),2) preference(1,(1,12),1,for(atom(hasPrep(4))),6) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(51,better,16) output(51,better,52) output(51,better,44) output(51,better,24) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,44) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,16) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,44) output(92,better,16) output(92,better,51) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,16) output(100,better,24) output(100,better,52) output(100,better,44) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(75,better,16) output(75,better,44) output(75,better,52) output(51,worse,38) output(51,worse,67) output(51,worse,79) output(51,worse,84) output(67,worse,79) output(9,worse,38) output(64,worse,38) output(64,worse,79) output(92,worse,38) output(92,worse,79) output(100,worse,38) output(100,worse,84) output(100,worse,79) output(100,worse,67) output(16,worse,67) output(16,worse,79) output(33,worse,51) output(33,worse,38) output(33,worse,84) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,67) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(16,eq,44) output(92,eq,64) output(100,eq,51) output(9,eq,79) output(64,eq,67) output(92,eq,67)
Optimization: 47 13
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(3))),5) preference(1,(1,11),1,for(atom(hasCost(4))),2) preference(1,(1,12),1,for(atom(hasIngredient(7))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(51,better,16) output(51,better,52) output(51,better,44) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,16) output(92,better,64) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,44) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(75,better,16) output(75,better,44) output(75,better,52) output(51,worse,38) output(51,worse,67) output(51,worse,79) output(9,worse,38) output(64,worse,100) output(64,worse,38) output(64,worse,79) output(64,worse,67) output(92,worse,38) output(100,worse,38) output(16,worse,67) output(16,worse,79) output(33,worse,51) output(33,worse,38) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,67) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(16,eq,44) output(92,eq,100) output(33,eq,84) output(100,eq,67) output(92,eq,67)
Optimization: 41 13
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(6))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrep(7))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasCategory(1))),1) preference(1,(1,8),1,for(atom(hasPrep(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(3))),5) preference(1,(1,11),1,for(atom(hasCost(4))),2) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(2))),2) preference(1,less(weight)) output(51,better,16) output(51,better,52) output(51,better,44) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,16) output(92,better,64) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(75,better,16) output(75,better,44) output(75,better,52) output(51,worse,38) output(51,worse,67) output(51,worse,79) output(64,worse,100) output(64,worse,38) output(64,worse,79) output(64,worse,67) output(16,worse,67) output(16,worse,79) output(33,worse,51) output(33,worse,38) output(33,worse,79) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,24) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,67) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(16,eq,44) output(92,eq,100) output(33,eq,84) output(100,eq,67) output(92,eq,67)
Optimization: 38 13
Answer: 14
preference(1,(1,1),1,for(atom(hasCategory(4))),8) preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),1) preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasPrepTime(2))),4) preference(1,(1,6),1,for(atom(hasIngredient(3))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),3) preference(1,(1,9),1,for(atom(hasPrep(5))),3) preference(1,(1,10),1,for(atom(hasIngredient(7))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasCategory(3))),4) preference(1,(1,13),1,for(atom(hasDifficulty(1))),7) preference(1,(1,14),1,for(atom(hasCost(3))),7) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(67,better,79) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,75) output(64,better,52) output(64,better,44) output(64,better,79) output(64,better,16) output(92,better,64) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,44) output(92,better,16) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,79) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,84) output(33,better,79) output(44,better,79) output(58,better,52) output(58,better,79) output(75,better,16) output(75,better,44) output(75,better,52) output(75,better,79) output(84,worse,24) output(64,worse,100) output(64,worse,33) output(64,worse,51) output(64,worse,24) output(64,worse,38) output(64,worse,67) output(92,worse,100) output(92,worse,38) output(92,worse,67) output(92,worse,51) output(16,worse,67) output(33,worse,51) output(33,worse,38) output(33,worse,67) output(44,worse,67) output(52,worse,84) output(52,worse,24) output(58,worse,75) output(58,worse,51) output(58,worse,38) output(58,worse,24) output(58,worse,84) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,67) output(75,worse,84) output(75,worse,24) output(9,eq,100) output(16,eq,44) output(58,eq,16) output(58,eq,44) output(33,eq,24) output(64,eq,84)
Optimization: 35 14
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),5) preference(1,(1,2),1,for(atom(hasCategory(1))),8) preference(1,(1,3),1,for(atom(hasDifficulty(2))),1) preference(1,(1,4),1,for(atom(hasCost(2))),3) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasDifficulty(3))),3) preference(1,(1,7),1,for(atom(hasIngredient(3))),6) preference(1,(1,8),1,for(atom(hasPrepTime(2))),2) preference(1,(1,9),1,for(atom(hasCost(3))),5) preference(1,(1,10),1,for(atom(hasIngredient(4))),7) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasIngredient(7))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),5) preference(1,(1,14),1,for(atom(hasCategory(4))),8) preference(1,less(weight)) output(51,better,16) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,24) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,52) output(64,better,44) output(64,better,67) output(64,better,16) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,67) output(16,better,44) output(16,better,67) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(33,better,67) output(52,better,24) output(58,better,75) output(58,better,44) output(58,better,24) output(58,better,67) output(75,better,44) output(75,better,24) output(51,worse,38) output(51,worse,79) output(51,worse,84) output(67,worse,79) output(9,worse,79) output(64,worse,100) output(64,worse,84) output(64,worse,38) output(64,worse,79) output(92,worse,79) output(100,worse,79) output(16,worse,79) output(33,worse,38) output(33,worse,84) output(33,worse,79) output(44,worse,67) output(44,worse,79) output(52,worse,84) output(58,worse,51) output(58,worse,16) output(58,worse,38) output(58,worse,84) output(58,worse,79) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,52) output(75,worse,84) output(75,worse,79) output(33,eq,51) output(75,eq,67) output(100,eq,38) output(58,eq,52)
Optimization: 33 14
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),6) preference(1,(1,2),1,for(atom(hasDifficulty(4))),7) preference(1,(1,3),1,for(atom(hasDifficulty(3))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),3) preference(1,(1,5),1,for(atom(hasIngredient(3))),3) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrep(6))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),1) preference(1,(1,10),1,for(atom(hasPrep(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasIngredient(7))),4) preference(1,(1,13),1,for(atom(hasCost(3))),5) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(51,better,44) output(51,better,79) output(51,better,84) output(51,better,24) output(67,better,79) output(9,better,58) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,44) output(9,better,79) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,79) output(64,better,16) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(16,better,44) output(16,better,79) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(52,better,84) output(52,better,24) output(58,better,75) output(58,better,51) output(58,better,44) output(58,better,24) output(58,better,84) output(58,better,79) output(75,better,44) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(9,worse,100) output(9,worse,33) output(9,worse,38) output(9,worse,67) output(64,worse,67) output(92,worse,67) output(100,worse,38) output(100,worse,67) output(16,worse,67) output(33,worse,38) output(33,worse,67) output(44,worse,67) output(44,worse,79) output(58,worse,38) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,67) output(75,worse,52) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(100,eq,33) output(84,eq,24) output(58,eq,16) output(58,eq,52) output(64,eq,38)
Optimization: 32 14
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,2),1,for(atom(hasPrep(2))),2) preference(1,(1,3),1,for(atom(hasIngredient(7))),6) preference(1,(1,4),1,for(atom(hasCost(3))),8) preference(1,(1,5),1,for(atom(hasPrep(6))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),1) preference(1,(1,7),1,for(atom(hasDifficulty(4))),3) preference(1,(1,8),1,for(atom(hasIngredient(3))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasDifficulty(2))),3) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),7) preference(1,(1,13),1,for(atom(hasCost(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(3))),7) preference(1,less(weight)) output(51,better,16) output(51,better,44) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,16) output(92,better,64) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,44) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(52,better,84) output(52,better,24) output(58,better,75) output(58,better,16) output(58,better,44) output(58,better,24) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(51,worse,79) output(64,worse,100) output(64,worse,33) output(64,worse,67) output(16,worse,67) output(16,worse,79) output(44,worse,67) output(44,worse,79) output(58,worse,51) output(58,worse,38) output(58,worse,52) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,67) output(75,worse,44) output(75,worse,52) output(75,worse,84) output(75,worse,24) output(75,worse,79) output(100,eq,33) output(38,eq,52) output(92,eq,100) output(92,eq,33) output(58,eq,84) output(64,eq,79)
Optimization: 31 14
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(6))),4) preference(1,(1,2),1,for(atom(hasIngredient(7))),1) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasCost(2))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),3) preference(1,(1,6),1,for(atom(hasDifficulty(3))),5) preference(1,(1,7),1,for(atom(hasCost(3))),6) preference(1,(1,8),1,for(atom(hasPrep(2))),6) preference(1,(1,9),1,for(atom(hasIngredient(10))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),7) preference(1,(1,11),1,for(atom(hasDifficulty(4))),1) preference(1,(1,12),1,for(atom(hasIngredient(3))),2) preference(1,(1,13),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasCost(1))),8) preference(1,less(weight)) output(51,better,44) output(51,better,84) output(51,better,24) output(67,better,79) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,58) output(64,better,51) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,79) output(64,better,16) output(92,better,64) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,44) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(52,better,84) output(52,better,24) output(58,better,44) output(58,better,84) output(75,better,51) output(75,better,16) output(75,better,44) output(75,better,52) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,67) output(51,worse,79) output(84,worse,24) output(64,worse,100) output(64,worse,33) output(64,worse,38) output(64,worse,67) output(92,worse,100) output(92,worse,33) output(16,worse,67) output(16,worse,79) output(44,worse,67) output(44,worse,79) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,38) output(58,worse,52) output(58,worse,79) output(58,worse,67) output(75,worse,38) output(75,worse,67) output(100,eq,33) output(64,eq,75) output(58,eq,24) output(92,eq,67)
Optimization: 29 14
Answer: 19
preference(1,(1,1),1,for(atom(hasDifficulty(1))),8) preference(1,(1,2),1,for(atom(hasPrep(1))),2) preference(1,(1,3),1,for(atom(hasCost(1))),4) preference(1,(1,4),1,for(atom(hasCategory(1))),4) preference(1,(1,5),1,for(atom(hasPrep(6))),3) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasPrep(5))),4) preference(1,(1,9),1,for(atom(hasIngredient(7))),8) preference(1,(1,10),1,for(atom(hasCategory(3))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),5) preference(1,(1,13),1,for(atom(hasPrep(2))),5) preference(1,(1,14),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(51,better,52) output(51,better,67) output(51,better,79) output(51,better,84) output(67,better,79) output(9,better,51) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(38,better,52) output(38,better,84) output(64,better,84) output(64,better,52) output(64,better,79) output(64,better,67) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,44) output(16,better,67) output(16,better,79) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(58,better,51) output(58,better,44) output(58,better,38) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(58,better,67) output(75,better,51) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,52) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,16) output(51,worse,24) output(84,worse,24) output(9,worse,100) output(9,worse,58) output(9,worse,33) output(9,worse,75) output(9,worse,16) output(38,worse,24) output(64,worse,100) output(64,worse,58) output(64,worse,33) output(64,worse,75) output(64,worse,24) output(64,worse,16) output(100,worse,75) output(33,worse,75) output(52,worse,24) output(58,worse,75) output(100,eq,33) output(51,eq,38) output(51,eq,44) output(64,eq,51) output(58,eq,16) output(92,eq,75) output(64,eq,38) output(64,eq,44)
Optimization: 27 14
Answer: 20
preference(1,(1,1),1,for(atom(hasIngredient(7))),5) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),3) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasDifficulty(3))),2) preference(1,(1,8),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasIngredient(3))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(51,better,67) output(51,better,84) output(9,better,58) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,84) output(38,better,24) output(64,better,51) output(64,better,24) output(64,better,84) output(64,better,79) output(64,better,67) output(92,better,64) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,67) output(16,better,79) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,51) output(58,better,16) output(58,better,44) output(58,better,38) output(58,better,24) output(58,better,84) output(58,better,79) output(58,better,67) output(75,better,51) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,44) output(51,worse,79) output(51,worse,24) output(67,worse,79) output(84,worse,24) output(9,worse,33) output(38,worse,52) output(64,worse,100) output(64,worse,58) output(64,worse,33) output(64,worse,75) output(64,worse,52) output(92,worse,33) output(100,worse,33) output(9,eq,100) output(16,eq,44) output(58,eq,75) output(92,eq,100) output(75,eq,52) output(58,eq,52) output(64,eq,38) output(64,eq,44) output(64,eq,16)
Optimization: 26 13
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(7))),5) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasCost(1))),5) preference(1,(1,4),1,for(atom(hasCategory(1))),8) preference(1,(1,5),1,for(atom(hasDifficulty(3))),2) preference(1,(1,6),1,for(atom(hasPrepTime(2))),5) preference(1,(1,7),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasIngredient(3))),4) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,less(weight)) output(51,better,67) output(51,better,84) output(51,better,24) output(9,better,58) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,84) output(38,better,24) output(64,better,51) output(64,better,24) output(64,better,84) output(64,better,79) output(64,better,67) output(92,better,64) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,67) output(16,better,79) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,51) output(58,better,16) output(58,better,44) output(58,better,38) output(58,better,24) output(58,better,84) output(58,better,79) output(58,better,67) output(75,better,51) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,16) output(51,worse,38) output(51,worse,52) output(51,worse,44) output(51,worse,79) output(67,worse,79) output(84,worse,24) output(9,worse,33) output(38,worse,52) output(64,worse,100) output(64,worse,58) output(64,worse,33) output(64,worse,75) output(64,worse,52) output(92,worse,33) output(100,worse,33) output(9,eq,100) output(16,eq,44) output(58,eq,75) output(92,eq,100) output(75,eq,52) output(58,eq,52) output(64,eq,38) output(64,eq,44) output(64,eq,16)
Optimization: 25 13
Answer: 22
preference(1,(1,1),1,for(atom(hasCost(2))),1) preference(1,(1,2),1,for(atom(hasIngredient(3))),6) preference(1,(1,3),1,for(atom(hasPrepTime(2))),5) preference(1,(1,4),1,for(atom(hasIngredient(10))),6) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),3) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasCost(1))),7) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasDifficulty(2))),8) preference(1,(1,12),1,for(atom(hasCost(3))),1) preference(1,(1,13),1,for(atom(hasIngredient(4))),6) preference(1,(1,14),1,for(atom(hasPrep(6))),1) preference(1,less(weight)) output(51,better,52) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,58) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,67) output(16,better,79) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,52) output(58,better,24) output(58,better,84) output(58,better,79) output(58,better,67) output(75,better,67) output(75,better,52) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,38) output(9,worse,38) output(64,worse,38) output(92,worse,64) output(92,worse,38) output(100,worse,38) output(33,worse,38) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(75,worse,51) output(75,worse,38) output(75,worse,16) output(75,worse,44) output(9,eq,100) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(58,eq,75) output(92,eq,100) output(51,eq,44) output(9,eq,33) output(92,eq,33)
Optimization: 24 14
Answer: 23
preference(1,(1,1),1,for(atom(hasCategory(5))),2) preference(1,(1,2),1,for(atom(hasIngredient(10))),3) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(12))),1) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasCost(4))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasIngredient(9))),4) preference(1,(1,10),1,for(atom(hasIngredient(4))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasDifficulty(3))),4) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,58) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,16) output(58,better,24) output(75,better,16) output(75,better,84) output(75,better,24) output(75,better,79) output(9,worse,100) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(44,worse,67) output(58,worse,75) output(58,worse,51) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,84) output(58,worse,79) output(58,worse,67) output(75,worse,51) output(75,worse,38) output(75,worse,67) output(75,worse,52) output(33,eq,51) output(9,eq,33) output(9,eq,51) output(75,eq,44)
Optimization: 21 14
Answer: 24
preference(1,(1,1),1,for(atom(hasCategory(5))),2) preference(1,(1,2),1,for(atom(hasIngredient(10))),3) preference(1,(1,3),1,for(atom(hasIngredient(3))),7) preference(1,(1,4),1,for(atom(hasPrep(3))),6) preference(1,(1,5),1,for(atom(hasIngredient(12))),1) preference(1,(1,6),1,for(atom(hasCost(1))),6) preference(1,(1,7),1,for(atom(hasCost(4))),2) preference(1,(1,8),1,for(atom(hasPrep(5))),5) preference(1,(1,9),1,for(atom(hasIngredient(9))),4) preference(1,(1,10),1,for(atom(hasIngredient(4))),1) preference(1,(1,11),1,for(atom(hasPrepTime(1))),5) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasPrep(7))),3) preference(1,less(weight)) output(51,better,16) output(51,better,38) output(51,better,52) output(51,better,44) output(51,better,67) output(51,better,79) output(51,better,84) output(51,better,24) output(9,better,58) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,64) output(92,better,100) output(92,better,33) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,33) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(33,better,75) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,16) output(58,better,24) output(58,better,84) output(58,better,67) output(75,better,16) output(75,better,67) output(75,better,84) output(75,better,24) output(75,better,79) output(67,worse,79) output(84,worse,24) output(9,worse,100) output(16,worse,44) output(16,worse,67) output(16,worse,79) output(58,worse,75) output(58,worse,51) output(58,worse,44) output(58,worse,38) output(58,worse,52) output(58,worse,79) output(75,worse,51) output(75,worse,38) output(75,worse,44) output(75,worse,52) output(33,eq,51) output(9,eq,33) output(9,eq,51)
Optimization: 19 14
Answer: 25
preference(1,(1,1),1,for(atom(hasPrep(6))),6) preference(1,(1,2),1,for(atom(hasDifficulty(1))),5) preference(1,(1,3),1,for(atom(hasCategory(1))),4) preference(1,(1,4),1,for(atom(hasIngredient(10))),1) preference(1,(1,5),1,for(atom(hasIngredient(3))),5) preference(1,(1,6),1,for(atom(hasPrep(1))),4) preference(1,(1,7),1,for(atom(hasPrepTime(2))),2) preference(1,(1,8),1,for(atom(hasPrepTime(3))),6) preference(1,(1,9),1,for(atom(hasIngredient(7))),2) preference(1,(1,10),1,for(atom(hasIngredient(9))),6) preference(1,(1,11),1,for(atom(hasCost(2))),4) preference(1,(1,12),1,for(atom(hasCost(1))),7) preference(1,(1,13),1,for(atom(hasPrep(2))),4) preference(1,(1,14),1,for(atom(hasPrep(5))),8) preference(1,less(weight)) output(51,better,52) output(51,better,79) output(51,better,84) output(51,better,24) output(67,better,79) output(84,better,24) output(9,better,100) output(9,better,58) output(9,better,33) output(9,better,51) output(9,better,75) output(9,better,24) output(9,better,84) output(9,better,52) output(9,better,38) output(9,better,44) output(9,better,79) output(9,better,67) output(9,better,16) output(38,better,52) output(38,better,84) output(38,better,24) output(64,better,100) output(64,better,58) output(64,better,33) output(64,better,51) output(64,better,75) output(64,better,24) output(64,better,84) output(64,better,52) output(64,better,38) output(64,better,44) output(64,better,79) output(64,better,67) output(64,better,16) output(92,better,58) output(92,better,75) output(92,better,84) output(92,better,52) output(92,better,38) output(92,better,44) output(92,better,67) output(92,better,16) output(92,better,51) output(92,better,79) output(92,better,24) output(100,better,58) output(100,better,75) output(100,better,51) output(100,better,16) output(100,better,38) output(100,better,24) output(100,better,84) output(100,better,52) output(100,better,44) output(100,better,79) output(100,better,67) output(16,better,79) output(33,better,75) output(33,better,51) output(33,better,16) output(33,better,44) output(33,better,38) output(33,better,52) output(33,better,24) output(33,better,84) output(33,better,79) output(33,better,67) output(44,better,79) output(52,better,84) output(52,better,24) output(58,better,24) output(58,better,84) output(58,better,79) output(75,better,51) output(75,better,38) output(75,better,16) output(75,better,67) output(75,better,44) output(75,better,52) output(75,better,84) output(75,better,24) output(75,better,79) output(51,worse,67) output(92,worse,64) output(16,worse,67) output(44,worse,67) output(58,worse,75) output(58,worse,51) output(58,worse,16) output(58,worse,44) output(58,worse,38) output(58,worse,67) output(100,eq,33) output(51,eq,16) output(16,eq,44) output(51,eq,38) output(92,eq,100) output(51,eq,44) output(92,eq,33) output(58,eq,52)
Optimization: 18 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.041 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 25+
  Optimum    : unknown
Optimization : 18 14
Calls        : 1
Time         : 598.589s (Solving: 594.59s 1st Model: 0.03s Unsat: 0.00s)
CPU Time     : 2382.041s
Threads      : 4        (Winner: 4)

Choices      : 15712849 (Domain: 215907)
Conflicts    : 9707645  (Analyzed: 9707645)
Restarts     : 7927     (Average: 1224.63 Last: 91702)
Model-Level  : 190.4   
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 9760325  (Deleted: 9257593)
  Binary     : 1024     (Ratio:   0.01%)
  Ternary    : 2764     (Ratio:   0.03%)
  Conflict   : 9707645  (Average Length:  430.0 Ratio:  99.46%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 52680    (Average Length:   39.1 Ratio:   0.54%) 
  Distributed: 17832    (Ratio:   0.18% Average LBD: 3.71) 
  Integrated : 53496    (Ratio: 300.00% Unit: 44 Average Jumps: 60.75)
Backjumps    : 9707645  (Average:  1.46 Max: 1319 Sum: 14198797)
  Executed   : 9707641  (Average:  1.46 Max: 1319 Sum: 14198613 Ratio: 100.00%)
  Bounded    : 4        (Average: 46.00 Max: 103 Sum:    184 Ratio:   0.00%)

Rules        : 1051663 
  Choice     : 15      
  Minimize   : 2       
Atoms        : 20508   
Bodies       : 19640   
  Sum        : 202     
  Count      : 14      
Equivalences : 9385     (Atom=Atom: 1023 Body=Body: 418 Other: 7944)
Tight        : Yes
Variables    : 17331    (Eliminated:    0 Frozen: 8007)
Constraints  : 1067510  (Binary:  98.8% Ternary:   0.9% Other:   0.4%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasPrep(4)) ; 
  5 :: atom(hasCategory(4)) ; 
  7 :: atom(hasIngredient(4)) ; 
  4 :: atom(hasCost(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  2 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasPrep(5)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  4 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  2 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCost(3)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasPrep(6)) ; 
  7 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  4 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasCategory(3)) ; 
  4 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(4)) ; 
  6 :: atom(hasPrep(4)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(7)) ; 
  1 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCategory(4)) ; 
  5 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCategory(1)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasPrep(1)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCategory(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCost(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasIngredient(3)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCost(3)) ; 
  7 :: atom(hasIngredient(4)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCategory(3)) ; 
  8 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasDifficulty(4)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  1 :: atom(hasCost(2)) ; 
  8 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(2)) ; 
  6 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(6)) ; 
  1 :: atom(hasPrep(5)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  4 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasCategory(1)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(6)) ; 
  1 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(3)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasPrep(1)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  2 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCost(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(3)) ; 
  1 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrep(2)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasCost(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  1 :: atom(hasIngredient(10)) ; 
  2 :: atom(hasPrep(0)) ; 
  4 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCost(2)) ; 
  6 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  1 :: atom(hasCategory(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  5 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  1 :: atom(hasCost(3)) ; 
  6 :: atom(hasIngredient(4)) ; 
  1 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasCategory(5)) ; 
  3 :: atom(hasIngredient(10)) ; 
  7 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(3)) ; 
  1 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasCost(1)) ; 
  2 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrep(5)) ; 
  4 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasIngredient(4)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  4 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  4 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(1)) ; 
  2 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasCost(2)) ; 
  7 :: atom(hasCost(1)) ; 
  4 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) 
}.
