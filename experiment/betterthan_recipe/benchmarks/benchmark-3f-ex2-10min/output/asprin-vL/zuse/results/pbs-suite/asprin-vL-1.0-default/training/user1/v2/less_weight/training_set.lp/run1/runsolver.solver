asprin_vL version 1.0
Reading from stdin
-:1233:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1243:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1258:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1339:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1600:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1613:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1790:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1919:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1991:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1995:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1995:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2001:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2100:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2126:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2246:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2280:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2302:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1150:1-16: info: no atoms over signature occur in program:
  output/3

-:1142:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1143:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(69,eq,67) output(67,eq,42) output(42,eq,24) output(65,eq,23) output(72,eq,25) output(25,eq,52) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(42,eq,65) output(18,eq,13) output(13,eq,25) output(18,eq,25) output(67,eq,65) output(48,eq,65) output(51,eq,42) output(70,eq,48) output(72,eq,52) output(13,eq,52) output(42,eq,23) output(67,eq,24) output(48,eq,24) output(69,eq,42) output(51,eq,24) output(70,eq,24) output(69,eq,24) output(67,eq,23) output(48,eq,23) output(51,eq,23) output(69,eq,23) output(18,eq,52) output(70,eq,42) output(51,eq,65) output(70,eq,65) output(69,eq,65) output(70,eq,23)
Optimization: 36 0
Answer: 2
preference(1,(1,13),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(69,better,67) output(67,worse,42) output(67,worse,65) output(67,worse,24) output(67,worse,23) output(42,eq,24) output(65,eq,23) output(72,eq,25) output(25,eq,52) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(42,eq,65) output(18,eq,13) output(13,eq,25) output(18,eq,25) output(48,eq,65) output(51,eq,42) output(70,eq,48) output(72,eq,52) output(13,eq,52) output(42,eq,23) output(48,eq,24) output(69,eq,42) output(51,eq,24) output(70,eq,24) output(69,eq,24) output(48,eq,23) output(51,eq,23) output(69,eq,23) output(18,eq,52) output(70,eq,42) output(51,eq,65) output(70,eq,65) output(69,eq,65) output(70,eq,23)
Optimization: 35 1
Answer: 3
preference(1,(1,1),1,for(atom(hasPrepTime(3))),3) preference(1,(1,2),1,for(atom(hasDifficulty(3))),3) preference(1,(1,3),1,for(atom(hasIngredient(9))),3) preference(1,(1,4),1,for(atom(hasPrep(0))),1) preference(1,(1,6),1,for(atom(hasIngredient(7))),6) preference(1,(1,7),1,for(atom(hasDifficulty(2))),6) preference(1,(1,8),1,for(atom(hasCategory(4))),3) preference(1,(1,9),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasIngredient(6))),5) preference(1,(1,11),1,for(atom(hasCategory(3))),4) preference(1,(1,12),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasPrep(7))),3) preference(1,(1,14),1,for(atom(hasPrep(6))),3) preference(1,less(weight)) output(18,better,13) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(69,better,42) output(48,better,42) output(18,worse,25) output(18,worse,52) output(67,worse,23) output(13,worse,25) output(13,worse,52) output(42,worse,24) output(42,worse,65) output(42,worse,23) output(69,worse,67) output(69,worse,24) output(69,worse,23) output(69,worse,65) output(70,worse,51) output(70,worse,48) output(70,worse,24) output(70,worse,65) output(70,worse,23) output(48,worse,23) output(65,worse,23) output(72,eq,25) output(25,eq,52) output(48,eq,65) output(72,eq,52) output(48,eq,24) output(51,eq,23) output(70,eq,42)
Optimization: 26 13
Answer: 4
preference(1,(1,3),1,for(atom(hasIngredient(10))),8) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,12),1,for(atom(hasIngredient(4))),8) preference(1,less(weight)) output(18,better,25) output(51,better,24) output(51,better,23) output(72,better,25) output(13,better,25) output(42,better,24) output(42,better,23) output(69,better,67) output(69,better,24) output(69,better,23) output(70,better,24) output(70,better,23) output(48,better,24) output(48,better,23) output(65,better,23) output(67,worse,42) output(67,worse,65) output(25,worse,52) output(70,eq,51) output(51,eq,48) output(48,eq,42) output(42,eq,65) output(18,eq,13) output(48,eq,65) output(51,eq,42) output(70,eq,48) output(72,eq,52) output(13,eq,52) output(67,eq,24) output(69,eq,42) output(67,eq,23) output(18,eq,52) output(70,eq,42) output(51,eq,65) output(70,eq,65) output(69,eq,65)
Optimization: 21 3
Answer: 5
preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,14),1,for(atom(hasCategory(4))),8) preference(1,less(weight)) output(18,better,13) output(18,better,25) output(18,better,52) output(51,better,48) output(51,better,24) output(51,better,23) output(51,better,65) output(42,better,24) output(42,better,65) output(42,better,23) output(69,better,67) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,48) output(70,better,24) output(70,better,65) output(70,better,23) output(67,worse,42) output(48,worse,42) output(65,eq,23) output(72,eq,25) output(25,eq,52) output(70,eq,51) output(13,eq,25) output(67,eq,65) output(48,eq,65) output(51,eq,42) output(72,eq,52) output(13,eq,52) output(67,eq,24) output(48,eq,24) output(69,eq,42) output(67,eq,23) output(48,eq,23) output(70,eq,42)
Optimization: 18 3
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(5))),6) preference(1,(1,6),1,for(atom(hasDifficulty(3))),7) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasDifficulty(2))),3) preference(1,(1,10),1,for(atom(hasPrep(2))),6) preference(1,(1,11),1,for(atom(hasDifficulty(4))),1) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasCategory(4))),4) preference(1,(1,14),1,for(atom(hasIngredient(9))),1) preference(1,less(weight)) output(18,better,13) output(18,better,25) output(18,better,52) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(72,better,25) output(72,better,52) output(13,better,25) output(13,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(25,better,52) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23)
Optimization: 0 10
Progression : 0 [ 1;10] (Error: 9)
Progression : 0 [ 2;10] (Error: 4)
Answer: 7
preference(1,(1,1),1,for(atom(hasIngredient(4))),3) preference(1,(1,3),1,for(atom(hasDifficulty(4))),3) preference(1,(1,5),1,for(atom(hasCategory(4))),5) preference(1,(1,6),1,for(atom(hasPrepTime(2))),1) preference(1,(1,7),1,for(atom(hasPrep(6))),2) preference(1,(1,9),1,for(atom(hasIngredient(7))),2) preference(1,(1,11),1,for(atom(hasPrepTime(1))),2) preference(1,(1,12),1,for(atom(hasDifficulty(3))),6) preference(1,(1,14),1,for(atom(hasCost(3))),5) preference(1,less(weight)) output(18,better,13) output(18,better,25) output(18,better,52) output(51,better,48) output(51,better,42) output(51,better,24) output(51,better,23) output(51,better,65) output(67,better,42) output(67,better,65) output(67,better,24) output(67,better,23) output(72,better,25) output(72,better,52) output(13,better,25) output(13,better,52) output(42,better,24) output(42,better,65) output(42,better,23) output(69,better,67) output(69,better,42) output(69,better,24) output(69,better,23) output(69,better,65) output(70,better,51) output(70,better,48) output(70,better,24) output(70,better,42) output(70,better,65) output(70,better,23) output(25,better,52) output(48,better,42) output(48,better,65) output(48,better,24) output(48,better,23) output(65,better,23)
Optimization: 0 9
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.073 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 7+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 598.163s (Solving: 595.36s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2383.707s
Threads      : 4        (Winner: 4)

Choices      : 12266193 (Domain: 492158)
Conflicts    : 7834904  (Analyzed: 7834902)
Restarts     : 8436     (Average: 928.75 Last: 357051)
Model-Level  : 162.6   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 7845775  (Deleted: 7490021)
  Binary     : 1170     (Ratio:   0.01%)
  Ternary    : 1301     (Ratio:   0.02%)
  Conflict   : 7834902  (Average Length:  487.1 Ratio:  99.86%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 10873    (Average Length:   85.6 Ratio:   0.14%) 
  Distributed: 3626     (Ratio:   0.05% Average LBD: 3.47) 
  Integrated : 10878    (Ratio: 300.00% Unit: 4 Average Jumps: 2.25)
Backjumps    : 7834902  (Average:  1.37 Max: 1356 Sum: 10710190)
  Executed   : 7834901  (Average:  1.37 Max: 1356 Sum: 10710185 Ratio: 100.00%)
  Bounded    : 1        (Average:  5.00 Max:   5 Sum:      5 Ratio:   0.00%)

Rules        : 437058  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14122   
Bodies       : 18925   
  Sum        : 72      
  Count      : 14      
Equivalences : 7110     (Atom=Atom: 373 Body=Body: 158 Other: 6579)
Tight        : Yes
Variables    : 17055    (Eliminated:    0 Frozen: 7731)
Constraints  : 458804   (Binary:  97.2% Ternary:   2.0% Other:   0.8%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(3)) ; 
  3 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(0)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasCategory(4)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasIngredient(6)) ; 
  4 :: atom(hasCategory(3)) ; 
  3 :: atom(hasCost(3)) ; 
  3 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(6)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCategory(4)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasCategory(5)) ; 
  7 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  6 :: atom(hasPrep(2)) ; 
  1 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  4 :: atom(hasCategory(4)) ; 
  1 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasIngredient(4)) ; 
  3 :: atom(hasDifficulty(4)) ; 
  5 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasIngredient(7)) ; 
  2 :: atom(hasPrepTime(1)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  5 :: atom(hasCost(3)) 
}.
