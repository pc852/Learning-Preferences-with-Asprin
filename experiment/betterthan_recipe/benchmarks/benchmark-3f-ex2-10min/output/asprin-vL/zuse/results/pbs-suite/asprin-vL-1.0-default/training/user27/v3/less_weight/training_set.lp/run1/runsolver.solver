asprin_vL version 1.0
Reading from stdin
-:1242:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1252:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1267:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1348:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1609:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1622:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1799:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1928:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2000:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2004:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2004:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2010:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2109:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2135:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2255:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2289:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2311:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1159:1-16: info: no atoms over signature occur in program:
  output/3

-:1151:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1152:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(80,eq,84) output(84,eq,22) output(22,eq,53) output(53,eq,71) output(71,eq,83) output(49,eq,52) output(74,eq,82) output(82,eq,65) output(65,eq,22) output(22,eq,33) output(33,eq,10) output(39,eq,88) output(22,eq,10) output(84,eq,33) output(65,eq,33) output(82,eq,22) output(74,eq,65) output(53,eq,83) output(22,eq,71) output(84,eq,53) output(65,eq,53) output(80,eq,22) output(82,eq,53) output(74,eq,53) output(80,eq,53) output(84,eq,71) output(65,eq,71) output(82,eq,71) output(80,eq,71) output(22,eq,83) output(84,eq,83) output(65,eq,83) output(74,eq,22) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(84,eq,10) output(65,eq,10) output(82,eq,10) output(80,eq,10) output(74,eq,10) output(82,eq,83) output(74,eq,83) output(80,eq,83) output(74,eq,71)
Optimization: 45 0
Answer: 2
preference(1,(1,1),1,for(atom(hasIngredient(9))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasIngredient(5))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(53,better,71) output(53,better,83) output(49,better,52) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(80,worse,84) output(80,worse,22) output(80,worse,53) output(39,worse,88) output(82,worse,65) output(82,worse,22) output(82,worse,53) output(74,worse,65) output(74,worse,53) output(74,worse,22) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(74,eq,82) output(65,eq,22) output(33,eq,10) output(84,eq,53) output(65,eq,53) output(82,eq,71) output(80,eq,71) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(82,eq,10) output(80,eq,10) output(74,eq,10) output(82,eq,83) output(74,eq,83) output(80,eq,83) output(74,eq,71)
Optimization: 30 9
Answer: 3
preference(1,(1,1),1,for(atom(hasIngredient(9))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasIngredient(8))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,71) output(53,better,71) output(53,better,83) output(82,better,71) output(49,better,52) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,71) output(80,worse,84) output(80,worse,22) output(80,worse,53) output(39,worse,88) output(82,worse,65) output(82,worse,22) output(82,worse,53) output(71,worse,83) output(74,worse,65) output(74,worse,53) output(74,worse,22) output(84,eq,22) output(22,eq,53) output(74,eq,82) output(65,eq,22) output(33,eq,10) output(84,eq,53) output(65,eq,53) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(82,eq,10) output(80,eq,10) output(74,eq,10) output(82,eq,83) output(74,eq,83) output(80,eq,83)
Optimization: 27 9
Answer: 4
preference(1,(1,1),1,for(atom(hasIngredient(9))),1) preference(1,(1,2),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasIngredient(7))),1) preference(1,(1,5),1,for(atom(hasCategory(3))),1) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasPrep(0))),1) preference(1,(1,11),1,for(atom(hasPrep(1))),7) preference(1,(1,13),1,for(atom(hasDifficulty(3))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,10) output(53,better,71) output(53,better,83) output(82,better,10) output(33,better,10) output(49,better,52) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,10) output(80,worse,84) output(80,worse,22) output(80,worse,53) output(39,worse,88) output(82,worse,65) output(82,worse,22) output(82,worse,53) output(74,worse,65) output(74,worse,53) output(74,worse,22) output(84,eq,22) output(22,eq,53) output(71,eq,83) output(74,eq,82) output(65,eq,22) output(84,eq,53) output(65,eq,53) output(82,eq,71) output(80,eq,71) output(82,eq,33) output(74,eq,33) output(80,eq,33) output(82,eq,83) output(74,eq,83) output(80,eq,83) output(74,eq,71)
Optimization: 26 9
Answer: 5
preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasIngredient(8))),8) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,less(weight)) output(84,better,22) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,22) output(80,better,71) output(80,better,10) output(80,better,83) output(53,better,71) output(53,better,83) output(82,better,22) output(82,better,71) output(82,better,10) output(82,better,83) output(33,better,10) output(65,better,22) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,22) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(22,worse,33) output(80,eq,84) output(71,eq,83) output(49,eq,52) output(74,eq,82) output(82,eq,65) output(39,eq,88) output(22,eq,10) output(84,eq,33) output(65,eq,33) output(74,eq,65) output(22,eq,71) output(84,eq,53) output(65,eq,53) output(82,eq,53) output(74,eq,53) output(80,eq,53) output(22,eq,83) output(82,eq,33) output(74,eq,33) output(80,eq,33)
Optimization: 22 3
Answer: 6
preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasCost(4))),8) preference(1,(1,10),1,for(atom(hasIngredient(8))),8) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,(1,13),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(84,better,22) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,22) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(53,better,71) output(53,better,83) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(65,better,22) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(80,eq,84) output(71,eq,83) output(49,eq,52) output(74,eq,82) output(82,eq,65) output(22,eq,33) output(33,eq,10) output(39,eq,88) output(22,eq,10) output(74,eq,65) output(22,eq,71) output(84,eq,53) output(65,eq,53) output(82,eq,53) output(74,eq,53) output(80,eq,53) output(22,eq,83)
Optimization: 18 5
Answer: 7
preference(1,(1,1),1,for(atom(hasCategory(4))),7) preference(1,(1,2),1,for(atom(hasCost(3))),7) preference(1,(1,4),1,for(atom(hasPrep(2))),7) preference(1,(1,5),1,for(atom(hasPrep(7))),7) preference(1,(1,6),1,for(atom(hasIngredient(10))),7) preference(1,(1,7),1,for(atom(hasIngredient(8))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),8) preference(1,(1,10),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasDifficulty(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(84,better,22) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(65,better,22) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(84,worse,53) output(65,worse,53) output(71,worse,83) output(74,worse,82) output(74,worse,53) output(49,eq,52) output(33,eq,10) output(74,eq,65) output(82,eq,53) output(80,eq,53) output(22,eq,83)
Optimization: 12 10
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(4))),8) preference(1,(1,2),1,for(atom(hasDifficulty(3))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),8) preference(1,(1,4),1,for(atom(hasCost(3))),7) preference(1,(1,5),1,for(atom(hasPrep(2))),7) preference(1,(1,8),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasCategory(4))),7) preference(1,(1,14),1,for(atom(hasIngredient(8))),8) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(82,better,71) output(82,better,33) output(82,better,10) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,82) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(82,worse,65) output(71,worse,83) output(22,eq,53) output(49,eq,52) output(33,eq,10) output(82,eq,22) output(74,eq,65) output(53,eq,83) output(82,eq,53) output(22,eq,83) output(82,eq,83)
Optimization: 11 8
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(6))),7) preference(1,(1,2),1,for(atom(hasPrepTime(1))),7) preference(1,(1,3),1,for(atom(hasCategory(1))),8) preference(1,(1,4),1,for(atom(hasIngredient(3))),7) preference(1,(1,5),1,for(atom(hasIngredient(8))),8) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,8),1,for(atom(hasIngredient(12))),7) preference(1,(1,11),1,for(atom(hasPrepTime(2))),8) preference(1,less(weight)) output(84,better,22) output(84,better,33) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(82,worse,65) output(71,eq,83) output(22,eq,33) output(33,eq,10) output(22,eq,10) output(22,eq,71) output(84,eq,53) output(82,eq,53) output(22,eq,83)
Optimization: 10 8
Answer: 10
preference(1,(1,3),1,for(atom(hasPrep(5))),8) preference(1,(1,4),1,for(atom(hasCategory(3))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,8),1,for(atom(hasCost(4))),8) preference(1,(1,11),1,for(atom(hasCost(2))),7) preference(1,(1,12),1,for(atom(hasDifficulty(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(8))),8) preference(1,less(weight)) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,22) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(53,better,71) output(53,better,83) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,82) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(80,worse,84) output(39,worse,88) output(82,worse,65) output(71,eq,83) output(22,eq,33) output(74,eq,65) output(82,eq,53) output(80,eq,53)
Optimization: 9 7
Answer: 11
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasDifficulty(2))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasPrepTime(3))),8) preference(1,(1,7),1,for(atom(hasPrep(6))),8) preference(1,(1,8),1,for(atom(hasIngredient(10))),8) preference(1,(1,9),1,for(atom(hasPrep(1))),8) preference(1,(1,10),1,for(atom(hasCategory(4))),4) preference(1,(1,11),1,for(atom(hasCategory(1))),5) preference(1,(1,12),1,for(atom(hasCost(4))),8) preference(1,(1,13),1,for(atom(hasIngredient(9))),2) preference(1,(1,14),1,for(atom(hasIngredient(12))),8) preference(1,less(weight)) output(22,better,10) output(22,better,83) output(84,better,22) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(22,worse,33) output(84,worse,33) output(84,worse,53) output(39,worse,88) output(65,worse,53) output(22,eq,71) output(82,eq,53)
Optimization: 8 14
Answer: 12
preference(1,(1,1),1,for(atom(hasPrepTime(2))),5) preference(1,(1,2),1,for(atom(hasIngredient(7))),5) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,5),1,for(atom(hasIngredient(8))),6) preference(1,(1,6),1,for(atom(hasCategory(3))),4) preference(1,(1,8),1,for(atom(hasCost(2))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),1) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(22,worse,53) output(39,worse,88) output(65,worse,22) output(65,worse,53) output(80,eq,84) output(65,eq,33) output(82,eq,53)
Optimization: 7 11
Answer: 13
preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(1))),3) preference(1,(1,6),1,for(atom(hasCost(2))),6) preference(1,(1,7),1,for(atom(hasIngredient(7))),7) preference(1,(1,9),1,for(atom(hasIngredient(12))),7) preference(1,(1,10),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasCategory(3))),3) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,53) output(80,better,33) output(80,better,10) output(80,better,83) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(80,worse,84) output(80,worse,22) output(39,worse,88) output(53,worse,71) output(33,worse,10) output(80,eq,71)
Optimization: 6 8
Answer: 14
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasIngredient(8))),5) preference(1,(1,4),1,for(atom(hasDifficulty(3))),8) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasCost(4))),6) preference(1,(1,8),1,for(atom(hasCategory(3))),5) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasPrep(6))),1) preference(1,(1,12),1,for(atom(hasCost(3))),2) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(82,worse,65) output(82,worse,22) output(65,worse,22) output(71,worse,83) output(82,eq,53)
Optimization: 5 14
Answer: 15
preference(1,(1,1),1,for(atom(hasPrepTime(2))),7) preference(1,(1,2),1,for(atom(hasIngredient(9))),7) preference(1,(1,3),1,for(atom(hasPrep(6))),2) preference(1,(1,4),1,for(atom(hasCost(2))),4) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasDifficulty(1))),7) preference(1,(1,7),1,for(atom(hasDifficulty(3))),8) preference(1,(1,8),1,for(atom(hasCost(4))),8) preference(1,(1,9),1,for(atom(hasPrepTime(1))),4) preference(1,(1,10),1,for(atom(hasCost(1))),7) preference(1,(1,11),1,for(atom(hasCost(3))),3) preference(1,(1,13),1,for(atom(hasCategory(1))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,33) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(82,worse,22) output(65,worse,22) output(65,worse,53) output(82,eq,53)
Optimization: 4 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(5))),7) preference(1,(1,2),1,for(atom(hasIngredient(10))),8) preference(1,(1,3),1,for(atom(hasCost(2))),3) preference(1,(1,4),1,for(atom(hasCost(4))),8) preference(1,(1,5),1,for(atom(hasCost(3))),6) preference(1,(1,6),1,for(atom(hasIngredient(9))),1) preference(1,(1,7),1,for(atom(hasIngredient(7))),4) preference(1,(1,8),1,for(atom(hasCategory(1))),4) preference(1,(1,9),1,for(atom(hasPrepTime(1))),8) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasCategory(4))),6) preference(1,(1,12),1,for(atom(hasPrep(0))),3) preference(1,(1,13),1,for(atom(hasCategory(3))),8) preference(1,(1,14),1,for(atom(hasIngredient(3))),8) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71) output(82,worse,65) output(84,eq,22) output(82,eq,22)
Optimization: 3 14
Answer: 17
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasCost(2))),2) preference(1,(1,3),1,for(atom(hasIngredient(7))),7) preference(1,(1,4),1,for(atom(hasCategory(1))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),2) preference(1,(1,6),1,for(atom(hasCost(3))),7) preference(1,(1,7),1,for(atom(hasPrepTime(1))),5) preference(1,(1,8),1,for(atom(hasCategory(4))),7) preference(1,(1,9),1,for(atom(hasPrep(0))),2) preference(1,(1,10),1,for(atom(hasPrep(7))),6) preference(1,(1,11),1,for(atom(hasPrep(1))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),6) preference(1,(1,13),1,for(atom(hasCategory(3))),1) preference(1,(1,14),1,for(atom(hasIngredient(3))),2) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Progression : 0 [ 2;14] (Error: 6)
Answer: 18
preference(1,(1,1),1,for(atom(hasPrep(5))),4) preference(1,(1,2),1,for(atom(hasCategory(1))),6) preference(1,(1,3),1,for(atom(hasIngredient(8))),5) preference(1,(1,4),1,for(atom(hasPrep(6))),2) preference(1,(1,5),1,for(atom(hasPrepTime(2))),3) preference(1,(1,6),1,for(atom(hasDifficulty(3))),8) preference(1,(1,7),1,for(atom(hasIngredient(7))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),3) preference(1,(1,9),1,for(atom(hasCost(2))),1) preference(1,(1,10),1,for(atom(hasPrep(1))),1) preference(1,(1,12),1,for(atom(hasCost(3))),2) preference(1,(1,13),1,for(atom(hasCost(4))),8) preference(1,(1,14),1,for(atom(hasIngredient(9))),4) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71)
Optimization: 0 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(3))),4) preference(1,(1,2),1,for(atom(hasCost(4))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasIngredient(7))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),3) preference(1,(1,6),1,for(atom(hasCategory(4))),3) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(3))),2) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasCategory(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),1) preference(1,(1,13),1,for(atom(hasIngredient(8))),1) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71)
Optimization: 0 12
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(3))),4) preference(1,(1,2),1,for(atom(hasCost(4))),8) preference(1,(1,3),1,for(atom(hasDifficulty(1))),3) preference(1,(1,4),1,for(atom(hasIngredient(7))),3) preference(1,(1,5),1,for(atom(hasIngredient(12))),3) preference(1,(1,6),1,for(atom(hasIngredient(8))),1) preference(1,(1,7),1,for(atom(hasPrep(7))),2) preference(1,(1,8),1,for(atom(hasCost(2))),8) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasCategory(1))),5) preference(1,(1,11),1,for(atom(hasIngredient(10))),1) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71)
Optimization: 0 11
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(7))),6) preference(1,(1,4),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasCategory(4))),6) preference(1,(1,8),1,for(atom(hasPrepTime(1))),7) preference(1,(1,9),1,for(atom(hasPrep(5))),1) preference(1,(1,10),1,for(atom(hasCost(4))),5) preference(1,(1,11),1,for(atom(hasPrep(7))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),5) preference(1,(1,13),1,for(atom(hasPrep(1))),3) preference(1,(1,14),1,for(atom(hasCost(2))),7) preference(1,less(weight)) output(22,better,53) output(22,better,33) output(22,better,10) output(22,better,71) output(22,better,83) output(84,better,22) output(84,better,33) output(84,better,53) output(84,better,71) output(84,better,83) output(84,better,10) output(80,better,84) output(80,better,22) output(80,better,53) output(80,better,71) output(80,better,33) output(80,better,10) output(80,better,83) output(39,better,88) output(53,better,71) output(53,better,83) output(82,better,65) output(82,better,22) output(82,better,53) output(82,better,71) output(82,better,33) output(82,better,10) output(82,better,83) output(33,better,10) output(49,better,52) output(65,better,22) output(65,better,33) output(65,better,53) output(65,better,71) output(65,better,83) output(65,better,10) output(71,better,83) output(74,better,82) output(74,better,65) output(74,better,53) output(74,better,22) output(74,better,33) output(74,better,10) output(74,better,83) output(74,better,71)
Optimization: 0 10
Progression : 0 [ 3;10] (Error: 2.33333)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.105 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 10
Calls        : 1
Time         : 597.963s (Solving: 595.27s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2383.314s
Threads      : 4        (Winner: 4)

Choices      : 10774481 (Domain: 582568)
Conflicts    : 7512893  (Analyzed: 7512890)
Restarts     : 7189     (Average: 1045.05 Last: 135284)
Model-Level  : 49.3    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7533604  (Deleted: 7165167)
  Binary     : 818      (Ratio:   0.01%)
  Ternary    : 2230     (Ratio:   0.03%)
  Conflict   : 7512890  (Average Length:  432.3 Ratio:  99.73%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 20714    (Average Length:   45.6 Ratio:   0.27%) 
  Distributed: 6921     (Ratio:   0.09% Average LBD: 3.65) 
  Integrated : 20763    (Ratio: 300.00% Unit: 44 Average Jumps: 20.20)
Backjumps    : 7512890  (Average:  1.32 Max: 687 Sum: 9941995)
  Executed   : 7512889  (Average:  1.32 Max: 687 Sum: 9941954 Ratio: 100.00%)
  Bounded    : 1        (Average: 41.00 Max:  41 Sum:     41 Ratio:   0.00%)

Rules        : 522743  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 15012   
Bodies       : 19024   
  Sum        : 90      
  Count      : 14      
Equivalences : 7425     (Atom=Atom: 463 Body=Body: 194 Other: 6768)
Tight        : Yes
Variables    : 17099    (Eliminated:    0 Frozen: 7775)
Constraints  : 543678   (Binary:  97.6% Ternary:   1.7% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(5)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(8)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasCategory(3)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(0)) ; 
  7 :: atom(hasPrep(1)) ; 
  2 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasCategory(4)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  7 :: atom(hasPrep(7)) ; 
  7 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasPrep(5)) ; 
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasCost(4)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCategory(3)) ; 
  7 :: atom(hasCost(3)) ; 
  7 :: atom(hasPrep(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(6)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(8)) ; 
  7 :: atom(hasPrep(5)) ; 
  7 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasPrepTime(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCategory(3)) ; 
  7 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCost(4)) ; 
  7 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasPrep(2)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasDifficulty(2)) ; 
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasPrep(6)) ; 
  8 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrep(1)) ; 
  4 :: atom(hasCategory(4)) ; 
  5 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCost(4)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  6 :: atom(hasIngredient(8)) ; 
  4 :: atom(hasCategory(3)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(6)) ; 
  1 :: atom(hasDifficulty(2)) ; 
  8 :: atom(hasPrep(5)) ; 
  4 :: atom(hasPrep(0)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasIngredient(12)) ; 
  4 :: atom(hasPrep(5)) ; 
  5 :: atom(hasPrep(6)) ; 
  3 :: atom(hasCategory(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasIngredient(8)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCost(4)) ; 
  5 :: atom(hasCategory(3)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(6)) ; 
  2 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrepTime(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  2 :: atom(hasPrep(6)) ; 
  4 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(5)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  8 :: atom(hasCost(4)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCost(1)) ; 
  3 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(1)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasPrep(5)) ; 
  8 :: atom(hasIngredient(10)) ; 
  3 :: atom(hasCost(2)) ; 
  8 :: atom(hasCost(4)) ; 
  6 :: atom(hasCost(3)) ; 
  1 :: atom(hasIngredient(9)) ; 
  4 :: atom(hasIngredient(7)) ; 
  4 :: atom(hasCategory(1)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasCategory(4)) ; 
  3 :: atom(hasPrep(0)) ; 
  8 :: atom(hasCategory(3)) ; 
  8 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasCost(2)) ; 
  7 :: atom(hasIngredient(7)) ; 
  7 :: atom(hasCategory(1)) ; 
  2 :: atom(hasPrep(5)) ; 
  7 :: atom(hasCost(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(7)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  1 :: atom(hasCategory(3)) ; 
  2 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasCategory(1)) ; 
  5 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasPrep(6)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  6 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasCost(2)) ; 
  1 :: atom(hasPrep(1)) ; 
  2 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(4)) ; 
  4 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasIngredient(8)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasCost(3)) ; 
  8 :: atom(hasCost(4)) ; 
  3 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  1 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCategory(1)) ; 
  1 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(4)) ; 
  7 :: atom(hasPrepTime(1)) ; 
  1 :: atom(hasPrep(5)) ; 
  5 :: atom(hasCost(4)) ; 
  5 :: atom(hasPrep(7)) ; 
  5 :: atom(hasCategory(1)) ; 
  3 :: atom(hasPrep(1)) ; 
  7 :: atom(hasCost(2)) 
}.
