asprin_vL version 1.0
Reading from stdin
-:1285:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1310:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1391:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1665:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1842:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2043:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2047:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2047:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2053:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2152:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2178:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2298:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2332:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2354:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1202:1-16: info: no atoms over signature occur in program:
  output/3

-:1194:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1195:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1196:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1197:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1227:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(2))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasIngredient(5))),()) preference(1,aso) output(57,better,8) output(71,better,53) output(30,better,76) output(71,better,8) output(30,better,51) output(30,better,67) output(78,better,98) output(71,better,76) output(71,better,67) output(71,better,51) output(99,worse,71) output(91,worse,76) output(67,worse,52) output(53,worse,30) output(99,worse,53) output(51,worse,52) output(91,worse,51) output(99,worse,57) output(60,worse,71) output(60,worse,57) output(99,worse,8) output(60,worse,8) output(91,worse,67) output(76,worse,52) output(91,worse,52) output(60,worse,53) output(99,worse,30) output(60,worse,30) output(99,worse,98) output(99,worse,76) output(60,worse,76) output(60,worse,98) output(53,worse,52) output(99,worse,52) output(99,worse,67) output(60,worse,67) output(99,worse,51) output(60,worse,51) output(60,worse,52) output(71,eq,57) output(76,eq,51) output(51,eq,67) output(60,eq,99) output(71,eq,30) output(76,eq,67) output(53,eq,51) output(53,eq,76) output(30,eq,52) output(71,eq,52) output(53,eq,67)
Optimization: 56 6
Answer: 2
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasIngredient(1))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasCategory(5))),()) preference(1,aso) output(57,better,8) output(71,better,53) output(30,better,76) output(71,better,8) output(30,better,51) output(30,better,67) output(78,better,98) output(53,better,76) output(71,better,76) output(71,better,67) output(71,better,51) output(99,worse,71) output(76,worse,51) output(67,worse,52) output(53,worse,30) output(99,worse,53) output(51,worse,52) output(76,worse,67) output(91,worse,51) output(99,worse,57) output(60,worse,71) output(60,worse,57) output(99,worse,8) output(60,worse,8) output(91,worse,67) output(76,worse,52) output(91,worse,52) output(60,worse,53) output(99,worse,30) output(60,worse,30) output(99,worse,98) output(60,worse,98) output(53,worse,52) output(99,worse,52) output(99,worse,67) output(60,worse,67) output(99,worse,51) output(60,worse,51) output(60,worse,52) output(71,eq,57) output(51,eq,67) output(60,eq,99) output(71,eq,30) output(53,eq,51) output(30,eq,52) output(71,eq,52) output(53,eq,67)
Optimization: 55 6
Answer: 3
preference(1,(1,1),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(12)))),()) preference(1,(1,1),1,for(atom(hasPrep(7))),()) preference(1,(1,2),1,for(atom(hasPrep(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(4))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasIngredient(2))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(11))),()) preference(1,(1,4),3,for(atom(hasIngredient(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(5))),()) preference(1,(1,6),3,for(atom(hasCategory(1))),()) preference(1,aso) output(57,better,8) output(76,better,51) output(71,better,53) output(30,better,76) output(76,better,67) output(71,better,8) output(30,better,51) output(53,better,51) output(30,better,67) output(78,better,98) output(71,better,76) output(53,better,67) output(71,better,67) output(71,better,51) output(99,worse,71) output(91,worse,76) output(67,worse,52) output(60,worse,99) output(53,worse,30) output(99,worse,53) output(51,worse,52) output(99,worse,57) output(60,worse,71) output(60,worse,57) output(99,worse,8) output(60,worse,8) output(76,worse,52) output(91,worse,52) output(60,worse,53) output(99,worse,30) output(60,worse,30) output(99,worse,98) output(99,worse,76) output(60,worse,76) output(60,worse,98) output(53,worse,52) output(99,worse,52) output(60,worse,67) output(60,worse,51) output(60,worse,52) output(71,eq,57) output(51,eq,67) output(71,eq,30) output(53,eq,76) output(30,eq,52) output(71,eq,52)
Optimization: 52 6
Answer: 4
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(76,better,51) output(60,better,99) output(78,better,71) output(53,better,30) output(53,better,98) output(76,better,67) output(91,better,51) output(78,better,57) output(60,better,71) output(60,better,57) output(53,better,51) output(91,better,67) output(76,better,52) output(91,better,52) output(78,better,30) output(60,better,30) output(78,better,98) output(60,better,98) output(53,better,52) output(78,better,52) output(53,better,67) output(78,better,67) output(60,better,67) output(78,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(71,worse,53) output(98,worse,76) output(30,worse,76) output(99,worse,53) output(71,worse,8) output(99,worse,8) output(71,worse,76) output(99,worse,76) output(99,eq,71) output(71,eq,57) output(91,eq,76) output(51,eq,67) output(67,eq,52) output(30,eq,98) output(71,eq,30) output(78,eq,53) output(51,eq,52) output(98,eq,51) output(99,eq,57) output(78,eq,8) output(60,eq,8) output(30,eq,51) output(98,eq,67) output(30,eq,67) output(98,eq,52) output(60,eq,53) output(99,eq,30) output(71,eq,98) output(99,eq,98) output(53,eq,76) output(78,eq,76) output(60,eq,76) output(30,eq,52) output(71,eq,52) output(99,eq,52) output(71,eq,67) output(99,eq,67) output(71,eq,51) output(99,eq,51)
Optimization: 40 1
Answer: 5
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasPrepTime(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(99,better,71) output(51,better,67) output(78,better,71) output(99,better,53) output(78,better,53) output(51,better,52) output(76,better,67) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(91,better,67) output(76,better,52) output(91,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(78,better,98) output(60,better,98) output(99,better,52) output(78,better,52) output(99,better,67) output(78,better,67) output(60,better,67) output(60,better,52) output(57,worse,8) output(98,worse,76) output(30,worse,76) output(98,worse,51) output(71,worse,8) output(30,worse,51) output(53,worse,51) output(53,worse,76) output(71,worse,76) output(71,worse,51) output(71,eq,57) output(91,eq,76) output(76,eq,51) output(67,eq,52) output(60,eq,99) output(71,eq,53) output(53,eq,30) output(30,eq,98) output(53,eq,98) output(71,eq,30) output(91,eq,51) output(99,eq,8) output(78,eq,8) output(60,eq,8) output(98,eq,67) output(30,eq,67) output(98,eq,52) output(71,eq,98) output(99,eq,76) output(78,eq,76) output(60,eq,76) output(30,eq,52) output(53,eq,52) output(71,eq,52) output(53,eq,67) output(71,eq,67) output(99,eq,51) output(78,eq,51) output(60,eq,51)
Optimization: 39 1
Answer: 6
preference(1,(1,1),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasIngredient(7))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(99,better,71) output(76,better,51) output(78,better,71) output(53,better,30) output(76,better,67) output(91,better,51) output(98,better,51) output(60,better,71) output(53,better,51) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(99,better,30) output(78,better,30) output(60,better,30) output(53,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(71,worse,57) output(71,worse,53) output(30,worse,98) output(30,worse,76) output(71,worse,8) output(71,worse,98) output(71,worse,76) output(57,eq,8) output(91,eq,76) output(51,eq,67) output(67,eq,52) output(60,eq,99) output(98,eq,76) output(53,eq,98) output(71,eq,30) output(99,eq,53) output(78,eq,53) output(51,eq,52) output(99,eq,57) output(78,eq,57) output(60,eq,57) output(99,eq,8) output(78,eq,8) output(60,eq,8) output(30,eq,51) output(30,eq,67) output(60,eq,53) output(99,eq,98) output(78,eq,98) output(53,eq,76) output(99,eq,76) output(78,eq,76) output(60,eq,76) output(60,eq,98) output(30,eq,52) output(71,eq,52) output(71,eq,67) output(71,eq,51)
Optimization: 38 1
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(99,better,71) output(76,better,51) output(78,better,71) output(99,better,53) output(78,better,53) output(76,better,67) output(91,better,51) output(98,better,51) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,52) output(78,better,52) output(99,better,67) output(78,better,67) output(60,better,67) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(30,worse,98) output(30,worse,76) output(53,worse,98) output(71,worse,8) output(71,worse,98) output(53,worse,76) output(71,worse,76) output(71,eq,57) output(91,eq,76) output(51,eq,67) output(67,eq,52) output(60,eq,99) output(71,eq,53) output(53,eq,30) output(98,eq,76) output(71,eq,30) output(51,eq,52) output(99,eq,8) output(78,eq,8) output(60,eq,8) output(30,eq,51) output(53,eq,51) output(30,eq,67) output(99,eq,98) output(78,eq,98) output(99,eq,76) output(78,eq,76) output(60,eq,76) output(60,eq,98) output(30,eq,52) output(53,eq,52) output(71,eq,52) output(53,eq,67) output(71,eq,67) output(71,eq,51)
Optimization: 36 1
Answer: 8
preference(1,(1,1),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,aso) output(99,better,71) output(76,better,51) output(78,better,71) output(53,better,30) output(53,better,98) output(76,better,67) output(91,better,51) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(53,better,51) output(91,better,67) output(76,better,52) output(91,better,52) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(78,better,98) output(60,better,98) output(53,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(71,worse,53) output(98,worse,76) output(30,worse,76) output(71,worse,8) output(71,worse,76) output(71,eq,57) output(91,eq,76) output(51,eq,67) output(67,eq,52) output(60,eq,99) output(30,eq,98) output(71,eq,30) output(99,eq,53) output(78,eq,53) output(51,eq,52) output(98,eq,51) output(99,eq,8) output(78,eq,8) output(60,eq,8) output(30,eq,51) output(98,eq,67) output(30,eq,67) output(98,eq,52) output(60,eq,53) output(71,eq,98) output(53,eq,76) output(99,eq,76) output(78,eq,76) output(60,eq,76) output(30,eq,52) output(71,eq,52) output(71,eq,67) output(71,eq,51)
Optimization: 34 1
Answer: 9
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCost(2))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(12))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCategory(3))),()) preference(1,aso) output(91,better,76) output(67,better,52) output(60,better,99) output(53,better,30) output(98,better,76) output(71,better,30) output(99,better,53) output(51,better,52) output(91,better,51) output(98,better,51) output(99,better,57) output(60,better,57) output(53,better,51) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(53,better,76) output(99,better,76) output(60,better,76) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(30,worse,98) output(30,worse,76) output(53,worse,98) output(71,worse,8) output(30,worse,51) output(30,worse,67) output(99,worse,98) output(78,worse,98) output(76,eq,51) output(51,eq,67) output(76,eq,67) output(60,eq,98) output(30,eq,52)
Optimization: 31 6
Answer: 10
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(atom(hasCost(2))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,1),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasPrep(0))),()) preference(1,aso) output(91,better,76) output(67,better,52) output(53,better,30) output(98,better,76) output(71,better,30) output(99,better,53) output(51,better,52) output(91,better,51) output(98,better,51) output(99,better,57) output(60,better,57) output(53,better,51) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(53,better,76) output(99,better,76) output(60,better,76) output(60,better,98) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(30,worse,98) output(30,worse,76) output(53,worse,98) output(71,worse,8) output(30,worse,51) output(30,worse,67) output(76,eq,51) output(51,eq,67) output(60,eq,99) output(76,eq,67) output(30,eq,52)
Optimization: 30 6
Answer: 11
preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasCategory(5))),()) preference(1,aso) output(91,better,76) output(76,better,51) output(67,better,52) output(53,better,30) output(53,better,98) output(71,better,30) output(99,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(99,better,57) output(60,better,57) output(53,better,51) output(91,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(53,better,76) output(99,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(98,worse,76) output(71,worse,8) output(51,eq,67) output(60,eq,99) output(98,eq,51) output(98,eq,67)
Optimization: 29 5
Answer: 12
preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(2)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(5)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(7))),()) preference(1,aso) output(91,better,76) output(76,better,51) output(67,better,52) output(53,better,30) output(53,better,98) output(71,better,30) output(99,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(99,better,57) output(60,better,57) output(53,better,51) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(53,better,76) output(99,better,76) output(60,better,76) output(60,better,98) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(30,worse,98) output(30,worse,76) output(71,worse,8) output(30,worse,51) output(30,worse,67) output(51,eq,67) output(60,eq,99) output(30,eq,52)
Optimization: 28 5
Answer: 13
preference(1,(1,2),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(atom(hasCategory(4))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(7)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),1,for(atom(hasPrepTime(1))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasPrep(0))),()) preference(1,(1,5),1,for(atom(hasPrep(0))),()) preference(1,(1,6),1,for(atom(hasCategory(5))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,aso) output(91,better,76) output(76,better,51) output(67,better,52) output(53,better,30) output(53,better,98) output(71,better,30) output(99,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(99,better,57) output(60,better,57) output(53,better,51) output(91,better,67) output(98,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(99,better,98) output(53,better,76) output(99,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(51,eq,67) output(60,eq,99) output(98,eq,76)
Optimization: 27 5
Answer: 14
preference(1,(1,1),0,for(atom(hasCategory(2))),()) preference(1,(1,2),0,for(atom(hasCategory(2))),()) preference(1,(1,3),0,for(atom(hasCategory(2))),()) preference(1,(1,4),0,for(atom(hasCategory(2))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(2)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),1,for(atom(hasDifficulty(1))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),3,for(atom(hasIngredient(4))),()) preference(1,(1,2),3,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(7))),()) preference(1,(1,4),3,for(atom(hasIngredient(8))),()) preference(1,aso) output(71,better,57) output(91,better,76) output(71,better,53) output(30,better,98) output(98,better,76) output(30,better,76) output(99,better,53) output(78,better,53) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(78,better,57) output(99,better,8) output(78,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(91,better,52) output(98,better,52) output(71,better,98) output(99,better,98) output(78,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,worse,99) output(53,worse,30) output(60,worse,71) output(60,worse,53) output(60,worse,30) output(60,worse,98) output(99,eq,71) output(76,eq,51) output(51,eq,67) output(67,eq,52) output(78,eq,71) output(53,eq,98) output(71,eq,30) output(51,eq,52) output(76,eq,67) output(60,eq,57) output(76,eq,52) output(99,eq,30) output(78,eq,30) output(60,eq,76) output(60,eq,67) output(60,eq,51) output(60,eq,52)
Optimization: 25 6
Answer: 15
preference(1,(1,1),0,for(atom(hasCost(2))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasDifficulty(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasCost(5))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasPrepTime(2))),()) preference(1,(1,2),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasDifficulty(1))),()) preference(1,aso) output(99,better,71) output(71,better,57) output(76,better,51) output(51,better,67) output(67,better,52) output(60,better,99) output(78,better,71) output(53,better,98) output(71,better,30) output(99,better,53) output(51,better,52) output(76,better,67) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(99,better,8) output(60,better,8) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(78,better,98) output(99,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(99,better,67) output(60,better,67) output(99,better,51) output(60,better,51) output(60,better,52) output(57,worse,8) output(98,worse,76) output(30,worse,76) output(98,worse,51) output(71,worse,8) output(98,worse,67) output(53,worse,76) output(71,worse,76)
Optimization: 24 6
Answer: 16
preference(1,(1,1),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasPrep(6))),()) preference(1,aso) output(99,better,71) output(57,better,8) output(91,better,76) output(78,better,71) output(53,better,30) output(30,better,98) output(30,better,76) output(53,better,98) output(91,better,51) output(71,better,8) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(99,better,8) output(78,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(30,better,67) output(91,better,52) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(78,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(53,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(67,worse,52) output(71,worse,53) output(51,worse,52) output(76,worse,52) output(98,worse,52) output(71,eq,57) output(76,eq,51) output(51,eq,67) output(60,eq,99) output(98,eq,76) output(71,eq,30) output(99,eq,53) output(78,eq,53) output(76,eq,67) output(98,eq,51) output(98,eq,67) output(60,eq,53) output(30,eq,52) output(71,eq,52)
Optimization: 19 2
Answer: 17
preference(1,(1,1),0,for(atom(hasIngredient(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(6))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasCategory(3))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),3,for(atom(hasPrep(5))),()) preference(1,aso) output(71,better,57) output(57,better,8) output(91,better,76) output(51,better,67) output(60,better,99) output(71,better,53) output(53,better,30) output(98,better,76) output(30,better,76) output(71,better,30) output(91,better,51) output(98,better,51) output(71,better,8) output(60,better,57) output(99,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(99,worse,71) output(76,worse,51) output(67,worse,52) output(78,worse,71) output(30,worse,98) output(76,worse,52) output(53,eq,98) output(99,eq,53) output(51,eq,52) output(76,eq,67) output(99,eq,57) output(60,eq,71) output(99,eq,98)
Optimization: 17 6
Answer: 18
preference(1,(1,1),0,for(atom(hasIngredient(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(6))),()) preference(1,(1,6),0,for(atom(hasCost(2))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(9))),()) preference(1,aso) output(71,better,57) output(57,better,8) output(91,better,76) output(51,better,67) output(60,better,99) output(71,better,53) output(53,better,30) output(98,better,76) output(30,better,76) output(71,better,30) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(60,better,57) output(99,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(99,worse,71) output(76,worse,51) output(67,worse,52) output(78,worse,71) output(30,worse,98) output(76,worse,52) output(53,eq,98) output(99,eq,53) output(51,eq,52) output(76,eq,67) output(60,eq,71) output(99,eq,98)
Optimization: 16 6
Answer: 19
preference(1,(1,1),0,for(atom(hasIngredient(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(6))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasCost(4)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasPrepTime(1))),()) preference(1,aso) output(71,better,57) output(57,better,8) output(91,better,76) output(76,better,51) output(51,better,67) output(60,better,99) output(71,better,53) output(53,better,30) output(98,better,76) output(71,better,30) output(76,better,67) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(60,better,57) output(99,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(99,worse,71) output(67,worse,52) output(78,worse,71) output(30,worse,98) output(30,eq,76) output(53,eq,98) output(99,eq,53) output(51,eq,52) output(60,eq,71) output(99,eq,98)
Optimization: 14 6
Answer: 20
preference(1,(1,1),0,for(atom(hasIngredient(3))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),0,for(atom(hasIngredient(6))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),1,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,6),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,3),1,for(atom(hasCategory(1))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,aso) output(71,better,57) output(57,better,8) output(91,better,76) output(51,better,67) output(71,better,53) output(53,better,30) output(98,better,76) output(30,better,76) output(71,better,30) output(99,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(60,better,57) output(99,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(78,worse,71) output(30,worse,98) output(99,eq,71) output(76,eq,51) output(67,eq,52) output(60,eq,99) output(53,eq,98) output(60,eq,71)
Optimization: 12 6
Progression : [ 1;12] (Error: 11)
Answer: 21
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,3),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,5),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),0,for(neg(atom(hasCost(4)))),()) preference(1,(1,4),1,for(neg(atom(hasCost(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasIngredient(7))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasIngredient(9))),()) preference(1,(1,1),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),2,for(atom(hasPrepTime(3))),()) preference(1,(1,5),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(99,better,71) output(71,better,57) output(57,better,8) output(91,better,76) output(76,better,51) output(51,better,67) output(67,better,52) output(60,better,99) output(78,better,71) output(71,better,53) output(30,better,98) output(98,better,76) output(30,better,76) output(53,better,98) output(71,better,30) output(99,better,53) output(78,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(99,better,8) output(78,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(78,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(53,eq,30)
Optimization: 1 6
Progression : 1 [1;6] (Error: 5)
Progression : 1 [2;6] (Error: 2)
Answer: 22
preference(1,(1,1),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(4)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(1)))),()) preference(1,(1,1),1,for(atom(hasCost(1))),()) preference(1,(1,2),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasPrep(7))),()) preference(1,(1,4),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(12))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(8))),()) preference(1,(1,4),2,for(atom(hasCategory(2))),()) preference(1,(1,5),2,for(atom(hasCost(4))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(99,better,71) output(71,better,57) output(57,better,8) output(91,better,76) output(76,better,51) output(51,better,67) output(67,better,52) output(60,better,99) output(78,better,71) output(71,better,53) output(30,better,98) output(98,better,76) output(30,better,76) output(53,better,98) output(71,better,30) output(99,better,53) output(78,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(99,better,8) output(78,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(78,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(53,eq,30)
Optimization: 1 5
Answer: 23
preference(1,(1,2),0,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(8)))),()) preference(1,(1,4),0,for(atom(hasCost(2))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,3),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,6),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasCost(1))),()) preference(1,(1,4),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(9))),()) preference(1,(1,6),2,for(atom(hasDifficulty(3))),()) preference(1,(1,4),3,for(atom(hasIngredient(3))),()) preference(1,aso) output(99,better,71) output(71,better,57) output(57,better,8) output(91,better,76) output(76,better,51) output(51,better,67) output(67,better,52) output(60,better,99) output(78,better,71) output(71,better,53) output(30,better,98) output(98,better,76) output(30,better,76) output(53,better,98) output(71,better,30) output(99,better,53) output(78,better,53) output(51,better,52) output(76,better,67) output(91,better,51) output(98,better,51) output(71,better,8) output(99,better,57) output(78,better,57) output(60,better,71) output(60,better,57) output(99,better,8) output(78,better,8) output(60,better,8) output(30,better,51) output(53,better,51) output(91,better,67) output(98,better,67) output(30,better,67) output(76,better,52) output(91,better,52) output(98,better,52) output(60,better,53) output(99,better,30) output(78,better,30) output(60,better,30) output(71,better,98) output(99,better,98) output(78,better,98) output(53,better,76) output(71,better,76) output(99,better,76) output(78,better,76) output(60,better,76) output(60,better,98) output(30,better,52) output(53,better,52) output(71,better,52) output(99,better,52) output(78,better,52) output(53,better,67) output(71,better,67) output(99,better,67) output(78,better,67) output(60,better,67) output(71,better,51) output(99,better,51) output(78,better,51) output(60,better,51) output(60,better,52) output(53,eq,30)
Optimization: 1 4
Progression : 1 [3;4] (Error: 0.333333)
OPTIMUM FOUND

Models       : 23
  Optimum    : yes
Optimization : 1 4
Calls        : 1
Time         : 56.438s (Solving: 42.97s 1st Model: 0.78s Unsat: 36.16s)
CPU Time     : 185.092s
Threads      : 4        (Winner: 1)

Choices      : 464363   (Domain: 6723)
Conflicts    : 70323    (Analyzed: 70317)
Restarts     : 97       (Average: 724.92 Last: 5397)
Model-Level  : 383.0   
Problems     : 9        (Average Length: 0.44 Splits: 0)
Lemmas       : 98259    (Deleted: 24005)
  Binary     : 3118     (Ratio:   3.17%)
  Ternary    : 11968    (Ratio:  12.18%)
  Conflict   : 70317    (Average Length:  320.3 Ratio:  71.56%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 27942    (Average Length:   40.3 Ratio:  28.44%) 
  Distributed: 9407     (Ratio:  13.38% Average LBD: 3.09) 
  Integrated : 28215    (Ratio: 299.94% Unit: 309 Average Jumps: 77.17)
Backjumps    : 70317    (Average:  5.94 Max: 1079 Sum: 417388)
  Executed   : 70288    (Average:  5.92 Max: 1079 Sum: 416207 Ratio:  99.72%)
  Bounded    : 29       (Average: 40.72 Max:  65 Sum:   1181 Ratio:   0.28%)

Rules        : 6322070 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 1036120 
Bodies       : 1243431 
  Count      : 2400    
Equivalences : 3170499  (Atom=Atom: 935913 Body=Body: 1031971 Other: 1202615)
Tight        : Yes
Variables    : 125691   (Eliminated:    0 Frozen: 60075)
Constraints  : 5406582  (Binary:  97.7% Ternary:   2.1% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(1)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasCategory(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasCost(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> not atom(hasCategory(4))  ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(11)) >> not atom(hasIngredient(12))  ; 
  atom(hasPrep(4)) >> atom(hasIngredient(11)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> atom(hasIngredient(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasCategory(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasIngredient(10))  >> atom(hasIngredient(4)) || not atom(hasCost(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(3)) >> not atom(hasIngredient(10))  >> atom(hasIngredient(4)) || not atom(hasDifficulty(3))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(7)) >> not atom(hasIngredient(10))  >> atom(hasIngredient(4)) || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  >> not atom(hasIngredient(10))  >> atom(hasIngredient(4)) || not atom(hasCategory(5))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> not atom(hasIngredient(10))  >> atom(hasIngredient(4)) || not atom(hasIngredient(7))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> not atom(hasCost(3))  || atom(hasCost(2)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasIngredient(12)) >> atom(hasCategory(3)) >> not atom(hasCategory(2))  || not atom(hasCost(1))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(3))  || atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(10))  >> not atom(hasIngredient(2))  || atom(hasCategory(4)) ; 
  atom(hasCategory(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCost(2))  >> not atom(hasCost(3))  || atom(hasCost(2)) ; 
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasPrep(0)) >> not atom(hasCategory(2))  || not atom(hasCost(1))  ; 
  not atom(hasCost(2))  >> not atom(hasDifficulty(3))  || atom(hasCost(2)) ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(10))  >> not atom(hasIngredient(2))  || atom(hasCategory(4)) ; 
  atom(hasCategory(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasDifficulty(3)) >> atom(hasCategory(5)) >> not atom(hasIngredient(7))  || not atom(hasIngredient(9))  ; 
  atom(hasDifficulty(3)) >> not atom(hasIngredient(2))  || not atom(hasCost(1))  ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(10))  >> not atom(hasIngredient(2))  || atom(hasCategory(4)) ; 
  atom(hasCategory(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(7)) >> not atom(hasIngredient(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(2))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(10))  >> not atom(hasIngredient(5))  || atom(hasCategory(4)) ; 
  atom(hasCategory(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrepTime(1)) >> not atom(hasPrep(7))  || not atom(hasCategory(2))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(8))  || not atom(hasDifficulty(3))  ; 
  atom(hasPrep(0)) >> not atom(hasCategory(5))  || not atom(hasPrep(0))  ; 
  atom(hasPrep(0)) >> not atom(hasIngredient(10))  >> not atom(hasPrep(4))  || atom(hasCategory(4)) ; 
  atom(hasCategory(5)) || not atom(hasIngredient(4))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(2))  >> not atom(hasPrep(4))  >> atom(hasIngredient(4)) || atom(hasCategory(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(4))  >> atom(hasIngredient(6)) || atom(hasCategory(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(4))  >> atom(hasIngredient(7)) || atom(hasCategory(2)) ; 
  not atom(hasCategory(2))  >> not atom(hasPrep(4))  >> atom(hasIngredient(8)) || atom(hasCategory(2)) ; 
  atom(hasDifficulty(1)) >> not atom(hasCategory(2))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(1)) >> not atom(hasDifficulty(3))  || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(4))  >> atom(hasPrep(4)) >> atom(hasPrepTime(2)) || atom(hasCost(2)) ; 
  atom(hasIngredient(9)) >> atom(hasCost(5)) >> atom(hasDifficulty(1)) || not atom(hasIngredient(8))  ; 
  atom(hasCost(1)) >> atom(hasPrepTime(3)) >> not atom(hasIngredient(10))  || not atom(hasCost(4))  ; 
  atom(hasDifficulty(3)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(7))  || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrep(1))  >> not atom(hasPrep(2))  || not atom(hasCost(1))  ; 
  atom(hasIngredient(10)) >> atom(hasCost(4)) >> atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasPrep(6)) >> not atom(hasIngredient(9))  || not atom(hasCost(1))  ; 
  atom(hasCategory(1)) || not atom(hasDifficulty(1))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(3)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  >> not atom(hasIngredient(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasCost(4))  || not atom(hasCost(1))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasIngredient(6)) ; 
  atom(hasCategory(3)) >> atom(hasIngredient(3)) >> atom(hasPrep(5)) || not atom(hasCategory(3))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(3)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  >> not atom(hasIngredient(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasCost(4))  || not atom(hasCost(1))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(10))  >> not atom(hasIngredient(1))  || atom(hasIngredient(6)) ; 
  atom(hasIngredient(9)) >> not atom(hasPrep(5))  >> not atom(hasIngredient(11))  || atom(hasCost(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(3)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  >> not atom(hasIngredient(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasPrepTime(1)) >> not atom(hasCost(4))  || not atom(hasCost(1))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(10))  >> not atom(hasIngredient(11))  || atom(hasIngredient(6)) ; 
  not atom(hasCost(2))  >> not atom(hasPrep(5))  >> not atom(hasCategory(5))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasIngredient(4))  >> not atom(hasIngredient(11))  || atom(hasIngredient(3)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(4))  >> not atom(hasIngredient(1))  || not atom(hasPrepTime(1))  ; 
  atom(hasCategory(1)) || not atom(hasDifficulty(1))  ; 
  atom(hasDifficulty(3)) >> not atom(hasPrepTime(1))  || not atom(hasCost(1))  ; 
  not atom(hasDifficulty(1))  >> not atom(hasIngredient(10))  >> not atom(hasIngredient(1))  || atom(hasIngredient(6)) ; 
  not atom(hasCost(2))  >> not atom(hasPrepTime(2))  >> not atom(hasPrep(0))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> not atom(hasCost(1))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(7)) >> not atom(hasPrep(1))  >> atom(hasIngredient(3)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(2)) >> atom(hasDifficulty(3)) >> not atom(hasDifficulty(3))  || not atom(hasCost(1))  ; 
  not atom(hasCost(2))  >> atom(hasPrepTime(3)) >> not atom(hasPrep(0))  || not atom(hasDifficulty(1))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(9)) >> atom(hasIngredient(12)) >> not atom(hasPrep(0))  || not atom(hasCost(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(1)) >> atom(hasIngredient(12)) >> not atom(hasIngredient(9))  || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(9)) >> atom(hasPrep(2)) >> not atom(hasPrep(0))  || not atom(hasIngredient(7))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(8)) >> not atom(hasCost(1))  || not atom(hasDifficulty(3))  ; 
  atom(hasDifficulty(3)) >> atom(hasCategory(2)) >> atom(hasIngredient(3)) || not atom(hasDifficulty(4))  ; 
  atom(hasCost(5)) >> atom(hasCost(4)) >> not atom(hasIngredient(1))  || not atom(hasCost(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> atom(hasPrep(2)) >> not atom(hasPrep(0))  || not atom(hasIngredient(7))  ; 
  atom(hasCost(1)) >> atom(hasIngredient(9)) >> not atom(hasDifficulty(3))  || not atom(hasIngredient(8))  ; 
  atom(hasCategory(3)) >> not atom(hasPrep(1))  >> atom(hasIngredient(3)) || atom(hasCost(2)) ; 
  atom(hasIngredient(11)) >> atom(hasDifficulty(3)) >> not atom(hasCost(1))  
}.
