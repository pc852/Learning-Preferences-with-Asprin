asprin_vL version 1.0
Reading from stdin
-:1246:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1271:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1352:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1626:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1803:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2004:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2008:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2008:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2014:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2113:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2139:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2259:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2293:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2315:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1163:1-16: info: no atoms over signature occur in program:
  output/3

-:1155:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1156:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1157:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1158:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1188:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(3)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,2),1,for(atom(hasIngredient(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(2))),()) preference(1,(1,5),1,for(atom(hasCost(5))),()) preference(1,(1,6),1,for(atom(hasIngredient(11))),()) preference(1,(1,1),2,for(atom(hasDifficulty(4))),()) preference(1,(1,2),2,for(atom(hasCost(4))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(5))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(1))),()) preference(1,aso) output(26,better,74) output(7,better,74) output(26,better,28) output(74,worse,28) output(74,worse,86) output(79,worse,28) output(74,worse,76) output(7,worse,86) output(7,worse,76) output(96,eq,20) output(20,eq,52) output(52,eq,98) output(8,eq,41) output(2,eq,3) output(3,eq,20) output(86,eq,76) output(26,eq,86) output(2,eq,20) output(7,eq,28) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,52) output(96,eq,98) output(3,eq,98) output(2,eq,98) output(26,eq,76)
Optimization: 24 6
Answer: 2
preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(8))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(8))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(96,better,20) output(52,better,98) output(8,better,41) output(26,better,74) output(3,better,20) output(26,better,86) output(26,better,28) output(96,better,98) output(3,better,98) output(26,better,76) output(20,worse,52) output(2,worse,3) output(74,worse,86) output(74,worse,76) output(7,worse,86) output(2,worse,52) output(7,worse,76) output(74,eq,28) output(7,eq,74) output(86,eq,76) output(79,eq,28) output(2,eq,20) output(7,eq,28) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,98)
Optimization: 17 6
Answer: 3
preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(2)))),()) preference(1,(1,1),1,for(atom(hasIngredient(2))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(7))),()) preference(1,(1,6),1,for(atom(hasIngredient(5))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(2))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(2))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasDifficulty(4))),()) preference(1,(1,3),3,for(atom(hasCost(5))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasCost(4))),()) preference(1,aso) output(96,better,20) output(52,better,98) output(8,better,41) output(26,better,74) output(3,better,20) output(7,better,74) output(79,better,28) output(26,better,28) output(7,better,28) output(96,better,98) output(3,better,98) output(20,worse,52) output(2,worse,3) output(74,worse,86) output(74,worse,76) output(2,worse,52) output(74,eq,28) output(86,eq,76) output(26,eq,86) output(2,eq,20) output(20,eq,98) output(96,eq,52) output(3,eq,52) output(2,eq,98) output(26,eq,76)
Optimization: 16 6
Answer: 4
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasCost(3))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,aso) output(20,better,52) output(26,better,74) output(7,better,74) output(74,better,86) output(74,better,76) output(26,better,86) output(7,better,86) output(96,better,52) output(3,better,52) output(2,better,52) output(26,better,76) output(7,better,76) output(52,worse,98) output(74,worse,28) output(96,eq,20) output(8,eq,41) output(2,eq,3) output(3,eq,20) output(86,eq,76) output(79,eq,28) output(2,eq,20) output(26,eq,28) output(7,eq,28) output(20,eq,98) output(96,eq,98) output(3,eq,98) output(2,eq,98)
Optimization: 15 2
Answer: 5
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(2)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,aso) output(52,better,98) output(8,better,41) output(74,better,28) output(2,better,3) output(74,better,86) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(2,better,20) output(26,better,28) output(7,better,28) output(2,better,98) output(26,better,76) output(7,better,76) output(20,worse,52) output(96,worse,52) output(3,worse,52) output(96,eq,20) output(26,eq,74) output(3,eq,20) output(7,eq,74) output(86,eq,76) output(20,eq,98) output(2,eq,52) output(96,eq,98) output(3,eq,98)
Optimization: 12 2
Answer: 6
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),2,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasPrep(0))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,aso) output(20,better,52) output(8,better,41) output(26,better,74) output(7,better,74) output(74,better,86) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(26,better,28) output(7,better,28) output(96,better,52) output(3,better,52) output(2,better,52) output(26,better,76) output(7,better,76) output(52,worse,98) output(96,eq,20) output(74,eq,28) output(2,eq,3) output(3,eq,20) output(86,eq,76) output(2,eq,20) output(20,eq,98) output(96,eq,98) output(3,eq,98) output(2,eq,98)
Optimization: 11 2
Answer: 7
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,aso) output(20,better,52) output(26,better,74) output(2,better,3) output(7,better,74) output(74,better,86) output(74,better,76) output(26,better,86) output(7,better,86) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(2,better,52) output(96,better,98) output(2,better,98) output(26,better,76) output(7,better,76) output(8,worse,41) output(3,worse,20) output(79,worse,28) output(96,eq,20) output(52,eq,98) output(74,eq,28) output(86,eq,76) output(2,eq,20) output(3,eq,52) output(3,eq,98)
Optimization: 10 2
Answer: 8
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasIngredient(9))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,aso) output(20,better,52) output(8,better,41) output(74,better,28) output(2,better,3) output(74,better,86) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(2,better,52) output(96,better,98) output(2,better,98) output(26,better,76) output(7,better,76) output(3,worse,20) output(96,eq,20) output(52,eq,98) output(26,eq,74) output(7,eq,74) output(86,eq,76) output(2,eq,20) output(3,eq,52) output(3,eq,98)
Optimization: 9 2
Answer: 9
preference(1,(1,1),0,for(atom(hasCost(4))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(0)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(atom(hasCategory(1))),()) preference(1,(1,1),2,for(atom(hasPrep(0))),()) preference(1,(1,2),2,for(atom(hasPrep(1))),()) preference(1,aso) output(20,better,52) output(8,better,41) output(26,better,74) output(2,better,3) output(7,better,74) output(74,better,86) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(2,better,52) output(96,better,98) output(2,better,98) output(26,better,76) output(7,better,76) output(3,worse,20) output(96,eq,20) output(52,eq,98) output(74,eq,28) output(86,eq,76) output(2,eq,20) output(3,eq,52) output(3,eq,98)
Optimization: 8 2
Answer: 10
preference(1,(1,1),0,for(atom(hasPrep(1))),()) preference(1,(1,2),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),0,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,4),0,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,5),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,6),2,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(1))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(3))),()) preference(1,(1,5),1,for(atom(hasIngredient(9))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,(1,2),2,for(atom(hasCost(1))),()) preference(1,(1,4),2,for(atom(hasIngredient(12))),()) preference(1,(1,1),3,for(atom(hasCost(3))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(4))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasIngredient(12))),()) preference(1,aso) output(96,better,20) output(20,better,52) output(52,better,98) output(8,better,41) output(26,better,74) output(74,better,28) output(2,better,3) output(3,better,20) output(7,better,74) output(74,better,86) output(86,better,76) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(2,better,20) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(3,better,52) output(2,better,52) output(96,better,98) output(3,better,98) output(2,better,98) output(26,better,76) output(7,better,76)
Optimization: 0 6
Progression : 0 [1;6] (Error: 5)
Answer: 11
preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(5)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasIngredient(9))),()) preference(1,(1,5),1,for(atom(hasCost(1))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasCategory(4))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,5),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(96,better,20) output(20,better,52) output(52,better,98) output(8,better,41) output(26,better,74) output(74,better,28) output(2,better,3) output(3,better,20) output(7,better,74) output(74,better,86) output(86,better,76) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(2,better,20) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(3,better,52) output(2,better,52) output(96,better,98) output(3,better,98) output(2,better,98) output(26,better,76) output(7,better,76)
Optimization: 0 5
Answer: 12
preference(1,(1,3),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(6)))),()) preference(1,(1,3),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),1,for(atom(hasCost(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(9))),()) preference(1,(1,4),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasCategory(4))),()) preference(1,(1,2),2,for(atom(hasPrep(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(4))),()) preference(1,(1,3),3,for(atom(hasPrep(1))),()) preference(1,(1,4),3,for(atom(hasIngredient(12))),()) preference(1,(1,6),3,for(atom(hasCost(3))),()) preference(1,aso) output(96,better,20) output(20,better,52) output(52,better,98) output(8,better,41) output(26,better,74) output(74,better,28) output(2,better,3) output(3,better,20) output(7,better,74) output(74,better,86) output(86,better,76) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(2,better,20) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(3,better,52) output(2,better,52) output(96,better,98) output(3,better,98) output(2,better,98) output(26,better,76) output(7,better,76)
Optimization: 0 4
Progression : 0 [2;4] (Error: 1)
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasCategory(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,1),2,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasIngredient(9))),()) preference(1,(1,3),1,for(atom(hasCategory(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(6))),()) preference(1,(1,1),3,for(atom(hasPrep(1))),()) preference(1,(1,3),3,for(atom(hasIngredient(12))),()) preference(1,(1,4),3,for(atom(hasCategory(5))),()) preference(1,aso) output(96,better,20) output(20,better,52) output(52,better,98) output(8,better,41) output(26,better,74) output(74,better,28) output(2,better,3) output(3,better,20) output(7,better,74) output(74,better,86) output(86,better,76) output(79,better,28) output(74,better,76) output(26,better,86) output(7,better,86) output(2,better,20) output(26,better,28) output(7,better,28) output(20,better,98) output(96,better,52) output(3,better,52) output(2,better,52) output(96,better,98) output(3,better,98) output(2,better,98) output(26,better,76) output(7,better,76)
Optimization: 0 3
OPTIMUM FOUND

Models       : 13
  Optimum    : yes
Optimization : 0 3
Calls        : 1
Time         : 8.288s (Solving: 2.25s 1st Model: 0.36s Unsat: 0.39s)
CPU Time     : 14.908s
Threads      : 4        (Winner: 1)

Choices      : 85831    (Domain: 359)
Conflicts    : 7213     (Analyzed: 7209)
Restarts     : 23       (Average: 313.43 Last: 2204)
Model-Level  : 493.1   
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 14551    (Deleted: 0)
  Binary     : 1120     (Ratio:   7.70%)
  Ternary    : 2995     (Ratio:  20.58%)
  Conflict   : 7209     (Average Length:  113.6 Ratio:  49.54%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 7342     (Average Length:   35.4 Ratio:  50.46%) 
  Distributed: 2457     (Ratio:  34.08% Average LBD: 2.89) 
  Integrated : 7365     (Ratio: 299.76% Unit: 121 Average Jumps: 64.57)
Backjumps    : 7209     (Average:  9.82 Max: 1255 Sum:  70797)
  Executed   : 7201     (Average:  9.80 Max: 1255 Sum:  70683 Ratio:  99.84%)
  Bounded    : 8        (Average: 14.25 Max:  26 Sum:    114 Ratio:   0.16%)

Rules        : 2622659 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 440866  
Bodies       : 555204  
  Count      : 996     
Equivalences : 1332705  (Atom=Atom: 392205 Body=Body: 423868 Other: 516632)
Tight        : Yes
Variables    : 91275    (Eliminated:    0 Frozen: 26127)
Constraints  : 2348274  (Binary:  96.2% Ternary:   3.6% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasDifficulty(4)) >> not atom(hasDifficulty(2))  ; 
  atom(hasIngredient(5)) >> atom(hasCost(4)) >> not atom(hasIngredient(11))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> not atom(hasPrep(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(5)) >> atom(hasCost(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(8)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(8)) >> not atom(hasCost(2))  ; 
  atom(hasPrep(7)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(1)) >> atom(hasIngredient(6)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(2)) >> atom(hasIngredient(11)) >> atom(hasDifficulty(4)) ; 
  atom(hasCost(4)) >> atom(hasIngredient(2)) >> not atom(hasIngredient(10))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(5)) >> atom(hasCost(5)) ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(2)) >> not atom(hasCost(2))  ; 
  atom(hasPrep(7)) >> atom(hasCost(5)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(5)) >> atom(hasIngredient(6)) >> atom(hasCost(4)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasCost(3)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasPrep(6)) >> not atom(hasPrep(5))  >> not atom(hasCategory(2))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasPrep(0)) >> not atom(hasPrep(5))  >> not atom(hasCategory(1))  || not atom(hasPrep(0))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasCategory(1)) >> atom(hasPrep(1)) >> not atom(hasCost(3))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasIngredient(9)) >> atom(hasPrep(1)) >> not atom(hasPrep(0))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(2)) >> atom(hasPrep(0)) >> not atom(hasCategory(1))  || atom(hasCost(4)) ; 
  atom(hasCategory(1)) >> atom(hasPrep(1)) >> not atom(hasPrep(0))  || not atom(hasIngredient(9))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(3)) >> atom(hasIngredient(3)) >> atom(hasCost(3)) || atom(hasPrep(1)) ; 
  atom(hasIngredient(1)) >> atom(hasCost(1)) >> not atom(hasIngredient(10))  || not atom(hasCategory(1))  ; 
  atom(hasCategory(2)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(1)) || not atom(hasIngredient(9))  ; 
  atom(hasIngredient(3)) >> atom(hasIngredient(12)) >> atom(hasIngredient(4)) || not atom(hasDifficulty(3))  ; 
  atom(hasIngredient(9)) >> not atom(hasCategory(3))  >> atom(hasIngredient(12)) || not atom(hasCategory(1))  ; 
  atom(hasPrep(6)) >> not atom(hasIngredient(7))  >> atom(hasIngredient(12)) || not atom(hasPrep(4))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(1)) || not atom(hasCategory(2))  ; 
  atom(hasIngredient(9)) >> atom(hasDifficulty(1)) >> not atom(hasCost(1))  || not atom(hasCategory(1))  ; 
  atom(hasCost(1)) >> atom(hasCategory(4)) >> atom(hasIngredient(12)) || not atom(hasPrep(5))  ; 
  atom(hasCategory(4)) >> atom(hasIngredient(4)) >> atom(hasCost(3)) || not atom(hasPrep(6))  ; 
  atom(hasCost(4)) >> atom(hasPrep(2)) >> not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(1)) || not atom(hasCategory(2))  ; 
  atom(hasPrep(3)) >> not atom(hasCategory(3))  >> atom(hasIngredient(12)) || not atom(hasCategory(1))  ; 
  atom(hasCategory(4)) >> atom(hasIngredient(4)) >> atom(hasCost(3)) || not atom(hasPrep(6))  ; 
  atom(hasCost(4)) >> atom(hasPrep(2)) >> not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(9)) >> not atom(hasPrepTime(2))  >> atom(hasPrep(1)) || not atom(hasCategory(2))  ; 
  atom(hasCategory(2)) >> not atom(hasCategory(3))  >> atom(hasIngredient(12)) || not atom(hasPrep(2))  ; 
  atom(hasIngredient(6)) >> not atom(hasCategory(5))  >> atom(hasCategory(5)) || not atom(hasCategory(1))  
}.
