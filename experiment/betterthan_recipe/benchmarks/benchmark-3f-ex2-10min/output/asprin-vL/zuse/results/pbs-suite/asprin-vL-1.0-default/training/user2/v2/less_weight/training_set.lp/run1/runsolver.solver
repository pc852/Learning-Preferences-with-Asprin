asprin_vL version 1.0
Reading from stdin
-:1237:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1247:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1262:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1343:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1604:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1617:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1794:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1923:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1995:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1999:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1999:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2005:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2104:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2130:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2250:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2284:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2306:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1154:1-16: info: no atoms over signature occur in program:
  output/3

-:1146:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1147:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(25,eq,69) output(69,eq,24) output(67,eq,42) output(42,eq,64) output(52,eq,23) output(72,eq,65) output(10,eq,14) output(14,eq,48) output(18,eq,51) output(51,eq,65) output(65,eq,42) output(42,eq,25) output(67,eq,25) output(65,eq,25) output(72,eq,42) output(51,eq,42) output(18,eq,65) output(10,eq,48) output(67,eq,64) output(65,eq,64) output(25,eq,24) output(42,eq,69) output(67,eq,69) output(65,eq,69) output(72,eq,69) output(51,eq,69) output(42,eq,24) output(67,eq,24) output(65,eq,24) output(72,eq,64) output(51,eq,64) output(18,eq,64) output(18,eq,42) output(72,eq,25) output(51,eq,25) output(18,eq,25) output(72,eq,24) output(51,eq,24) output(18,eq,24) output(18,eq,69)
Optimization: 40 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(5))),1) preference(1,(1,2),1,for(atom(hasPrep(4))),6) preference(1,(1,4),1,for(atom(hasCategory(5))),6) preference(1,(1,5),1,for(atom(hasDifficulty(1))),6) preference(1,(1,7),1,for(atom(hasIngredient(3))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),4) preference(1,(1,9),1,for(atom(hasCategory(3))),4) preference(1,(1,11),1,for(atom(hasPrepTime(2))),1) preference(1,(1,12),1,for(atom(hasIngredient(6))),6) preference(1,(1,13),1,for(atom(hasCost(5))),6) preference(1,(1,14),1,for(atom(hasIngredient(10))),6) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(18,better,51) output(18,better,65) output(18,better,64) output(18,better,42) output(18,better,25) output(18,better,24) output(18,better,69) output(51,better,65) output(51,better,42) output(51,better,69) output(51,better,64) output(51,better,25) output(51,better,24) output(67,better,42) output(67,better,25) output(67,better,64) output(67,better,69) output(67,better,24) output(72,better,65) output(72,better,42) output(72,better,69) output(72,better,64) output(72,better,25) output(72,better,24) output(14,better,48) output(42,better,64) output(42,better,25) output(42,better,69) output(42,better,24) output(69,better,24) output(25,better,69) output(25,better,24) output(52,better,23) output(65,better,42) output(65,better,25) output(65,better,64) output(65,better,69) output(65,better,24)
Optimization: 0 11
Progression : 0 [ 1;11] (Error: 10)
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 3
preference(1,(1,1),1,for(atom(hasCategory(4))),1) preference(1,(1,2),1,for(atom(hasCost(3))),4) preference(1,(1,4),1,for(atom(hasCategory(5))),5) preference(1,(1,5),1,for(atom(hasCost(2))),1) preference(1,(1,6),1,for(atom(hasPrep(0))),3) preference(1,(1,9),1,for(atom(hasDifficulty(1))),6) preference(1,(1,10),1,for(atom(hasPrep(4))),2) preference(1,(1,12),1,for(atom(hasIngredient(10))),7) preference(1,(1,13),1,for(atom(hasPrepTime(1))),1) preference(1,(1,14),1,for(atom(hasIngredient(3))),3) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(18,better,51) output(18,better,65) output(18,better,64) output(18,better,42) output(18,better,25) output(18,better,24) output(18,better,69) output(51,better,65) output(51,better,42) output(51,better,69) output(51,better,64) output(51,better,25) output(51,better,24) output(67,better,42) output(67,better,25) output(67,better,64) output(67,better,69) output(67,better,24) output(72,better,65) output(72,better,42) output(72,better,69) output(72,better,64) output(72,better,25) output(72,better,24) output(14,better,48) output(42,better,64) output(42,better,25) output(42,better,69) output(42,better,24) output(69,better,24) output(25,better,69) output(25,better,24) output(52,better,23) output(65,better,42) output(65,better,25) output(65,better,64) output(65,better,69) output(65,better,24)
Optimization: 0 10
Answer: 4
preference(1,(1,3),1,for(atom(hasDifficulty(1))),2) preference(1,(1,5),1,for(atom(hasCategory(3))),6) preference(1,(1,6),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasCategory(4))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(3))),2) preference(1,(1,12),1,for(atom(hasDifficulty(3))),6) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(18,better,51) output(18,better,65) output(18,better,64) output(18,better,42) output(18,better,25) output(18,better,24) output(18,better,69) output(51,better,65) output(51,better,42) output(51,better,69) output(51,better,64) output(51,better,25) output(51,better,24) output(67,better,42) output(67,better,25) output(67,better,64) output(67,better,69) output(67,better,24) output(72,better,65) output(72,better,42) output(72,better,69) output(72,better,64) output(72,better,25) output(72,better,24) output(14,better,48) output(42,better,64) output(42,better,25) output(42,better,69) output(42,better,24) output(69,better,24) output(25,better,69) output(25,better,24) output(52,better,23) output(65,better,42) output(65,better,25) output(65,better,64) output(65,better,69) output(65,better,24)
Optimization: 0 9
Answer: 5
preference(1,(1,3),1,for(atom(hasPrepTime(1))),5) preference(1,(1,7),1,for(atom(hasCategory(4))),2) preference(1,(1,8),1,for(atom(hasPrep(7))),1) preference(1,(1,9),1,for(atom(hasPrep(5))),2) preference(1,(1,10),1,for(atom(hasPrep(1))),6) preference(1,(1,11),1,for(atom(hasIngredient(3))),2) preference(1,(1,12),1,for(atom(hasDifficulty(3))),6) preference(1,(1,13),1,for(atom(hasDifficulty(1))),2) preference(1,less(weight)) output(10,better,14) output(10,better,48) output(18,better,51) output(18,better,65) output(18,better,64) output(18,better,42) output(18,better,25) output(18,better,24) output(18,better,69) output(51,better,65) output(51,better,42) output(51,better,69) output(51,better,64) output(51,better,25) output(51,better,24) output(67,better,42) output(67,better,25) output(67,better,64) output(67,better,69) output(67,better,24) output(72,better,65) output(72,better,42) output(72,better,69) output(72,better,64) output(72,better,25) output(72,better,24) output(14,better,48) output(42,better,64) output(42,better,25) output(42,better,69) output(42,better,24) output(69,better,24) output(25,better,69) output(25,better,24) output(52,better,23) output(65,better,42) output(65,better,25) output(65,better,64) output(65,better,69) output(65,better,24)
Optimization: 0 8
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.068 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 5+
  Optimum    : unknown
Optimization : 0 8
Calls        : 1
Time         : 598.053s (Solving: 595.23s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2383.512s
Threads      : 4        (Winner: 4)

Choices      : 12319322 (Domain: 273621)
Conflicts    : 7692109  (Analyzed: 7692107)
Restarts     : 7340     (Average: 1047.97 Last: 500358)
Model-Level  : 59.4    
Problems     : 7        (Average Length: 0.57 Splits: 0)
Lemmas       : 7700256  (Deleted: 7284149)
  Binary     : 672      (Ratio:   0.01%)
  Ternary    : 722      (Ratio:   0.01%)
  Conflict   : 7692107  (Average Length:  583.6 Ratio:  99.89%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 8149     (Average Length:   87.6 Ratio:   0.11%) 
  Distributed: 2717     (Ratio:   0.04% Average LBD: 3.52) 
  Integrated : 8151     (Ratio: 300.00% Unit: 0 Average Jumps: 0.00)
Backjumps    : 7692107  (Average:  1.45 Max: 1039 Sum: 11141571)
  Executed   : 7692106  (Average:  1.45 Max: 1039 Sum: 11141549 Ratio: 100.00%)
  Bounded    : 1        (Average: 22.00 Max:  22 Sum:     22 Ratio:   0.00%)

Rules        : 475750  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14522   
Bodies       : 18969   
  Sum        : 80      
  Count      : 14      
Equivalences : 7250     (Atom=Atom: 413 Body=Body: 174 Other: 6663)
Tight        : Yes
Variables    : 17079    (Eliminated:    0 Frozen: 7755)
Constraints  : 497140   (Binary:  97.4% Ternary:   1.9% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(4)) ; 
  6 :: atom(hasCategory(5)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(7)) ; 
  4 :: atom(hasCategory(3)) ; 
  1 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasIngredient(6)) ; 
  6 :: atom(hasCost(5)) ; 
  6 :: atom(hasIngredient(10)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasCategory(4)) ; 
  4 :: atom(hasCost(3)) ; 
  5 :: atom(hasCategory(5)) ; 
  1 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  6 :: atom(hasDifficulty(1)) ; 
  2 :: atom(hasPrep(4)) ; 
  7 :: atom(hasIngredient(10)) ; 
  1 :: atom(hasPrepTime(1)) ; 
  3 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(7)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(1)) ; 
  2 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasDifficulty(1)) 
}.
