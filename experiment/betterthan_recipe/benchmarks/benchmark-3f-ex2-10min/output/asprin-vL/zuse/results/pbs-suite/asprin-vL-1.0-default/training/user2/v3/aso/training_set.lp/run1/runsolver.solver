asprin_vL version 1.0
Reading from stdin
-:1273:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1298:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1379:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1653:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1830:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:2031:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2035:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2035:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2041:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2140:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2166:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2286:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2320:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2342:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1190:1-16: info: no atoms over signature occur in program:
  output/3

-:1182:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1183:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1184:25-35: info: atom does not occur in any rule head:
  forbid_unc

-:1185:25-36: info: atom does not occur in any rule head:
  forbid_diff

-:1215:20-31: info: atom does not occur in any rule head:
  _p_optimize(P,M_,N_)

Solving...
Answer: 1
preference(1,(1,1),3,for(neg(atom(hasCost(1)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasIngredient(8))),()) preference(1,(1,2),1,for(atom(hasDifficulty(4))),()) preference(1,(1,3),1,for(atom(hasIngredient(2))),()) preference(1,(1,4),1,for(atom(hasCost(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,6),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasIngredient(11))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(5))),()) preference(1,(1,4),2,for(atom(hasIngredient(11))),()) preference(1,(1,5),2,for(atom(hasIngredient(11))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,3),3,for(atom(hasIngredient(6))),()) preference(1,(1,5),3,for(atom(hasIngredient(1))),()) preference(1,(1,6),3,for(atom(hasIngredient(1))),()) preference(1,aso) output(64,better,47) output(69,better,24) output(52,better,23) output(64,better,23) output(69,better,49) output(64,better,24) output(42,better,47) output(52,better,47) output(42,better,24) output(52,better,24) output(64,better,49) output(42,better,49) output(69,better,70) output(64,better,70) output(42,better,23) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(25,worse,69) output(24,worse,67) output(23,worse,72) output(23,worse,52) output(47,worse,67) output(25,worse,67) output(23,worse,67) output(50,eq,18) output(47,eq,24) output(24,eq,49) output(49,eq,70) output(42,eq,64) output(64,eq,52) output(42,eq,52) output(25,eq,24) output(24,eq,70) output(47,eq,49) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(23,eq,24) output(25,eq,49) output(23,eq,49) output(47,eq,70) output(25,eq,70) output(52,eq,52) output(23,eq,23) output(23,eq,70)
Optimization: 36 6
Answer: 2
preference(1,(1,1),0,for(neg(atom(hasCost(5)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),1,for(neg(atom(hasPrep(5)))),()) preference(1,(1,1),3,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(5)))),()) preference(1,(1,1),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasIngredient(4))),()) preference(1,(1,4),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasDifficulty(3))),()) preference(1,(1,2),2,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasCategory(5))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,3),3,for(atom(hasPrepTime(1))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(69,better,24) output(24,better,67) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(23,better,52) output(69,better,67) output(25,better,24) output(69,better,49) output(64,better,24) output(23,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(52,better,49) output(23,worse,64) output(49,worse,70) output(42,worse,64) output(52,worse,23) output(52,worse,64) output(42,worse,23) output(25,eq,69) output(42,eq,52) output(64,eq,64) output(52,eq,52) output(23,eq,23) output(42,eq,70) output(52,eq,70)
Optimization: 24 5
Progression : [ 1;24] (Error: 23)
Progression : [ 2;24] (Error: 11)
Progression : [ 3;24] (Error: 7)
Progression : [ 4;24] (Error: 5)
Answer: 3
preference(1,(1,1),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(23,better,52) output(42,better,52) output(69,better,67) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(64,better,70) output(64,better,67) output(23,better,67) output(42,better,67) output(64,better,72) output(42,better,72) output(23,better,70) output(42,better,70) output(52,better,49) output(49,worse,70) output(25,worse,69) output(24,worse,67) output(52,worse,23) output(24,worse,70) output(52,worse,64) output(23,eq,64) output(24,eq,49) output(42,eq,64) output(64,eq,23) output(47,eq,67) output(64,eq,64) output(52,eq,47) output(47,eq,70) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(52,eq,67) output(52,eq,70)
Optimization: 23 2
Answer: 4
preference(1,(1,1),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,aso) output(64,better,47) output(47,better,24) output(69,better,24) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(47,better,67) output(69,better,67) output(47,better,49) output(69,better,49) output(64,better,24) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(64,better,70) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(42,better,70) output(52,better,70) output(52,better,49) output(50,worse,18) output(23,worse,64) output(49,worse,70) output(25,worse,69) output(23,worse,52) output(25,worse,24) output(24,worse,70) output(25,worse,49) output(25,worse,70) output(25,worse,67) output(24,eq,49) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(42,eq,52) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23) output(23,eq,70)
Optimization: 22 2
Answer: 5
preference(1,(1,1),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasIngredient(9))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(69,better,24) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(47,better,67) output(69,better,67) output(47,better,49) output(69,better,49) output(64,better,24) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(64,better,70) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(49,worse,70) output(25,worse,69) output(23,worse,52) output(24,worse,70) output(24,eq,49) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(42,eq,52) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23) output(23,eq,70)
Optimization: 21 2
Answer: 6
preference(1,(1,1),0,for(atom(hasIngredient(10))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),2,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(2)))),()) preference(1,(1,1),1,for(atom(hasCategory(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,6),2,for(atom(hasCategory(4))),()) preference(1,(1,1),3,for(atom(hasCost(2))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(49,better,70) output(69,better,24) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(47,better,67) output(69,better,67) output(69,better,49) output(64,better,24) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(64,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(64,better,70) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(24,worse,49) output(25,worse,69) output(23,worse,52) output(25,worse,49) output(24,eq,67) output(42,eq,64) output(64,eq,52) output(42,eq,52) output(24,eq,70) output(47,eq,49) output(23,eq,47) output(52,eq,64) output(64,eq,64) output(23,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 20 2
Answer: 7
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,2),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(11))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,6),1,for(atom(hasPrep(1))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(7))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(24,better,49) output(69,better,24) output(42,better,64) output(64,better,52) output(23,better,72) output(52,better,72) output(42,better,52) output(47,better,67) output(69,better,67) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(23,better,24) output(42,better,24) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(42,better,70) output(52,better,49) output(52,worse,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 19 6
Answer: 8
preference(1,(1,2),0,for(atom(hasCategory(1))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(neg(atom(hasPrep(0)))),()) preference(1,(1,5),0,for(atom(hasDifficulty(2))),()) preference(1,(1,2),1,for(neg(atom(hasCategory(1)))),()) preference(1,(1,2),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,3),2,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,5),2,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,2),3,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasPrep(2))),()) preference(1,(1,5),1,for(atom(hasPrep(1))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,3),3,for(atom(hasIngredient(7))),()) preference(1,aso) output(50,better,18) output(23,better,64) output(64,better,47) output(24,better,49) output(25,better,69) output(24,better,67) output(42,better,64) output(64,better,52) output(23,better,72) output(52,better,72) output(23,better,52) output(42,better,52) output(69,better,67) output(25,better,24) output(24,better,70) output(69,better,49) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(47,worse,24) output(52,worse,23) output(64,worse,23) output(47,worse,49) output(52,worse,64) output(52,worse,24) output(47,worse,70) output(69,eq,24) output(64,eq,24) output(64,eq,64) output(52,eq,52) output(23,eq,23) output(42,eq,23) output(52,eq,49)
Optimization: 17 4
Answer: 9
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasCategory(1)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(25,better,69) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(69,better,67) output(25,better,24) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(23,worse,64) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(52,worse,64) output(42,eq,64) output(47,eq,67) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23)
Optimization: 16 6
Answer: 10
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(25,better,69) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(23,worse,64) output(24,worse,49) output(24,worse,70) output(52,worse,64) output(42,eq,64) output(64,eq,64) output(47,eq,70) output(52,eq,52) output(23,eq,23)
Optimization: 15 6
Answer: 11
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(4)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasCost(3))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(49,better,70) output(25,better,69) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(23,worse,64) output(24,worse,49) output(24,worse,70) output(47,worse,49) output(52,worse,64) output(42,eq,64) output(64,eq,64) output(23,eq,49) output(52,eq,52) output(23,eq,23)
Optimization: 14 6
Answer: 12
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasPrepTime(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(atom(hasCategory(3))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,4),1,for(neg(atom(hasCategory(4)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,2),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,4),2,for(neg(atom(hasPrep(6)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,6),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,1),3,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,4),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasDifficulty(1))),()) preference(1,(1,3),1,for(atom(hasDifficulty(3))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(1))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,2),3,for(atom(hasPrep(5))),()) preference(1,(1,3),3,for(atom(hasPrep(0))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(49,better,70) output(25,better,69) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(23,worse,64) output(52,worse,64) output(42,eq,64) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 13 6
Answer: 13
preference(1,(1,1),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,2),0,for(neg(atom(hasDifficulty(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(2)))),()) preference(1,(1,6),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,3),1,for(neg(atom(hasIngredient(3)))),()) preference(1,(1,6),1,for(neg(atom(hasIngredient(4)))),()) preference(1,(1,5),2,for(neg(atom(hasCost(3)))),()) preference(1,(1,1),3,for(neg(atom(hasPrep(4)))),()) preference(1,(1,2),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),3,for(neg(atom(hasIngredient(7)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(6)))),()) preference(1,(1,1),1,for(atom(hasCost(4))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasPrep(1))),()) preference(1,(1,5),1,for(atom(hasPrep(3))),()) preference(1,(1,1),2,for(atom(hasPrep(4))),()) preference(1,(1,2),2,for(atom(hasCategory(4))),()) preference(1,(1,3),2,for(atom(hasCost(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(2))),()) preference(1,(1,6),2,for(atom(hasPrep(1))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(25,better,69) output(69,better,24) output(64,better,52) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(24,worse,49) output(24,worse,67) output(24,worse,70) output(52,worse,64) output(42,eq,64) output(52,eq,23) output(23,eq,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 12 6
Progression : [ 5;12] (Error: 1.4)
Progression : [ 6;12] (Error: 1)
Progression : [ 7;12] (Error: 0.714286)
Progression : [ 8;12] (Error: 0.5)
Answer: 14
preference(1,(1,1),0,for(neg(atom(hasPrepTime(3)))),()) preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(4)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,3),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,2),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,3),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),3,for(neg(atom(hasIngredient(9)))),()) preference(1,(1,1),1,for(atom(hasIngredient(4))),()) preference(1,(1,2),1,for(atom(hasCost(5))),()) preference(1,(1,3),1,for(atom(hasIngredient(10))),()) preference(1,(1,4),1,for(atom(hasIngredient(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasIngredient(10))),()) preference(1,(1,1),2,for(atom(hasPrep(5))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,5),2,for(atom(hasIngredient(7))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,1),3,for(atom(hasPrepTime(3))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(47,better,24) output(24,better,49) output(25,better,69) output(69,better,24) output(24,better,67) output(42,better,64) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(24,better,70) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(23,worse,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 8 6
Progression : 8 [1;6] (Error: 5)
Progression : 8 [2;6] (Error: 2)
Answer: 15
preference(1,(1,2),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),0,for(atom(hasIngredient(12))),()) preference(1,(1,3),2,for(neg(atom(hasCategory(3)))),()) preference(1,(1,4),2,for(neg(atom(hasCategory(1)))),()) preference(1,(1,5),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,2),3,for(neg(atom(hasDifficulty(3)))),()) preference(1,(1,5),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,2),1,for(atom(hasIngredient(10))),()) preference(1,(1,3),1,for(atom(hasDifficulty(1))),()) preference(1,(1,4),1,for(atom(hasCategory(2))),()) preference(1,(1,5),1,for(atom(hasIngredient(10))),()) preference(1,(1,6),1,for(atom(hasDifficulty(1))),()) preference(1,(1,2),2,for(atom(hasCategory(5))),()) preference(1,(1,6),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),3,for(atom(hasCost(2))),()) preference(1,(1,4),3,for(atom(hasCategory(1))),()) preference(1,(1,6),3,for(atom(hasPrep(0))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(24,better,49) output(49,better,70) output(25,better,69) output(69,better,24) output(24,better,67) output(42,better,64) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(24,better,70) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(47,worse,24) output(23,worse,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 8 5
Answer: 16
preference(1,(1,3),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),0,for(neg(atom(hasIngredient(6)))),()) preference(1,(1,5),0,for(neg(atom(hasCost(1)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,6),1,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,5),2,for(neg(atom(hasIngredient(11)))),()) preference(1,(1,6),2,for(neg(atom(hasPrep(1)))),()) preference(1,(1,4),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,3),1,for(atom(hasPrep(2))),()) preference(1,(1,4),1,for(atom(hasIngredient(10))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasIngredient(3))),()) preference(1,(1,4),2,for(atom(hasDifficulty(1))),()) preference(1,(1,3),3,for(atom(hasCost(2))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(24,better,49) output(49,better,70) output(25,better,69) output(69,better,24) output(24,better,67) output(42,better,64) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(47,better,67) output(69,better,67) output(25,better,24) output(24,better,70) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,64) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(64,worse,52) output(23,worse,52) output(42,eq,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 8 4
Answer: 17
preference(1,(1,1),0,for(neg(atom(hasPrep(1)))),()) preference(1,(1,5),0,for(neg(atom(hasIngredient(10)))),()) preference(1,(1,6),0,for(neg(atom(hasPrep(2)))),()) preference(1,(1,5),2,for(neg(atom(hasPrep(0)))),()) preference(1,(1,6),2,for(neg(atom(hasDifficulty(2)))),()) preference(1,(1,1),3,for(neg(atom(hasCategory(4)))),()) preference(1,(1,5),3,for(neg(atom(hasPrepTime(2)))),()) preference(1,(1,6),3,for(neg(atom(hasPrep(1)))),()) preference(1,(1,1),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(11))),()) preference(1,(1,6),1,for(atom(hasPrep(4))),()) preference(1,(1,1),2,for(atom(hasIngredient(3))),()) preference(1,aso) output(50,better,18) output(64,better,47) output(24,better,49) output(49,better,70) output(25,better,69) output(69,better,24) output(24,better,67) output(42,better,64) output(52,better,23) output(23,better,72) output(52,better,72) output(64,better,23) output(42,better,52) output(47,better,67) output(69,better,67) output(25,better,24) output(24,better,70) output(47,better,49) output(69,better,49) output(64,better,24) output(23,better,47) output(42,better,47) output(52,better,47) output(23,better,24) output(42,better,24) output(52,better,24) output(25,better,49) output(64,better,49) output(23,better,49) output(42,better,49) output(47,better,70) output(69,better,70) output(25,better,70) output(64,better,70) output(25,better,67) output(64,better,67) output(23,better,67) output(42,better,67) output(42,better,23) output(64,better,72) output(42,better,72) output(52,better,67) output(23,better,70) output(42,better,70) output(52,better,70) output(52,better,49) output(23,worse,64) output(23,worse,52) output(64,eq,64) output(52,eq,52) output(23,eq,23)
Optimization: 8 3
OPTIMUM FOUND

Models       : 17
  Optimum    : yes
Optimization : 8 3
Calls        : 1
Time         : 80.283s (Solving: 68.58s 1st Model: 0.68s Unsat: 46.82s)
CPU Time     : 285.747s
Threads      : 4        (Winner: 1)

Choices      : 1243460  (Domain: 16677)
Conflicts    : 159338   (Analyzed: 159326)
Restarts     : 200      (Average: 796.63 Last: 14769)
Model-Level  : 456.5   
Problems     : 16       (Average Length: 0.25 Splits: 0)
Lemmas       : 228975   (Deleted: 123969)
  Binary     : 8453     (Ratio:   3.69%)
  Ternary    : 21124    (Ratio:   9.23%)
  Conflict   : 159326   (Average Length:  328.5 Ratio:  69.58%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 69649    (Average Length:   51.5 Ratio:  30.42%) 
  Distributed: 23451    (Ratio:  14.72% Average LBD: 3.03) 
  Integrated : 70344    (Ratio: 299.96% Unit: 691 Average Jumps: 65.27)
Backjumps    : 159326   (Average:  7.31 Max: 1156 Sum: 1163953)
  Executed   : 159268   (Average:  7.30 Max: 1156 Sum: 1162457 Ratio:  99.87%)
  Bounded    : 58       (Average: 25.79 Max:  56 Sum:   1496 Ratio:   0.13%)

Rules        : 5176796 
  Choice     : 25      
  Minimize   : 2       
Atoms        : 849370  
Bodies       : 1024373 
  Count      : 1968    
Equivalences : 2590739  (Atom=Atom: 766099 Body=Body: 839713 Other: 984927)
Tight        : Yes
Variables    : 114945   (Eliminated:    0 Frozen: 49473)
Constraints  : 4465086  (Binary:  97.5% Ternary:   2.3% Other:   0.2%)


Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> not atom(hasCost(1))  ; 
  atom(hasDifficulty(4)) >> atom(hasIngredient(11)) >> not atom(hasCategory(1))  ; 
  atom(hasIngredient(2)) >> atom(hasIngredient(5)) >> atom(hasIngredient(6)) ; 
  atom(hasCost(1)) >> atom(hasIngredient(11)) >> not atom(hasPrep(1))  ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(11)) >> atom(hasIngredient(1)) ; 
  atom(hasIngredient(8)) >> atom(hasIngredient(6)) >> atom(hasIngredient(1)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasDifficulty(1)) >> atom(hasDifficulty(3)) >> not atom(hasIngredient(10))  || not atom(hasCost(5))  ; 
  atom(hasIngredient(4)) >> atom(hasCategory(1)) >> atom(hasPrepTime(1)) || not atom(hasPrep(2))  ; 
  not atom(hasPrep(5))  >> atom(hasIngredient(12)) >> not atom(hasCategory(5))  ; 
  atom(hasIngredient(11)) >> atom(hasCategory(5)) >> atom(hasCategory(1)) ; 
  atom(hasIngredient(1)) >> atom(hasCost(5)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || atom(hasIngredient(10)) ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(3))  >> not atom(hasIngredient(9))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || atom(hasIngredient(10)) ; 
  atom(hasPrep(1)) >> atom(hasIngredient(9)) >> not atom(hasIngredient(9))  || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || atom(hasIngredient(10)) ; 
  atom(hasPrep(1)) >> atom(hasIngredient(9)) >> not atom(hasPrep(2))  || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCategory(3)) >> not atom(hasIngredient(10))  >> atom(hasCost(2)) || atom(hasIngredient(10)) ; 
  atom(hasPrep(1)) >> atom(hasCategory(4)) >> not atom(hasPrep(2))  || not atom(hasPrep(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(11)) >> atom(hasIngredient(7)) >> not atom(hasIngredient(9))  || not atom(hasPrep(2))  ; 
  not atom(hasIngredient(3))  >> atom(hasCost(3)) >> not atom(hasIngredient(7))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCategory(4))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(7))  || atom(hasCategory(3)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasPrep(1))  ; 
  atom(hasPrep(1)) >> not atom(hasCategory(3))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  not atom(hasCategory(1))  >> not atom(hasIngredient(11))  >> not atom(hasPrepTime(1))  || atom(hasCategory(1)) ; 
  atom(hasPrep(2)) >> not atom(hasIngredient(9))  >> atom(hasIngredient(7)) || not atom(hasPrep(2))  ; 
  atom(hasPrep(2)) >> atom(hasDifficulty(2)) || not atom(hasPrep(0))  ; 
  atom(hasPrep(1)) >> not atom(hasPrepTime(1))  || atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(3))  >> atom(hasPrep(5)) || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(3))  >> atom(hasCost(3)) >> not atom(hasIngredient(7))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCategory(4))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(7))  || atom(hasCategory(3)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasCost(2))  ; 
  not atom(hasIngredient(4))  >> not atom(hasCategory(3))  || not atom(hasCategory(1))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(3))  >> atom(hasPrep(5)) || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(3))  >> atom(hasCost(3)) >> not atom(hasIngredient(7))  || not atom(hasPrepTime(2))  ; 
  not atom(hasCategory(4))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(7))  || atom(hasCategory(3)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasCost(2))  ; 
  not atom(hasIngredient(4))  >> not atom(hasCategory(3))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(3))  >> atom(hasPrep(5)) || not atom(hasIngredient(10))  ; 
  not atom(hasIngredient(7))  >> not atom(hasCategory(4))  >> atom(hasCost(3)) || not atom(hasPrepTime(2))  ; 
  not atom(hasCategory(4))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(7))  || atom(hasCategory(3)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasCost(2))  ; 
  not atom(hasIngredient(4))  >> not atom(hasCategory(3))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(1)) >> not atom(hasDifficulty(1))  || not atom(hasPrep(2))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCost(3))  >> atom(hasPrep(5)) || not atom(hasPrepTime(1))  ; 
  atom(hasDifficulty(3)) >> atom(hasCost(3)) >> atom(hasPrep(0)) || not atom(hasPrepTime(2))  ; 
  not atom(hasCategory(4))  >> not atom(hasPrep(6))  >> not atom(hasIngredient(7))  || atom(hasCategory(3)) ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasCost(2))  ; 
  not atom(hasIngredient(4))  >> not atom(hasCategory(3))  || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(4)) >> atom(hasPrep(4)) >> not atom(hasPrep(4))  || not atom(hasPrep(2))  ; 
  atom(hasIngredient(10)) >> atom(hasCategory(4)) >> not atom(hasPrep(1))  || not atom(hasDifficulty(1))  ; 
  not atom(hasIngredient(3))  >> atom(hasCost(3)) >> not atom(hasIngredient(7))  || not atom(hasPrepTime(2))  ; 
  atom(hasPrep(1)) >> atom(hasDifficulty(2)) >> not atom(hasPrep(6))  || not atom(hasIngredient(10))  ; 
  atom(hasPrep(3)) >> not atom(hasCost(3))  || not atom(hasCost(2))  ; 
  not atom(hasIngredient(4))  >> atom(hasPrep(1)) || not atom(hasIngredient(10))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(4)) >> atom(hasPrep(5)) >> atom(hasPrepTime(3)) || not atom(hasPrepTime(3))  ; 
  atom(hasCost(5)) >> atom(hasIngredient(3)) >> not atom(hasCategory(4))  || not atom(hasPrep(1))  ; 
  atom(hasIngredient(10)) >> not atom(hasPrep(0))  >> not atom(hasPrep(1))  || not atom(hasPrep(4))  ; 
  atom(hasIngredient(1)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(1))  || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> atom(hasIngredient(7)) >> not atom(hasIngredient(9))  || not atom(hasPrep(1))  ; 
  atom(hasIngredient(10)) >> atom(hasPrepTime(1)) >> atom(hasPrep(0)) || not atom(hasPrepTime(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasIngredient(10)) >> atom(hasCategory(5)) >> not atom(hasDifficulty(3))  || not atom(hasPrep(1))  ; 
  atom(hasDifficulty(1)) >> not atom(hasCategory(3))  >> atom(hasCost(2)) || not atom(hasPrep(2))  ; 
  atom(hasCategory(2)) >> not atom(hasCategory(1))  >> atom(hasCategory(1)) || not atom(hasIngredient(10))  ; 
  atom(hasIngredient(10)) >> not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  || not atom(hasIngredient(11))  ; 
  atom(hasDifficulty(1)) >> atom(hasPrepTime(1)) >> atom(hasPrep(0)) || atom(hasIngredient(12)) 
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasPrep(2)) >> atom(hasIngredient(3)) >> atom(hasCost(2)) || not atom(hasPrep(1))  ; 
  atom(hasIngredient(10)) >> atom(hasDifficulty(1)) >> not atom(hasPrep(1))  || not atom(hasIngredient(6))  ; 
  atom(hasIngredient(11)) >> not atom(hasIngredient(11))  || not atom(hasCost(1))  ; 
  not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  || not atom(hasPrep(2))  
}.

Learned preference statement: 

#preference(1,aso){
  atom(hasCost(5)) >> atom(hasIngredient(3)) >> not atom(hasCategory(4))  || not atom(hasPrep(1))  ; 
  atom(hasIngredient(11)) >> not atom(hasPrep(0))  >> not atom(hasPrepTime(2))  || not atom(hasIngredient(10))  ; 
  atom(hasPrep(4)) >> not atom(hasDifficulty(2))  >> not atom(hasPrep(1))  || not atom(hasPrep(2))  
}.
