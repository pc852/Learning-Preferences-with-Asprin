asprin_vL version 1.0
Reading from stdin
-:1240:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1250:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1265:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1346:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1607:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1620:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1797:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1926:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1998:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2002:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2002:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2008:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2107:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2133:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2253:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2287:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2309:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1157:1-16: info: no atoms over signature occur in program:
  output/3

-:1149:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1150:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(58,eq,90) output(77,eq,92) output(92,eq,10) output(10,eq,22) output(22,eq,84) output(84,eq,16) output(65,eq,79) output(100,eq,92) output(92,eq,64) output(64,eq,84) output(84,eq,24) output(24,eq,38) output(51,eq,52) output(84,eq,38) output(22,eq,24) output(64,eq,24) output(92,eq,84) output(77,eq,64) output(100,eq,64) output(22,eq,16) output(64,eq,16) output(10,eq,84) output(92,eq,22) output(77,eq,10) output(100,eq,10) output(77,eq,22) output(100,eq,22) output(77,eq,84) output(100,eq,84) output(92,eq,16) output(77,eq,16) output(100,eq,16) output(10,eq,16) output(92,eq,24) output(77,eq,24) output(100,eq,24) output(10,eq,24) output(22,eq,38) output(64,eq,38) output(92,eq,38) output(10,eq,38) output(77,eq,38) output(100,eq,38)
Optimization: 43 0
Answer: 2
preference(1,(1,1),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasPrepTime(3))),5) preference(1,less(weight)) output(22,better,24) output(84,better,24) output(64,better,24) output(77,better,64) output(77,better,10) output(77,better,24) output(92,better,10) output(92,better,64) output(92,better,24) output(100,better,64) output(100,better,10) output(100,better,24) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,24) output(10,worse,38) output(51,worse,52) output(64,worse,84) output(64,worse,16) output(64,worse,38) output(58,worse,90) output(65,worse,79) output(24,worse,38) output(77,eq,92) output(22,eq,84) output(84,eq,16) output(100,eq,92) output(84,eq,38) output(92,eq,84) output(22,eq,16) output(92,eq,22) output(77,eq,22) output(100,eq,22) output(77,eq,84) output(100,eq,84) output(92,eq,16) output(77,eq,16) output(100,eq,16) output(22,eq,38) output(92,eq,38) output(77,eq,38) output(100,eq,38)
Optimization: 31 3
Answer: 3
preference(1,(1,1),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasIngredient(7))),5) preference(1,less(weight)) output(10,better,24) output(22,better,24) output(84,better,24) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,24) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,24) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,24) output(10,worse,16) output(10,worse,38) output(22,worse,16) output(22,worse,38) output(84,worse,16) output(84,worse,38) output(64,worse,84) output(64,worse,24) output(64,worse,16) output(64,worse,38) output(58,worse,90) output(65,worse,79) output(24,worse,38) output(77,eq,92) output(10,eq,22) output(22,eq,84) output(100,eq,92) output(51,eq,52) output(10,eq,84) output(92,eq,16) output(77,eq,16) output(100,eq,16) output(92,eq,38) output(77,eq,38) output(100,eq,38)
Optimization: 25 3
Answer: 4
preference(1,(1,1),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,16) output(100,better,24) output(100,better,38) output(24,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,24) output(10,worse,38) output(22,worse,84) output(22,worse,24) output(64,worse,84) output(64,worse,24) output(92,worse,64) output(92,worse,84) output(92,worse,24) output(58,worse,90) output(65,worse,79) output(51,eq,52) output(22,eq,16) output(92,eq,22) output(77,eq,84) output(100,eq,84) output(92,eq,16) output(22,eq,38) output(92,eq,38)
Optimization: 22 3
Answer: 5
preference(1,(1,1),1,for(atom(hasPrep(7))),2) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,10),1,for(atom(hasPrep(3))),3) preference(1,(1,14),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(22,better,16) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,16) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,16) output(100,better,24) output(100,better,38) output(24,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,24) output(10,worse,38) output(22,worse,84) output(22,worse,24) output(64,worse,84) output(64,worse,24) output(92,worse,64) output(92,worse,84) output(92,worse,24) output(58,worse,90) output(65,worse,79) output(51,eq,52) output(92,eq,22) output(77,eq,84) output(100,eq,84) output(22,eq,38) output(92,eq,38)
Optimization: 20 4
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(3))),5) preference(1,(1,2),1,for(atom(hasPrepTime(2))),5) preference(1,(1,3),1,for(atom(hasIngredient(12))),8) preference(1,(1,4),1,for(atom(hasIngredient(9))),8) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(1))),5) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasDifficulty(1))),5) preference(1,(1,12),1,for(atom(hasCategory(1))),8) preference(1,(1,13),1,for(atom(hasCategory(4))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,38) output(51,better,52) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38) output(22,worse,24) output(84,worse,24) output(64,worse,24) output(92,worse,10) output(92,worse,24) output(22,eq,84) output(84,eq,16) output(92,eq,64) output(64,eq,84) output(84,eq,38) output(92,eq,84) output(22,eq,16) output(64,eq,16) output(92,eq,22) output(92,eq,16) output(10,eq,24) output(22,eq,38) output(64,eq,38) output(92,eq,38)
Optimization: 19 14
Answer: 7
preference(1,(1,1),1,for(atom(hasPrep(2))),8) preference(1,(1,3),1,for(atom(hasCategory(3))),5) preference(1,(1,4),1,for(atom(hasPrepTime(1))),5) preference(1,(1,5),1,for(atom(hasPrepTime(3))),8) preference(1,(1,6),1,for(atom(hasIngredient(3))),8) preference(1,(1,7),1,for(atom(hasCategory(1))),8) preference(1,(1,8),1,for(atom(hasCategory(4))),8) preference(1,(1,9),1,for(atom(hasPrep(7))),8) preference(1,(1,10),1,for(atom(hasCost(1))),8) preference(1,(1,11),1,for(atom(hasIngredient(10))),8) preference(1,(1,12),1,for(atom(hasPrepTime(2))),5) preference(1,(1,13),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasDifficulty(1))),5) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,38) output(51,better,52) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(100,better,92) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38) output(22,worse,24) output(84,worse,24) output(92,worse,10) output(92,worse,64) output(92,worse,24) output(22,eq,84) output(84,eq,16) output(84,eq,38) output(92,eq,84) output(77,eq,64) output(100,eq,64) output(22,eq,16) output(92,eq,22) output(92,eq,16) output(10,eq,24) output(22,eq,38) output(92,eq,38)
Optimization: 17 13
Answer: 8
preference(1,(1,1),1,for(atom(hasPrepTime(2))),1) preference(1,(1,3),1,for(atom(hasPrep(0))),3) preference(1,(1,4),1,for(atom(hasCost(2))),7) preference(1,(1,5),1,for(atom(hasCategory(1))),3) preference(1,(1,6),1,for(atom(hasIngredient(9))),2) preference(1,(1,8),1,for(atom(hasPrepTime(1))),8) preference(1,(1,9),1,for(atom(hasDifficulty(1))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),3) preference(1,(1,12),1,for(atom(hasIngredient(3))),4) preference(1,(1,14),1,for(atom(hasIngredient(7))),8) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,38) output(22,better,16) output(84,better,16) output(84,better,38) output(64,better,16) output(64,better,38) output(77,better,64) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,38) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(65,better,79) output(24,better,38) output(22,worse,84) output(22,worse,24) output(22,worse,38) output(51,worse,52) output(84,worse,24) output(64,worse,24) output(77,worse,92) output(77,worse,10) output(77,worse,24) output(92,worse,10) output(92,worse,24) output(58,worse,90) output(64,eq,84) output(10,eq,24)
Optimization: 14 10
Answer: 9
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasCategory(3))),3) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(10,better,16) output(10,better,38) output(22,better,84) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,38) output(64,better,84) output(64,better,16) output(64,better,38) output(77,better,64) output(77,better,10) output(77,better,84) output(77,better,16) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,64) output(100,better,10) output(100,better,84) output(100,better,16) output(100,better,38) output(58,better,90) output(24,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,24) output(22,worse,24) output(84,worse,24) output(64,worse,24) output(77,worse,92) output(77,worse,22) output(77,worse,24) output(100,worse,92) output(100,worse,22) output(100,worse,24) output(65,eq,79)
Optimization: 13 14
Answer: 10
preference(1,(1,1),1,for(atom(hasPrepTime(1))),4) preference(1,(1,2),1,for(atom(hasIngredient(3))),7) preference(1,(1,3),1,for(atom(hasPrep(1))),6) preference(1,(1,4),1,for(atom(hasCategory(3))),3) preference(1,(1,5),1,for(atom(hasCost(1))),5) preference(1,(1,6),1,for(atom(hasPrep(2))),7) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),3) preference(1,(1,10),1,for(atom(hasIngredient(9))),3) preference(1,(1,11),1,for(atom(hasPrep(6))),3) preference(1,(1,12),1,for(atom(hasDifficulty(1))),5) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasDifficulty(2))),3) preference(1,less(weight)) output(10,better,16) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,38) output(64,better,84) output(64,better,16) output(64,better,38) output(77,better,64) output(77,better,10) output(77,better,84) output(77,better,16) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,64) output(100,better,10) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(24,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,24) output(84,worse,24) output(64,worse,24) output(77,worse,92) output(77,worse,22) output(100,worse,92) output(100,worse,22) output(58,worse,90) output(65,eq,79) output(77,eq,24)
Optimization: 12 14
Answer: 11
preference(1,(1,1),1,for(atom(hasCost(3))),3) preference(1,(1,2),1,for(atom(hasPrepTime(3))),6) preference(1,(1,3),1,for(atom(hasIngredient(3))),4) preference(1,(1,4),1,for(atom(hasDifficulty(1))),7) preference(1,(1,5),1,for(atom(hasPrep(0))),7) preference(1,(1,6),1,for(atom(hasPrep(7))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasCost(2))),1) preference(1,(1,9),1,for(atom(hasCategory(5))),7) preference(1,(1,10),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasDifficulty(3))),8) preference(1,(1,12),1,for(atom(hasPrepTime(1))),3) preference(1,(1,13),1,for(atom(hasIngredient(7))),5) preference(1,(1,14),1,for(atom(hasIngredient(9))),6) preference(1,less(weight)) output(10,better,24) output(22,better,24) output(22,better,16) output(22,better,38) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(10,worse,22) output(10,worse,84) output(10,worse,16) output(10,worse,38) output(22,worse,84) output(51,worse,52) output(64,worse,84) output(92,worse,84) output(58,worse,90) output(65,worse,79) output(24,worse,38)
Optimization: 11 14
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(3))),5) preference(1,(1,2),1,for(atom(hasIngredient(9))),5) preference(1,(1,3),1,for(atom(hasIngredient(8))),8) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasIngredient(7))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),3) preference(1,(1,7),1,for(atom(hasCost(2))),8) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasPrep(1))),3) preference(1,(1,10),1,for(atom(hasPrep(5))),6) preference(1,(1,11),1,for(atom(hasCost(3))),4) preference(1,(1,12),1,for(atom(hasCategory(5))),7) preference(1,(1,13),1,for(atom(hasPrep(0))),6) preference(1,(1,14),1,for(atom(hasDifficulty(1))),7) preference(1,less(weight)) output(10,better,22) output(10,better,24) output(10,better,38) output(22,better,24) output(22,better,38) output(51,better,52) output(84,better,24) output(84,better,38) output(64,better,24) output(64,better,38) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(65,better,79) output(10,worse,16) output(22,worse,84) output(22,worse,16) output(84,worse,16) output(64,worse,16) output(77,worse,92) output(58,worse,90) output(24,worse,38) output(64,eq,84) output(10,eq,84)
Optimization: 10 14
Answer: 13
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(7))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(3))),5) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasIngredient(9))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(84,better,24) output(64,better,84) output(64,better,24) output(64,better,16) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(65,better,79) output(51,worse,52) output(84,worse,38) output(58,worse,90) output(24,worse,38) output(84,eq,16) output(100,eq,92) output(22,eq,38) output(64,eq,38)
Optimization: 8 9
Answer: 14
preference(1,(1,1),1,for(atom(hasDifficulty(1))),4) preference(1,(1,3),1,for(atom(hasIngredient(7))),6) preference(1,(1,4),1,for(atom(hasCategory(1))),6) preference(1,(1,5),1,for(atom(hasPrepTime(2))),6) preference(1,(1,8),1,for(atom(hasCost(1))),6) preference(1,(1,10),1,for(atom(hasIngredient(3))),7) preference(1,(1,11),1,for(atom(hasPrep(5))),4) preference(1,(1,12),1,for(atom(hasIngredient(9))),6) preference(1,(1,14),1,for(atom(hasPrep(2))),1) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(84,better,16) output(84,better,24) output(64,better,84) output(64,better,24) output(64,better,16) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(65,better,79) output(51,worse,52) output(84,worse,38) output(58,worse,90) output(24,worse,38) output(100,eq,92) output(22,eq,38) output(64,eq,38)
Optimization: 7 9
Answer: 15
preference(1,(1,1),1,for(atom(hasDifficulty(1))),7) preference(1,(1,2),1,for(atom(hasIngredient(7))),6) preference(1,(1,3),1,for(atom(hasDifficulty(3))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),2) preference(1,(1,5),1,for(atom(hasPrep(5))),7) preference(1,(1,6),1,for(atom(hasIngredient(3))),3) preference(1,(1,7),1,for(atom(hasCategory(1))),3) preference(1,(1,8),1,for(atom(hasPrepTime(2))),6) preference(1,(1,9),1,for(atom(hasCategory(4))),5) preference(1,(1,10),1,for(atom(hasCategory(5))),3) preference(1,(1,12),1,for(atom(hasCost(2))),2) preference(1,(1,13),1,for(atom(hasPrep(0))),4) preference(1,(1,14),1,for(atom(hasPrep(1))),6) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,16) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(65,better,79) output(24,better,38) output(64,worse,84) output(64,worse,24) output(77,worse,92) output(58,worse,90) output(22,eq,84) output(64,eq,38)
Optimization: 6 13
Answer: 16
preference(1,(1,1),1,for(atom(hasPrep(2))),4) preference(1,(1,2),1,for(atom(hasPrep(6))),2) preference(1,(1,3),1,for(atom(hasDifficulty(2))),2) preference(1,(1,4),1,for(atom(hasIngredient(10))),4) preference(1,(1,5),1,for(atom(hasPrepTime(1))),8) preference(1,(1,6),1,for(atom(hasCategory(5))),8) preference(1,(1,7),1,for(atom(hasIngredient(9))),1) preference(1,(1,8),1,for(atom(hasCategory(4))),3) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasPrep(5))),2) preference(1,(1,11),1,for(atom(hasPrep(1))),6) preference(1,(1,12),1,for(atom(hasIngredient(12))),1) preference(1,(1,13),1,for(atom(hasIngredient(7))),3) preference(1,(1,14),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 17
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,10),1,for(atom(hasCost(1))),2) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,13),1,for(atom(hasCategory(5))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 13
Answer: 18
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,4),1,for(atom(hasPrep(1))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,10),1,for(atom(hasCategory(5))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 12
Answer: 19
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,7),1,for(atom(hasPrep(0))),3) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,13),1,for(atom(hasCategory(5))),8) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 11
Answer: 20
preference(1,(1,1),1,for(atom(hasPrepTime(2))),3) preference(1,(1,2),1,for(atom(hasDifficulty(2))),3) preference(1,(1,5),1,for(atom(hasPrepTime(1))),4) preference(1,(1,6),1,for(atom(hasDifficulty(1))),2) preference(1,(1,8),1,for(atom(hasCost(2))),3) preference(1,(1,9),1,for(atom(hasCategory(4))),7) preference(1,(1,10),1,for(atom(hasCategory(5))),8) preference(1,(1,11),1,for(atom(hasPrep(2))),1) preference(1,(1,12),1,for(atom(hasIngredient(9))),7) preference(1,(1,14),1,for(atom(hasIngredient(7))),7) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 10
Answer: 21
preference(1,(1,1),1,for(atom(hasIngredient(7))),8) preference(1,(1,2),1,for(atom(hasIngredient(12))),8) preference(1,(1,3),1,for(atom(hasCategory(5))),3) preference(1,(1,5),1,for(atom(hasIngredient(9))),8) preference(1,(1,6),1,for(atom(hasCategory(4))),8) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasPrep(2))),1) preference(1,(1,10),1,for(atom(hasDifficulty(1))),2) preference(1,(1,14),1,for(atom(hasPrepTime(1))),5) preference(1,less(weight)) output(10,better,22) output(10,better,84) output(10,better,16) output(10,better,24) output(10,better,38) output(22,better,84) output(22,better,24) output(22,better,16) output(22,better,38) output(51,better,52) output(84,better,16) output(84,better,24) output(84,better,38) output(64,better,84) output(64,better,24) output(64,better,16) output(64,better,38) output(77,better,92) output(77,better,64) output(77,better,10) output(77,better,22) output(77,better,84) output(77,better,16) output(77,better,24) output(77,better,38) output(92,better,10) output(92,better,64) output(92,better,84) output(92,better,22) output(92,better,16) output(92,better,24) output(92,better,38) output(100,better,92) output(100,better,64) output(100,better,10) output(100,better,22) output(100,better,84) output(100,better,16) output(100,better,24) output(100,better,38) output(58,better,90) output(65,better,79) output(24,better,38)
Optimization: 0 9
Progression : 0 [2;9] (Error: 3.5)
Progression : 0 [3;9] (Error: 2)
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.058 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 21+
  Optimum    : unknown
Optimization : 0 9
Calls        : 1
Time         : 597.629s (Solving: 594.95s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2381.645s
Threads      : 4        (Winner: 4)

Choices      : 7660371  (Domain: 586906)
Conflicts    : 7254761  (Analyzed: 7254758)
Restarts     : 5802     (Average: 1250.39 Last: 527802)
Model-Level  : 55.0    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 7450675  (Deleted: 7067629)
  Binary     : 1012     (Ratio:   0.01%)
  Ternary    : 1485     (Ratio:   0.02%)
  Conflict   : 7254758  (Average Length:  465.4 Ratio:  97.37%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 195917   (Average Length:  588.7 Ratio:   2.63%) 
  Distributed: 65318    (Ratio:   0.90% Average LBD: 3.82) 
  Integrated : 195954   (Ratio: 300.00% Unit: 12 Average Jumps: 4.25)
Backjumps    : 7254758  (Average:  1.05 Max:  56 Sum: 7585442)
  Executed   : 7254757  (Average:  1.05 Max:  56 Sum: 7585425 Ratio: 100.00%)
  Bounded    : 1        (Average: 17.00 Max:  17 Sum:     17 Ratio:   0.00%)

Rules        : 505021  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 14824   
Bodies       : 19002   
  Sum        : 86      
  Count      : 14      
Equivalences : 7355     (Atom=Atom: 443 Body=Body: 186 Other: 6726)
Tight        : Yes
Variables    : 17099    (Eliminated:    0 Frozen: 7775)
Constraints  : 526146   (Binary:  97.5% Ternary:   1.8% Other:   0.7%)

No preference instances learned!

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasPrepTime(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  2 :: atom(hasPrep(7)) ; 
  3 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasPrep(3)) ; 
  5 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(12)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasPrep(2)) ; 
  5 :: atom(hasCategory(3)) ; 
  5 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasCategory(1)) ; 
  8 :: atom(hasCategory(4)) ; 
  8 :: atom(hasPrep(7)) ; 
  8 :: atom(hasCost(1)) ; 
  8 :: atom(hasIngredient(10)) ; 
  5 :: atom(hasPrepTime(2)) ; 
  8 :: atom(hasIngredient(9)) ; 
  5 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  1 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  7 :: atom(hasCost(2)) ; 
  3 :: atom(hasCategory(1)) ; 
  2 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(2)) ; 
  4 :: atom(hasIngredient(3)) ; 
  8 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrepTime(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  6 :: atom(hasPrep(1)) ; 
  3 :: atom(hasCategory(3)) ; 
  5 :: atom(hasCost(1)) ; 
  7 :: atom(hasPrep(2)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasPrep(6)) ; 
  5 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasDifficulty(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasCost(3)) ; 
  6 :: atom(hasPrepTime(3)) ; 
  4 :: atom(hasIngredient(3)) ; 
  7 :: atom(hasDifficulty(1)) ; 
  7 :: atom(hasPrep(0)) ; 
  1 :: atom(hasPrep(7)) ; 
  6 :: atom(hasPrep(5)) ; 
  1 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(5)) ; 
  4 :: atom(hasPrep(1)) ; 
  8 :: atom(hasDifficulty(3)) ; 
  3 :: atom(hasPrepTime(1)) ; 
  5 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasIngredient(9)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  5 :: atom(hasIngredient(3)) ; 
  5 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasIngredient(8)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  8 :: atom(hasIngredient(7)) ; 
  3 :: atom(hasPrep(2)) ; 
  8 :: atom(hasCost(2)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  6 :: atom(hasPrep(5)) ; 
  4 :: atom(hasCost(3)) ; 
  7 :: atom(hasCategory(5)) ; 
  6 :: atom(hasPrep(0)) ; 
  7 :: atom(hasDifficulty(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(1)) ; 
  5 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  6 :: atom(hasCost(1)) ; 
  7 :: atom(hasIngredient(3)) ; 
  4 :: atom(hasPrep(5)) ; 
  6 :: atom(hasIngredient(9)) ; 
  1 :: atom(hasPrep(2)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  7 :: atom(hasDifficulty(1)) ; 
  6 :: atom(hasIngredient(7)) ; 
  6 :: atom(hasDifficulty(3)) ; 
  2 :: atom(hasPrepTime(3)) ; 
  7 :: atom(hasPrep(5)) ; 
  3 :: atom(hasIngredient(3)) ; 
  3 :: atom(hasCategory(1)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  5 :: atom(hasCategory(4)) ; 
  3 :: atom(hasCategory(5)) ; 
  2 :: atom(hasCost(2)) ; 
  4 :: atom(hasPrep(0)) ; 
  6 :: atom(hasPrep(1)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  4 :: atom(hasPrep(2)) ; 
  2 :: atom(hasPrep(6)) ; 
  2 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasIngredient(10)) ; 
  8 :: atom(hasPrepTime(1)) ; 
  8 :: atom(hasCategory(5)) ; 
  1 :: atom(hasIngredient(9)) ; 
  3 :: atom(hasCategory(4)) ; 
  6 :: atom(hasPrepTime(2)) ; 
  2 :: atom(hasPrep(5)) ; 
  6 :: atom(hasPrep(1)) ; 
  1 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasIngredient(7)) ; 
  1 :: atom(hasIngredient(3)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  2 :: atom(hasCost(1)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(5)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  3 :: atom(hasPrep(1)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasPrep(0)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(5)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  3 :: atom(hasPrepTime(2)) ; 
  3 :: atom(hasDifficulty(2)) ; 
  4 :: atom(hasPrepTime(1)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  3 :: atom(hasCost(2)) ; 
  7 :: atom(hasCategory(4)) ; 
  8 :: atom(hasCategory(5)) ; 
  1 :: atom(hasPrep(2)) ; 
  7 :: atom(hasIngredient(9)) ; 
  7 :: atom(hasIngredient(7)) 
}.

Learned preference statement: 

#preference(1,less(weight)){
  8 :: atom(hasIngredient(7)) ; 
  8 :: atom(hasIngredient(12)) ; 
  3 :: atom(hasCategory(5)) ; 
  8 :: atom(hasIngredient(9)) ; 
  8 :: atom(hasCategory(4)) ; 
  1 :: atom(hasCost(3)) ; 
  1 :: atom(hasPrep(2)) ; 
  2 :: atom(hasDifficulty(1)) ; 
  5 :: atom(hasPrepTime(1)) 
}.
