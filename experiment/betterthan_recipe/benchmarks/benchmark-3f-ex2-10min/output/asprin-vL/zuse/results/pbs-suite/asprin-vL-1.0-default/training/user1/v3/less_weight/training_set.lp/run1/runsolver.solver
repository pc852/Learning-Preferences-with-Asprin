asprin_vL version 1.0
Reading from stdin
-:1228:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1238:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1253:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1334:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1595:65-91: info: atom does not occur in any rule head:
  preference(#X0,#X1,2,for(#X2),#P3)

-:1608:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1785:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1914:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:1986:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:1990:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:1990:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:1996:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2095:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2121:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2241:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2275:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2297:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1145:1-16: info: no atoms over signature occur in program:
  output/3

-:1137:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1138:25-37: info: atom does not occur in any rule head:
  forbid_equal

Solving...
Answer: 1
preference(1,less(weight)) output(64,eq,50) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(29,eq,24) output(24,eq,23) output(23,eq,18) output(64,eq,69) output(69,eq,67) output(42,eq,24) output(65,eq,23) output(23,eq,72) output(25,eq,52) output(24,eq,72) output(65,eq,72) output(64,eq,67) output(24,eq,18) output(65,eq,18) output(29,eq,23) output(42,eq,23) output(49,eq,24) output(50,eq,70) output(64,eq,47) output(64,eq,70) output(49,eq,23) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 31 0
Answer: 2
preference(1,(1,4),1,for(atom(hasDifficulty(1))),3) preference(1,(1,7),1,for(atom(hasPrep(1))),4) preference(1,(1,11),1,for(atom(hasIngredient(2))),1) preference(1,(1,14),1,for(atom(hasPrepTime(2))),5) preference(1,less(weight)) output(23,better,72) output(25,better,52) output(49,better,29) output(49,better,72) output(65,better,72) output(24,better,72) output(29,worse,24) output(29,worse,23) output(29,worse,18) output(29,worse,72) output(42,worse,24) output(42,worse,23) output(42,worse,18) output(42,worse,72) output(64,worse,50) output(64,worse,67) output(64,worse,47) output(64,worse,70) output(69,worse,67) output(50,eq,47) output(47,eq,70) output(24,eq,23) output(23,eq,18) output(64,eq,69) output(65,eq,23) output(24,eq,18) output(65,eq,18) output(49,eq,24) output(50,eq,70) output(49,eq,23) output(49,eq,18)
Optimization: 25 4
Answer: 3
preference(1,(1,14),1,for(atom(hasDifficulty(2))),1) preference(1,less(weight)) output(64,better,50) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(24,better,72) output(24,better,18) output(29,worse,24) output(29,worse,23) output(42,worse,24) output(42,worse,23) output(49,worse,24) output(49,worse,23) output(65,worse,23) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(64,eq,69) output(25,eq,52) output(65,eq,72) output(65,eq,18) output(50,eq,70) output(29,eq,18) output(42,eq,18) output(49,eq,18) output(29,eq,72) output(42,eq,72) output(49,eq,72)
Optimization: 22 1
Answer: 4
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(2))),1) preference(1,(1,3),1,for(atom(hasCategory(3))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),1) preference(1,(1,5),1,for(atom(hasCategory(5))),1) preference(1,(1,6),1,for(atom(hasCost(1))),1) preference(1,(1,7),1,for(atom(hasCost(2))),1) preference(1,(1,8),1,for(atom(hasCost(3))),1) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasDifficulty(1))),1) preference(1,(1,12),1,for(atom(hasDifficulty(2))),1) preference(1,(1,13),1,for(atom(hasDifficulty(3))),1) preference(1,(1,14),1,for(atom(hasPrep(6))),2) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(42,better,23) output(42,better,18) output(64,better,69) output(64,better,47) output(64,better,70) output(25,better,52) output(24,better,23) output(24,better,18) output(29,worse,24) output(29,worse,72) output(69,worse,67) output(23,worse,72) output(49,worse,24) output(49,worse,72) output(65,worse,72) output(64,eq,50) output(47,eq,70) output(49,eq,29) output(23,eq,18) output(42,eq,24) output(65,eq,23) output(24,eq,72) output(64,eq,67) output(65,eq,18) output(29,eq,23) output(49,eq,23) output(29,eq,18) output(49,eq,18) output(42,eq,72)
Optimization: 21 14
Answer: 5
preference(1,(1,14),1,for(atom(hasCategory(1))),1) preference(1,less(weight)) output(29,better,18) output(29,better,72) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,67) output(69,better,67) output(23,better,18) output(23,better,72) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(24,better,72) output(24,better,18) output(50,worse,47) output(50,worse,70) output(47,eq,70) output(49,eq,29) output(29,eq,24) output(24,eq,23) output(64,eq,69) output(42,eq,24) output(65,eq,23) output(25,eq,52) output(29,eq,23) output(42,eq,23) output(49,eq,24) output(64,eq,47) output(64,eq,70) output(49,eq,23)
Optimization: 16 1
Answer: 6
preference(1,(1,1),1,for(atom(hasCategory(1))),1) preference(1,(1,2),1,for(atom(hasCategory(5))),1) preference(1,(1,3),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasIngredient(10))),1) preference(1,(1,5),1,for(atom(hasDifficulty(3))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,7),1,for(atom(hasPrep(3))),1) preference(1,(1,8),1,for(atom(hasPrepTime(3))),1) preference(1,(1,9),1,for(atom(hasPrep(7))),1) preference(1,(1,10),1,for(atom(hasCost(4))),1) preference(1,(1,11),1,for(atom(hasIngredient(4))),1) preference(1,(1,12),1,for(atom(hasPrep(2))),1) preference(1,(1,13),1,for(atom(hasCost(5))),1) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(25,worse,52) output(50,eq,47) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(23,eq,18) output(69,eq,67) output(65,eq,23) output(23,eq,72) output(24,eq,72) output(65,eq,72) output(24,eq,18) output(65,eq,18) output(50,eq,70)
Optimization: 14 13
Answer: 7
preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasCategory(5))),1) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),1) preference(1,(1,7),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasDifficulty(3))),1) preference(1,(1,10),1,for(atom(hasCategory(2))),1) preference(1,(1,11),1,for(atom(hasDifficulty(4))),1) preference(1,(1,12),1,for(atom(hasCost(4))),1) preference(1,(1,13),1,for(atom(hasIngredient(4))),1) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(50,worse,47) output(50,worse,70) output(25,worse,52) output(47,eq,70) output(49,eq,29) output(24,eq,23) output(23,eq,18) output(69,eq,67) output(23,eq,72) output(24,eq,72) output(24,eq,18) output(64,eq,47) output(64,eq,70)
Optimization: 13 11
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(5))),1) preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasCategory(5))),1) preference(1,(1,4),1,for(atom(hasPrep(3))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),1) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasIngredient(10))),1) preference(1,(1,9),1,for(atom(hasDifficulty(3))),1) preference(1,(1,10),1,for(atom(hasCategory(2))),1) preference(1,(1,11),1,for(atom(hasCost(4))),1) preference(1,(1,12),1,for(atom(hasIngredient(4))),1) preference(1,(1,13),1,for(atom(hasCost(1))),1) preference(1,less(weight)) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,67) output(64,better,47) output(69,better,67) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(50,worse,70) output(25,worse,52) output(47,worse,70) output(50,eq,47) output(49,eq,29) output(24,eq,23) output(23,eq,18) output(64,eq,69) output(23,eq,72) output(24,eq,72) output(24,eq,18) output(64,eq,70)
Optimization: 12 12
Answer: 9
preference(1,(1,1),1,for(atom(hasPrep(7))),1) preference(1,(1,3),1,for(atom(hasPrep(4))),8) preference(1,(1,4),1,for(atom(hasPrep(3))),1) preference(1,(1,5),1,for(atom(hasCategory(1))),1) preference(1,(1,6),1,for(atom(hasIngredient(3))),1) preference(1,(1,7),1,for(atom(hasCost(5))),1) preference(1,(1,8),1,for(atom(hasDifficulty(3))),1) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasIngredient(4))),1) preference(1,(1,11),1,for(atom(hasCost(4))),1) preference(1,(1,12),1,for(atom(hasPrep(5))),8) preference(1,(1,13),1,for(atom(hasIngredient(9))),8) preference(1,(1,14),1,for(atom(hasPrepTime(3))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(25,better,52) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(47,eq,70) output(24,eq,23) output(23,eq,18) output(65,eq,23) output(23,eq,72) output(24,eq,72) output(65,eq,72) output(24,eq,18) output(65,eq,18)
Optimization: 9 13
Answer: 10
preference(1,(1,2),1,for(atom(hasIngredient(4))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),8) preference(1,(1,4),1,for(atom(hasCost(4))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasPrep(2))),1) preference(1,(1,8),1,for(atom(hasCategory(5))),1) preference(1,(1,9),1,for(atom(hasCategory(1))),1) preference(1,(1,10),1,for(atom(hasPrep(3))),1) preference(1,(1,11),1,for(atom(hasCost(5))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(25,worse,52) output(47,worse,70) output(24,worse,23) output(65,eq,23) output(24,eq,72) output(24,eq,18) output(29,eq,23) output(42,eq,23)
Optimization: 8 10
Answer: 11
preference(1,(1,1),1,for(atom(hasDifficulty(3))),1) preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),8) preference(1,(1,4),1,for(atom(hasPrep(2))),1) preference(1,(1,5),1,for(atom(hasPrep(5))),8) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasCost(4))),1) preference(1,(1,8),1,for(atom(hasIngredient(4))),1) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasCost(5))),1) preference(1,(1,11),1,for(atom(hasPrep(3))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(25,worse,52) output(47,worse,70) output(24,eq,23) output(23,eq,18) output(23,eq,72) output(24,eq,72) output(24,eq,18)
Optimization: 7 11
Answer: 12
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasCategory(1))),1) preference(1,(1,3),1,for(atom(hasIngredient(9))),8) preference(1,(1,4),1,for(atom(hasIngredient(4))),1) preference(1,(1,5),1,for(atom(hasDifficulty(3))),1) preference(1,(1,6),1,for(atom(hasPrep(4))),8) preference(1,(1,7),1,for(atom(hasCost(4))),1) preference(1,(1,8),1,for(atom(hasPrep(3))),1) preference(1,(1,9),1,for(atom(hasCategory(5))),1) preference(1,(1,10),1,for(atom(hasIngredient(5))),1) preference(1,(1,11),1,for(atom(hasCost(5))),1) preference(1,(1,14),1,for(atom(hasIngredient(3))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(25,better,52) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(47,worse,70) output(24,eq,23) output(23,eq,18) output(23,eq,72) output(24,eq,72) output(24,eq,18)
Optimization: 6 12
Answer: 13
preference(1,(1,1),1,for(atom(hasPrep(5))),8) preference(1,(1,2),1,for(atom(hasPrep(2))),1) preference(1,(1,3),1,for(atom(hasPrepTime(3))),8) preference(1,(1,4),1,for(atom(hasIngredient(10))),1) preference(1,(1,5),1,for(atom(hasIngredient(4))),1) preference(1,(1,6),1,for(atom(hasCategory(1))),1) preference(1,(1,7),1,for(atom(hasPrep(3))),1) preference(1,(1,8),1,for(atom(hasPrep(4))),8) preference(1,(1,9),1,for(atom(hasCost(4))),1) preference(1,(1,10),1,for(atom(hasIngredient(8))),1) preference(1,(1,11),1,for(atom(hasCost(5))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(24,better,72) output(24,better,18) output(25,worse,52) output(47,worse,70) output(49,eq,29) output(24,eq,23) output(65,eq,23)
Optimization: 5 11
Answer: 14
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasPrep(3))),1) preference(1,(1,3),1,for(atom(hasCost(4))),1) preference(1,(1,4),1,for(atom(hasPrep(1))),1) preference(1,(1,5),1,for(atom(hasPrepTime(2))),1) preference(1,(1,6),1,for(atom(hasCategory(3))),1) preference(1,(1,7),1,for(atom(hasPrepTime(3))),8) preference(1,(1,10),1,for(atom(hasPrep(4))),8) preference(1,(1,12),1,for(atom(hasPrep(0))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(23,better,18) output(23,better,72) output(25,better,52) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,72) output(65,better,18) output(24,better,72) output(24,better,18) output(47,eq,70) output(24,eq,23) output(69,eq,67) output(65,eq,23)
Optimization: 4 9
Answer: 15
preference(1,(1,1),1,for(atom(hasCost(3))),2) preference(1,(1,2),1,for(atom(hasDifficulty(2))),5) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasIngredient(12))),3) preference(1,(1,5),1,for(atom(hasCost(4))),8) preference(1,(1,6),1,for(atom(hasPrep(2))),1) preference(1,(1,7),1,for(atom(hasIngredient(9))),2) preference(1,(1,8),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasCategory(1))),2) preference(1,(1,10),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasPrep(5))),3) preference(1,(1,12),1,for(atom(hasPrepTime(2))),4) preference(1,(1,13),1,for(atom(hasPrep(6))),5) preference(1,(1,14),1,for(atom(hasPrepTime(3))),3) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18) output(23,worse,72) output(65,worse,72) output(65,eq,23)
Optimization: 3 14
Answer: 16
preference(1,(1,1),1,for(atom(hasIngredient(12))),4) preference(1,(1,3),1,for(atom(hasPrep(5))),6) preference(1,(1,4),1,for(atom(hasPrepTime(3))),8) preference(1,(1,5),1,for(atom(hasCost(3))),2) preference(1,(1,6),1,for(atom(hasIngredient(3))),3) preference(1,(1,7),1,for(atom(hasCategory(4))),2) preference(1,(1,8),1,for(atom(hasCost(2))),5) preference(1,(1,9),1,for(atom(hasIngredient(9))),7) preference(1,(1,10),1,for(atom(hasCategory(1))),3) preference(1,(1,11),1,for(atom(hasPrepTime(2))),5) preference(1,(1,12),1,for(atom(hasCategory(5))),3) preference(1,(1,13),1,for(atom(hasPrep(6))),2) preference(1,(1,14),1,for(atom(hasDifficulty(2))),4) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18) output(23,worse,72) output(65,worse,72) output(65,eq,23)
Optimization: 3 13
Answer: 17
preference(1,(1,1),1,for(atom(hasCategory(1))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),8) preference(1,(1,3),1,for(atom(hasDifficulty(3))),3) preference(1,(1,4),1,for(atom(hasIngredient(9))),1) preference(1,(1,5),1,for(atom(hasCost(2))),6) preference(1,(1,6),1,for(atom(hasPrep(5))),7) preference(1,(1,7),1,for(atom(hasCost(1))),8) preference(1,(1,8),1,for(atom(hasIngredient(11))),8) preference(1,(1,9),1,for(atom(hasPrepTime(2))),6) preference(1,(1,10),1,for(atom(hasIngredient(2))),8) preference(1,(1,11),1,for(atom(hasPrep(0))),6) preference(1,(1,12),1,for(atom(hasPrep(6))),2) preference(1,(1,13),1,for(atom(hasIngredient(12))),5) preference(1,(1,14),1,for(atom(hasCost(3))),8) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 14
Progression : 0 [ 1;14] (Error: 13)
Answer: 18
preference(1,(1,1),1,for(atom(hasIngredient(7))),8) preference(1,(1,2),1,for(atom(hasDifficulty(2))),2) preference(1,(1,3),1,for(atom(hasPrep(7))),8) preference(1,(1,4),1,for(atom(hasPrep(6))),4) preference(1,(1,5),1,for(atom(hasIngredient(9))),1) preference(1,(1,7),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasCost(3))),5) preference(1,(1,9),1,for(atom(hasDifficulty(3))),3) preference(1,(1,10),1,for(atom(hasPrepTime(2))),8) preference(1,(1,11),1,for(atom(hasCost(4))),7) preference(1,(1,12),1,for(atom(hasCategory(4))),2) preference(1,(1,13),1,for(atom(hasCategory(3))),3) preference(1,(1,14),1,for(atom(hasCategory(1))),3) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 13
Answer: 19
preference(1,(1,1),1,for(atom(hasCost(3))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,4),1,for(atom(hasDifficulty(3))),2) preference(1,(1,5),1,for(atom(hasCategory(4))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasIngredient(9))),4) preference(1,(1,8),1,for(atom(hasIngredient(12))),1) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,12),1,for(atom(hasCategory(5))),8) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 12
Answer: 20
preference(1,(1,1),1,for(atom(hasCost(3))),1) preference(1,(1,2),1,for(atom(hasPrep(5))),1) preference(1,(1,5),1,for(atom(hasCategory(4))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),2) preference(1,(1,7),1,for(atom(hasIngredient(9))),4) preference(1,(1,9),1,for(atom(hasPrep(6))),5) preference(1,(1,10),1,for(atom(hasDifficulty(2))),1) preference(1,(1,11),1,for(atom(hasCategory(5))),8) preference(1,(1,12),1,for(atom(hasDifficulty(3))),2) preference(1,(1,13),1,for(atom(hasCategory(1))),8) preference(1,(1,14),1,for(atom(hasPrepTime(2))),4) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 11
Progression : 0 [ 2;11] (Error: 4.5)
Answer: 21
preference(1,(1,1),1,for(atom(hasPrep(5))),3) preference(1,(1,3),1,for(atom(hasPrepTime(2))),1) preference(1,(1,4),1,for(atom(hasCategory(4))),5) preference(1,(1,5),1,for(atom(hasPrep(6))),5) preference(1,(1,6),1,for(atom(hasPrep(0))),4) preference(1,(1,9),1,for(atom(hasCategory(3))),1) preference(1,(1,10),1,for(atom(hasCost(5))),4) preference(1,(1,11),1,for(atom(hasDifficulty(3))),3) preference(1,(1,12),1,for(atom(hasCategory(1))),6) preference(1,(1,14),1,for(atom(hasCategory(5))),4) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 10
Answer: 22
preference(1,(1,1),1,for(atom(hasCategory(1))),4) preference(1,(1,2),1,for(atom(hasCategory(4))),5) preference(1,(1,4),1,for(atom(hasPrepTime(2))),2) preference(1,(1,5),1,for(atom(hasPrep(0))),2) preference(1,(1,6),1,for(atom(hasCost(4))),7) preference(1,(1,7),1,for(atom(hasPrep(5))),8) preference(1,(1,8),1,for(atom(hasDifficulty(3))),8) preference(1,(1,11),1,for(atom(hasPrep(6))),5) preference(1,(1,12),1,for(atom(hasIngredient(9))),5) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 9
Answer: 23
preference(1,(1,4),1,for(atom(hasIngredient(9))),7) preference(1,(1,5),1,for(atom(hasPrep(5))),6) preference(1,(1,8),1,for(atom(hasDifficulty(3))),3) preference(1,(1,9),1,for(atom(hasCost(2))),2) preference(1,(1,11),1,for(atom(hasPrep(6))),7) preference(1,(1,12),1,for(atom(hasCategory(1))),5) preference(1,(1,13),1,for(atom(hasPrepTime(3))),1) preference(1,(1,14),1,for(atom(hasCost(3))),1) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 8
Answer: 24
preference(1,(1,2),1,for(atom(hasCost(2))),1) preference(1,(1,4),1,for(atom(hasIngredient(9))),7) preference(1,(1,6),1,for(atom(hasPrep(5))),6) preference(1,(1,7),1,for(atom(hasPrepTime(3))),2) preference(1,(1,11),1,for(atom(hasDifficulty(3))),1) preference(1,(1,12),1,for(atom(hasCategory(1))),5) preference(1,(1,14),1,for(atom(hasPrep(6))),7) preference(1,less(weight)) output(50,better,47) output(50,better,70) output(29,better,24) output(29,better,23) output(29,better,18) output(29,better,72) output(42,better,24) output(42,better,23) output(42,better,18) output(42,better,72) output(64,better,50) output(64,better,69) output(64,better,67) output(64,better,47) output(64,better,70) output(69,better,67) output(23,better,18) output(23,better,72) output(25,better,52) output(47,better,70) output(49,better,29) output(49,better,24) output(49,better,23) output(49,better,18) output(49,better,72) output(65,better,23) output(65,better,72) output(65,better,18) output(24,better,23) output(24,better,72) output(24,better,18)
Optimization: 0 7
Progression : 0 [3;7] (Error: 1.33333)
*** Info : (asprin_vL): Sending shutdown signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 1.717 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 24+
  Optimum    : unknown
Optimization : 0 7
Calls        : 1
Time         : 598.441s (Solving: 595.74s 1st Model: 0.02s Unsat: 0.00s)
CPU Time     : 2353.907s
Threads      : 4        (Winner: 4)

Choices      : 6774159  (Domain: 394708)
Conflicts    : 6499576  (Analyzed: 6499573)
Restarts     : 4761     (Average: 1365.17 Last: 458444)
Model-Level  : 53.8    
Problems     : 8        (Average Length: 0.50 Splits: 0)
Lemmas       : 6632031  (Deleted: 6227918)
  Binary     : 975      (Ratio:   0.01%)
  Ternary    : 1106     (Ratio:   0.02%)
  Conflict   : 6499573  (Average Length:  422.9 Ratio:  98.00%) 
  Loop       : 0        (Average Length:    0.0 Ratio:   0.00%) 
  Other      : 132458   (Average Length:  475.9 Ratio:   2.00%) 
  Distributed: 44175    (Ratio:   0.68% Average LBD: 3.84) 
  Integrated : 132517   (Ratio: 299.98% Unit: 18 Average Jumps: 3.44)
Backjumps    : 6499573  (Average:  1.03 Max:  56 Sum: 6722771)
  Executed   : 6499572  (Average:  1.03 Max:  56 Sum: 6722751 Ratio: 100.00%)
  Bounded    : 1        (Average: 20.00 Max:  20 Sum:     20 Ratio:   0.00%)

Rules        : 391745  
  Choice     : 15      
  Minimize   : 2       
Atoms        : 13648   
Bodies       : 18870   
  Sum        : 62      
  Count      : 14      
Equivalences : 6935     (Atom=Atom: 323 Body=Body: 138 Other: 6474)
Tight        : Yes
Variables    : 17051    (Eliminated:    0 Frozen: 7727)
Constraints  : 413962   (Binary:  96.9% Ternary:   2.3% Other:   0.9%)

