asprin_vL version 1.0
Reading from stdin
-:1249:3-30: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#P4)

-:1259:3-24: info: atom does not occur in any rule head:
  preference(#X0,#P1,0,#P2,#P3)

-:1274:3-31: info: atom does not occur in any rule head:
  preference(#X0,#P1,#P2,name(#X3),#X4)

-:1355:36-48: info: atom does not occur in any rule head:
  _p_rule(#X0,#X1,#P2,#X3,#X4)

-:1629:34-45: info: atom does not occur in any rule head:
  better(#X0,#P1,#X2,#X3)

-:1806:35-45: info: atom does not occur in any rule head:
  _p_group(#X0,#P1,#X2,#X3)

-:1935:38-65: info: atom does not occur in any rule head:
  preference(#X0,#X1,0,for(#X2),#P3)

-:2007:50-58: info: atom does not occur in any rule head:
  _p_rel(#X0,#P1,#X2,#X3)

-:2011:46-59: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#X2,#P3,#X4,#X5)

-:2011:61-75: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#X2,#P3,#X4,#X5)

-:2017:23-37: info: atom does not occur in any rule head:
  _p_post(#X0,#X1,#P2,#P3,#X4,#X5)

-:2116:74-85: info: atom does not occur in any rule head:
  _p_edge(#X0,#X1,#P2,#X3,#X4)

-:2142:64-75: info: atom does not occur in any rule head:
  _p_edge(#X0,#P1,#X2,#X3,#X4)

-:2262:35-48: info: atom does not occur in any rule head:
  _p_lits(#X0,#X1,#P2,#P3,#X4,#X5)

-:2296:25-39: info: atom does not occur in any rule head:
  _p_pre(#X0,#X1,#P2,#P3,#X4,#X5)

-:2318:33-45: info: atom does not occur in any rule head:
  _p_acyclic(#X0,#P1,#X2,#X3)

-:1166:1-16: info: no atoms over signature occur in program:
  output/3

-:1158:25-37: info: atom does not occur in any rule head:
  forbid_worse

-:1159:25-37: info: atom does not occur in any rule head:
  forbid_equal

-:1160:25-35: info: atom does not occur in any rule head:
  forbid_unc

Solving...
Answer: 1
preference(1,poset) output(25,eq,75) output(75,eq,86) output(86,eq,55) output(55,eq,52) output(52,eq,62) output(62,eq,78) output(71,eq,51) output(51,eq,55) output(55,eq,57) output(57,eq,52) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(86,eq,57) output(51,eq,57) output(71,eq,55) output(52,eq,78) output(55,eq,62) output(57,eq,62) output(86,eq,52) output(51,eq,52) output(75,eq,55) output(25,eq,86) output(25,eq,55) output(71,eq,52) output(75,eq,52) output(25,eq,52) output(86,eq,62) output(51,eq,62) output(71,eq,62) output(75,eq,62) output(55,eq,78) output(57,eq,78) output(86,eq,78) output(51,eq,78) output(71,eq,57) output(75,eq,57) output(25,eq,57) output(71,eq,78) output(75,eq,78) output(25,eq,78) output(25,eq,62)
Optimization: 42 0
Answer: 2
preference(1,(1,14),1,for(atom(hasIngredient(12))),()) preference(1,(1,14),2,for(atom(hasCost(5))),()) preference(1,poset) output(75,better,55) output(75,better,62) output(75,better,86) output(75,better,52) output(75,better,57) output(62,worse,78) output(55,worse,78) output(51,worse,78) output(25,worse,75) output(52,worse,78) output(57,worse,78) output(86,worse,78) output(71,worse,78) output(25,worse,78) output(86,eq,55) output(55,eq,52) output(52,eq,62) output(71,eq,51) output(51,eq,55) output(55,eq,57) output(57,eq,52) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(86,eq,57) output(51,eq,57) output(71,eq,55) output(55,eq,62) output(57,eq,62) output(86,eq,52) output(51,eq,52) output(25,eq,86) output(25,eq,55) output(71,eq,52) output(25,eq,52) output(86,eq,62) output(51,eq,62) output(71,eq,62) output(71,eq,57) output(25,eq,57) output(75,eq,78) output(25,eq,62)
Optimization: 37 1
Answer: 3
preference(1,(1,14),1,for(atom(hasIngredient(12))),()) preference(1,(1,14),2,for(atom(hasCategory(1))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,57) output(51,better,52) output(51,better,62) output(75,better,55) output(75,better,62) output(75,better,86) output(75,better,52) output(75,better,57) output(71,worse,51) output(76,worse,67) output(62,worse,78) output(55,worse,78) output(51,worse,78) output(25,worse,75) output(52,worse,78) output(57,worse,78) output(86,worse,78) output(71,worse,78) output(25,worse,78) output(86,eq,55) output(55,eq,52) output(52,eq,62) output(55,eq,57) output(57,eq,52) output(76,eq,8) output(86,eq,57) output(71,eq,55) output(55,eq,62) output(57,eq,62) output(86,eq,52) output(25,eq,86) output(25,eq,55) output(71,eq,52) output(25,eq,52) output(86,eq,62) output(71,eq,62) output(71,eq,57) output(25,eq,57) output(75,eq,78) output(25,eq,62)
Optimization: 32 1
Answer: 4
preference(1,(1,14),1,for(atom(hasIngredient(12))),()) preference(1,(1,14),2,for(atom(hasCategory(4))),()) preference(1,poset) output(86,better,55) output(52,better,62) output(71,better,51) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(75,better,86) output(75,better,52) output(75,better,57) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(51,worse,57) output(51,worse,52) output(55,worse,78) output(51,worse,78) output(25,worse,75) output(52,worse,78) output(57,worse,78) output(86,worse,78) output(71,worse,78) output(25,worse,78) output(51,eq,55) output(57,eq,52) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(86,eq,57) output(55,eq,62) output(86,eq,52) output(25,eq,86) output(71,eq,52) output(25,eq,52) output(51,eq,62) output(71,eq,57) output(25,eq,57) output(75,eq,78)
Optimization: 28 1
Answer: 5
preference(1,(1,14),1,for(atom(hasPrep(2))),()) preference(1,(1,14),2,for(atom(hasCategory(4))),()) preference(1,poset) output(51,better,55) output(51,better,57) output(51,better,52) output(51,better,62) output(51,better,78) output(86,better,55) output(52,better,62) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(25,better,75) output(25,better,78) output(25,better,86) output(25,better,52) output(25,better,57) output(71,worse,51) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(55,worse,78) output(75,eq,86) output(57,eq,52) output(76,eq,67) output(67,eq,8) output(76,eq,8) output(86,eq,57) output(52,eq,78) output(55,eq,62) output(86,eq,52) output(71,eq,52) output(75,eq,52) output(57,eq,78) output(86,eq,78) output(71,eq,57) output(75,eq,57) output(71,eq,78) output(75,eq,78)
Optimization: 22 1
Answer: 6
preference(1,(1,2),1,for(atom(hasIngredient(12))),()) preference(1,(1,14),1,for(atom(hasPrep(2))),()) preference(1,(1,2),2,for(atom(hasCategory(1))),()) preference(1,(1,14),2,for(atom(hasCategory(4))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,57) output(51,better,52) output(51,better,62) output(86,better,55) output(52,better,62) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(75,better,86) output(75,better,52) output(75,better,57) output(25,better,86) output(25,better,52) output(25,better,57) output(71,worse,51) output(76,worse,67) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(55,worse,78) output(52,worse,78) output(57,worse,78) output(86,worse,78) output(71,worse,78) output(57,eq,52) output(76,eq,8) output(86,eq,57) output(55,eq,62) output(86,eq,52) output(71,eq,52) output(71,eq,57) output(75,eq,78) output(25,unc,75) output(51,unc,78) output(25,unc,78)
Optimization: 21 2
Answer: 7
preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,3),1,for(atom(hasCost(5))),()) preference(1,(1,5),1,for(atom(hasIngredient(6))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,7),1,for(atom(hasPrepTime(2))),()) preference(1,(1,10),1,for(atom(hasIngredient(6))),()) preference(1,(1,11),1,for(atom(hasIngredient(11))),()) preference(1,(1,12),1,for(atom(hasPrep(4))),()) preference(1,(1,13),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,3),2,for(atom(hasCategory(4))),()) preference(1,(1,5),2,for(atom(hasCost(2))),()) preference(1,(1,6),2,for(atom(hasIngredient(6))),()) preference(1,(1,7),2,for(atom(hasCost(3))),()) preference(1,(1,10),2,for(atom(hasDifficulty(4))),()) preference(1,(1,11),2,for(atom(hasCategory(5))),()) preference(1,(1,12),2,for(atom(hasIngredient(6))),()) preference(1,(1,13),2,for(atom(hasIngredient(1))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,62) output(86,better,55) output(52,better,62) output(71,better,51) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,8) output(52,better,78) output(57,better,78) output(71,better,78) output(75,better,86) output(75,better,78) output(25,better,86) output(57,better,52) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(51,worse,57) output(51,worse,52) output(55,worse,78) output(51,worse,78) output(75,worse,52) output(75,worse,57) output(25,worse,75) output(86,worse,78) output(86,worse,57) output(86,worse,52) output(25,worse,52) output(25,worse,57) output(55,eq,62) output(76,unc,67) output(71,unc,52) output(71,unc,57) output(25,unc,78)
Optimization: 20 9
Answer: 8
preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,7),1,for(atom(hasPrepTime(2))),()) preference(1,(1,8),1,for(atom(hasCost(5))),()) preference(1,(1,9),1,for(atom(hasCost(1))),()) preference(1,(1,10),1,for(atom(hasIngredient(6))),()) preference(1,(1,11),1,for(atom(hasIngredient(11))),()) preference(1,(1,12),1,for(atom(hasPrep(4))),()) preference(1,(1,13),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,7),2,for(atom(hasCost(3))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,(1,9),2,for(atom(hasCost(5))),()) preference(1,(1,10),2,for(atom(hasCategory(5))),()) preference(1,(1,11),2,for(atom(hasCategory(4))),()) preference(1,(1,12),2,for(atom(hasIngredient(6))),()) preference(1,(1,13),2,for(atom(hasIngredient(1))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,62) output(86,better,55) output(52,better,62) output(71,better,51) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,8) output(52,better,78) output(57,better,78) output(86,better,78) output(71,better,78) output(25,better,78) output(75,better,86) output(75,better,78) output(25,better,86) output(57,better,52) output(55,worse,52) output(55,worse,57) output(25,worse,75) output(86,worse,57) output(86,worse,52) output(25,worse,52) output(25,worse,57) output(55,eq,62) output(62,unc,78) output(76,unc,67) output(51,unc,57) output(51,unc,52) output(71,unc,52) output(75,unc,52) output(55,unc,78) output(51,unc,78) output(71,unc,57) output(75,unc,57)
Optimization: 18 10
Answer: 9
preference(1,(1,1),1,for(atom(hasCost(3))),()) preference(1,(1,2),1,for(atom(hasIngredient(8))),()) preference(1,(1,4),1,for(atom(hasDifficulty(1))),()) preference(1,(1,5),1,for(atom(hasIngredient(8))),()) preference(1,(1,7),1,for(atom(hasPrepTime(2))),()) preference(1,(1,8),1,for(atom(hasCost(5))),()) preference(1,(1,9),1,for(atom(hasCost(1))),()) preference(1,(1,10),1,for(atom(hasIngredient(6))),()) preference(1,(1,11),1,for(atom(hasDifficulty(4))),()) preference(1,(1,12),1,for(atom(hasPrep(4))),()) preference(1,(1,13),1,for(atom(hasIngredient(8))),()) preference(1,(1,1),2,for(atom(hasPrepTime(1))),()) preference(1,(1,2),2,for(atom(hasCategory(1))),()) preference(1,(1,4),2,for(atom(hasCost(1))),()) preference(1,(1,5),2,for(atom(hasDifficulty(4))),()) preference(1,(1,7),2,for(atom(hasCost(3))),()) preference(1,(1,8),2,for(atom(hasCost(2))),()) preference(1,(1,9),2,for(atom(hasCost(5))),()) preference(1,(1,10),2,for(atom(hasCategory(5))),()) preference(1,(1,11),2,for(atom(hasCategory(4))),()) preference(1,(1,12),2,for(atom(hasIngredient(6))),()) preference(1,(1,13),2,for(atom(hasIngredient(1))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,62) output(51,better,78) output(86,better,55) output(52,better,62) output(71,better,51) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(86,better,62) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,8) output(52,better,78) output(57,better,78) output(86,better,78) output(71,better,78) output(25,better,78) output(75,better,86) output(75,better,78) output(25,better,86) output(57,better,52) output(55,worse,52) output(55,worse,57) output(25,worse,75) output(86,worse,57) output(86,worse,52) output(25,worse,52) output(25,worse,57) output(55,eq,62) output(62,unc,78) output(76,unc,67) output(51,unc,57) output(51,unc,52) output(71,unc,52) output(75,unc,52) output(55,unc,78) output(71,unc,57) output(75,unc,57)
Optimization: 17 11
Answer: 10
preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,7),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,9),1,for(atom(hasPrep(6))),()) preference(1,(1,10),1,for(atom(hasIngredient(1))),()) preference(1,(1,11),1,for(atom(hasIngredient(3))),()) preference(1,(1,12),1,for(atom(hasPrep(6))),()) preference(1,(1,13),1,for(atom(hasPrep(6))),()) preference(1,(1,14),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(3))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasDifficulty(4))),()) preference(1,(1,5),2,for(atom(hasCategory(1))),()) preference(1,(1,6),2,for(atom(hasCost(5))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasPrep(1))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrep(6))),()) preference(1,(1,11),2,for(atom(hasCost(3))),()) preference(1,(1,12),2,for(atom(hasIngredient(11))),()) preference(1,(1,13),2,for(atom(hasCost(3))),()) preference(1,(1,14),2,for(atom(hasCategory(5))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,57) output(51,better,52) output(51,better,62) output(51,better,78) output(52,better,62) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,8) output(25,better,75) output(52,better,78) output(57,better,78) output(71,better,78) output(25,better,78) output(75,better,86) output(75,better,78) output(71,better,57) output(25,better,86) output(25,better,52) output(25,better,57) output(71,worse,51) output(86,worse,55) output(86,worse,62) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(55,worse,78) output(86,worse,78) output(86,worse,57) output(86,worse,52) output(55,worse,62) output(57,worse,52) output(76,unc,67) output(71,unc,52) output(75,unc,52) output(75,unc,57)
Optimization: 16 14
Answer: 11
preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,7),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,9),1,for(atom(hasPrep(6))),()) preference(1,(1,10),1,for(atom(hasIngredient(1))),()) preference(1,(1,11),1,for(atom(hasIngredient(3))),()) preference(1,(1,12),1,for(atom(hasPrep(6))),()) preference(1,(1,13),1,for(atom(hasPrep(6))),()) preference(1,(1,14),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasCategory(1))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasCost(5))),()) preference(1,(1,6),2,for(atom(hasIngredient(3))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrep(6))),()) preference(1,(1,11),2,for(atom(hasCost(3))),()) preference(1,(1,12),2,for(atom(hasDifficulty(4))),()) preference(1,(1,13),2,for(atom(hasCategory(5))),()) preference(1,(1,14),2,for(atom(hasDifficulty(4))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,57) output(51,better,52) output(51,better,62) output(51,better,78) output(86,better,55) output(52,better,62) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,8) output(25,better,75) output(52,better,78) output(71,better,78) output(25,better,78) output(75,better,86) output(75,better,52) output(75,better,57) output(75,better,78) output(71,better,57) output(25,better,86) output(25,better,52) output(25,better,57) output(71,worse,51) output(86,worse,62) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(55,worse,78) output(86,worse,78) output(86,worse,57) output(86,worse,52) output(55,worse,62) output(57,worse,52) output(57,eq,78) output(76,unc,67) output(71,unc,52)
Optimization: 14 14
Answer: 12
preference(1,(1,1),1,for(atom(hasIngredient(5))),()) preference(1,(1,2),1,for(atom(hasPrep(6))),()) preference(1,(1,3),1,for(atom(hasIngredient(5))),()) preference(1,(1,4),1,for(atom(hasPrep(6))),()) preference(1,(1,5),1,for(atom(hasPrep(6))),()) preference(1,(1,6),1,for(atom(hasPrep(6))),()) preference(1,(1,7),1,for(atom(hasPrep(2))),()) preference(1,(1,8),1,for(atom(hasPrep(6))),()) preference(1,(1,9),1,for(atom(hasPrep(6))),()) preference(1,(1,10),1,for(atom(hasIngredient(1))),()) preference(1,(1,11),1,for(atom(hasIngredient(3))),()) preference(1,(1,12),1,for(atom(hasPrep(6))),()) preference(1,(1,13),1,for(atom(hasPrep(6))),()) preference(1,(1,14),1,for(atom(hasIngredient(1))),()) preference(1,(1,1),2,for(atom(hasIngredient(1))),()) preference(1,(1,2),2,for(atom(hasIngredient(11))),()) preference(1,(1,3),2,for(atom(hasPrep(6))),()) preference(1,(1,4),2,for(atom(hasIngredient(4))),()) preference(1,(1,5),2,for(atom(hasIngredient(3))),()) preference(1,(1,6),2,for(atom(hasCost(3))),()) preference(1,(1,7),2,for(atom(hasPrep(6))),()) preference(1,(1,8),2,for(atom(hasPrep(5))),()) preference(1,(1,9),2,for(atom(hasDifficulty(1))),()) preference(1,(1,10),2,for(atom(hasPrep(6))),()) preference(1,(1,11),2,for(atom(hasCost(3))),()) preference(1,(1,12),2,for(atom(hasDifficulty(4))),()) preference(1,(1,13),2,for(atom(hasCategory(5))),()) preference(1,(1,14),2,for(atom(hasDifficulty(4))),()) preference(1,poset) output(51,better,55) output(67,better,8) output(51,better,57) output(51,better,52) output(51,better,62) output(51,better,78) output(86,better,55) output(52,better,62) output(71,better,55) output(57,better,62) output(75,better,55) output(25,better,55) output(71,better,62) output(75,better,62) output(25,better,62) output(76,better,67) output(76,better,8) output(25,better,75) output(52,better,78) output(71,better,78) output(25,better,78) output(75,better,86) output(75,better,52) output(75,better,57) output(75,better,78) output(71,better,57) output(25,better,86) output(25,better,52) output(25,better,57) output(71,worse,51) output(86,worse,62) output(55,worse,52) output(62,worse,78) output(55,worse,57) output(55,worse,78) output(86,worse,78) output(86,worse,57) output(86,worse,52) output(55,worse,62) output(57,worse,52) output(57,eq,78) output(71,unc,52)
Optimization: 13 14
*** Info : (asprin_vL): Sending shutdown signal...
*** Info : (asprin_vL): Queueing signal...
Traceback (most recent call last):
  File "clingo/application.py", line 359, in _pyclingo_application_main
  File "asprin_vL.py", line 598, in main
  File "clingo/control.py", line 805, in solve
  File "clingo/solving.py", line 527, in get
  File "clingo/_internal.py", line 44, in _c_call
  File "clingo/_internal.py", line 75, in _handle_error
RuntimeError: solving stopped by signal
*** ERROR: (asprin_vL): solving stopped by signal
*** Info : (asprin_vL): Shutdown completed in 0.366 seconds
SATISFIABLE

INTERRUPTED  : 1
Models       : 12+
  Optimum    : unknown
Optimization : 13 14
Calls        : 1
Time         : 597.831s (Solving: 523.77s 1st Model: 15.94s Unsat: 0.00s)
CPU Time     : 2156.440s
Threads      : 4        (Winner: 4)

Choices      : 8868490  (Domain: 323)
Conflicts    : 44772    (Analyzed: 44772)
Restarts     : 31       (Average: 1444.26 Last: 4885)
Model-Level  : 89610.3 
Problems     : 4        (Average Length: 1.00 Splits: 0)
Lemmas       : 4172288  (Deleted: 4011582)
  Binary     : 12       (Ratio:   0.00%)
  Ternary    : 8436     (Ratio:   0.20%)
  Conflict   : 44772    (Average Length: 1117.6 Ratio:   1.07%) 
  Loop       : 4120616  (Average Length: 4374.3 Ratio:  98.76%) 
  Other      : 6900     (Average Length:    3.1 Ratio:   0.17%) 
  Distributed: 2301     (Ratio:   0.06% Average LBD: 2.97) 
  Integrated : 6903     (Ratio: 300.00% Unit: 13 Average Jumps: 1946.38)
Backjumps    : 44772    (Average: 99.01 Max: 326762 Sum: 4433014)
  Executed   : 44768    (Average: 99.01 Max: 326762 Sum: 4433007 Ratio: 100.00%)
  Bounded    : 4        (Average:  1.75 Max:   2 Sum:      7 Ratio:   0.00%)

Rules        : 13177827
  Choice     : 43      
  Minimize   : 2       
Atoms        : 99866   
Bodies       : 11321880
  Count      : 56      
Equivalences : 96036    (Atom=Atom: 10816 Body=Body: 25988 Other: 59232)
Tight        : No       (SCCs: 43 Non-Hcfs: 0 Nodes: 11050272 Gammas: 0)
Variables    : 11103043 (Eliminated:    0 Frozen: 11056029)
Constraints  : 63988672 (Binary:  82.5% Ternary:   3.2% Other:  14.3%)

